const APPVERSION="2.23",COMPILED=!1,COPYRIGHT="Copyright Â© 2012-2025 Jeff Parsons <Jeff@pcjs.org>",CSSCLASS="pcjs",DEBUG=!0;var DEBUGGER=!0;const LICENSE="License: MIT <https://www.pcjs.org/LICENSE.txt>",MAXDEBUG=!1,PRIVATE=!1,RS232={RTS:{PIN:4,MASK:16},CTS:{PIN:5,MASK:32},DSR:{PIN:6,MASK:64},CD:{PIN:8,MASK:256},DTR:{PIN:20,MASK:1048576},RI:{PIN:22,MASK:4194304}},SITEURL="http://localhost:8088";var LOCALDISKS=!1;let globals={browser:"undefined"!=typeof window,node:"undefined"!=typeof window?{}:global,process:"undefined"!=typeof process?process:{},window:"undefined"!=typeof window?window:global,document:"undefined"!=typeof document?document:{},pcjs:{machines:{},components:[],commands:{},files:null}};globals.window.PCjs?globals.pcjs=globals.window.PCjs:globals.window.PCjs=globals.pcjs,globals.window.LOCALDISKS=LOCALDISKS;
const MESSAGE={NONE:0,ADDR:1,LOG:68719476736,STATUS:137438953472,NOTICE:274877906944,WARNING:549755813888,ERROR:1099511627776,ALERTS:1924145348608,DEBUG:2199023255552,PROGRESS:4398046511104,SCRIPT:8796093022208,TYPES:0xff000000000,HALT:70368744177664,BUFFER:0x800000000000,ALL:68719476734};
let Formatter;MESSAGE.NAMES={log:MESSAGE.LOG,warn:MESSAGE.WARNING,halt:MESSAGE.HALT,buffer:MESSAGE.BUFFER};class Format{static NamesOfDays=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];static NamesOfMonths=["January","February","March","April","May","June","July","August","September","October","November","December"];static HexLowerCase="0123456789abcdef?";static HexUpperCase="0123456789ABCDEF?";constructor(){this.formatters={};let V="ACDFGHMNSTWYBbdfjcsoXx%";for(let R=0;R<23;R++)this.formatters[V[R]]=null}addFormatType(V,R){return!this.formatters[V]&&(this.formatters[V]=R,!0)}static isDate(V){return!isNaN(V.getTime())}static parseDate(...V){let R;if(void 0===V[0])R=new Date(Date.now());else if("string"==typeof V[0]){let U=V[0];U.indexOf(":")<0?U+=" "+(V[1]||"00:00:00 UTC"):U.match(/^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9]$/)&&(V[1]||(U+=" UTC")),R=new Date(U)}else R=void 0===V[1]?new Date(V[0]):new Date(Date.UTC(...V));return R}sprintf(V,...R){if(!R||!R.length)return V;let U,l="",e=V.split(/%([-+ 0#]*)([0-9]*|\*)(\.[0-9]+|)([bwhlL]?)([A-Za-z%])/),t=0;for(U=0;U<e.length-6;U+=6){l+=e[U];let V,T=e[U+5];if(void 0===this.formatters[T]){l+="%"+e[U+1]+e[U+2]+e[U+3]+e[U+4]+T;continue}t<R.length?(V=R[t],"%"!=T&&t++):V=R[R.length-1];let k=!1,F=e[U+1],W=F.indexOf("#")>=0,a=F.indexOf("0")>=0,s=e[U+2];"*"==s?(s=V,V=t<R.length?R[t++]:R[R.length-1]):s=+s||0;let Z=e[U+3];Z=Z?+Z.substr(1):-1;let S,h=e[U+4],E=null,i=0,N="",r="ACDFGHMNSTWY".indexOf(T)>=0&&"object"!=typeof V?Format.parseDate(V):V;switch(T){case"C":l+=Format.isDate(r)?this.sprintf("%#W, %#F %#D, %#Y".replaceAll("#",W?"#":""),r):void 0;continue;case"D":V=W?r.getUTCDate():r.getDate(),T="d";break;case"A":case"G":case"H":V=W?r.getUTCHours():r.getHours(),"A"==T?(V=V<12?"am":"pm",T="s"):("G"==T&&(V=V?V>12?V-12:V:12),T="d");break;case"F":case"M":V=W?r.getUTCMonth():r.getMonth(),"F"==T?(V=Format.NamesOfMonths[V],T="s"):(V++,T="d");break;case"N":V=W?r.getUTCMinutes():r.getMinutes(),T="d";break;case"S":V=W?r.getUTCSeconds():r.getSeconds(),T="d";break;case"T":l+=Format.isDate(r)?this.sprintf("%#Y-%#02M-%#02D %#02H:%#02N:%#02S".replaceAll("#",W?"#":""),r):void 0;continue;case"W":V=Format.NamesOfDays[W?r.getUTCDay():r.getDay()],T="s";break;case"Y":V=W?r.getUTCFullYear():r.getFullYear(),Z>0&&(V%=Math.pow(10,Z)),T="d"}switch(T){case"b":l+=V?"true":"false";break;case"d":V=Math.trunc(V),Z>=0&&(a=!0,s<Z&&(s=Z),Z=-1);case"f":V=+V,S=V+"",Z>=0&&(S=V.toFixed(Z)),S.length<s&&(a?(V<0&&(s--,S=S.substr(1)),S=("0".repeat(s)+S).slice(-s),V<0&&(S="-"+S)):S=(" ".repeat(s)+S).slice(-s)),l+=S;break;case"j":l+=JSON.stringify(V,null,s||void 0);break;case"c":V="string"==typeof V?V[0]:String.fromCharCode(V);case"s":if(null!=V)for("string"!=typeof V&&(V=V.toString()),Z>=0&&(V=V.substr(0,Z));V.length<s;)F.indexOf("-")>=0?V+=" ":V=" "+V;l+=V;break;case"B":i=2,W&&(N="0b");case"o":i||(i=8),!N&&W&&(N="0o");case"X":E=Format.HexUpperCase;case"x":if(S="",i||(i=16),!N&&W&&(N="0x"),E||(E=Format.HexLowerCase),"string"==typeof V&&"-"==V[0]&&(k=!0,V=V.slice(1)),V=Math.trunc(V),k&&(V=-V),V<0&&((0|V)==V?V>>>=0:Math.abs(V)<=Math.pow(2,53)&&(V+=Math.pow(2,53))),Z>=0&&(a=!0,s<Z&&(s=Z),Z=-1),a&&!s){if("b"==h)s=2;else if("h"==h||"w"==h)s=4;else if("l"==h)s=8;else{let R=Math.abs(V);s=R<=255?2:R<=65535?4:R<=4294967295?8:9}s+=N.length}s-=N.length;do{let R=16;Number.isNaN(V)||(R=V&i-1,V=Math.trunc(V/i)),a||!S||R||V?S=E[R]+S:(N&&(S=N+S,N=""),s>0&&(S=" "+S))}while(--s>0||V);l+=N+S;break;case"%":l+="%";break;default:if(this.formatters[T]){l+=this.formatters[T](T,F,s,Z,V);break}l+="(unimplemented sprintf type: %"+T+")"}}return l+=e[U],l}}
class DataBuffer{constructor(V=0,R,U){if(this.node="undefined"!=typeof Buffer,"number"==typeof V&&(V=new ArrayBuffer(V)),this.node)Buffer.isBuffer(V)?this.buffer=V:this.buffer=V instanceof DataBuffer?V.buffer.slice(R,U):Buffer.from(V),this.length=this.buffer.length;else{if(V instanceof DataBuffer&&(V=V.ab),V instanceof ArrayBuffer)this.ab=V.slice(R||0,U||V.byteLength),this.length=this.ab.byteLength,this.dv=new DataView(this.ab,0,this.length);else{if("string"==typeof V){V=new TextEncoder("utf-8").encode(V)}this.ab=new ArrayBuffer(V.length),this.dv=new DataView(this.ab,0,V.length);for(let R=0;R<V.length;R++)this.dv.setUint8(R,V[R]);this.length=V.length}this.buffer=new Uint8Array(this.ab)}}compare(V){return!!this.node&&!Buffer.compare(this.buffer,V.buffer)}copy(V,R=0,U=0,l=this.length){if(this.node)this.buffer.copy(V.buffer,R,U,l);else{let e=l-U,t=V.length-R;for(e>t&&(e=t);e-- >0;)V.writeUInt8(this.readUInt8(U++),R++)}}fill(V,R=0,U=this.length){if(this.node&&"number"==typeof V)this.buffer.fill(V,R,U);else{let l=0;U>this.length&&(U=this.length);for(let e=R;e<U;e++)this.writeUInt8("number"==typeof V?V:V[l++],e)}}new(V){this.node&&Buffer.alloc?(this.buffer=Buffer.alloc(V),this.length=V):(this.ab=new ArrayBuffer(V),this.length=this.ab.byteLength,this.dv=new DataView(this.ab,0,this.length))}slice(V,R){return new DataBuffer(this,V||0,R)}write(V,R,U){if(this.node)this.buffer.write(V,R,U);else{let U=0;for(;R<this.length;)this.dv.setUint8(R,V.charCodeAt(U++)),R++}}readUInt8(V){return this.node?this.buffer.readUInt8(V):this.dv.getUint8(V)}writeUInt8(V,R){this.node?this.buffer.writeUInt8(V,R):this.dv.setUint8(R,V)}readUInt16BE(V){return this.node?this.buffer.readUInt16BE(V):this.dv.getUint16(V)}readUInt16LE(V){return this.node?this.buffer.readUInt16LE(V):this.dv.getUint16(V,!0)}writeUInt16LE(V,R){this.node?this.buffer.writeUInt16LE(V,R):this.dv.setUint16(R,V,!0)}readInt16BE(V){return this.node?this.buffer.readInt16BE(V):this.dv.getInt16(V)}readInt16LE(V){return this.node?this.buffer.readInt16LE(V):this.dv.getInt16(V,!0)}readUInt32BE(V){return this.node?this.buffer.readUInt32BE(V):this.dv.getUint32(V)}readUInt32LE(V){return this.node?this.buffer.readUInt32LE(V):this.dv.getUint32(V,!0)}readInt32BE(V){return this.node?this.buffer.readInt32BE(V):this.dv.getInt32(V)}readInt32LE(V){return this.node?this.buffer.readInt32LE(V):this.dv.getInt32(V,!0)}writeInt32LE(V,R){this.node?this.buffer.writeInt32LE(V,R):this.dv.setInt32(R,V,!0)}toString(V,R=0,U=this.length){let l="";if(this.node)l=this.buffer.toString(V,R,U);else{let e=new Uint8Array(this.ab,R,U-R);if(V&&"TextDecoder"in window){l=new TextDecoder(V).decode(e)}else for(let V=0;V<e.length;V++)l+=String.fromCharCode(e[V])}return l}}
const DiskAPI={ENDPOINT:"/api/v1/disk",QUERY:{ACTION:"action",VOLUME:"volume",MODE:"mode",CHS:"chs",ADDR:"addr",MACHINE:"machine",USER:"user",DATA:"data"},ACTION:{OPEN:"open",READ:"read",WRITE:"write",CLOSE:"close"},MODE:{LOCAL:"local",PRELOAD:"preload",DEMANDRW:"demandrw",DEMANDRO:"demandro"},FAIL:{BADACTION:"invalid action",BADUSER:"invalid user",BADVOL:"invalid volume",OPENVOL:"unable to open volume",CREATEVOL:"unable to create volume",WRITEVOL:"unable to write volume",REVOKED:"access revoked"},MODELS:{RL01:5242880,RL02:10485760},MBR:{PARTITIONS:{OFFSET:446,ENTRY:{STATUS:0,CHS_FIRST:1,TYPE:4,CHS_LAST:5,LBA_FIRST:8,LBA_TOTAL:12},ENTRY_LENGTH:16,STATUS:{ACTIVE:128},TYPE:{EMPTY:0,FAT12_PRIMARY:1,FAT16_PRIMARY:4}},SIG_OFFSET:510,SIGNATURE:43605},BOOT:{OPCODE:0,OEM:3,SIG_OFFSET:510,SIGNATURE:43605},BPB:{SECBYTES:11,CLUSSECS:13,RESSECS:14,FATS:16,DIRENTS:17,DISKSECS:19,MEDIA:21,FATSECS:22,TRACKSECS:24,DRIVEHEADS:26,HIDDENSECS:28,LARGESECS:32},GEOMETRIES:{163840:[40,1,8,,254],184320:[40,1,9,,252],327680:[40,2,8,,255],368640:[40,2,9,,253],737280:[80,2,9,,249],1228800:[80,2,15,,249],1474560:[80,2,18,,240],1720320:[80,2,21,,240],1884160:[80,2,23,,249],2949120:[80,2,36,,240],10653696:[306,4,17],21411840:[615,4,17],256256:[77,1,26,128],2494464:[203,2,12,512],5242880:[256,2,40,256],10485760:[512,2,40,256]},FAT:{MEDIA_160KB:254,MEDIA_180KB:252,MEDIA_320KB:255,MEDIA_360KB:253,MEDIA_720KB:249,MEDIA_1200KB:249,MEDIA_FIXED:248,MEDIA_1440KB:240,MEDIA_2880KB:240},FAT12:{MAX_CLUSTERS:4084,CLUSNUM_FREE:0,CLUSNUM_RES:1,CLUSNUM_MIN:2,CLUSNUM_MAX:4086,CLUSNUM_BAD:4087,CLUSNUM_EOC:4088},FAT16:{MAX_CLUSTERS:65524,CLUSNUM_FREE:0,CLUSNUM_RES:1,CLUSNUM_MIN:2,CLUSNUM_MAX:65526,CLUSNUM_BAD:65527,CLUSNUM_EOC:65528},DIRENT:{NAME:0,EXT:8,ATTR:11,MODTIME:22,MODDATE:24,CLUSTER:26,SIZE:28,LENGTH:32,UNUSED:0,INVALID:229},ATTR:{READONLY:1,HIDDEN:2,SYSTEM:4,LABEL:8,SUBDIR:16,ARCHIVE:32}},DumpAPI={ENDPOINT:"/api/v1/dump",QUERY:{DIR:"dir",DISK:"disk",FILE:"file",IMG:"img",PATH:"path",FORMAT:"format",COMMENTS:"comments",DECIMAL:"decimal",MBHD:"mbhd",SIZE:"size"},FORMAT:{JSON:"json",JSON_GZ:"gz",DATA:"data",HEX:"hex",OCTAL:"octal",BYTES:"bytes",WORDS:"words",LONGS:"longs",IMG:"img",ROM:"rom"}};DumpAPI.asDiskCommands=[DumpAPI.QUERY.DIR,DumpAPI.QUERY.DISK,DumpAPI.QUERY.PATH],DumpAPI.asFileCommands=[DumpAPI.QUERY.FILE];
const ReportAPI={ENDPOINT:"/api/v1/report",QUERY:{APP:"app",VER:"ver",URL:"url",USER:"user",TYPE:"type",DATA:"data"},TYPE:{BUG:"bug"},RES:{OK:"Thank you"}},UserAPI={ENDPOINT:"/api/v1/user",QUERY:{REQ:"req",USER:"user",STATE:"state",DATA:"data"},REQ:{CREATE:"create",VERIFY:"verify",STORE:"store",LOAD:"load"},RES:{CODE:"code",DATA:"data"},CODE:{OK:"ok",FAIL:"error"},FAIL:{DUPLICATE:"user already exists",VERIFY:"unable to verify user",BADSTATE:"invalid state parameter",NOSTATE:"no machine state",BADLOAD:"unable to load machine state",BADSTORE:"unable to save machine state"}},Keys={ASCII:{`":96,a:97,b:98,c:99,d:100,e:101,f:102,g:103,h:104,i:105,j:106,k:107,l:108,m:109,n:110,o:111,p:112,q:113,r:114,s:115,t:116,u:117,v:118,w:119,x:120,y:121,z:122,"{":123,"|":124,"}":125,"~":126,DEL:127},KEYCODE:{BS:8,TAB:9,LF:10,CR:13,SHIFT:16,CTRL:17,ALT:18,PAUSE:19,CAPS_LOCK:20,ESC:27,SPACE:32,PGUP:33,PGDN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,FF_QUOTE:39,DOWN:40,FF_COMMA:44,PRTSC:44,INS:45,DEL:46,FF_PERIOD:46,FF_SLASH:47,ZERO:48,ONE:49,TWO:50,THREE:51,FOUR:52,FIVE:53,SIX:54,SEVEN:55,EIGHT:56,NINE:57,FF_SEMI:59,FF_EQUALS:61,CMD:91,FF_LBRACK:91,FF_BSLASH:92,RCMD:93,FF_RBRACK:93,NUM_0:96,NUM_INS:96,FF_BQUOTE:96,NUM_1:97,NUM_END:97,NUM_2:98,NUM_DOWN:98,NUM_3:99,NUM_PGDN:99,NUM_4:100,NUM_LEFT:100,NUM_5:101,NUM_CENTER:101,NUM_6:102,NUM_RIGHT:102,NUM_7:103,NUM_HOME:103,NUM_8:104,NUM_UP:104,NUM_9:105,NUM_PGUP:105,NUM_MUL:106,NUM_ADD:107,NUM_SUB:109,NUM_DEL:110,NUM_DIV:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,NUM_LOCK:144,SCROLL_LOCK:145,FF_DASH:173,SEMI:186,EQUALS:187,COMMA:188,DASH:189,PERIOD:190,SLASH:191,BQUOTE:192,LBRACK:219,BSLASH:220,RBRACK:221,QUOTE:222,FF_CMD:224,ONDOWN:1e3,ONRIGHT:2e3,FAKE:4e3},LOCATION:{LEFT:1,RIGHT:2,NUMPAD:3}};
let PCFSItem,BitField,BitFields;Keys.CODEKEY={Comma:Keys.KEYCODE.COMMA,Period:Keys.KEYCODE.PERIOD,Semicolon:Keys.KEYCODE.SEMI,Quote:Keys.KEYCODE.QUOTE,BracketLeft:Keys.KEYCODE.LBRACK,BracketRight:Keys.KEYCODE.RBRACK,Backquote:Keys.KEYCODE.BQUOTE,Backslash:Keys.KEYCODE.BSLASH,Minus:Keys.KEYCODE.DASH,Equal:Keys.KEYCODE.EQUALS,AltLeft:Keys.KEYCODE.ALT,AltRight:Keys.KEYCODE.ALT,CapsLock:Keys.KEYCODE.CAPS_LOCK,ControlLeft:Keys.KEYCODE.CTRL,ControlRight:Keys.KEYCODE.CTRL,OSLeft:Keys.KEYCODE.CMD,OSRight:Keys.KEYCODE.RCMD,ShiftLeft:Keys.KEYCODE.SHIFT,ShiftRight:Keys.KEYCODE.SHIFT,Enter:Keys.KEYCODE.CR,Space:Keys.KEYCODE.SPACE,Tab:Keys.KEYCODE.TAB,Delete:Keys.KEYCODE.DEL,End:Keys.KEYCODE.END,Home:Keys.KEYCODE.HOME,Insert:Keys.KEYCODE.INS,PageDown:Keys.KEYCODE.PGDN,PageUp:Keys.KEYCODE.PGUP,ArrowDown:Keys.KEYCODE.DOWN,ArrowLeft:Keys.KEYCODE.LEFT,ArrowRight:Keys.KEYCODE.RIGHT,ArrowUp:Keys.KEYCODE.UP,Escape:Keys.KEYCODE.ESC,PrintScreen:Keys.KEYCODE.PRTSC,ScrollLock:Keys.KEYCODE.SCROLL_LOCK,Pause:Keys.KEYCODE.PAUSE,F1:Keys.KEYCODE.F1,F2:Keys.KEYCODE.F2,F3:Keys.KEYCODE.F3,F4:Keys.KEYCODE.F4,F5:Keys.KEYCODE.F5,F6:Keys.KEYCODE.F6,F7:Keys.KEYCODE.F7,F8:Keys.KEYCODE.F8,F9:Keys.KEYCODE.F9,F10:Keys.KEYCODE.F10,F11:Keys.KEYCODE.F11,F12:Keys.KEYCODE.F12,NumLock:Keys.KEYCODE.NUM_LOCK,Numpad0:Keys.KEYCODE.NUM_0,Numpad1:Keys.KEYCODE.NUM_1,Numpad2:Keys.KEYCODE.NUM_2,Numpad3:Keys.KEYCODE.NUM_3,Numpad4:Keys.KEYCODE.NUM_4,Numpad5:Keys.KEYCODE.NUM_5,Numpad6:Keys.KEYCODE.NUM_6,Numpad7:Keys.KEYCODE.NUM_7,Numpad8:Keys.KEYCODE.NUM_8,Numpad9:Keys.KEYCODE.NUM_9,NumpadAdd:Keys.KEYCODE.NUM_ADD,NumpadSubtract:Keys.KEYCODE.NUM_SUB,NumpadMultiply:Keys.KEYCODE.NUM_MUL,NumpadDivide:Keys.KEYCODE.NUM_DIV,NumpadDecimal:Keys.KEYCODE.NUM_DEL,NumpadEnter:Keys.KEYCODE.NUM_CR},Keys.KEYCODE.NUM_CR=Keys.KEYCODE.CR+Keys.KEYCODE.ONRIGHT,Keys.FF_KEYCODES={},Keys.FF_KEYCODES[Keys.KEYCODE.FF_SEMI]=Keys.KEYCODE.SEMI,Keys.FF_KEYCODES[Keys.KEYCODE.FF_EQUALS]=Keys.KEYCODE.EQUALS,Keys.FF_KEYCODES[Keys.KEYCODE.FF_DASH]=Keys.KEYCODE.DASH,Keys.FF_KEYCODES[Keys.KEYCODE.FF_CMD]=Keys.KEYCODE.CMD,Keys.NONASCII_KEYCODES={},Keys.NONASCII_KEYCODES[Keys.KEYCODE.FF_DASH]=Keys.ASCII["-"],Keys.NONASCII_KEYCODES[Keys.KEYCODE.SEMI]=Keys.ASCII[";"],Keys.NONASCII_KEYCODES[Keys.KEYCODE.EQUALS]=Keys.ASCII["="],Keys.NONASCII_KEYCODES[Keys.KEYCODE.DASH]=Keys.ASCII["-"],Keys.NONASCII_KEYCODES[Keys.KEYCODE.COMMA]=Keys.ASCII[","],Keys.NONASCII_KEYCODES[Keys.KEYCODE.PERIOD]=Keys.ASCII["."],Keys.NONASCII_KEYCODES[Keys.KEYCODE.SLASH]=Keys.ASCII["/"],Keys.NONASCII_KEYCODES[Keys.KEYCODE.BQUOTE]=Keys.ASCII["`"],Keys.NONASCII_KEYCODES[Keys.KEYCODE.LBRACK]=Keys.ASCII["["],Keys.NONASCII_KEYCODES[Keys.KEYCODE.BSLASH]=Keys.ASCII["\\"],Keys.NONASCII_KEYCODES[Keys.KEYCODE.RBRACK]=Keys.ASCII["]"],Keys.NONASCII_KEYCODES[Keys.KEYCODE.QUOTE]=Keys.ASCII["'"],Keys.SHIFTED_KEYCODES={},Keys.SHIFTED_KEYCODES[Keys.ASCII[1]]=Keys.ASCII["!"],Keys.SHIFTED_KEYCODES[Keys.ASCII[2]]=Keys.ASCII["@"],Keys.SHIFTED_KEYCODES[Keys.ASCII[3]]=Keys.ASCII["#"],Keys.SHIFTED_KEYCODES[Keys.ASCII[4]]=Keys.ASCII.$,Keys.SHIFTED_KEYCODES[Keys.ASCII[5]]=Keys.ASCII["%"],Keys.SHIFTED_KEYCODES[Keys.ASCII[6]]=Keys.ASCII["^"],Keys.SHIFTED_KEYCODES[Keys.ASCII[7]]=Keys.ASCII["&"],Keys.SHIFTED_KEYCODES[Keys.ASCII[8]]=Keys.ASCII["*"],Keys.SHIFTED_KEYCODES[Keys.ASCII[9]]=Keys.ASCII["("],Keys.SHIFTED_KEYCODES[Keys.ASCII[0]]=Keys.ASCII[")"],Keys.SHIFTED_KEYCODES[Keys.KEYCODE.SEMI]=Keys.ASCII[":"],Keys.SHIFTED_KEYCODES[Keys.KEYCODE.EQUALS]=Keys.ASCII["+"],Keys.SHIFTED_KEYCODES[Keys.KEYCODE.COMMA]=Keys.ASCII["<"],Keys.SHIFTED_KEYCODES[Keys.KEYCODE.DASH]=Keys.ASCII._,Keys.SHIFTED_KEYCODES[Keys.KEYCODE.PERIOD]=Keys.ASCII[">"],Keys.SHIFTED_KEYCODES[Keys.KEYCODE.SLASH]=Keys.ASCII["?"],Keys.SHIFTED_KEYCODES[Keys.KEYCODE.BQUOTE]=Keys.ASCII["~"],Keys.SHIFTED_KEYCODES[Keys.KEYCODE.LBRACK]=Keys.ASCII["{"],Keys.SHIFTED_KEYCODES[Keys.KEYCODE.BSLASH]=Keys.ASCII["|"],Keys.SHIFTED_KEYCODES[Keys.KEYCODE.RBRACK]=Keys.ASCII["}"],Keys.SHIFTED_KEYCODES[Keys.KEYCODE.QUOTE]=Keys.ASCII['"'],Keys.SHIFTED_KEYCODES[Keys.KEYCODE.FF_DASH]=Keys.ASCII._,Keys.SHIFTED_KEYCODES[Keys.KEYCODE.FF_EQUALS]=Keys.ASCII["+"],Keys.SHIFTED_KEYCODES[Keys.KEYCODE.FF_SEMI]=Keys.ASCII[":"];class PCFS{static root="/pcfs";static ATTR={READONLY:1,HIDDEN:2,SYSTEM:4,VOLUME:8,LFN:15,SUBDIR:16,ARCHIVE:32};static isPCFS(V){return 0==V.indexOf(PCFS.root)}static getRoot(V){return PCFS.isPCFS(V)?globals.pcjs.files:null}static getNodes(V){return V.slice(PCFS.root.length+1).split("/")}static getItem(V,R,U){let l=null,e=PCFS.getRoot(V);if(e){let t,T,k=PCFS.getNodes(V);for(t=0;t<k.length;t++){let V=k[t],U=!1;if(!V){l=e;break}for(T=0;T<e.files.length;T++){let R=e.files[T];if(R.name.toLowerCase()==V.toLowerCase()){if(t==k.length-1){l=R;break}if(R.files){e=R,U=!0;break}}}if(l)break;if(!U&&t<k.length-1){if(R){let R={name:V,size:0,attr:PCFS.ATTR.SUBDIR,date:new Date,files:[]};e.files.push(R),e=R;continue}break}}if(!l&&t==k.length)if(R){let V=U?PCFS.ATTR.SUBDIR:PCFS.ATTR.ARCHIVE;l=e.files[e.files.length]={name:k[k.length-1],size:0,attr:V,date:new Date,files:U?[]:null}}else!1===R&&e.files.splice(T,1)}return l}static setItem(V,R,U,l){!V.files&&R&&(V.data=R,V.size=R.length,U||(U=new Date)),U&&(V.date=U),void 0!==l&&(V.attr=l)}}globals.pcjs.files||(globals.pcjs.files={name:"",size:0,attr:PCFS.ATTR.SUBDIR,date:new Date,files:[]})
class StrLib{static HTMLEscapeMap={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;",$:"&dollar;"};static ASCIICodeMap={0:"NUL",1:"SOH",2:"STX",3:"ETX",4:"EOT",5:"ENQ",6:"ACK",7:"BEL",8:"BS",9:"TAB",10:"LF",11:"VT",12:"FF",13:"CR",14:"SO",15:"SI",16:"DLE",17:"XON",18:"DC2",19:"XOFF",20:"DC4",21:"NAK",22:"SYN",23:"ETB",24:"CAN",25:"EM",26:"SUB",27:"ESC",28:"FS",29:"GS",30:"RS",31:"US",127:"DEL"};static ASCII={LF:10,CR:13};static TYPES={NULL:0,BYTE:1,WORD:2,DWORD:3,NUMBER:4,STRING:5,BOOLEAN:6,OBJECT:7,ARRAY:8};static isValidInt(V,R){return R&&10!=R?16==R?null!==V.match(/^-?[0-9a-f]+$/i):8==R?null!==V.match(/^-?[0-7]+$/):2==R&&null!==V.match(/^-?[01]+$/):null!==V.match(/^-?[0-9]+$/)}static parseInt(V,R){let U;if(V){let l,e,t;R||(R=10);let T=V.indexOf(",")>0;T&&(V=V.replace(/,/g,"")),l=e=V.charAt(0),"#"==e?(R=8,e=""):"$"==e&&(R=16,e=""),l!=e?V=V.substr(1):(l=e=V.substr(0,2),"0b"==e&&T||"^B"==e?(R=2,e=""):"0o"==e||"^O"==e?(R=8,e=""):"^D"==e?(R=10,e=""):"0x"==e&&(R=16,e=""),l!=e&&(V=V.substr(2))),l=t=V.slice(-1),"Y"==t||"y"==t?(R=2,t=""):"."==t?(R=10,t=""):"H"==t||"h"==t?(R=16,t=""):"K"==t?t="000":"M"==t?t="000000":"G"==t&&(t="000000000"),l!=t&&(V=V.slice(0,-1)+t);let k,F=0;if(R<=10){let R=V.match(/(-?[0-9]+)B([0-9]*)/);R&&(V=R[1],F=35-(255&(R[2]||35)))}StrLib.isValidInt(V,R)&&!isNaN(k=parseInt(V,R))&&(F&&(k<0&&(k+=Math.pow(2,36)),F>0?k*=Math.pow(2,F):k=Math.trunc(k/Math.pow(2,-F))),U=k)}return U}static toBase(V,R,U,l="",e=0){let t="";isNaN(V)||"number"!=typeof V?V=null:(V<0&&V>-1&&(V=-1),V<0&&(V+=Math.pow(R,U)),V>=Math.pow(R,U)&&(U=Math.ceil(Math.log(V)/Math.log(R))));let T=e||-1;for(;U-- >0;){if(T||(t=","+t,T=e),null==V)t="?"+t;else{let U=V%R;U+=U>=0&&U<=9?48:55,t=String.fromCharCode(U)+t,V=Math.trunc(V/R)}T--}return l+t}static toBin(V,R,U){if(R)R>36&&(R=36);else{let U=Math.abs(V);R=U<=255?8:U<=262143?18:36}return StrLib.toBase(V,2,R,"",U)}static toBinBytes(V,R,U){let l="";(!R||R>4)&&(R=4);for(let U=0;U<R;U++)l&&(l=","+l),l=StrLib.toBin(255&V,8)+l,V>>=8;return(U?"0b":"")+l}static toOct(V,R,U){if(R)R>12&&(R=12);else{let U=Math.abs(V);R=U<=262143?6:U<=16777215?8:12}return StrLib.toBase(V,8,R,U?"0o":"")}static toDec(V,R){if(R)R>11&&(R=11);else{R=Math.abs(V)<=99999?5:11}return StrLib.toBase(V,10,R)}static toHex(V,R,U){if(R)R>9&&(R=9);else{let U=Math.abs(V);R=U<=255?2:U<=65535?4:U<=4294967295?8:9}return StrLib.toBase(V,16,R,U?"0x":"")}static toHexByte(V){return StrLib.toHex(V,2,!0)}static toHexWord(V){return StrLib.toHex(V,4,!0)}static toHexLong(V){return StrLib.toHex(V,8,!0)}static getBaseName(V,R){let U=V,l=V.lastIndexOf("/");return l>=0&&(U=V.substr(l+1)),l=U.indexOf("&"),l>0&&(U=U.substr(0,l)),R&&(l=U.lastIndexOf("."),l>0&&(U=U.substring(0,l))),U}static getExtension(V){let R="",U=V.lastIndexOf(".");return U>=0&&(R=V.substr(U+1).toLowerCase(),"json5"==R&&(R="json")),R}static endsWith(V,R){return-1!==V.indexOf(R,V.length-R.length)}static escapeHTML(V){return V.replace(/[&<>"'$]/g,(function(V){return StrLib.HTMLEscapeMap[V]}))}static replace(V,R,U){let l=U.indexOf(V);return l>=0&&(U=U.substr(0,l)+R+U.substr(l+V.length)),U}static replaceAll(V,R,U){let l={};return l[V]=R,StrLib.replaceArray(l,U)}static replaceArray(V,R){let U="";for(let R in V)R=R.replace(/([\\[\]*{}().+?|$])/g,"\\$1"),U+=(U?"|":"")+R;return R.replace(new RegExp("("+U+")","g"),(function(R){return V[R]}))}static pad(V,R){return StrLib.sprintf("%"+R+"."+Math.abs(R)+"s",V)}static parseDate(...V){let R;return R=void 0===V[0]?new Date(Date.now()):"string"==typeof V[0]?new Date(V[0]+" "+(V[1]||"00:00:00 GMT")):void 0===V[1]?new Date(V[0]):new Date(Date.UTC(...V)),R}static isValidDate(V){return!isNaN(V.getTime())}static stripLeadingZeros(V,R){let U=V.length;return V=V.replace(/^0+([0-9A-F]+)$/i,"$1"),R&&(V=StrLib.pad(V,U)),V}static trim(V){return String.prototype.trim?V.trim():V.replace(/^\s+|\s+$/g,"")}static toASCIICode(V){let R;return V!=StrLib.ASCII.CR&&V!=StrLib.ASCII.LF&&(R=StrLib.ASCIICodeMap[V]),R=R?"<"+R+">":String.fromCharCode(V),R}}StrLib.format=new Format,StrLib.sprintf=StrLib.format.sprintf.bind(StrLib.format);class UsrLib{static aMonthDays=[31,28,31,30,31,30,31,31,30,31,30,31];static binarySearch(V,R,U){let l=0,e=V.length,t=0;for(void 0===U&&(U=function(V,R){return V>R?1:V<R?-1:0});l<e;){let T,k=l+e>>1;T=U(R,V[k]),T>0?l=k+1:(e=k,t=!T)}return t?l:~l}static binaryInsert(V,R,U){let l=UsrLib.binarySearch(V,R,U);l<0&&V.splice(-(l+1),0,R)}static getTimestamp(){let V=new Date;return StrLib.sprintf("%T",V)}static getMonthDays(V,R){let U=UsrLib.aMonthDays[V-1];return 28==U&&R%4==0&&(R%100||R%400==0)&&U++,U}static adjustDays(V,R){return new Date(V.getTime()+864e5*R)}static subtractDays(V,R){return"string"==typeof V&&(V=new Date(V)),"string"==typeof R&&(R=new Date(R)),Math.round((V.getTime()-R.getTime())/864e5)}static defineBitFields(V){let R=0;for(let U in V){let l=V[U],e=(1<<l)-1<<R;V[U]={mask:e,shift:R},R+=l}return V}static initBitFields(V,R){let U=0,l=1;for(let R in V){if(l>=arguments.length)break;U=UsrLib.setBitField(V[R],U,arguments[l++])}return U}static getBitField(V,R){return(R&V.mask)>>V.shift}static setBitField(V,R,U){return R&~V.mask|U<<V.shift&V.mask}static indexOf(V,R,U){if(Array.prototype.indexOf)return V.indexOf(R,U);(U=U||0)<0&&(U+=V.length),U<0&&(U=0);for(let l=V.length;U<l;U++)if(U in V&&V[U]===R)return U;return-1}}
class WebLib{static getResource(V,R="text",U=!1,l,e){let t,T=0,k=null,F=null,W=globals.window.resources;if("object"==typeof W&&(k=W[V]))return l&&l(V,k,T),[k,T];if(U&&"function"==typeof W)return W(V,(function(R,U){l&&l(V,R,U)})),F;if(V=globals.window.LOCALDISKS&&WebLib.getHostName().match(/^(.+\.local|localhost|0\.0\.0\.0|pcjs)$/)?V.replace(/^\/(diskettes|gamedisks|miscdisks|harddisks|decdisks|pcsigdisks|pcsig[0-9a-z]*-disks|private)\//,"/disks/$1/").replace(/^\/discs\/([^/]*)\//,"/disks/cdroms/$1/"):V.replace(/^\/(disks\/|)(diskettes|gamedisks|miscdisks|harddisks|decdisks|pcsigdisks|pcsig[0-9a-z]*-disks|private)\//,"https://$2.pcjs.org/").replace(/^\/(disks\/cdroms|discs)\/([^/]*)\//,"https://$2.pcjs.org/"),Component.printf(MESSAGE.DEBUG,"getResource(%s)\n",V),globals.node.readFileSync&&0!=V.indexOf("http")){try{let U="arraybuffer"==R?null:"utf8";k=globals.node.readFileSync(V,U),U||(k=k.buffer,k.buffer&&(k=k.buffer))}catch(V){T=V.errno}if(void 0!==k)return l&&l(V,k,T),[k,T]}if(PCFS.isPCFS(V)){let R=PCFS.getItem(V);if(R)return k=R.data,l&&l(V,k,T),[k,T]}if(!V.match(/^[A-Z]:/i)&&V.indexOf("?")<0&&(V=encodeURI(V)),globals.window.XMLHttpRequest)t=new globals.window.XMLHttpRequest;else if(globals.window.ActiveXObject)t=new globals.window.ActiveXObject("Microsoft.XMLHTTP");else if(globals.window.fetch)return fetch(V).then((V=>{switch(R){case"json":case"text":return V.text();case"arraybuffer":return V.arrayBuffer();default:throw new Error("unsupported response type: "+R)}})).then((R=>{Component.printf(MESSAGE.DEBUG+MESSAGE.LOG,"getResource(%s): fetched %d bytes\n",V,R.length),l&&l(V,R,T)})).catch((R=>{Component.printf(MESSAGE.LOG,"getResource(%s) fetch error: %d\n",V,T),l&&l(V,k,T)})),F;let a=!1,s="string"==typeof t.responseType,Z=function(){if(4!==t.readyState)return e&&e(1),null;try{k=a?t.response:t.responseText}catch(R){Component.printf(MESSAGE.LOG,"getResource(%s) exception: %s\n",V,R.message)}if(null!=k&&(200==t.status||!t.status&&k.length&&"file:"==WebLib.getHostProtocol()))Component.printf(MESSAGE.DEBUG+MESSAGE.LOG,"getResource(%s): returned %d bytes\n",V,k.length);else if(T=t.status||-1,Component.printf(MESSAGE.DEBUG,"getResource(%s) error: %d\n",V,T),!t.status&&!WebLib.fAdBlockerWarning){let R=V.match(/(^https?:\/\/[^/]+)(.*)/);R&&(WebLib.fAdBlockerWarning=!0,Component.alertUser("PCjs was unable to perform a cross-origin resource request to '"+R[1]+"'.\n\nIf you're running an ad blocker, try adding '"+WebLib.getHostOrigin()+"' to your whitelist (or find a smarter ad blocker)."))}return e&&e(2),l&&l(V,k,T),[k,T]};if(U&&(t.onreadystatechange=Z),e&&e(0),R&&"object"==typeof R){let l="";for(let V in R)R.hasOwnProperty(V)&&(l&&(l+="&"),l+=V+"="+encodeURIComponent(R[V]));l=l.replace(/%20/g,"+"),Component.printf(MESSAGE.DEBUG+MESSAGE.LOG,"getResource(%s): posted %d bytes\n",V,l.length),t.open("POST",V,U),t.setRequestHeader("Content-type","application/x-www-form-urlencoded"),t.send(l)}else{if(t.open("GET",V,U),"arraybuffer"==R&&(s?(a=!0,t.responseType=R):t.overrideMimeType("text/plain; charset=x-user-defined")),V.indexOf("DISK.json")>-1){const R=JSON.stringify(DISK_DATA);return e&&e(2),l&&l(V,R,0),[R,0]}t.send()}return U||(t.readyState=4,F=Z()),F}static parseMemoryResource(sURL,sData){let i,resource={aBytes:null,aSymbols:null,addrLoad:null,addrExec:null};if("["==sData.charAt(0)||"{"==sData.charAt(0))try{let a,ib,data;if("<"==sData.substr(0,1))throw new Error(sData);sData.indexOf("0x")<0&&sData.indexOf("0o")<0&&'["'!=sData.substr(0,2)?(sData.indexOf('"values"')<0&&(sData=sData.replace(/([a-z]+):/gm,'"$1":').replace(/\/\/[^\n]*/gm,"")),data=JSON.parse(sData)):data=eval("("+sData+")"),resource.addrLoad=data.load,resource.addrExec=data.exec;let width=data.width,values=data.values;if(width&&values&&(8==width?data.bytes=values:16==width?data.words=values:32==width?data.longs=values:data.data=values),a=data.bytes)resource.aBytes=a;else if(a=data.words)for(resource.aBytes=new Array(2*a.length),i=0,ib=0;i<a.length;i++)resource.aBytes[ib++]=255&a[i],resource.aBytes[ib++]=a[i]>>8&255;else if(a=data.longs)for(resource.aBytes=new Array(4*a.length),i=0,ib=0;i<a.length;i++)resource.aBytes[ib++]=255&a[i],resource.aBytes[ib++]=a[i]>>8&255,resource.aBytes[ib++]=a[i]>>16&255,resource.aBytes[ib++]=a[i]>>24&255;else(a=data.data)?resource.aData=a:resource.aBytes=data;resource.aBytes&&(resource.aBytes.length?1==resource.aBytes.length&&(Component.error(resource.aBytes[0]),resource=null):(Component.error("Empty resource: "+sURL),resource=null)),resource.aSymbols=data.symbols}catch(V){Component.error("Resource data error ("+sURL+"): "+V.message),resource=null}else{let V=[],R=sData.replace(/\n/gm," ").replace(/ +$/,""),U=R.split(" ");for(i=0;i<U.length;i++){let R=parseInt(U[i],16);if(isNaN(R)){Component.error("Resource data error ("+sURL+"): invalid hex byte ("+U[i]+")");break}V.push(255&R)}i==U.length&&(resource.aBytes=V)}return resource}static redirectResource(V){return(V=(V=V.replace("/disks/pc/","/disks/pcx86/")).replace("/disks/pcx86/private/","/disks-private/pcx86/")).indexOf("archive.pcjs.org")<0&&(V=V.replace("/disks/pcx86/","/disks-demo/pcx86/")),V=(V=(V=(V=(V=V.replace("/pcjs-disks/","/disks-demo/")).replace("/pcjs-games/","/disks-game/")).replace("/disks-demo/pcx86/games/","/disks-game/pcx86/")).replace("/private-disks/","/disks-private/")).replace("/fixed/","/drives/")}static sendReport(V,R,U,l,e,t,T){let k={};k[ReportAPI.QUERY.APP]=V,k[ReportAPI.QUERY.VER]=R,k[ReportAPI.QUERY.URL]=U,k[ReportAPI.QUERY.USER]=l,k[ReportAPI.QUERY.TYPE]=e,k[ReportAPI.QUERY.DATA]=t;let F=(T||SITEURL)+ReportAPI.ENDPOINT;WebLib.getResource(F,k,!0)}static getHost(){return globals.window.location?globals.window.location.host:"localhost"}static getHostName(){return globals.window.location?globals.window.location.hostname:"localhost"}static getHostOrigin(){return globals.window.location?globals.window.location.protocol+"//"+globals.window.location.host:SITEURL}static getHostProtocol(){return globals.window.location?globals.window.location.protocol:"file:"}static getHostURL(){return globals.window.location?globals.window.location.href:null}static getUserAgent(){return globals.window.navigator?globals.window.navigator.userAgent:""}static hasLocalStorage(){if(null==WebLib.fLocalStorage){let V=!1;if(globals.window.localStorage)try{globals.window.localStorage.setItem(WebLib.sLocalStorageTest,WebLib.sLocalStorageTest),V=globals.window.localStorage.getItem(WebLib.sLocalStorageTest)==WebLib.sLocalStorageTest,globals.window.localStorage.removeItem(WebLib.sLocalStorageTest)}catch(R){WebLib.printLocalStorageError(R),V=!1}WebLib.fLocalStorage=V}return WebLib.fLocalStorage}static printLocalStorageError(V){Component.printf(MESSAGE.ERROR,"Local storage error: %s\n",V.message)}static getLocalStorageItem(V){let R;if(WebLib.hasLocalStorage())try{R=globals.window.localStorage.getItem(V)}catch(V){WebLib.printLocalStorageError(V)}return R}static setLocalStorageItem(V,R){if(WebLib.hasLocalStorage())try{return globals.window.localStorage.setItem(V,R),!0}catch(V){WebLib.printLocalStorageError(V)}return!1}static removeLocalStorageItem(V){if(WebLib.hasLocalStorage())try{globals.window.localStorage.removeItem(V)}catch(V){WebLib.printLocalStorageError(V)}}static getLocalStorageKeys(){let V=[];if(WebLib.hasLocalStorage())try{for(let R=0,U=globals.window.localStorage.length;R<U;R++)V.push(globals.window.localStorage.key(R))}catch(V){WebLib.printLocalStorageError(V)}return V}static reloadPage(){globals.window.location&&globals.window.location.reload()}static isUserAgent(V){if(globals.window.navigator){let R=WebLib.getUserAgent();return"iOS"==V&&(!!R.match(/(iPod|iPhone|iPad)/)||"MacIntel"===globals.window.navigator.platform&&globals.window.navigator.maxTouchPoints>1)||"MSIE"==V&&!!R.match(/(MSIE|Trident)/)||R.indexOf(V)>=0}return!1}static isMobile(V){let R=WebLib.getURLParm("mobile");if(R)return"true"==R;if(WebLib.isUserAgent("Mobi")){if(!V)return!0;let R="!"==V[0];return R&&(V=V.substr(1)),WebLib.isUserAgent(V)!=R}return!1}static findProperty(V,R,U){if(V)for(let l=0;l<WebLib.asBrowserPrefixes.length;l++){let e=WebLib.asBrowserPrefixes[l];if(U){if(e+=U,R+e in V)return e}else if(e?e+=R[0].toUpperCase():e=R[0],e+=R.substr(1),e in V)return e}return null}static getURLParm(V){return WebLib.parmsURL||(WebLib.parmsURL=WebLib.parseURLParms()),WebLib.parmsURL[V]||WebLib.parmsURL[V.toLowerCase()]}static parseURLParms(V){let R={};if(globals.window.location){let U;V||(V=globals.window.location.search.substr(1));let l=/\+/g,e=/([^&=]+)=?([^&]*)/g,t=function(V){return decodeURIComponent(V.replace(l," "))};for(;U=e.exec(V);)R[t(U[1])]=t(U[2])}return R}static downloadFile(V,R,U,l){let e,t,T=null;if("string"!=typeof V){if("function"==typeof Blob&&"undefined"!=typeof URL&&URL&&"function"==typeof URL.createObjectURL){let R=new Blob([V],{type:"application/octet-stream"});t=URL.createObjectURL(R)}}else t="data:application/"+R+(U?";base64":"")+",",t+=U?V:encodeURIComponent(V);return t?(l&&(T=document.createElement("a"),"string"!=typeof T.download&&(T=null)),T?(T.href=t,T.download=l,document.body.appendChild(T),T.click(),document.body.removeChild(T),e="Check your Downloads folder for "+l+"."):globals.window.open&&(globals.window.open(t),e="Check your browser for a new window/tab containing the requested data"+(l?" ("+l+")":"")+".")):e="Operation unsupported by your browser.",e}static onCountRepeat(V,R,U,l){let e=function(){(V-=1)>=0&&(R()||(V=0)),V>0?setTimeout(e,l||0):U()};e()}static onClickRepeat(V,R,U,l){let e=0,t=null,T=!1,k=function(){l(e===U)&&(t=setTimeout(k,e),e=U)};V.onmousedown=function(){T||t||(e=R,k())},V.ontouchstart=function(){t||(e=R,k())},V.onmouseup=V.onmouseout=function(){t&&(clearTimeout(t),t=null)},V.ontouchend=V.ontouchcancel=function(){t&&(clearTimeout(t),t=null),T=!0}}static addPageEvent(V,R){globals.window.addEventListener&&globals.window.addEventListener(V,R)}static onInit(V){WebLib.aPageEventHandlers.init.push(V)}static onShow(V){WebLib.aPageEventHandlers.show.push(V)}static onError(V){Component.printf(MESSAGE.NOTICE,"%s\n\nIf it happens again, please send the URL to support@pcjs.org. Thanks.\n",V)}static onExit(V){WebLib.aPageEventHandlers.exit.push(V)}static doPageEvent(V,R){let U=WebLib.aPageEventHandlers[V];if(U&&WebLib.fPageEventsEnabled)try{for(let V=0;V<U.length;V++)U[V]()}catch(V){WebLib.onError("An unexpected error occurred: "+V.message)}}static enablePageEvents(V){if(!WebLib.fPageEventsEnabled&&V)return WebLib.fPageEventsEnabled=!0,WebLib.fPageLoaded&&WebLib.doPageEvent("init"),void(WebLib.fPageShowed&&WebLib.doPageEvent("show"));WebLib.fPageEventsEnabled=V}static doPageInit(){WebLib.fPageLoaded=!0,WebLib.doPageEvent("init",!0)}static doPageShow(){WebLib.fPageShowed=!0,WebLib.doPageEvent("show",!0)}static doPageExit(){WebLib.doPageEvent("exit",!0)}static doPageReset(){WebLib.fPageLoaded&&(WebLib.fPageLoaded=!1,WebLib.fPageShowed=!1)}}if(WebLib.parmsURL=null,WebLib.aPageEventHandlers={init:[],show:[],exit:[]},WebLib.asBrowserPrefixes=["","moz","ms","webkit"],WebLib.fPageLoaded=!1,WebLib.fPageShowed=!1,WebLib.fPageEventsEnabled=!0,WebLib.fAdBlockerWarning=!1,WebLib.fLocalStorage=null,WebLib.sLocalStorageTest="PCjs.localStorage",WebLib.addPageEvent("load",WebLib.doPageInit),WebLib.addPageEvent("pageshow",WebLib.doPageShow),WebLib.addPageEvent(WebLib.isUserAgent("iOS")?"pagehide":WebLib.isUserAgent("Opera")?"unload":"beforeunload",WebLib.doPageExit),DEBUG){let V=WebLib.getURLParm("debug");"false"==V&&(globals.window.DEBUG=!1)}
class Component{static TYPE={NUMBER:"number",OBJECT:"object",STRING:"string"};static asyncCommands=["hold","sleep","wait"];static globalCommands={alert:Component.scriptAlert,sleep:Component.scriptSleep};static componentCommands={select:Component.scriptSelect};static lastUID=0;constructor(V,R,U){this.type=V,R||(R={id:"",name:""}),this.name=R.name,this.comment=R.comment,this.parms=R,this.uid=++Component.lastUID,this.id=this.id=R.id||"",this.exports=this.exports={},this.bindings=this.bindings={};let l=this.id.indexOf(".");l<0?(this.idMachine="PCjs",this.idComponent=this.id):(this.idMachine=this.id.substr(0,l),this.idComponent=this.id.substr(l+1)),this.flags={ready:!1,busy:!1,busyCancel:!1,initDone:!1,powered:!1,unloading:!1,error:!1},this.fnReady=null,this.clearError(),this.bitsMessage=U||0,this.cmp=null,this.bus=null,this.cpu=null,this.dbg=null,Component.add(this)}static add(V){globals.pcjs.components.push(V)}static addMachine(V){globals.pcjs.machines[V]={}}static destroyMachine(V){if(globals.pcjs.machines[V]){let R=globals.pcjs.components;for(let U=0;U<R.length;U++){0==R[U].id.indexOf(V)&&R.splice(U--,1)}return delete globals.pcjs.machines[V],!0}return!1}static getMachines(){return Object.keys(globals.pcjs.machines)}static addMachineResource(idMachine,sName,data){globals.pcjs.machines[idMachine]&&sName&&(globals.pcjs.machines[idMachine][sName]=data,"parms"==sName&&"string"==typeof data&&(globals.pcjs.machines[idMachine].config=eval("("+data+")")))}static getMachineResources(V){return globals.pcjs.machines[V]}static getTime(){return Date.now()||+new Date}static printf(V,...R){let U=0;if("number"==typeof V&&(U=V,V=R.shift()),DEBUG||U>=MESSAGE.LOG&&U<=MESSAGE.ERROR){let l=!1;U==MESSAGE.ERROR?(l=!0,V="Error: "+V):U==MESSAGE.WARNING?(l=!0,V="Warning: "+V):U==MESSAGE.NOTICE&&(l=!0);let e=StrLib.sprintf(V,...R).trim();l?Component.alertUser(e):console.log(e)}}static assert(V,R,...U){if(DEBUG&&!V){R||(R="assertion failure");try{throw new Error(StrLib.sprintf(R,...U))}catch(V){Component.printf(MESSAGE.ERROR,"%s\n",(V.stack||V.message).replace(/^Error: /i,""))}}}static warning(V){Component.printf(MESSAGE.WARNING,V)}static error(V){Component.printf(MESSAGE.ERROR,V)}static alertUser(V,R){globals.window.alert&&globals.window.alert(V),R||console.log(V)}static confirmUser(V){let R=!1;return globals.window.confirm&&(R=globals.window.confirm(V)),R}static promptUser(V,R){let U=null;return globals.window.prompt&&(U=globals.window.prompt(V,void 0===R?"":R)),U}static appendControl(V,R){V.value+=R,COMPILED&&(R=V.value).length>8192&&(V.value=R.substr(R.length-4096)),V.scrollTop=V.scrollHeight}static replaceControl(V,R,U){let l=V.value,e=l.lastIndexOf(R);e<0?l+=R+"\n":l=l.substr(0,e)+U+l.substr(e+R.length),COMPILED&&l.length>8192&&(l=l.substr(l.length-4096)),V.value=l,V.scrollTop=V.scrollHeight}static bindExternalControl(V,R,U="Panel"){if(R){let l=Component.getComponentByType(U,V.id);if(l){let U=l.bindings[R];U&&V.setBinding("",R,U)}}}static bindComponentControls(V,R,U){let l=Component.getElementsByClass(U+"-control","",R.parentNode);for(let R=0;R<l.length;R++){let e=l[R].childNodes;for(let R=0;R<e.length;R++){let l=e[R];if(1!==l.nodeType)continue;let t=l.getAttribute("class");if(!t)continue;let T=t.split(" ");for(let R=0;R<T.length;R++){let e;if(t=T[R],t===U+"-binding")e=Component.getComponentParms(l),e&&void 0!==e.binding?V.setBinding(e.type,e.binding,l,e.value):e&&"description"==e.type||Component.printf(MESSAGE.WARNING,'Component "%s" missing binding%s\n',V.toString(),e?" for "+e.type:""),R=T.length}}}}static getComponents(V){let R,U=[];V&&(R=V.indexOf("."))>0&&(V=V.substr(0,R+1));let l=globals.pcjs.components;for(R=0;R<l.length;R++){let e=l[R];V&&0!=e.id.indexOf(V)||U.push(e)}return U}static getComponentByID(V,R){if(void 0!==V){let U;R&&(U=R.indexOf("."))>0&&(V=R.substr(0,U+1)+V);let l=globals.pcjs.components;for(U=0;U<l.length;U++)if(l[U].id===V)return l[U];l.length&&!1!==R&&Component.printf(MESSAGE.WARNING,'Component ID "%s" not found\n',V)}return null}static getComponentByType(V,R,U=null){if(void 0!==V){let l;R&&(R=(l=R.indexOf("."))>0?R.substr(0,l+1):"");let e=globals.pcjs.components;for(l=0;l<e.length;l++)if(U)U==e[l]&&(U=null);else if(!(V!=e[l].type||R&&e[l].id.indexOf(R)))return e[l];MAXDEBUG&&!1!==U&&Component.printf(MESSAGE.WARNING,'Component type "%s" not found\n',V)}return null}static getComponentParms(element){let parms=null;if(element.getAttribute){let sParms=element.getAttribute("data-value");if(sParms)try{parms=eval("("+sParms+")")}catch(V){Component.error(V.message+" ("+sParms+")")}}else if(parms=element.config||null,parms){let V=element.id,R=parms.id;V&&R&&R.indexOf(".")<0&&(parms.id=V+"."+R)}return parms}static getElementsByClass(V,R="",U=globals.document){let l=[];if(R&&(V+="-"+R,"machine"!=R&&(V+="-object")),globals.browser){if(U.getElementsByClassName)l=U.getElementsByClassName(V);else if(U.getElementsByTagName){let R,e,t=U.getElementsByTagName("*"),T=new RegExp("(^| )"+V+"( |$)");for(R=0,e=t.length;R<e;R++)T.test(t[R].className)&&l.push(t[R])}}else{let V=Object.keys(globals.pcjs.machines);for(let U=0;U<V.length;U++){let e=V[U],t=globals.pcjs.machines[e].config;if(t){let V=t[R];if(V){Array.isArray(V)||(V=[V]);for(let R of V){let V={id:e,config:R};l.push(V)}}}}}return l.length||MAXDEBUG&&Component.printf(MESSAGE.WARNING,'No elements of class "%s" found\n',V),l}static getScriptCommands(V){let R=V.length,U=[],l=[],e="",t=null;for(let T=0;T<R;T++){let R=V[T];if('"'!=R&&"'"!=R)t||("\r"!=R&&"\n"!=R||(R=";")," "!=R&&"\t"!=R&&";"!=R)?e+=R:(e&&(l.push(e),e=""),";"==R&&l.length&&(U.push(l),l=[]));else{if(t&&R!=t){e+=R;continue}t=t?null:R,e&&(l.push(e),e="")}}return e&&l.push(e),l.length&&U.push(l),U}static processScript(V,R){let U=!1,l=globals.pcjs.commands;return V+=".machine",R?"string"!=typeof R||l[V]||(U=!0,l[V]=Component.getScriptCommands(R),Component.processCommands(V)||(U=!1)):(delete l[V],U=!0),U}static processCommands(V){let R=!0,U=globals.pcjs.commands[V];for(;U&&U.length;){let l=U.splice(0,1)[0],e=l[0];Component.printf(MESSAGE.SCRIPT,l.join(" "));let t=null;Component.asyncCommands.indexOf(e)>=0&&(t=function(){Component.processCommands(V)});let T=Component.globalCommands[e];if(T)if(t){if(!T(t,l[1],l[2],l[3]))break}else R=T(l[1],l[2],l[3]);else{R=!1;let U=Component.getComponentByType(l[1],V);if(U)if(T=Component.componentCommands[e],T)R=T(U,l[2],l[3]);else{let V=U.exports;if(V&&(T=V[e],T))if(R=!0,t){if(!T.call(U,t,l[2],l[3]))break}else R=T.call(U,l[2],l[3])}}if(!R){Component.alertUser("Script error: '"+e+"' command "+(T?" failed":" not recognized"));break}}return U&&!U.length&&delete globals.pcjs.commands[V],R}static scriptAlert(V){return Component.alertUser(V),!0}static scriptSelect(V,R,U){let l=!1,e=V.bindings[R];if(e)for(let V=0;V<e.options.length;V++)if(e.options[V].textContent==U){e.selectedIndex!=V&&(e.selectedIndex=V),l=!0;break}return l}static scriptSleep(V,R){return setTimeout(V,+R),!1}toString(){return this.name?this.name:this.id||this.type}getMachineNum(){let V=1;if(this.idMachine){let R=this.idMachine.match(/\d+/);null!==R&&(V=parseInt(R[0],10))}return V}setBinding(V,R,U,l){switch(R){case"clear":return this.bindings[R]||(this.bindings[R]=U,U.onclick=(e=this,function(){e.bindings.print&&(e.bindings.print.value="")})),!0;case"print":if(!this.bindings[R]){let V=U;this.bindings[R]=V,V.value="",this.print=function(V,R){return function(V,U=0){V||(V=""),U==MESSAGE.PROGRESS&&"...\n"==V.slice(-4)?Component.replaceControl(R,V.slice(0,-1),V.slice(0,-1)+"."):Component.appendControl(R,V),COMPILED||Component.printf(V)}}(0,V)}return!0;default:return!1}var e}assert(V,R,...U){DEBUG&&(V||(R="assertion failure in "+(this.id||this.type)+(R?": "+R:""),DEBUGGER&&this.dbg&&this.dbg.stopCPU()))}print(V,R=0){Component.printf(R,V)}setError(V){this.flags.error=!0,this.printf(MESSAGE.NOTICE,"%s\n",V)}clearError(){this.flags.error=!1}isError(){return!!this.flags.error&&(this.print(this.toString()+" error\n"),!0)}isReady(V){return V&&(this.flags.ready?V():(MAXDEBUG&&this.printf(MESSAGE.LOG,"NOT ready\n"),this.fnReady=V)),this.flags.ready}setReady(V){if(!this.flags.error&&(this.flags.ready=!1!==V,this.flags.ready)){MAXDEBUG&&this.printf(MESSAGE.LOG,"ready\n");let V=this.fnReady;this.fnReady=null,V&&V()}}isBusy(V){return this.flags.busy&&(V?this.flags.busyCancel=!0:void 0===V&&this.print(this.toString()+" busy\n")),this.flags.busy}setBusy(V){return this.flags.busyCancel?(this.flags.busy=!1,this.flags.busyCancel=!1,!1):this.flags.error?(this.print(this.toString()+" error\n"),!1):(this.flags.busy=V,this.flags.busy)}powerUp(V,R){return this.flags.powered=!0,!0}powerDown(V,R){return R&&(this.flags.powered=!1),!0}static clearBits(V,R){let U=Math.pow(2,32);return(V&~R)+((V/U|0)&~(R/U|0))*U}static maskBits(V,R){let U=Math.pow(2,32);return(V&R)+((V/U|0)&(R/U|0))*U}static setBits(V,R){let U=Math.pow(2,32);return(V|R)+(V/U|0|(R/U|0))*U}static testBits(V,R){let U=Math.pow(2,32),l=R/U|0;return(V&R)==(0|R)&&((V/U|0)&l)==l}messageEnabled(V=0){if(V&MESSAGE.ADDR&&(V-=MESSAGE.ADDR),V=V||this.bitsMessage,DEBUG||!Component.testBits(V,MESSAGE.DEBUG)){let R=MESSAGE.TYPES-(this.dbg?MESSAGE.LOG+MESSAGE.WARNING:0);if(Component.testBits(R,V)||this.dbg&&Component.testBits(this.dbg.bitsMessage,V))return!0}return!1}printf(V,...R){let U=0;if("number"==typeof V&&(U=V||MESSAGE.PROGRESS,V=R.shift(),Component.testBits(U,MESSAGE.LOG)?V=(this.id||this.type||"log")+": "+V:Component.testBits(U,MESSAGE.STATUS)&&(V=this.type+": "+V)),this.messageEnabled(U)){let l=StrLib.sprintf(V,...R);this.dbg&&this.dbg.message?this.dbg.message(l,U):this.print(l,U)}}printIO(V,R,U,l,e,t=this.bitsMessage){DEBUGGER&&this.dbg&&(!0===t&&(t=0),this.dbg.messageIO(this,V,R,U,l,e,t))}}Array.prototype.indexOf||(Array.prototype.indexOf=function(V,R){for(let U=R||0,l=this.length;U<l;U++)if(this[U]===V)return U;return-1}),Array.isArray||(Array.isArray=function(V){return"[object Array]"===Object.prototype.toString.call(V)}),Function.prototype.bind||(Function.prototype.bind=function(V){if("function"!=typeof this)throw new TypeError("Function.prototype.bind: non-callable object");let R=Array.prototype.slice.call(arguments,1),U=this,l=function(){},e=function(){return U.apply(this instanceof l&&V?this:V,R.concat(Array.prototype.slice.call(arguments)))};return l.prototype=this.prototype,e.prototype=new l,e})
class JSONLib{static parseDiskettes(V,R,U="/pcx86",l="",e="",t=[]){for(let T in R){if("@"==T[0]){"@server"==T&&(l=R[T]);continue}let k=R[T],F=k["@products"];if(F){JSONLib.parseDiskettes(V,F,U+"/"+T,l,e,t);continue}let W=k["@versions"];if(W){k["@server"]&&(l=k["@server"]);for(let F in W){let a=W[F],s=a["@media"];if(s)for(let W=0;W<s.length;W++){let Z=s[W];if(!Z["@diskette"])continue;let S=Z["@format"];if(S&&t.length){let V=S.match(/^PC([0-9]+)K$/);if(V){let R=+V[1];if(1==t[0]&&R>180||40==t[1]&&R>360)continue}}let h=Z["@title"];h||(h=a["@title"],h||(h=k["@title"],F&&(h+=" "+F)),s.length>1&&(h+=" (Disk "+(W+1)+")"));let E={name:h,path:Z["@link"]||l+U+"/"+T+"/"+(F?F+"/":"")+Z["@diskette"]};if(!COMPILED){let V=a["@title"]||k["@title"];R["@title"]&&V.indexOf(R["@title"])<0&&R["@title"].indexOf("Misc")<0&&(V=R["@title"]+" "+V);let U=Z["@archive"],l=Z["@label"],e=Z["@args"],t=Z["@kryoflux"],T=Z["@normalize"],F=k["@hidden"]||a["@hidden"],W=a["@bootable"],s=a["@autoType"],h=a["@hardware"],i=a["@demos"],N=Z["@source"],r=a["@documents"],M=Z["@diskInfo"];V&&(E.title=V),S&&(E.format=S),U&&(E.archive=U),l&&(E.label=l),e&&(E.args=e),t&&(E.kryoflux=!0),T&&(E.normalize=!0),F&&(E.hidden=!0),W&&(E.bootable=!0),s&&(E.autoType=s),h&&(E.hardware=h),i&&(E.demos=i),N&&(E.source=N),r&&(E.documents=r),M&&(E.info=M)}Z["@localonly"]&&"localhost"!=e||V.push(E)}}}else"@"!=T[0]&&JSONLib.parseDiskettes(V,k,U+"/"+T,k["@server"]||l,e,t)}}}
const APPCLASS="pcx86",APPNAME="PCx86";var BACKTRACK=!1;const BUGS_8086=!1,BYTEARRAYS=!1,I386=!0,DESKPRO386=I386,PAGEBLOCKS=I386,PREFETCH=!1;var SYMBOLS=DEBUGGER;const TYPEDARRAYS=!0;if(DEBUG){let V=WebLib.getURLParm("backtrack");"false"==V&&(globals.window.BACKTRACK=!1)}
MESSAGE.CPU=2,MESSAGE.SEG=4,MESSAGE.DESC=8,MESSAGE.TSS=16,MESSAGE.PORT=32,MESSAGE.IOPM=64,MESSAGE.NMI=128,MESSAGE.TRAP=256,MESSAGE.FAULT=512,MESSAGE.INT=1024,MESSAGE.IRQ=2048,MESSAGE.BUS=4096,MESSAGE.MEM=8192,MESSAGE.DMA=16384,MESSAGE.FDC=32768,MESSAGE.HDC=65536,MESSAGE.DISK=131072,MESSAGE.PIC=262144,MESSAGE.TIMER=524288,MESSAGE.CMOS=1048576,MESSAGE.RTC=2097152,MESSAGE.C8042=4194304,MESSAGE.KBD=8388608,MESSAGE.PARALLEL=16777216,MESSAGE.SERIAL=33554432,MESSAGE.MOUSE=67108864,MESSAGE.SPEAKER=134217728,MESSAGE.CHIPSET=268435456,MESSAGE.VIDEO=536870912,MESSAGE.COMPUTER=1073741824,MESSAGE.DATA=2147483648,MESSAGE.DOS=4294967296,MESSAGE.EVENT=8589934592,MESSAGE.KEY=17179869184,MESSAGE.RESERVED=0xfff000000000,MESSAGE.NAMES.cpu=MESSAGE.CPU,MESSAGE.NAMES.seg=MESSAGE.SEG,MESSAGE.NAMES.desc=MESSAGE.DESC,MESSAGE.NAMES.port=MESSAGE.PORT,MESSAGE.NAMES.tss=MESSAGE.TSS,MESSAGE.NAMES.iopm=MESSAGE.IOPM,MESSAGE.NAMES.int=MESSAGE.INT,MESSAGE.NAMES.nmi=MESSAGE.NMI,MESSAGE.NAMES.fault=MESSAGE.FAULT,MESSAGE.NAMES.trap=MESSAGE.TRAP,MESSAGE.NAMES.bus=MESSAGE.BUS,MESSAGE.NAMES.irq=MESSAGE.IRQ,MESSAGE.NAMES.mem=MESSAGE.MEM,MESSAGE.NAMES.dma=MESSAGE.DMA,MESSAGE.NAMES.fdc=MESSAGE.FDC,MESSAGE.NAMES.hdc=MESSAGE.HDC,MESSAGE.NAMES.disk=MESSAGE.DISK,MESSAGE.NAMES.pic=MESSAGE.PIC,MESSAGE.NAMES.timer=MESSAGE.TIMER,MESSAGE.NAMES.cmos=MESSAGE.CMOS,MESSAGE.NAMES.rtc=MESSAGE.RTC,MESSAGE.NAMES[8042]=MESSAGE.C8042,MESSAGE.NAMES.kbd=MESSAGE.KBD,MESSAGE.NAMES.parallel=MESSAGE.PARALLEL,MESSAGE.NAMES.serial=MESSAGE.SERIAL,MESSAGE.NAMES.mouse=MESSAGE.MOUSE,MESSAGE.NAMES.speaker=MESSAGE.SPEAKER,MESSAGE.NAMES.chipset=MESSAGE.CHIPSET,MESSAGE.NAMES.video=MESSAGE.VIDEO,MESSAGE.NAMES.computer=MESSAGE.COMPUTER,MESSAGE.NAMES.dos=MESSAGE.DOS,MESSAGE.NAMES.data=MESSAGE.DATA,MESSAGE.NAMES.event=MESSAGE.EVENT,MESSAGE.NAMES.key=MESSAGE.KEY;
const X86={MODEL_8086:8086,MODEL_8088:8088,MODEL_80186:80186,MODEL_80188:80188,MODEL_80286:80286,MODEL_80386:80386,STEPPING_80386_A0:80546,STEPPING_80386_A1:80547,STEPPING_80386_B0:80562,STEPPING_80386_B1:80563,STEPPING_80386_B2:80564,STEPPING_80386_C0:80578,STEPPING_80386_D0:80594,STEPPING_80386_D1:80595,STEPPING_80386_D2:80596,ADDR_INVALID:4294967296,EXCEPTION:{DE_EXC:0,DB_EXC:1,NMI:2,BP_TRAP:3,OF_TRAP:4,BR_FAULT:5,UD_FAULT:6,NM_FAULT:7,DF_FAULT:8,MP_FAULT:9,TS_FAULT:10,NP_FAULT:11,SS_FAULT:12,GP_FAULT:13,PF_FAULT:14,MF_FAULT:16},PS:{CF:1,BIT1:2,PF:4,BIT3:8,AF:16,BIT5:32,ZF:64,SF:128,TF:256,IF:512,DF:1024,OF:2048,IOPL:{MASK:12288,SHIFT:12},NT:16384,BIT15:32768,RF:65536,VM:131072},CR0:{MSW:{PE:1,MP:2,EM:4,TS:8,ON:65520,MASK:65535},ET:16,ON:2147483616,PG:-2147483648},DR7:{L0:1,G0:2,L1:4,G1:8,L2:16,G2:32,L3:64,G3:128,ENABLE:255,LE:256,GE:512,RW0:196608,LEN0:786432,RW1:3145728,LEN1:12582912,RW2:50331648,LEN2:201326592,RW3:805306368,LEN3:-1073741824},DR6:{B0:1,B1:2,B2:4,B3:8,BD:8192,BS:16384,BT:32768},SEL:{RPL:3,LDT:4,MASK:65528},DESC:{LIMIT:{OFFSET:0},BASE:{OFFSET:2},ACC:{OFFSET:4,BASE1623:255,TYPE:{OFFSET:5,MASK:7936,SEG:4096,NONSEG:3840,CODE:2048,ACCESSED:256,READABLE:512,WRITABLE:512,CONFORMING:1024,EXPDOWN:1024,TSS_BUSY:512,NONSEG_386:2048,TSS286:256,LDT:512,TSS286_BUSY:768,GATE_CALL:1024,GATE_TASK:1280,GATE286_INT:1536,GATE286_TRAP:1792,TSS386:2304,TSS386_BUSY:2816,GATE386_CALL:3072,GATE386_INT:3584,GATE386_TRAP:3840,CODE_OR_DATA:7680,DATA_READONLY:4096,DATA_WRITABLE:4608,DATA_EXPDOWN:5120,DATA_EXPDOWN_WRITABLE:5632,CODE_EXECONLY:6144,CODE_READABLE:6656,CODE_CONFORMING:7168,CODE_CONFORMING_READABLE:7680},DPL:{MASK:24576,SHIFT:13},PRESENT:32768,INVALID:0},EXT:{OFFSET:6,LIMIT1619:15,AVAIL:16,BIG:64,LIMITPAGES:128,BASE2431:65280},INVALID:0},LADDR:{PDE:{MASK:-4194304,SHIFT:20},PTE:{MASK:4190208,SHIFT:10},OFFSET:4095},PTE:{FRAME:-4096,DIRTY:64,ACCESSED:32,USER:4,READWRITE:2,PRESENT:1},TSS286:{PREV_TSS:0,CPL0_SP:2,CPL0_SS:4,CPL1_SP:6,CPL1_SS:8,CPL2_SP:10,CPL2_SS:12,TASK_IP:14,TASK_PS:16,TASK_AX:18,TASK_CX:20,TASK_DX:22,TASK_BX:24,TASK_SP:26,TASK_BP:28,TASK_SI:30,TASK_DI:32,TASK_ES:34,TASK_CS:36,TASK_SS:38,TASK_DS:40,TASK_LDT:42},TSS386:{PREV_TSS:0,CPL0_ESP:4,CPL0_SS:8,CPL1_ESP:12,CPL1_SS:16,CPL2_ESP:20,CPL2_SS:24,TASK_CR3:28,TASK_EIP:32,TASK_PS:36,TASK_EAX:40,TASK_ECX:44,TASK_EDX:48,TASK_EBX:52,TASK_ESP:56,TASK_EBP:60,TASK_ESI:64,TASK_EDI:68,TASK_ES:72,TASK_CS:76,TASK_SS:80,TASK_DS:84,TASK_FS:88,TASK_GS:92,TASK_LDT:96,TASK_IOPM:100},ERRCODE:{EXT:1,IDT:2,LDT:4,SELMASK:65532},RESULT:{BYTE:128,WORD:32768,DWORD:-2147483648,TYPE:-2147450752,CF:1,PF:2,AF:4,ZF:8,SF:16,OF:32,ALL:63,LOGIC:26,NOTCF:62},OPFLAG:{NOREAD:1,NOWRITE:2,NOINTR:4,WRAP:8,SEG:16,LOCK:32,REPZ:64,REPNZ:128,REPEAT:256,PUSHSP:512,DATASIZE:1024,ADDRSIZE:2048,FAULT:4096,DBEXC:8192,IRET:16384},INTFLAG:{NONE:0,INTR:1,TRAP:2,HALT:4,DMA:8,DEBUGGER:16},OPCODE:{ES:38,CS:46,SS:54,DS:62,PUSHSP:84,PUSHA:96,POPA:97,BOUND:98,ARPL:99,FS:100,GS:101,OS:102,AS:103,PUSHN:104,IMULN:105,PUSH8:106,IMUL8:107,INSB:108,INSW:109,OUTSB:110,OUTSW:111,ENTER:200,LEAVE:201,CALLF:154,PUSHF:156,POPF:157,MOVSB:164,MOVSW:165,CMPSB:166,CMPSW:167,STOSB:170,STOSW:171,LODSB:172,LODSW:173,SCASB:174,SCASW:175,INT3:204,INTN:205,INTO:206,IRET:207,ESC0:216,ESC1:217,ESC2:218,ESC3:219,ESC4:220,ESC5:221,ESC6:222,ESC7:223,LOOPNZ:224,LOOPZ:225,LOOP:226,INB:228,INW:229,OUTB:230,OUTW:231,CALL:232,JMP:233,JMPF:234,JMPS:235,INDXB:236,INDXW:237,OUTDXB:238,OUTDXW:239,LOCK:240,INT1:241,REPNZ:242,REPZ:243,CLI:250,STI:251,CLD:252,STD:253,GRP4W:255,CALLW:4351,CALLFDW:6399,CALLMASK:14591,UD2:2831},FPU:{MODEL_8087:8087,MODEL_80287:80287,MODEL_80287XL:80387,MODEL_80387:80387,CONTROL:{IM:1,DM:2,ZM:4,OM:8,UM:16,PM:32,EXC:63,IEM:128,PC:768,RC:{NEAR:0,DOWN:1024,UP:2048,CHOP:3072,MASK:3072},IC:4096,UNUSED:57408,INIT:959},STATUS:{IE:1,DE:2,ZE:4,OE:8,UE:16,PE:32,SF:64,EXC:127,ES:128,C0:256,C1:512,C2:1024,ST:14336,ST_SHIFT:11,C3:16384,CC:18176,BUSY:32768},TAGS:{VALID:0,ZERO:1,SPECIAL:2,EMPTY:3,MASK:3}},CYCLES_8088:{nWordCyclePenalty:4,nEACyclesBase:5,nEACyclesDisp:6,nEACyclesBaseIndex:7,nEACyclesBaseIndexExtra:8,nEACyclesBaseDisp:9,nEACyclesBaseIndexDisp:11,nEACyclesBaseIndexDispExtra:12,nOpCyclesAAA:4,nOpCyclesAAD:60,nOpCyclesAAM:83,nOpCyclesArithRR:3,nOpCyclesArithRM:9,nOpCyclesArithMR:16,nOpCyclesArithMID:1,nOpCyclesCall:19,nOpCyclesCallF:28,nOpCyclesCallWR:16,nOpCyclesCallWM:21,nOpCyclesCallDM:37,nOpCyclesCLI:2,nOpCyclesCompareRM:9,nOpCyclesCWD:5,nOpCyclesBound:33,nOpCyclesInP:10,nOpCyclesInDX:8,nOpCyclesIncR:3,nOpCyclesIncM:15,nOpCyclesInt:51,nOpCyclesInt3D:1,nOpCyclesIntOD:2,nOpCyclesIntOFall:4,nOpCyclesIRet:32,nOpCyclesJmp:15,nOpCyclesJmpF:15,nOpCyclesJmpC:16,nOpCyclesJmpCFall:4,nOpCyclesJmpWR:11,nOpCyclesJmpWM:18,nOpCyclesJmpDM:24,nOpCyclesLAHF:4,nOpCyclesLEA:2,nOpCyclesLS:16,nOpCyclesLoop:17,nOpCyclesLoopZ:18,nOpCyclesLoopNZ:19,nOpCyclesLoopFall:5,nOpCyclesLoopZFall:6,nOpCyclesMovRR:2,nOpCyclesMovRM:8,nOpCyclesMovMR:9,nOpCyclesMovRI:10,nOpCyclesMovMI:10,nOpCyclesMovAM:10,nOpCyclesMovMA:10,nOpCyclesDivBR:80,nOpCyclesDivWR:124,nOpCyclesDivBM:86,nOpCyclesDivWM:134,nOpCyclesIDivBR:101,nOpCyclesIDivWR:145,nOpCyclesIDivBM:107,nOpCyclesIDivWM:151,nOpCyclesMulBR:70,nOpCyclesMulWR:93,nOpCyclesMulBM:76,nOpCyclesMulWM:104,nOpCyclesIMulBR:80,nOpCyclesIMulWR:108,nOpCyclesIMulBM:86,nOpCyclesIMulWM:114,nOpCyclesNegR:3,nOpCyclesNegM:16,nOpCyclesOutP:10,nOpCyclesOutDX:8,nOpCyclesPopAll:51,nOpCyclesPopReg:8,nOpCyclesPopMem:17,nOpCyclesPushAll:36,nOpCyclesPushReg:11,nOpCyclesPushMem:16,nOpCyclesPushSeg:10,nOpCyclesPrefix:2,nOpCyclesCmpS:18,nOpCyclesCmpSr0:7,nOpCyclesCmpSrn:15,nOpCyclesLodS:12,nOpCyclesLodSr0:7,nOpCyclesLodSrn:11,nOpCyclesMovS:18,nOpCyclesMovSr0:7,nOpCyclesMovSrn:15,nOpCyclesScaS:15,nOpCyclesScaSr0:7,nOpCyclesScaSrn:13,nOpCyclesStoS:11,nOpCyclesStoSr0:7,nOpCyclesStoSrn:8,nOpCyclesRet:8,nOpCyclesRetn:12,nOpCyclesRetF:18,nOpCyclesRetFn:17,nOpCyclesShift1M:15,nOpCyclesShiftCR:8,nOpCyclesShiftCM:20,nOpCyclesShiftCS:2,nOpCyclesTestRR:3,nOpCyclesTestRM:9,nOpCyclesTestRI:5,nOpCyclesTestMI:11,nOpCyclesXchgRR:4,nOpCyclesXchgRM:17,nOpCyclesXLAT:11},CYCLES_80286:{nWordCyclePenalty:0,nEACyclesBase:0,nEACyclesDisp:0,nEACyclesBaseIndex:0,nEACyclesBaseIndexExtra:0,nEACyclesBaseDisp:0,nEACyclesBaseIndexDisp:1,nEACyclesBaseIndexDispExtra:1,nOpCyclesAAA:3,nOpCyclesAAD:14,nOpCyclesAAM:16,nOpCyclesArithRR:2,nOpCyclesArithRM:7,nOpCyclesArithMR:7,nOpCyclesArithMID:0,nOpCyclesCall:7,nOpCyclesCallF:13,nOpCyclesCallWR:7,nOpCyclesCallWM:11,nOpCyclesCallDM:16,nOpCyclesCLI:3,nOpCyclesCompareRM:6,nOpCyclesCWD:2,nOpCyclesBound:13,nOpCyclesInP:5,nOpCyclesInDX:5,nOpCyclesIncR:2,nOpCyclesIncM:7,nOpCyclesInt:23,nOpCyclesInt3D:0,nOpCyclesIntOD:1,nOpCyclesIntOFall:3,nOpCyclesIRet:17,nOpCyclesJmp:7,nOpCyclesJmpF:11,nOpCyclesJmpC:7,nOpCyclesJmpCFall:3,nOpCyclesJmpWR:7,nOpCyclesJmpWM:11,nOpCyclesJmpDM:15,nOpCyclesLAHF:2,nOpCyclesLEA:3,nOpCyclesLS:7,nOpCyclesLoop:8,nOpCyclesLoopZ:8,nOpCyclesLoopNZ:8,nOpCyclesLoopFall:4,nOpCyclesLoopZFall:4,nOpCyclesMovRR:2,nOpCyclesMovRM:3,nOpCyclesMovMR:5,nOpCyclesMovRI:2,nOpCyclesMovMI:3,nOpCyclesMovAM:5,nOpCyclesMovMA:3,nOpCyclesDivBR:14,nOpCyclesDivWR:22,nOpCyclesDivBM:17,nOpCyclesDivWM:25,nOpCyclesIDivBR:17,nOpCyclesIDivWR:25,nOpCyclesIDivBM:20,nOpCyclesIDivWM:28,nOpCyclesMulBR:13,nOpCyclesMulWR:21,nOpCyclesMulBM:16,nOpCyclesMulWM:24,nOpCyclesIMulBR:13,nOpCyclesIMulWR:21,nOpCyclesIMulBM:16,nOpCyclesIMulWM:24,nOpCyclesNegR:2,nOpCyclesNegM:7,nOpCyclesOutP:5,nOpCyclesOutDX:5,nOpCyclesPopAll:19,nOpCyclesPopReg:5,nOpCyclesPopMem:5,nOpCyclesPushAll:17,nOpCyclesPushReg:3,nOpCyclesPushMem:5,nOpCyclesPushSeg:3,nOpCyclesPrefix:0,nOpCyclesCmpS:8,nOpCyclesCmpSr0:5,nOpCyclesCmpSrn:9,nOpCyclesLodS:5,nOpCyclesLodSr0:5,nOpCyclesLodSrn:4,nOpCyclesMovS:5,nOpCyclesMovSr0:5,nOpCyclesMovSrn:4,nOpCyclesScaS:7,nOpCyclesScaSr0:5,nOpCyclesScaSrn:8,nOpCyclesStoS:3,nOpCyclesStoSr0:4,nOpCyclesStoSrn:3,nOpCyclesRet:11,nOpCyclesRetn:11,nOpCyclesRetF:15,nOpCyclesRetFn:15,nOpCyclesShift1M:7,nOpCyclesShiftCR:5,nOpCyclesShiftCM:8,nOpCyclesShiftCS:0,nOpCyclesTestRR:2,nOpCyclesTestRM:6,nOpCyclesTestRI:3,nOpCyclesTestMI:6,nOpCyclesXchgRR:3,nOpCyclesXchgRM:5,nOpCyclesXLAT:5},CYCLES_80386:{nEACyclesBase:0,nEACyclesDisp:0,nEACyclesBaseIndex:0,nEACyclesBaseIndexExtra:0,nEACyclesBaseDisp:0,nEACyclesBaseIndexDisp:1,nEACyclesBaseIndexDispExtra:1},BTINFO:{SP_LO:0,SP_HI:0}};X86.PS_DIRECT_8086=X86.PS.TF|X86.PS.IF|X86.PS.DF,X86.PS_SET_8086=X86.PS.BIT1|X86.PS.IOPL.MASK|X86.PS.NT|X86.PS.BIT15,X86.PS_CACHED=X86.PS.CF|X86.PS.PF|X86.PS.AF|X86.PS.ZF|X86.PS.SF|X86.PS.OF,X86.PS_SAHF=X86.PS.CF|X86.PS.PF|X86.PS.AF|X86.PS.ZF|X86.PS.SF,X86.OPFLAG_PREFIXES=X86.OPFLAG.SEG|X86.OPFLAG.LOCK|X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ|X86.OPFLAG.DATASIZE|X86.OPFLAG.ADDRSIZE;
class CharSet{static fromCP437(V,R=!1){let U="";"number"==typeof V&&(V=[V]);for(let l=0;l<V.length;l++){let e;if(e=Array.isArray(V)?V[l]:"string"==typeof V?V.charCodeAt(l):V.readUInt8(l),e<CharSet.CP437.length&&(e>=32||R&&10!=e&&13!=e&&26!=e))U+=CharSet.CP437[e];else{if(R&&26==e)break;U+=String.fromCharCode(e)}}return U}static toCP437(V,R={}){let U="";for(let l=0;l<V.length;l++){let e=R[V[l]];e||(e=CharSet.CP437.indexOf(V[l]),e<0&&(e=V.charCodeAt(l),e>255&&(e=R["ï¿½"]||42))),U+=String.fromCharCode(e)}return U}static isCP437(V){return CharSet.CP437.indexOf(V)>=0}static isText(V,R=[]){for(let U=0;U<V.length;U++){let l=V.charCodeAt(U);if((!R.length||R.indexOf(l)<0&&l<=255)&&(0==l||l>=128&&!CharSet.isCP437(V[U])))return!1}return!0}static toUpperCaseASCII(V){let R="";for(let U=0;U<V.length;U++){let l=V.charCodeAt(U);l>=97&&l<=122&&(l-=32),R+=String.fromCharCode(l)}return R}}CharSet.CP437=["\0","âº","â»","â¥","â¦","â£","â ","â¢","â","â","â","â","â","âª","â«","â¼","âº","â","â","â¼","Â¶","Â§","â¬","â¨","â","â","â","â","â","â","â²","â¼"," ","!",'"',"#","$","%","&","'","(",")","*","+",",","-",".","/","0","1","2","3","4","5","6","7","8","9",":",";","<","=",">","?","@","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","[","\\","]","^","_","`","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","{","|","}","~","â","Ã","Ã¼","Ã©","Ã¢","Ã¤","Ã ","Ã¥","Ã§","Ãª","Ã«","Ã¨","Ã¯","Ã®","Ã¬","Ã","Ã","Ã","Ã¦","Ã","Ã´","Ã¶","Ã²","Ã»","Ã¹","Ã¿","Ã","Ã","Â¢","Â£","Â¥","â§","Æ","Ã¡","Ã­","Ã³","Ãº","Ã±","Ã","Âª","Âº","Â¿","â","Â¬","Â½","Â¼","Â¡","Â«","Â»","â","â","â","â","â¤","â¡","â¢","â","â","â£","â","â","â","â","â","â","â","â´","â¬","â","â","â¼","â","â","â","â","â©","â¦","â ","â","â¬","â§","â¨","â¤","â¥","â","â","â","â","â«","âª","â","â","â","â","â","â","â","Î±","Ã","Î","Ï","Î£","Ï","Âµ","Ï","Î¦","Î","Î©","Î´","â","Ï","Îµ","â©","â¡","Â±","â¥","â¤","â ","â¡","Ã·","â","Â°","â","Â·","â","â¿","Â²","â ","Â "];
const DRIVE_CTRLS=["XT","AT","COMPAQ"],DRIVE_TYPES=[{0:[306,2],1:[375,8],2:[306,6],3:[306,4]},{0:[1024,16,21,2048],1:[306,4],2:[615,4],3:[615,6],4:[940,8],5:[940,6],6:[615,4],7:[462,8],8:[733,5],9:[900,15],10:[820,3],11:[855,5],12:[855,7],13:[306,8],14:[733,7],16:[612,4],17:[977,5],18:[977,7],19:[1024,7],20:[733,5],21:[733,7],22:[733,5],23:[306,4]},{0:[1024,16,21,2048],1:[306,4],2:[615,4],3:[615,6],4:[1023,8],5:[940,6],6:[697,5],7:[462,8],8:[925,5],9:[900,15],10:[980,5],11:[925,7],12:[925,9],13:[612,8],14:[980,4],16:[612,4],17:[980,5],18:[966,6],19:[1023,8],20:[733,5],21:[733,7],22:[768,6],23:[771,6],24:[966,14],25:[966,16],26:[1023,14],27:[966,10],28:[771,3],29:[578,4],30:[615,4,25],31:[615,8,25],32:[966,3,34],33:[966,5,34],34:[966,7,34],35:[966,8,34],36:[966,9,34],37:[966,5,34],38:[1023,9,33],39:[1023,11,33],40:[1023,13,33],41:[1023,15,33],42:[1023,16,34],43:[756,4,26],44:[756,2,26],45:[768,4,26],46:[768,2,26],47:[966,5,25]}],Errors={DOS:{INVALID_FUNC:1,FILE_NOT_FOUND:2,PATH_NOT_FOUND:3,TOO_MANY_OPEN_FILES:4,ACCESS_DENIED:5,INVALID_HANDLE:6,MEM_BLOCK_DAMAGED:7,OUT_OF_MEMORY:8,INVALID_MEM_BLOCK:9,INVALID_ENV:10,INVALID_FORMAT:11,INVALID_ACCESS:12,INVALID_DATA:13,INVALID_DRIVE:15}},Interrupts={VIDEO:16,EQUIPMENT:17,MEM_SIZE:18,DISK:19,SERIAL:20,CASSETTE:21,KEYBOARD:22,PARALLEL:23,BASIC:24,BOOTSTRAP:25,TIMER:26,KBD_BREAK:27,TMR_BREAK:28,VID_PARMS:29,DSK_PARMS:30,VID_EXT:31,DOS_EXIT:32,DOS:33,DOS_IDLE:40,DOS_NETBIOS:42,MOUSE:51,ALT_DISK:64,HD0_PARMS:65,VID_PLANAR:66,EGA_GRX:67,HD1_PARMS:70,HD_PARMS:{MAX_CYL:0,MAX_HEADS:2,WP_CYL:5,MAX_ECC:7,DRIVE_CTRL:8,PARK_CYL:12,SEC_TRACK:14},WINCB:{VECTOR:48},WINDBG:{VECTOR:65,OUTCHAR:0,INCHAR:1,OUTSTR:2,ISCHAR:3,OUTSTR16:18,FORCEDGO16:64,LINKMAP:69,UNLINKMAP:70,CHECKMAP:71,AUTOLOAD:72,IS_LOADED:79,LOADED:62342,LOADSEG:80,LOADSEG32:336,FREESEG:82,KRNLVARS:90,RELSEG:92,LOADHIGH:93,EXITCALL:98,LOADDLL:100,DELMODULE:101,UNKNOWN66:102,UNKNOWN67:103,REGDOTCMD:112,CHECKFAULT:127,FAULTTYPE:{V86:1,PM:2,RING0:4,FIRST:8,LAST:16},TRAPFAULT:131,GETSYMBOL:141,FREESEG32:338,CONDBP:61441,FORCEDBP:61442,FORCEDGO:61443,HARDINT1:61444,ENABLED:!0},WINDBGRM:{VECTOR:104,IS_LOADED:67,LOADED:62342,PREP_PMODE:68,FREESEG:72,REMOVESEGS:79,LOADSEG:80,ENABLED:!0},VIDEO_VGA:109,FUNCS:{}};
let Region,BusInfo,BackTrack;Interrupts.BIOS_DATA={1024:["RS232_BASE",8],1032:["PRINTER_BASE",8],1040:["EQUIP_FLAG",2],1042:["MFG_TST",1],1043:["MEMORY_SIZE",2],1045:["MFG_ERR_FLAG",2],1047:["KB_FLAG",1],1048:["KB_FLAG_1",1],1049:["ALT_INPUT",1],1050:["BUFFER_HEAD",2],1052:["BUFFER_TAIL",2],1054:["KB_BUFFER",32],1086:["SEEK_STATUS",1],1087:["MOTOR_STATUS",1],1088:["MOTOR_COUNT",1],1089:["DISKETTE_STATUS",1],1090:["NEC_STATUS",7],1097:["CRT_MODE",1],1098:["CRT_COLS",2],1100:["CRT_LEN",2],1102:["CRT_START",2],1104:["CURSOR_POSN",16],1120:["CURSOR_MODE",2],1122:["ACTIVE_PAGE",1],1123:["ADDR_6845",2],1125:["CRT_MODE_SET",1],1126:["CRT_PALETTE",1],1127:["IO_ROM_INIT",2],1129:["IO_ROM_SEG",2],1131:["INTR_FLAG",1],1132:["TIMER_LOW",2],1134:["TIMER_HIGH",2],1136:["TIMER_OFL",1],1137:["BIOS_BREAK",1],1138:["RESET_FLAG",2],1140:["DISK_STATUS1",1],1141:["HF_NUM",1],1142:["CONTROL_BYTE",1],1143:["PORT_OFF",1],1144:["PRINT_TIM_OUT",4],1148:["RS232_TIM_OUT",4],1152:["BUFFER_START",2],1154:["BUFFER_END",2],1156:["ROWS",1],1157:["POINTS",2],1159:["INFO",1],1160:["INFO_3",3],1163:["LASTRATE",1],1164:["HF_STATUS",1],1165:["HF_ERROR",1],1166:["HF_INT_FLAG",1],1167:["HF_CNTRL",1],1168:["DSK_STATE",4],1172:["DSK_TRK",2],1174:["KB_FLAG_3",1],1175:["KB_FLAG_2",1],1176:["USER_FLAG",2],1178:["USER_FLAG_SEG",2],1180:["RTC_LOW",2],1182:["RTC_HIGH",2],1184:["RTC_WAIT_FLAG",1],1185:["NET",7],1192:["SAVE_PTR",4]},Interrupts.FUNCS[Interrupts.VIDEO]={0:"set mode (@AL)",1:"set cursor type (start=@CH,end=@CL)",2:"set cursor pos (row=@DH,col=@DL,page=@BH)",3:"read cursor pos (page=@BH)",4:"read light pen",5:"set display page (@AL)",6:"scroll up (lines=@AL)",7:"scroll down (lines=@AL)",8:"read character (page=@BH)",9:"write char/attr (@AL,attr=@BL,count=@CX)",10:"write char (@AL,count=@CX)",11:"set palette (id=@BH,color=@BL)",12:"write dot (row=@DX,col=@CX)",13:"read dot (row=@DX,col=@CX)",14:"write tty (@AL)"},Interrupts.FUNCS[Interrupts.DISK]={0:"disk reset",1:"get status",2:"read drive @DL (@CH:@DH:@CL,@AL) into @ES:@BX",3:"write drive @DL (@CH:@DH:@CL,@AL) from @ES:@BX",4:"verify drive @DL (@CH:@DH:@CL,@AL)",5:"format drive @DL using @ES:@BX",8:"read drive @DL parameters",21:"get drive @DL DASD type",22:"get drive @DL change line status",23:"set drive @DL DASD type",24:"set drive @DL media type"},Interrupts.FUNCS[Interrupts.CASSETTE]={128:"open device",129:"close device",130:"program termination",131:"wait @CX:@DXus for event",132:"joystick support",133:"SYSREQ pressed",134:"wait @CX:@DXus",135:"move block (@CX words)",136:"get extended memory size",137:"processor to virtual mode",144:"device busy loop",145:"interrupt complete flag set"},Interrupts.FUNCS[Interrupts.DOS]={0:"terminate program",1:"read character (AL) from stdin with echo",2:"write character #@DL to stdout",3:"read character (AL) from stdaux",4:"write character #@DL to stdaux",5:"write character #@DL to stdprn",6:"direct console output (input if @DL=FF)",7:"direct console input without echo",8:"read character (AL) from stdin without echo",9:"write string $@DS:@DX to stdout",10:"buffered input (DS:DX)",11:"get stdin status",12:"flush buffer and read stdin",13:"disk reset",14:"select default drive @DL",15:"open file using FCB ^@DS:@DX",16:"close file using FCB ^@DS:@DX",17:"find first matching file using FCB ^@DS:@DX",18:"find next matching file using FCB ^@DS:@DX",19:"delete file using FCB ^@DS:@DX",20:"sequential read from file using FCB ^@DS:@DX",21:"sequential write to file using FCB ^@DS:@DX",22:"create or truncate file using FCB ^@DS:@DX",23:"rename file using FCB ^@DS:@DX",25:"get current default drive (AL)",26:"set disk transfer area (DTA=@DS:@DX)",27:"get allocation information for default drive",28:"get allocation information for specific drive @DL",31:"get drive parameter block for default drive",33:"read random record from file using FCB ^@DS:@DX",34:"write random record to file using FCB ^@DS:@DX",35:"get file size using FCB ^@DS:@DX",36:"set random record number for FCB ^@DS:@DX",37:"set address @DS:@DX of interrupt vector @AL",38:"create new PSP at segment @DX",39:"random block read from file using FCB ^@DS:@DX",40:"random block write to file using FCB ^@DS:@DX",41:"parse filename $@DS:@SI into FCB @ES:@DI using @AL",42:"get system date (year=CX, mon=DH, day=DL)",43:"set system date (year=@CX, mon=@DH, day=@DL)",44:"get system time (hour=CH, min=CL, sec=DH, 100ths=DL)",45:"set system time (hour=@CH, min=@CL, sec=@DH, 100ths=@DL)",46:"set verify flag @AL",47:"get disk transfer area (DTA=ES:BX)",48:"get DOS version (AL=major, AH=minor)",49:"terminate and stay resident",50:"get drive parameter block (DPB=DS:BX) for drive @DL",51:"extended break check",52:"get address (ES:BX) of InDOS flag",53:"get address (ES:BX) of interrupt vector @AL",54:"get free disk space of drive @DL",55:"get(0)/set(1) switch character @DL (@AL)",56:"get country-specific information",57:"create subdirectory $@DS:@DX",58:"remove subdirectory $@DS:@DX",59:"set current directory $@DS:@DX",60:"create or truncate file $@DS:@DX with attributes @CX",61:"open file $@DS:@DX with mode @AL",62:"close file @BX",63:"read @CX bytes from file @BX into buffer @DS:@DX",64:"write @CX bytes to file @BX from buffer @DS:@DX",65:"delete file $@DS:@DX",66:"set position @CX:@DX of file @BX relative to @AL",67:"get(0)/set(1) attributes @CX of file $@DS:@DX (@AL)",68:"get device information (IOCTL)",69:"duplicate file handle @BX",70:"force file handle @CX to duplicate file handle @BX",71:"get current directory (DS:SI) for drive @DL",72:"allocate memory segment with @BX paragraphs",73:"free memory segment @ES",74:"resize memory segment @ES to @BX paragraphs",75:"load program $@DS:@DX using parameter block @ES:@BX",76:"terminate with return code @AL",77:"get return code (AL)",78:"find first matching file $@DS:@DX with attributes @CX",79:"find next matching file",80:"set current PSP @BX",81:"get current PSP (bx)",82:"get system variables (ES:BX)",83:"translate BPB @DS:@SI to DPB (ES:BP)",84:"get verify flag (AL)",85:"create child PSP at segment @DX",86:"rename file $@DS:@DX to $@ES:@DI",87:"get(0)/set(1) file @BX date @DX and time @CX (@AL)",88:"get(0)/set(1) memory allocation strategy (@AL)",89:"get extended error information",90:"create temporary file $@DS:@DX with attributes @CX",91:"create file $@DS:@DX with attributes @CX",92:"lock(0)/unlock(1) file @BX region @CX:@DX length @SI:@DI (@AL)",93:"critical error information (@AL)",96:"get fully-qualified filename from $@DS:@SI",99:"get lead byte table (@AL)",108:"extended open file $@DS:@SI"},Interrupts.FUNCS[Interrupts.WINDBG.VECTOR]={79:"check debugger loaded"},Interrupts.VxD={VECTOR:32,VMM:{id:1,fn:["Get_VMM_Version","Get_Cur_VM_Handle","Test_Cur_VM_Handle","Get_Sys_VM_Handle","Test_Sys_VM_Handle","Validate_VM_Handle","Get_VMM_Reenter_Count","Begin_Reentrant_Execution","End_Reentrant_Execution","Install_V86_Break_Point","Remove_V86_Break_Point","Allocate_V86_Call_Back","Allocate_PM_Call_Back","Call_When_VM_Returns","Schedule_Global_Event","Schedule_VM_Event","Call_Global_Event","Call_VM_Event","Cancel_Global_Event","Cancel_VM_Event","Call_Priority_VM_Event","Cancel_Priority_VM_Event","Get_NMI_Handler_Addr","Set_NMI_Handler_Addr","Hook_NMI_Event","Call_When_VM_Ints_Enabled","Enable_VM_Ints","Disable_VM_Ints","Map_Flat","Map_Lin_To_VM_Addr","Adjust_Exec_Priority","Begin_Critical_Section","End_Critical_Section","End_Crit_And_Suspend","Claim_Critical_Section","Release_Critical_Section","Call_When_Not_Critical","Create_Semaphore","Destroy_Semaphore","Wait_Semaphore","Signal_Semaphore","Get_Crit_Section_Status","Call_When_Task_Switched","Suspend_VM","Resume_VM","No_Fail_Resume_VM","Nuke_VM","Crash_Cur_VM","Get_Execution_Focus","Set_Execution_Focus","Get_Time_Slice_Priority","Set_Time_Slice_Priority","Get_Time_Slice_Granularity","Set_Time_Slice_Granularity","Get_Time_Slice_Info","Adjust_Execution_Time","Release_Time_Slice","Wake_Up_VM","Call_When_Idle","Get_Next_VM_Handle","Set_Global_Time_Out","Set_VM_Time_Out","Cancel_Time_Out","Get_System_Time","Get_VM_Exec_Time","Hook_V86_Int_Chain","Get_V86_Int_Vector","Set_V86_Int_Vector","Get_PM_Int_Vector","Set_PM_Int_Vector","Simulate_Int","Simulate_Iret","Simulate_Far_Call","Simulate_Far_Jmp","Simulate_Far_Ret","Simulate_Far_Ret_N","Build_Int_Stack_Frame","Simulate_Push","Simulate_Pop","_HeapAllocate","_HeapReAllocate","_HeapFree","_HeapGetSize","_PageAllocate","_PageReAllocate","_PageFree","_PageLock","_PageUnLock","_PageGetSizeAddr","_PageGetAllocInfo","_GetFreePageCount","_GetSysPageCount","_GetVMPgCount","_MapIntoV86","_PhysIntoV86","_TestGlobalV86Mem","_ModifyPageBits","_CopyPageTable","_LinMapIntoV86","_LinPageLock","_LinPageUnLock","_SetResetV86Pageable","_GetV86PageableArray","_PageCheckLinRange","_PageOutDirtyPages","_PageDiscardPages","_GetNulPageHandle","_GetFirstV86Page","_MapPhysToLinear","_GetAppFlatDSAlias","_SelectorMapFlat","_GetDemandPageInfo","_GetSetPageOutCount","Hook_V86_Page","_Assign_Device_V86_Pages","_DeAssign_Device_V86_Pages","_Get_Device_V86_Pages_Array","MMGR_SetNULPageAddr","_Allocate_GDT_Selector","_Free_GDT_Selector","_Allocate_LDT_Selector","_Free_LDT_Selector","_BuildDescriptorDWORDs","_GetDescriptor","_SetDescriptor","_MMGR_Toggle_HMA","Get_Fault_Hook_Addrs","Hook_V86_Fault","Hook_PM_Fault","Hook_VMM_Fault","Begin_Nest_V86_Exec","Begin_Nest_Exec","Exec_Int","Resume_Exec","End_Nest_Exec","Allocate_PM_App_CB_Area","Get_Cur_PM_App_CB","Set_V86_Exec_Mode","Set_PM_Exec_Mode","Begin_Use_Locked_PM_Stack","End_Use_Locked_PM_Stack","Save_Client_State","Restore_Client_State","Exec_VxD_Int","Hook_Device_Service","Hook_Device_V86_API","Hook_Device_PM_API","System_Control","Simulate_IO","Install_Mult_IO_Handlers","Install_IO_Handler","Enable_Global_Trapping","Enable_Local_Trapping","Disable_Global_Trapping","Disable_Local_Trapping","List_Create","List_Destroy","List_Allocate","List_Attach","List_Attach_Tail","List_Insert","List_Remove","List_Deallocate","List_Get_First","List_Get_Next","List_Remove_First","_AddInstanceItem","_Allocate_Device_CB_Area","_Allocate_Global_V86_Data_Area","_Allocate_Temp_V86_Data_Area","_Free_Temp_V86_Data_Area","Get_Profile_Decimal_Int","Convert_Decimal_String","Get_Profile_Fixed_Point","Convert_Fixed_Point_String","Get_Profile_Hex_Int","Convert_Hex_String","Get_Profile_Boolean","Convert_Boolean_String","Get_Profile_String","Get_Next_Profile_String","Get_Environment_String","Get_Exec_Path","Get_Config_Directory","OpenFile","Get_PSP_Segment","GetDOSVectors","Get_Machine_Info","GetSet_HMA_Info","Set_System_Exit_Code","Fatal_Error_Handler","Fatal_Memory_Error","Update_System_Clock","Test_Debug_Installed","Out_Debug_String","Out_Debug_Chr","In_Debug_Chr","Debug_Convert_Hex_Binary","Debug_Convert_Hex_Decimal","Debug_Test_Valid_Handle","Validate_Client_Ptr","Test_Reenter","Queue_Debug_String","Log_Proc_Call","Debug_Test_Cur_VM","Get_PM_Int_Type","Set_PM_Int_Type","Get_Last_Updated_System_Time","Get_Last_Updated_VM_Exec_Time","Test_DBCS_Lead_Byte","_AddFreePhysPage","_PageResetHandlePAddr","_SetLastV86Page","_GetLastV86Page","_MapFreePhysReg","_UnmapFreePhysReg","_XchgFreePhysReg","_SetFreePhysRegCalBk","Get_Next_Arena","Get_Name_Of_Ugly_TSR","Get_Debug_Options","Set_Physical_HMA_Alias","_GetGlblRng0V86IntBase","_Add_Global_V86_Data_Area","GetSetDetailedVMError","Is_Debug_Chr","Clear_Mono_Screen","Out_Mono_Chr","Out_Mono_String","Set_Mono_Cur_Pos","Get_Mono_Cur_Pos","Get_Mono_Chr","Locate_Byte_In_ROM","Hook_Invalid_Page_Fault","Unhook_Invalid_Page_Fault","Set_Delete_On_Exit_File","Close_VM","Enable_Touch_1st_Meg","Disable_Touch_1st_Meg","Install_Exception_Handler","Remove_Exception_Handler","Get_Crit_Status_No_Block","_GetLastUpdatedThreadExecTime","_Trace_Out_Service","_Debug_Out_Service","_Debug_Flags_Service","VMMAddImportModuleName","VMM_Add_DDB","VMM_Remove_DDB","Test_VM_Ints_Enabled","_BlockOnID","Schedule_Thread_Event","Cancel_Thread_Event","Set_Thread_Time_Out","Set_Async_Time_Out","_AllocateThreadDataSlot","_FreeThreadDataSlot","_CreateMutex","_DestroyMutex","_GetMutexOwner","Call_When_Thread_Switched","VMMCreateThread","_GetThreadExecTime","VMMTerminateThread","Get_Cur_Thread_Handle","Test_Cur_Thread_Handle","Get_Sys_Thread_Handle","Test_Sys_Thread_Handle","Validate_Thread_Handle","Get_Initial_Thread_Handle","Test_Initial_Thread_Handle","Debug_Test_Valid_Thread_Handle","Debug_Test_Cur_Thread","VMM_GetSystemInitState","Cancel_Call_When_Thread_Switched","Get_Next_Thread_Handle","Adjust_Thread_Exec_Priority","_Deallocate_Device_CB_Area","Remove_IO_Handler","Remove_Mult_IO_Handlers","Unhook_V86_Int_Chain","Unhook_V86_Fault","Unhook_PM_Fault","Unhook_VMM_Fault","Unhook_Device_Service","_PageReserve","_PageCommit","_PageDecommit","_PagerRegister","_PagerQuery","_PagerDeregister","_ContextCreate","_ContextDestroy","_PageAttach","_PageFlush","_SignalID","_PageCommitPhys","_Register_Win32_Services","Cancel_Call_When_Not_Critical","Cancel_Call_When_Idle","Cancel_Call_When_Task_Switched","_Debug_Printf_Service","_EnterMutex","_LeaveMutex","Simulate_VM_IO","Signal_Semaphore_No_Switch","_ContextSwitch","_PageModifyPermissions","_PageQuery","_EnterMustComplete","_LeaveMustComplete","_ResumeExecMustComplete","_GetThreadTerminationStatus","_GetInstanceInfo","_ExecIntMustComplete","_ExecVxDIntMustComplete","Begin_V86_Serialization","Unhook_V86_Page","VMM_GetVxDLocationList","VMM_GetDDBList","Unhook_NMI_Event","Get_Instanced_V86_Int_Vector","Get_Set_Real_DOS_PSP","Call_Priority_Thread_Event","Get_System_Time_Address","Get_Crit_Status_Thread","Get_DDB","Directed_Sys_Control","_RegOpenKey","_RegCloseKey","_RegCreateKey","_RegDeleteKey","_RegEnumKey","_RegQueryValue","_RegSetValue","_RegDeleteValue","_RegEnumValue","_RegQueryValueEx","_RegSetValueEx","_CallRing3","Exec_PM_Int","_RegFlushKey","_PageCommitContig","_GetCurrentContext","_LocalizeSprintf","_LocalizeStackSprintf","Call_Restricted_Event","Cancel_Restricted_Event","Register_PEF_Provider","_GetPhysPageInfo","_RegQueryInfoKey","MemArb_Reserve_Pages","Time_Slice_Sys_VM_Idle","Time_Slice_Sleep","Boost_With_Decay","Set_Inversion_Pri","Reset_Inversion_Pri","Release_Inversion_Pri","Get_Thread_Win32_Pri","Set_Thread_Win32_Pri","Set_Thread_Static_Boost","Set_VM_Static_Boost","Release_Inversion_Pri_ID","Attach_Thread_To_Group","Detach_Thread_From_Group","Set_Group_Static_Boost","_GetRegistryPath","_GetRegistryKey","Cleanup_Thread_State","_RegRemapPreDefKey","End_V86_Serialization","_Assert_Range","_Sprintf","_PageChangePager","_RegCreateDynKey","_RegQueryMultipleValues","Boost_Thread_With_VM","Get_Boot_Flags","Set_Boot_Flags","_lstrcpyn","_lstrlen","_lmemcpy","_GetVxDName","Force_Mutexes_Free","Restore_Forced_Mutexes","_AddReclaimableItem","_SetReclaimableItem","_EnumReclaimableItem","Time_Slice_Wake_Sys_VM","VMM_Replace_Global_Environment","Begin_Non_Serial_Nest_V86_Exec","Get_Nest_Exec_Status","Open_Boot_Log","Write_Boot_Log","Close_Boot_Log","EnableDisable_Boot_Log","_Call_On_My_Stack","Get_Inst_V86_Int_Vec_Base","_lstrcmpi","_strupr","Log_Fault_Call_Out","_AtEventTime"]},DEBUG:{id:2,fn:["DEBUG_Get_Version","DEBUG_Fault","DEBUG_CheckFault","_DEBUG_LoadSyms"]},VPICD:{id:3,fn:["VPICD_Get_Version","VPICD_Virtualize_IRQ","VPICD_Set_Int_Request","VPICD_Clear_Int_Request","VPICD_Phys_EOI","VPICD_Get_Complete_Status","VPICD_Get_Status","VPICD_Test_Phys_Request","VPICD_Physically_Mask","VPICD_Physically_Unmask","VPICD_Set_Auto_Masking","VPICD_Get_IRQ_Complete_Status","VPICD_Convert_Handle_To_IRQ","VPICD_Convert_IRQ_To_Int","VPICD_Convert_Int_To_IRQ","VPICD_Call_When_Hw_Int","VPICD_Force_Default_Owner","VPICD_Force_Default_Behavior","VPICD_Auto_Mask_At_Inst_Swap","VPICD_Begin_Inst_Page_Swap","VPICD_End_Inst_Page_Swap","VPICD_Virtual_EOI","VPICD_Get_Virtualization_Count","VPICD_Post_Sys_Critical_Init","VPICD_VM_SlavePIC_Mask_Change"]},VDMAD:{id:4,fn:["VDMAD_Get_Version","VDMAD_Virtualize_Channel","VDMAD_Get_Region_Info","VDMAD_Set_Region_Info","VDMAD_Get_Virt_State","VDMAD_Set_Virt_State","VDMAD_Set_Phys_State","VDMAD_Mask_Channel","VDMAD_UnMask_Channel","VDMAD_Lock_DMA_Region","VDMAD_Unlock_DMA_Region","VDMAD_Scatter_Lock","VDMAD_Scatter_Unlock","VDMAD_Reserve_Buffer_Space","VDMAD_Request_Buffer","VDMAD_Release_Buffer","VDMAD_Copy_To_Buffer","VDMAD_Copy_From_Buffer","VDMAD_Default_Handler","VDMAD_Disable_Translation","VDMAD_Enable_Translation","VDMAD_Get_EISA_Adr_Mode","VDMAD_Set_EISA_Adr_Mode","VDMAD_Unlock_DMA_Region_No_Dirty","VDMAD_Phys_Mask_Channel","VDMAD_Phys_Unmask_Channel","VDMAD_Unvirtualize_Channel","VDMAD_Set_IO_Add","VDMAD_Get_Phys_Count","VDMAD_Get_Phys_Status","VDMAD_Get_Max_Phys_Page","VDMAD_Set_Channel_Callbacks","VDMAD_Get_Virt_Count","VDMAD_Set_Virt_Count"]},VTD:{id:5,fn:["VTD_Get_Version","VTD_Update_System_Clock","VTD_Get_Interrupt_Period","VTD_Begin_Min_Int_Period","VTD_End_Min_Int_Period","VTD_Disable_Trapping","VTD_Enable_Trapping","VTD_Get_Real_Time","VTD_Get_Date_And_Time","VTD_Adjust_VM_Count","VTD_Delay"]},V86MMGR:{id:6,fn:["V86MMGR_Get_Version","V86MMGR_Allocate_V86_Pages","V86MMGR_Set_EMS_XMS_Limits","V86MMGR_Get_EMS_XMS_Limits","V86MMGR_Set_Mapping_Info","V86MMGR_Get_Mapping_Info","V86MMGR_Xlat_API","V86MMGR_Load_Client_Ptr","V86MMGR_Allocate_Buffer","V86MMGR_Free_Buffer","V86MMGR_Get_Xlat_Buff_State","V86MMGR_Set_Xlat_Buff_State","V86MMGR_Get_VM_Flat_Sel","V86MMGR_Map_Pages","V86MMGR_Free_Page_Map_Region","V86MMGR_LocalGlobalReg","V86MMGR_GetPgStatus","V86MMGR_SetLocalA20","V86MMGR_ResetBasePages","V86MMGR_SetAvailMapPgs","V86MMGR_NoUMBInitCalls","V86MMGR_Get_EMS_XMS_Avail","V86MMGR_Toggle_HMA","V86MMGR_Dev_Init","V86MMGR_Alloc_UM_Page"]},PAGESWAP:{id:7,fn:["PageSwap_Get_Version","PageSwap_Invalid_Service1","PageSwap_Invalid_Service2","PageSwap_Invalid_Service3","PageSwap_Invalid_Service4","PageSwap_Invalid_Service5","PageSwap_Test_IO_Valid","PageSwap_Read_Or_Write","PageSwap_Grow_File","PageSwap_Init_File"]},PARITY:{id:8},REBOOT:{id:9,fn:["REBOOT_Get_Version","REBOOT_Enable_Real_Reboot","REBOOT_Disable_Real_Reboot","REBOOT_Processor_Now"]},VDD:{id:10,fn:["VDD_Get_Version","VDD_PIF_State","VDD_Get_GrabRtn","VDD_Hide_Cursor","VDD_Set_VMType","VDD_Get_ModTime","VDD_Set_HCurTrk","VDD_Msg_ClrScrn","VDD_Msg_ForColor","VDD_Msg_BakColor","VDD_Msg_TextOut","VDD_Msg_SetCursPos","VDD_Query_Access","VDD_Check_Update_Soon"]},VSD:{id:11,fn:["VSD_Get_Version","VSD_Bell","VSD_SoundOn","VSD_TakeSoundPort"]},VMD:{id:12,alt:"VMOUSE",fn:["VMD_Get_Version","VMD_Set_Mouse_Type","VMD_Get_Mouse_Owner","VMD_Post_Pointer_Message","VMD_Set_Cursor_Proc","VMD_Call_Cursor_Proc","VMD_Set_Mouse_Data","VMD_Get_Mouse_Data","VMD_Manipulate_Pointer_Message","VMD_Set_Middle_Button","VMD_Enable_Disable_Mouse_Events","VMD_Post_Absolute_Pointer_Message"]},VKD:{id:13,fn:["VKD_Get_Version","VKD_Define_Hot_Key","VKD_Remove_Hot_Key","VKD_Local_Enable_Hot_Key","VKD_Local_Disable_Hot_Key","VKD_Reflect_Hot_Key","VKD_Cancel_Hot_Key_State","VKD_Force_Keys","VKD_Get_Kbd_Owner","VKD_Define_Paste_Mode","VKD_Start_Paste","VKD_Cancel_Paste","VKD_Get_Msg_Key","VKD_Peek_Msg_Key","VKD_Flush_Msg_Key_Queue","VKD_Enable_Keyboard","VKD_Disable_Keyboard","VKD_Get_Shift_State","VKD_Filter_Keyboard_Input","VKD_Put_Byte","VKD_Set_Shift_State"]},VCD:{id:14,fn:["VCD_Get_Version","VCD_Set_Port_Global","VCD_Get_Focus","VCD_Virtualize_Port","VCD_Acquire_Port","VCD_Free_Port","VCD_Acquire_Port_Windows_Style","VCD_Free_Port_Windows_Style","VCD_Steal_Port_Windows_Style","VCD_Find_COM_Index","VCD_Set_Port_Global_Special","VCD_Virtualize_Port_Dynamic","VCD_Unvirtualize_Port_Dynamic"]},VPD:{id:15},BLOCKDEV:{id:16,fn:["BlockDev_Get_Version","BlockDev_Register_Device","BlockDev_Find_Int13_Drive","BlockDev_Get_Device_List","BlockDev_Send_Command","BlockDev_Command_Complete","BlockDev_Synchronous_Command"]},VMCPD:{id:17,fn:["VMCPD_Get_Version","VMCPD_Get_Virt_State","VMCPD_Set_Virt_State","VMCPD_Get_CR0_State","VMCPD_Set_CR0_State","VMCPD_Get_Thread_State","VMCPD_Set_Thread_State","_VMCPD_Get_FP_Instruction_Size","VMCPD_Set_Thread_Precision"]},EBIOS:{id:18,fn:["EBIOS_Get_Version","EBIOS_Get_Unused_Mem"]},BIOSXLAT:{id:19},VNETBIOS:{id:20,fn:["VNETBIOS_Get_Version","VNETBIOS_Register","VNETBIOS_Submit","VNETBIOS_Enum","VNETBIOS_Deregister","VNETBIOS_Register2","VNETBIOS_Map","VNETBIOS_Enum2"]},DOSMGR:{id:21,fn:["DOSMGR_Get_Version","_DOSMGR_Set_Exec_VM_Data","DOSMGR_Copy_VM_Drive_State","_DOSMGR_Exec_VM","DOSMGR_Get_IndosPtr","DOSMGR_Add_Device","DOSMGR_Remove_Device","DOSMGR_Instance_Device","DOSMGR_Get_DOS_Crit_Status","DOSMGR_Enable_Indos_Polling","DOSMGR_BackFill_Allowed","DOSMGR_LocalGlobalReg","DOSMGR_Init_UMB_Area","DOSMGR_Begin_V86_App","DOSMGR_End_V86_App","DOSMGR_Alloc_Local_Sys_VM_Mem","DOSMGR_Grow_CDSs","DOSMGR_Translate_Server_DOS_Call","DOSMGR_MMGR_PSP_Change_Notifier"]},WINLOAD:{id:22},SHELL:{id:23,fn:["SHELL_Get_Version","SHELL_Resolve_Contention","SHELL_Event","SHELL_SYSMODAL_Message","SHELL_Message","SHELL_GetVMInfo","_SHELL_PostMessage","_SHELL_ShellExecute","_SHELL_PostShellMessage","SHELL_DispatchRing0AppyEvents","SHELL_Hook_Properties","SHELL_Unhook_Properties","SHELL_Update_User_Activity","_SHELL_QueryAppyTimeAvailable","_SHELL_CallAtAppyTime","_SHELL_CancelAppyTimeEvent","_SHELL_BroadcastSystemMessage","_SHELL_HookSystemBroadcast","_SHELL_UnhookSystemBroadcast","_SHELL_LocalAllocEx","_SHELL_LocalFree","_SHELL_LoadLibrary","_SHELL_FreeLibrary","_SHELL_GetProcAddress","_SHELL_CallDll","_SHELL_SuggestSingleMSDOSMode","SHELL_CheckHotkeyAllowed","_SHELL_GetDOSAppInfo"]},VMPOLL:{id:24,fn:["VMPoll_Get_Version","VMPoll_Enable_Disable","VMPoll_Reset_Detection","VMPoll_Check_Idle"]},VPROD:{id:25},DOSNET:{id:26,fn:["DOSNET_Get_Version","DOSNET_Send_FILESYSCHANGE","DOSNET_Do_PSP_Adjust"]},VFD:{id:27,fn:["VFD_Get_Version"]},VDD2:{id:28,fn:["VDD2_Get_Version"]},WINDEBUG:{id:29},TSRLOAD:{id:30},BIOSHOOK:{id:31},INT13:{id:32,fn:["Int13_Get_Version","Int13_Device_Registered","Int13_Translate_VM_Int","Int13_Hooking_BIOS_Int","Int13_Unhooking_BIOS_Int"]},PAGEFILE:{id:33,fn:["PageFile_Get_Version","PageFile_Init_File","PageFile_Clean_Up","PageFile_Grow_File","PageFile_Read_Or_Write","PageFile_Cancel","PageFile_Test_IO_Valid","PageFile_Get_Size_Info","PageFile_Set_Async_Manager","PageFile_Call_Async_Manager"]},SCSI:{id:34},MCA_POS:{id:35},SCSIFD:{id:36},VPEND:{id:37},APM:{id:38},VXDLDR:{id:39,fn:["VXDLDR_GetVersion","VXDLDR_LoadDevice","VXDLDR_UnloadDevice","VXDLDR_DevInitSucceeded","VXDLDR_DevInitFailed","VXDLDR_GetDeviceList","VXDLDR_UnloadMe","_PELDR_LoadModule","_PELDR_GetModuleHandle","_PELDR_GetModuleUsage","_PELDR_GetEntryPoint","_PELDR_GetProcAddress","_PELDR_AddExportTable","_PELDR_RemoveExportTable","_PELDR_FreeModule","VXDLDR_Notify","_PELDR_InitCompleted","_PELDR_LoadModuleEx"]},NDIS:{id:40},BIOS_EXT:{id:41,fn:["_BIOSEXTGetVersion","_BIOSEXTGetHeader","_BIOSEXTCallBIOS"]},VWIN32:{id:42},VCOMM:{id:43,fn:["VCOMM_Get_Version","_VCOMM_Register_Port_Driver","_VCOMM_Acquire_Port","_VCOMM_Release_Port","_VCOMM_OpenComm","_VCOMM_SetCommState","_VCOMM_GetCommState","_VCOMM_SetupComm","_VCOMM_TransmitCommChar","_VCOMM_CloseComm","_VCOMM_GetCommQueueStatus","_VCOMM_ClearCommError","_VCOMM_GetModemStatus","_VCOMM_GetCommProperties","_VCOMM_EscapeCommFunction","_VCOMM_PurgeComm","_VCOMM_SetCommEventMask","_VCOMM_GetCommEventMask","_VCOMM_WriteComm","_VCOMM_ReadComm","_VCOMM_EnableCommNotification","_VCOMM_GetLastError","_VCOMM_Steal_Port","_VCOMM_SetReadCallBack","_VCOMM_SetWriteCallBack","_VCOMM_Add_Port","_VCOMM_GetSetCommTimeouts","_VCOMM_SetWriteRequest","_VCOMM_SetReadRequest","_VCOMM_Dequeue_Request","_VCOMM_Enumerate_DevNodes","VCOMM_Map_Win32DCB_To_Ring0","VCOMM_Map_Ring0DCB_To_Win32","_VCOMM_Get_Contention_Handler","_VCOMM_Map_Name_To_Resource"]},SPOOLER:{id:44},WIN32S:{id:45},DEBUGCMD:{id:46},CONFIGMG:{id:51,fn:["_CONFIGMG_Get_Version","_CONFIGMG_Initialize","_CONFIGMG_Locate_DevNode","_CONFIGMG_Get_Parent","_CONFIGMG_Get_Child","_CONFIGMG_Get_Sibling","_CONFIGMG_Get_Device_ID_Size","_CONFIGMG_Get_Device_ID","_CONFIGMG_Get_Depth","_CONFIGMG_Get_Private_DWord","_CONFIGMG_Set_Private_DWord","_CONFIGMG_Create_DevNode","_CONFIGMG_Query_Remove_SubTree","_CONFIGMG_Remove_SubTree","_CONFIGMG_Register_Device_Driver","_CONFIGMG_Register_Enumerator","_CONFIGMG_Register_Arbitrator","_CONFIGMG_Deregister_Arbitrator","_CONFIGMG_Query_Arbitrator_Free_Size","_CONFIGMG_Query_Arbitrator_Free_Data","_CONFIGMG_Sort_NodeList","_CONFIGMG_Yield","_CONFIGMG_Lock","_CONFIGMG_Unlock","_CONFIGMG_Add_Empty_Log_Conf","_CONFIGMG_Free_Log_Conf","_CONFIGMG_Get_First_Log_Conf","_CONFIGMG_Get_Next_Log_Conf","_CONFIGMG_Add_Res_Des","_CONFIGMG_Modify_Res_Des","_CONFIGMG_Free_Res_Des","_CONFIGMG_Get_Next_Res_Des","_CONFIGMG_Get_Performance_Info","_CONFIGMG_Get_Res_Des_Data_Size","_CONFIGMG_Get_Res_Des_Data","_CONFIGMG_Process_Events_Now","_CONFIGMG_Create_Range_List","_CONFIGMG_Add_Range","_CONFIGMG_Delete_Range","_CONFIGMG_Test_Range_Available","_CONFIGMG_Dup_Range_List","_CONFIGMG_Free_Range_List","_CONFIGMG_Invert_Range_List","_CONFIGMG_Intersect_Range_List","_CONFIGMG_First_Range","_CONFIGMG_Next_Range","_CONFIGMG_Dump_Range_List","_CONFIGMG_Load_DLVxDs","_CONFIGMG_Get_DDBs","_CONFIGMG_Get_CRC_CheckSum","_CONFIGMG_Register_DevLoader","_CONFIGMG_Reenumerate_DevNode","_CONFIGMG_Setup_DevNode","_CONFIGMG_Reset_Children_Marks","_CONFIGMG_Get_DevNode_Status","_CONFIGMG_Remove_Unmarked_Children","_CONFIGMG_ISAPNP_To_CM","_CONFIGMG_CallBack_Device_Driver","_CONFIGMG_CallBack_Enumerator","_CONFIGMG_Get_Alloc_Log_Conf","_CONFIGMG_Get_DevNode_Key_Size","_CONFIGMG_Get_DevNode_Key","_CONFIGMG_Read_Registry_Value","_CONFIGMG_Write_Registry_Value","_CONFIGMG_Disable_DevNode","_CONFIGMG_Enable_DevNode","_CONFIGMG_Move_DevNode","_CONFIGMG_Set_Bus_Info","_CONFIGMG_Get_Bus_Info","_CONFIGMG_Set_HW_Prof","_CONFIGMG_Recompute_HW_Prof","_CONFIGMG_Query_Change_HW_Prof","_CONFIGMG_Get_Device_Driver_Private_DWord","_CONFIGMG_Set_Device_Driver_Private_DWord","_CONFIGMG_Get_HW_Prof_Flags","_CONFIGMG_Set_HW_Prof_Flags","_CONFIGMG_Read_Registry_Log_Confs","_CONFIGMG_Run_Detection","_CONFIGMG_Call_At_Appy_Time","_CONFIGMG_Fail_Change_HW_Prof","_CONFIGMG_Set_Private_Problem","_CONFIGMG_Debug_DevNode","_CONFIGMG_Get_Hardware_Profile_Info","_CONFIGMG_Register_Enumerator_Function","_CONFIGMG_Call_Enumerator_Function","_CONFIGMG_Add_ID","_CONFIGMG_Find_Range","_CONFIGMG_Get_Global_State","_CONFIGMG_Broadcast_Device_Change_Message","_CONFIGMG_Call_DevNode_Handler","_CONFIGMG_Remove_Reinsert_All"]},DWCFGMG:{id:52},SCSIPORT:{id:53},VFBACKUP:{id:54,fn:["VFBACKUP_Get_Version","VFBACKUP_Lock_NEC","VFBACKUP_UnLock_NEC","VFBACKUP_Register_NEC","VFBACKUP_Register_VFD","VFBACKUP_Lock_All_Ports"]},ENABLE:{id:55,fn:["VMINI_GetVersion","VMINI_Update","VMINI_Status","VMINI_DisplayError","VMINI_SetTimeStamp","VMINI_Siren","VMINI_RegisterAccess","VMINI_GetData","VMINI_ShutDownItem","VMINI_RegisterSK"]},VCOND:{id:56,fn:["VCOND_Get_Version","VCOND_Launch_ConApp_Inherited"]},ISAPNP:{id:60},BIOS:{id:61,fn:["_BIOSGetVersion","_BIOSSoftUndock","_BIOSGetCapabilities","_BIOSGetAPMTable"]},IFSMGR:{id:64,fn:["IFSMgr_Get_Version","IFSMgr_RegisterMount","IFSMgr_RegisterNet","IFSMgr_RegisterMailSlot","IFSMgr_Attach","IFSMgr_Detach","IFSMgr_Get_NetTime","IFSMgr_Get_DOSTime","IFSMgr_SetupConnection","IFSMgr_DerefConnection","IFSMgr_ServerDOSCall","IFSMgr_CompleteAsync","IFSMgr_RegisterHeap","IFSMgr_GetHeap","IFSMgr_RetHeap","IFSMgr_CheckHeap","IFSMgr_CheckHeapItem","IFSMgr_FillHeapSpare","IFSMgr_Block","IFSMgr_Wakeup","IFSMgr_Yield","IFSMgr_SchedEvent","IFSMgr_QueueEvent","IFSMgr_KillEvent","IFSMgr_FreeIOReq","IFSMgr_MakeMailSlot","IFSMgr_DeleteMailSlot","IFSMgr_WriteMailSlot","IFSMgr_PopUp","IFSMgr_printf","IFSMgr_AssertFailed","IFSMgr_LogEntry","IFSMgr_DebugMenu","IFSMgr_DebugVars","IFSMgr_GetDebugString","IFSMgr_GetDebugHexNum","IFSMgr_NetFunction","IFSMgr_DoDelAllUses","IFSMgr_SetErrString","IFSMgr_GetErrString","IFSMgr_SetReqHook","IFSMgr_SetPathHook","IFSMgr_UseAdd","IFSMgr_UseDel","IFSMgr_InitUseAdd","IFSMgr_ChangeDir","IFSMgr_DelAllUses","IFSMgr_CDROM_Attach","IFSMgr_CDROM_Detach","IFSMgr_Win32DupHandle","IFSMgr_Ring0_FileIO","IFSMgr_Win32_Get_Ring0_Handle","IFSMgr_Get_Drive_Info","IFSMgr_Ring0GetDriveInfo","IFSMgr_BlockNoEvents","IFSMgr_NetToDosTime","IFSMgr_DosToNetTime","IFSMgr_DosToWin32Time","IFSMgr_Win32ToDosTime","IFSMgr_NetToWin32Time","IFSMgr_Win32ToNetTime","IFSMgr_MetaMatch","IFSMgr_TransMatch","IFSMgr_CallProvider","UniToBCS","UniToBCSPath","BCSToUni","UniToUpper","UniCharToOEM","CreateBasis","MatchBasisName","AppendBasisTail","FcbToShort","ShortToFcb","IFSMgr_ParsePath","Query_PhysLock","_VolFlush","NotifyVolumeArrival","NotifyVolumeRemoval","QueryVolumeRemoval","IFSMgr_FSDUnmountCFSD","IFSMgr_GetConversionTablePtrs","IFSMgr_CheckAccessConflict","IFSMgr_LockFile","IFSMgr_UnlockFile","IFSMgr_RemoveLocks","IFSMgr_CheckLocks","IFSMgr_CountLocks","IFSMgr_ReassignLockFileInst","IFSMgr_UnassignLockList","IFSMgr_MountChildVolume","IFSMgr_UnmountChildVolume","IFSMgr_SwapDrives","IFSMgr_FSDMapFHtoIOREQ","IFSMgr_FSDParsePath","IFSMgr_FSDAttachSFT","IFSMgr_GetTimeZoneBias","IFSMgr_PNPEvent","IFSMgr_RegisterCFSD","IFSMgr_Win32MapExtendedHandleToSFT","IFSMgr_DbgSetFileHandleLimit","IFSMgr_Win32MapSFTToExtendedHandle","IFSMgr_FSDGetCurrentDrive","IFSMgr_InstallFileSystemApiHook","IFSMgr_RemoveFileSystemApiHook","IFSMgr_RunScheduledEvents","IFSMgr_CheckDelResource","IFSMgr_Win32GetVMCurdir","IFSMgr_SetupFailedConnection","_GetMappedErr","ShortToLossyFcb","IFSMgr_GetLockState","BcsToBcs","IFSMgr_SetLoopback","IFSMgr_ClearLoopback","IFSMgr_ParseOneElement","BcsToBcsUpper"]},VCDFSD:{id:65,fn:["_VCDFSD_Get_Version","_VCDFSD_GetCDFSInfo","_VCDFSD_Hook","_VCDFSD_Unhook"]},MRCI2:{id:66,fn:["MRCI_Get_Version","_MRCI_Fast_Compress","_MRCI_Fast_Decompress"]},PCI:{id:67},PELOADER:{id:68},EISA:{id:69},DRAGCLI:{id:70},DRAGSRV:{id:71},PERF:{id:72,fn:["PERF_Get_Version","PERF_Server_Register","PERF_Server_Deregister","PERF_Server_Add_Stat","PERF_Server_Remove_Stat"]},AWREDIR:{id:73},ETEN:{id:96},CHBIOS:{id:97},VMSGD:{id:98},VPPID:{id:99},VIME:{id:100,fn:["VIME_Register_UI","VIME_Control_IME"]},VHBIOSD:{id:101}};class Color{constructor(V,R,U,l){this.rgb=[V,R,U,l],this.sValue=null,void 0===V&&this.randomize()}getRandom(V){return Math.random()*(V||256)|0}randomize(){this.rgb[0]=this.getRandom(),this.rgb[1]=this.getRandom(),this.rgb[2]=this.getRandom(),this.rgb[3]=255,this.sValue=null}toString(){return this.sValue||(this.sValue="#"+StrLib.toHex(this.rgb[0],2)+StrLib.toHex(this.rgb[1],2)+StrLib.toHex(this.rgb[2],2)),this.sValue}}class Rectangle{constructor(V,R,U,l){this.x=V,this.y=R,this.cx=U,this.cy=l}contains(V,R){return V>=this.x&&V<this.x+this.cx&&R>=this.y&&R<this.y+this.cy}subDivide(V,R,U){let l;return void 0===U&&(U=V>=R>>2),U?(l=new Rectangle(this.x,this.y,this.cx,this.cy*V/R|0),this.y+=l.cy,this.cy-=l.cy):(l=new Rectangle(this.x,this.y,this.cx*V/R|0,this.cy),this.x+=l.cx,this.cx-=l.cx),l}drawWith(V,R){R||(R=new Color),V.strokeStyle="black",V.strokeRect(this.x,this.y,this.cx,this.cy),V.fillStyle="string"==typeof R?R:R.toString(),V.fillRect(this.x,this.y,this.cx,this.cy)}}class HTMLLED{constructor(V,R){this.active=!1,this.control=V,this.colorActive=null,this.color=V.style.backgroundColor,this.setColor(R),this.draw()}draw(){this.colorActive!=this.color?(this.colorActive=this.color,this.control.style.backgroundColor=this.color||Panel.COLOR.BLACK):this.active||(this.color=null)}setColor(V){V?(this.color=V,this.active=!0):this.active=!1}}class Panel extends Component{static COLOR={BLACK:"#000000",RED:"#ff0000",BLUE:"#0000ff",GREEN:"#00ff00"};static STATE={NONE:Panel.COLOR.BLACK,WRITE:Panel.COLOR.RED,READ:Panel.COLOR.GREEN,SEEK:Panel.COLOR.BLUE};static LIVECANVAS={CX:1280,CY:720,FONT:{CY:18,FACE:"Monaco, Lucida Console, Courier New"}};static LIVEMEM={CX:3*Panel.LIVECANVAS.CX>>2,CY:Panel.LIVECANVAS.CY};static LIVEREGS={CX:Panel.LIVECANVAS.CX-Panel.LIVEMEM.CX,CY:Panel.LIVECANVAS.CY,COLOR:"black"};static LIVEDUMP={CX:Panel.LIVECANVAS.CX-Panel.LIVEMEM.CX,CY:Panel.LIVECANVAS.CY>>1};static REGION={MASK:32767,BTMOD_SHIFT:15,TYPE_SHIFT:16};static UPDATES_PER_SECOND=10;constructor(V){super("Panel",V),this.leds={},this.cLEDs=0,this.canvas=null,this.lockMouse=-1,this.fMouseDown=!1,this.xMouse=this.yMouse=-1,this.timer=-1,this.busInfo=null,this.fVisual=!1}initBus(V,R,U,l){this.cmp=V,this.bus=R,this.cpu=U,this.dbg=l,this.kbd=V.getMachineComponent("Keyboard"),this.startTimer()}setBinding(V,R,U,l){if(this.cmp&&this.cmp.setBinding(V,R,U,l))return!0;if(this.cpu&&this.cpu.setBinding(V,R,U,l))return!0;if(this.kbd&&this.kbd.setBinding(V,R,U,l))return!0;if(DEBUGGER&&this.dbg&&this.dbg.setBinding(V,R,U,l))return!0;if("led"==V.substr(-3,3))return this.leds[R]=new HTMLLED(U,l),this.cLEDs++,this.startTimer(),!0;if(!this.canvas&&"canvas"==V){this.fVisual=!0,this.canvas=U,this.context=this.canvas.getContext("2d"),WebLib.getUserAgent().indexOf("MSIE")>=0&&(this.canvas.onresize=(e=this.canvas,t=this.canvas.width,T=this.canvas.height,function(){e.style.height=(e.clientWidth*T/t|0)+"px"}),this.canvas.onresize(null)),this.xMem=this.yMem=0,this.cxMem=this.canvas.width*Panel.LIVEMEM.CX/Panel.LIVECANVAS.CX|0,this.cyMem=this.canvas.height,this.xReg=this.cxMem,this.yReg=0,this.cxReg=this.canvas.width-this.cxMem,this.cyReg=this.canvas.height,this.xDump=this.xReg,this.yDump=this.canvas.height*(Panel.LIVEREGS.CY-Panel.LIVEDUMP.CY)/Panel.LIVECANVAS.CY|0,this.cxDump=this.cxReg,this.cyDump=this.canvas.height*Panel.LIVEDUMP.CY/Panel.LIVECANVAS.CY|0,this.canvasLiveMem=document.createElement("canvas"),this.canvasLiveMem.width=Panel.LIVEMEM.CX,this.canvasLiveMem.height=Panel.LIVEMEM.CY,this.contextLiveMem=this.canvasLiveMem.getContext("2d"),this.imageLiveMem=this.contextLiveMem.createImageData(this.canvasLiveMem.width,this.canvasLiveMem.height),this.canvasLiveRegs=document.createElement("canvas"),this.canvasLiveRegs.width=Panel.LIVEREGS.CX,this.canvasLiveRegs.height=Panel.LIVEREGS.CY,this.contextLiveRegs=this.canvasLiveRegs.getContext("2d");let V=this;return this.canvas.addEventListener("mousemove",(function(R){V.moveMouse(R)}),!1),this.canvas.addEventListener("mousedown",(function(R){V.clickMouse(R,!0)}),!1),this.canvas.addEventListener("mouseup",(function(R){V.clickMouse(R,!1)}),!1),this.fRedraw=!0,this.startTimer(),!0}var e,t,T;return super.setBinding(V,R,U,l)}setLED(V,R){let U=this.leds[V];U&&U.setColor(R)}startTimer(){if(this.timer<0&&(this.cLEDs||this.canvas)&&this.cpu){let V=this;this.timer=this.cpu.addTimer(this.id,(function(){V.updateAnimation()}),1e3/Panel.UPDATES_PER_SECOND)}}powerUp(V,R){return R||Panel.init(),this.canvas&&(this.fRedraw=!0),!0}powerDown(V,R){return!0}clickMouse(V,R){V.button||(this.lockMouse=R?0:-1,this.fMouseDown=R,this.updateMouse(V,R))}moveMouse(V){this.updateMouse(V)}updateMouse(V,R){let U=Panel.LIVECANVAS.CX/this.canvas.offsetWidth,l=Panel.LIVECANVAS.CY/this.canvas.offsetHeight,e=this.canvas.getBoundingClientRect(),t=(V.clientX-e.left)*U|0,T=(V.clientY-e.top)*l|0;if(null==R&&(this.lockMouse||(this.lockMouse=Math.abs(this.xMouse-t)>Math.abs(this.yMouse-T)?1:2),1==this.lockMouse?T=this.yMouse:2==this.lockMouse&&(t=this.xMouse)),this.xMouse=t,this.yMouse=T,MAXDEBUG&&this.printf(MESSAGE.LOG,"Panel.moveMouse(%d,%d)\n",t,T),t>=0&&t<Panel.LIVECANVAS.CX&&T>=0&&T<Panel.LIVECANVAS.CY){let V=this.findAddress(t,T);V!==X86.ADDR_INVALID&&(V&=-16,V!=this.addrDumpLast&&(this.dumpMemory(V,!0),this.addrDumpLast=V))}}findAddress(V,R){if(V<Panel.LIVEMEM.CX&&this.busInfo&&this.busInfo.aRects){let U,l;for(U=0;U<this.busInfo.aRects.length;U++)if(l=this.busInfo.aRects[U],l.contains(V,R)){V-=l.x,R-=l.y;let e=this.busInfo.aRegions[U],t=UsrLib.getBitField(Busx86.BlockInfo.num,this.busInfo.aBlocks[e.iBlock]),T=t*this.bus.nBlockSize,k=(t+e.cBlocks)*this.bus.nBlockSize-1;return R>0&&(T+=l.cx*(R-1)*this.ratioMemoryToPixels),T+=V*this.ratioMemoryToPixels,T|=0,T>k&&(T=k),MAXDEBUG&&this.printf(MESSAGE.LOG,"Panel.findAddress(%d,%d) found type %s, address %#010x\n",V,R,Memoryx86.TYPE.NAMES[e.type],T),T}}return X86.ADDR_INVALID}updateAnimation(){for(let V in this.leds){this.leds[V].draw()}if(this.fRedraw){if(this.initPen(10,Panel.LIVECANVAS.FONT.CY,this.canvasLiveMem,this.contextLiveMem,this.canvas.style.color),this.fVisual){if(DEBUG&&this.printf(MESSAGE.LOG,"begin scanMemory()\n"),this.busInfo=this.bus.scanMemory(this.busInfo),this.ratioMemoryToPixels=this.busInfo.cBlocks*this.bus.nBlockSize/(Panel.LIVEMEM.CX*Panel.LIVEMEM.CY),this.findRegions()){let V,R,U=new Rectangle(0,0,this.canvasLiveMem.width,this.canvasLiveMem.height);this.busInfo.aRects=[];let l=this.busInfo.cBlocks;for(V=0;V<this.busInfo.cRegions;V++){let e=this.busInfo.aRegions[V].cBlocks;this.busInfo.aRects.push(R=U.subDivide(e,l,!V)),MAXDEBUG&&this.printf(MESSAGE.LOG,"region %d rectangle (x=%d,y=%d cx=%d,cy=%d)\n",V,R.x,R.y,R.cx,R.cy),l-=e}for(V=0;V<this.busInfo.aRects.length;V++){let U=this.busInfo.aRegions[V];R=this.busInfo.aRects[V],R.drawWith(this.contextLiveMem,Memoryx86.TYPE.COLORS[U.type]),this.centerPen(R),this.centerText(Memoryx86.TYPE.NAMES[U.type]+" ("+(U.cBlocks*this.bus.nBlockSize/1024|0)+"Kb)")}}DEBUG&&this.printf(MESSAGE.LOG,"end scanMemory(): %d total bytes, %d total blocks, %d total regions\n",this.busInfo.cbTotal,this.busInfo.cBlocks,this.busInfo.cRegions)}else this.drawText("This space intentionally left blank");this.context.drawImage(this.canvasLiveMem,0,0,this.canvasLiveMem.width,this.canvasLiveMem.height,this.xMem,this.yMem,this.cxMem,this.cyMem),this.fRedraw=!1}}updateStatus(V){this.canvas&&(this.dumpRegisters(),this.updateAnimation())}findRegions(){let V=0;this.busInfo.cRegions=0,this.busInfo.aRegions||(this.busInfo.aRegions=[]);let R=-1,U=0,l=0,e=0,t=-1;for(;U<this.busInfo.cBlocks;U++){let T=this.busInfo.aBlocks[U],k=UsrLib.getBitField(Busx86.BlockInfo.type,T),F=UsrLib.getBitField(Busx86.BlockInfo.num,T);if(k!=R||F!=t+1){let t=U-l;t&&(V+=this.addRegion(e,l,t,R)),R=k,l=U,e=F<<this.bus.nBlockShift}t=F}V+=this.addRegion(e,l,U-l,R);let T=this.busInfo.checksumRegions!=V;return this.busInfo.checksumRegions=V,T}addRegion(V,R,U,l){return DEBUG&&this.printf(MESSAGE.LOG,"region %d (addr %#010x, type %s) contains %d blocks\n",this.busInfo.cRegions,V,Memoryx86.TYPE.NAMES[l],U),this.busInfo.aRegions[this.busInfo.cRegions++]={iBlock:R,cBlocks:U,type:l},UsrLib.initBitFields(Busx86.BlockInfo,R,U,0,l)}dumpRegisters(){if(this.context&&this.canvasLiveRegs&&this.contextLiveRegs){let V,R=this.cpu,U=0,l=0,e=this.canvasLiveRegs.width,t=this.canvasLiveRegs.height;this.contextLiveRegs.fillStyle=Panel.LIVEREGS.COLOR,this.contextLiveRegs.fillRect(U,l,e,t),this.initPen(U+10,l+Panel.LIVECANVAS.FONT.CY,this.canvasLiveRegs,this.contextLiveRegs,this.canvas.style.color),this.initCols(3),this.drawText("CPU"),this.drawText("Target"),this.drawText("Current"),this.skipLines(),this.drawText(R.model),this.drawText(R.getSpeedTarget()),this.drawText(R.getSpeedCurrent()),this.skipLines(2),this.initCols(8),this.initNumberFormat(16,R.model<X86.MODEL_80386?4:8),this.drawText("AX",R.regEAX,2),this.drawText("DS",R.getDS(),0,1),this.drawText("DX",R.regEDX,2),this.drawText("SI",R.regESI,0,1.5),this.drawText("BX",R.regEBX,2),this.drawText("ES",R.getES(),0,1),this.drawText("CX",R.regECX,2),this.drawText("DI",R.regEDI,0,1.5),this.drawText("CS",R.getCS(),2),this.drawText("SS",R.getSS(),0,1),this.drawText("IP",R.getIP(),2),this.drawText("SP",R.getSP(),0,1.5),this.drawText("PS",V=R.getPS(),2),this.drawText("BP",R.regEBP,0,1.5),R.model>=X86.MODEL_80386&&(this.drawText("FS",R.getFS(),2),this.drawText("CR0",R.regCR0,0,1),this.drawText("GS",R.getGS(),2),this.drawText("CR3",R.regCR3,0,1.5)),this.initCols(9),this.drawText("V"+(V&X86.PS.OF?1:0)),this.drawText("D"+(V&X86.PS.DF?1:0)),this.drawText("I"+(V&X86.PS.IF?1:0)),this.drawText("T"+(V&X86.PS.TF?1:0)),this.drawText("S"+(V&X86.PS.SF?1:0)),this.drawText("Z"+(V&X86.PS.ZF?1:0)),this.drawText("A"+(V&X86.PS.AF?1:0)),this.drawText("P"+(V&X86.PS.PF?1:0)),this.drawText("C"+(V&X86.PS.CF?1:0),0,2),this.dumpMemory(this.addrDumpLast),this.context.drawImage(this.canvasLiveRegs,U,l,e,t,this.xReg,this.yReg,this.cxReg,this.cyReg)}}dumpMemory(V,R){if(this.context&&this.canvasLiveRegs&&this.contextLiveRegs){let U=0,l=Panel.LIVEREGS.CY-Panel.LIVEDUMP.CY,e=this.canvasLiveRegs.width,t=Panel.LIVEDUMP.CY;if(this.contextLiveRegs.fillStyle=Panel.LIVEREGS.COLOR,this.contextLiveRegs.fillRect(U,l,e,t),this.initPen(U+10,l+Panel.LIVECANVAS.FONT.CY,this.canvasLiveRegs,this.contextLiveRegs,this.canvas.style.color),this.initCols(24),null==V)this.drawText("Mouse over memory to dump");else{this.drawText(StrLib.toHexLong(V),null,0,1);for(let R=1;R<=16;R++){let R="";for(let U=1;U<=8;U++){let U=this.bus.getByteDirect(V++);this.drawText(StrLib.toHex(U,2),null,1),R+=U>=32&&U<128?String.fromCharCode(U):"."}this.drawText(R,null,0,1)}}R&&this.context.drawImage(this.canvasLiveRegs,U,l,e,t,this.xDump,this.yDump,this.cxDump,this.cyDump)}}initPen(V,R,U,l,e,t,T){this.setPen(this.xLeftMargin=V,R),this.heightText=this.heightDefault=t||Panel.LIVECANVAS.FONT.CY,T||(T=this.fontDefault||this.heightDefault+"px "+Panel.LIVECANVAS.FONT.FACE),this.fontText=this.fontDefault=T,U&&(this.canvasText=U),l&&(this.contextText=l,this.colorText=e||"white")}setPen(V,R){this.xText=V,this.yText=R}centerPen(V){this.fontText=this.fontDefault,this.heightText=this.heightDefault;let R=V.x+(V.cx>>1),U=V.y+(V.cy>>1),l=V.cy;V.cx<V.cy&&(l=V.cx,this.fVerticalText=!0,this.contextText.save(),this.contextText.translate(R,U),this.contextText.rotate(-Math.PI/2),R=U=0),l<this.heightText&&(this.heightText=l,this.fontText=this.heightText+"px "+Panel.LIVECANVAS.FONT.FACE),this.setPen(R,U)}initCols(V){this.cxColumn=this.canvasText.width/V|0}skipCols(V){this.xText+=this.cxColumn*V}skipLines(V){this.xText=this.xLeftMargin,this.yText+=(this.heightText+2)*(V||1)}initNumberFormat(V,R){this.nDefaultBase=V,this.nDefaultDigits=R}drawText(V,R,U,l){if(this.contextText.font=this.fontText,this.contextText.fillStyle=this.colorText,this.contextText.fillText(V,this.xText,this.yText),this.xText+=this.cxColumn,null!=R){let V;16!=this.nDefaultBase?V=R.toString():(V=this.nDefaultDigits<8?"0x":"",V+=StrLib.toHex(R,this.nDefaultDigits)),this.contextText.fillText(V,this.xText,this.yText),this.xText+=this.cxColumn}U&&this.skipCols(U),l&&this.skipLines(l)}centerText(V){this.contextText.font=this.fontText;let R=this.contextText.measureText(V);this.xText-=R.width>>1,this.yText+=(this.heightText>>1)-2,this.drawText(V),this.fVerticalText&&(this.contextText.restore(),this.fVerticalText=!1)}static init(){let V=!1,R=Component.getElementsByClass(APPCLASS,"panel");for(let U=0;U<R.length;U++){let l=R[U],e=Component.getComponentParms(l),t=Component.getComponentByID(e.id,!1);t||(V=!0,t=new Panel(e)),Component.bindComponentControls(t,l,APPCLASS),V&&t.setReady()}if(!V){let V=Component.getMachines();for(let R in V){let U=V[+R]+".panel",l=Component.getComponentByType("Panel",U);if(!l){l=new Panel({id:U}),l.setReady();break}}}}}WebLib.onInit(Panel.init);class Controller{getMemoryAccess(){return[]}getMemoryBuffer(V){return[]}}class Busx86 extends Component{static BTINFO={SLOT_MAX:32768,SLOT_SHIFT:16,TYPE_DATA:32768,TYPE_ADDSUB:16384,TYPE_MULDIV:8192,TYPE_LOGICAL:4096,TYPE_READ:2048,TYPE_WRITE:1024,TYPE_COUNT_INC:512,TYPE_COUNT_MAX:32256,TYPE_MASK:65024,TYPE_SHIFT:9,OFF_MAX:512,OFF_MASK:511};static ERROR={ADD_MEM_INUSE:1,ADD_MEM_BADRANGE:2,SET_MEM_NOCTRL:3,SET_MEM_BADRANGE:4,REM_MEM_BADRANGE:5};static BlockInfo=UsrLib.defineBitFields({num:20,count:8,btmod:1,type:3});constructor(V,R,U){super("Busx86",V),this.cpu=R,this.dbg=U,this.nBusWidth=+V.busWidth||20,this.addrTotal=Math.pow(2,this.nBusWidth),this.nBusLimit=this.nBusMask=this.addrTotal-1|0,this.nBlockShift=PAGEBLOCKS||this.nBusWidth<=20?12:this.nBusWidth<=24?14:15,this.nBlockSize=1<<this.nBlockShift,this.nBlockLen=this.nBlockSize>>2,this.nBlockLimit=this.nBlockSize-1,this.nBlockTotal=this.addrTotal/this.nBlockSize|0,this.nBlockMask=this.nBlockTotal-1,this.aPortInputNotify=[],this.aPortOutputNotify=[],this.fPortInputBreakAll=this.fPortOutputBreakAll=!1,this.aPortInputWidth=[],this.aPortOutputWidth=[],this.initMemory(),BACKTRACK&&(this.abtObjects=[],this.cbtDeletions=0,this.ibtLastAlloc=-1,this.ibtLastDelete=0),this.setReady()}initMemory(){let V=new Memoryx86;V.copyBreakpoints(this.dbg),this.aMemBlocks=new Array(this.nBlockTotal);for(let R=0;R<this.nBlockTotal;R++)this.aMemBlocks[R]=V;this.cpu.initMemory(this.aMemBlocks,this.nBlockShift),this.cpu.setAddressMask(this.nBusMask)}reset(){this.setA20(!0),BACKTRACK&&(this.ibtLastDelete=0)}powerUp(V,R){return R||this.reset(),!0}addMemory(V,R,U,l){let e=V,t=R,T=e>>>this.nBlockShift;for(;t>0&&T<this.aMemBlocks.length;){let V=this.aMemBlocks[T],R=T*this.nBlockSize,k=this.nBlockSize-(e-R);if(k>t&&(k=t),V&&V.size){if(V.type==U&&V.controller==l){if(e+t<=V.addr)return V.used+=V.addr-e,V.addr=e,!0;if(e>=V.addr+V.used){let U=V.size-(e-R);U>t&&(U=t),V.used=e-V.addr+U,e=R+this.nBlockSize,t-=U,T++;continue}}return this.reportError(Busx86.ERROR.ADD_MEM_INUSE,e,t)}let F=new Memoryx86(e,k,this.nBlockSize,U,l);F.copyBreakpoints(this.dbg,V),this.aMemBlocks[T++]=F,e=R+this.nBlockSize,t-=k}if(t<=0){if(this.cpu.flushPageBlocks(),!this.cpu.isRunning()){let l=Math.round(R/1024),e=l?l+"Kb":R+" bytes";this.printf(MESSAGE.STATUS,"%s %s at 0x%X\n",e,Memoryx86.TYPE.NAMES[U],V)}return!0}return this.reportError(Busx86.ERROR.ADD_MEM_BADRANGE,V,R)}cleanMemory(V,R,U){let l=!0,e=V>>>this.nBlockShift,t=this.nBlockSize-(V&this.nBlockLimit);for(;R>0&&e<this.aMemBlocks.length;)this.aMemBlocks[e].clean(U)||(l=!1),R-=t,t=this.nBlockSize,e++;return l}scanMemory(V,R,U){null==R&&(R=0),null==U&&(U=this.addrTotal-R|0),null==V&&(V={cbTotal:0,cBlocks:0,aBlocks:[]});let l=R>>>this.nBlockShift,e=R+U-1>>>this.nBlockShift;for(V.cbTotal=0,V.cBlocks=0;l<=e;){let R=this.aMemBlocks[l];if(V.cbTotal+=R.size,R.size){let U=BACKTRACK&&R.modBackTrack(!1)?1:0;V.aBlocks.push(UsrLib.initBitFields(Busx86.BlockInfo,l,0,U,R.type)),V.cBlocks++}l++}return V}getA20(){return!this.aBlocks2Mb&&this.nBusLimit==this.nBusMask}setA20(V){if(32==this.nBusWidth)V?this.aBlocks2Mb&&(this.setMemoryBlocks(1048576,1048576,this.aBlocks2Mb),this.aBlocks2Mb=null):this.aBlocks2Mb||(this.aBlocks2Mb=this.getMemoryBlocks(1048576,1048576),this.setMemoryBlocks(1048576,1048576,this.getMemoryBlocks(0,1048576)));else if(this.nBusWidth>20){let R=-1048577&this.nBusMask|(V?1048576:0);R!=this.nBusMask&&(this.nBusMask=R,this.cpu&&this.cpu.setAddressMask(R))}}getWidth(){return this.nBusWidth}setMemoryAccess(V,R,U,l){if(!(V&this.nBlockLimit)&&R&&!(R&this.nBlockLimit)){let e=V>>>this.nBlockShift;for(;R>0;){let t=this.aMemBlocks[e];if(!t.controller)return this.reportError(Busx86.ERROR.SET_MEM_NOCTRL,V,R,l);t.setAccess(U,!0),R-=this.nBlockSize,e++}return!0}return this.reportError(Busx86.ERROR.SET_MEM_BADRANGE,V,R)}removeMemory(V,R){if(!(V&this.nBlockLimit)&&R&&!(R&this.nBlockLimit)){let U=V>>>this.nBlockShift;for(;R>0;){let l=this.aMemBlocks[U],e=new Memoryx86(V);e.copyBreakpoints(this.dbg,l),this.aMemBlocks[U++]=e,V=U*this.nBlockSize,R-=this.nBlockSize}return this.cpu.flushPageBlocks(),!0}return this.reportError(Busx86.ERROR.REM_MEM_BADRANGE,V,R)}getMemoryBlocks(V,R){let U=[],l=V>>>this.nBlockShift;for(;R>0&&l<this.aMemBlocks.length;)U.push(this.aMemBlocks[l++]),R-=this.nBlockSize;return U}setMemoryBlocks(V,R,U,l){let e=0,t=V>>>this.nBlockShift;for(;R>0&&t<this.aMemBlocks.length;){let T=U[e++];if(!T)break;if(void 0!==l){let R=new Memoryx86(V);R.clone(T,l,this.dbg),T=R}this.aMemBlocks[t++]=T,R-=this.nBlockSize}}getByte(V){return this.aMemBlocks[(V&this.nBusMask)>>>this.nBlockShift].readByte(V&this.nBlockLimit,V)}getByteDirect(V){return this.aMemBlocks[(V&this.nBusMask)>>>this.nBlockShift].readByteDirect(V&this.nBlockLimit,V)}getShort(V){let R=V&this.nBlockLimit,U=(V&this.nBusMask)>>>this.nBlockShift;return R!=this.nBlockLimit?this.aMemBlocks[U].readShort(R,V):this.aMemBlocks[U++].readByte(R,V)|this.aMemBlocks[U&this.nBlockMask].readByte(0,V+1)<<8}getShortDirect(V){let R=V&this.nBlockLimit,U=(V&this.nBusMask)>>>this.nBlockShift;return R!=this.nBlockLimit?this.aMemBlocks[U].readShortDirect(R,V):this.aMemBlocks[U++].readByteDirect(R,V)|this.aMemBlocks[U&this.nBlockMask].readByteDirect(0,V+1)<<8}getLong(V){let R=V&this.nBlockLimit,U=(V&this.nBusMask)>>>this.nBlockShift;if(R<this.nBlockLimit-2)return this.aMemBlocks[U].readLong(R,V);let l=0,e=4,t=0,T=4-(3&R);for(;e--;)l|=this.aMemBlocks[U].readByte(R++,V++)<<t,--T||(U=U+1&this.nBlockMask,R=0),t+=8;return l}setByte(V,R){this.aMemBlocks[(V&this.nBusMask)>>>this.nBlockShift].writeByte(V&this.nBlockLimit,255&R,V)}setByteDirect(V,R){this.aMemBlocks[(V&this.nBusMask)>>>this.nBlockShift].writeByteDirect(V&this.nBlockLimit,255&R,V)}setShort(V,R){let U=V&this.nBlockLimit,l=(V&this.nBusMask)>>>this.nBlockShift;U==this.nBlockLimit?(this.aMemBlocks[l++].writeByte(U,255&R,V),this.aMemBlocks[l&this.nBlockMask].writeByte(0,R>>8&255,V+1)):this.aMemBlocks[l].writeShort(U,65535&R,V)}setShortDirect(V,R){let U=V&this.nBlockLimit,l=(V&this.nBusMask)>>>this.nBlockShift;U==this.nBlockLimit?(this.aMemBlocks[l++].writeByteDirect(U,255&R,V),this.aMemBlocks[l&this.nBlockMask].writeByteDirect(0,R>>8&255,V+1)):this.aMemBlocks[l].writeShortDirect(U,65535&R,V)}setLong(V,R){let U=V&this.nBlockLimit,l=(V&this.nBusMask)>>>this.nBlockShift;if(U<this.nBlockLimit-2)return void this.aMemBlocks[l].writeLong(U,R);let e=4,t=4-(3&U);for(;e--;)this.aMemBlocks[l].writeByte(U++,255&R,V++),--t||(l=l+1&this.nBlockMask,U=0),R>>>=8}addBackTrackObject(V,R,U){if(BACKTRACK&&V){let l=this.abtObjects.length;if(R||this.ibtLastAlloc>=0&&(R=this.abtObjects[this.ibtLastAlloc]),!R||R.obj!=V||U<R.off||U>=R.off+Busx86.BTINFO.OFF_MAX){let e;if(R={obj:V,off:U,slot:0,refs:0},this.cbtDeletions)for(e=this.ibtLastDelete;e<l;e++){let V=this.abtObjects[e];if(!V||!V.refs&&!this.isBackTrackWeak(e<<Busx86.BTINFO.SLOT_SHIFT)){this.ibtLastDelete=e+1,this.cbtDeletions--;break}}else e=l;this.ibtLastAlloc=e,R.slot=e+1,e==l?this.abtObjects.push(R):this.abtObjects[e]=R}return R}return null}getBackTrackIndex(V,R){let U=0;return BACKTRACK&&V&&(U=V.slot<<Busx86.BTINFO.SLOT_SHIFT|Busx86.BTINFO.TYPE_DATA|R-V.off),U}writeBackTrackObject(V,R,U){if(BACKTRACK&&R){let l=R.slot<<Busx86.BTINFO.SLOT_SHIFT|Busx86.BTINFO.TYPE_DATA|U-R.off;this.writeBackTrack(V,l)}}readBackTrack(V){return BACKTRACK?this.aMemBlocks[(V&this.nBusMask)>>>this.nBlockShift].readBackTrack(V&this.nBlockLimit):0}writeBackTrack(V,R){if(BACKTRACK){let U=R>>>Busx86.BTINFO.SLOT_SHIFT,l=(V&this.nBusMask)>>>this.nBlockShift,e=this.aMemBlocks[l].writeBackTrack(V&this.nBlockLimit,R),t=e>>>Busx86.BTINFO.SLOT_SHIFT;if(U!=t){if(this.aMemBlocks[l].modBackTrack(!0),e&&t){let U=this.abtObjects[t-1];U?U.refs<=0&&(this.printf(MESSAGE.DEBUG+MESSAGE.WARNING,"writeBackTrack(%%%x,%x): previous index (%x) refers to object with bad ref count (%d)\n",V,R,e,U.refs),this.isBackTrackWeak(e)||(this.abtObjects[t-1]=null),this.ibtLastDelete=0,this.cbtDeletions++):this.printf(MESSAGE.DEBUG+MESSAGE.WARNING,"writeBackTrack(%%%x,%x): previous index (%x) refers to empty slot (%d)\n",V,R,e,t)}if(R&&U){let V=this.abtObjects[U-1];V&&V.refs++}}}}isBackTrackWeak(V){let R=this.cpu.backTrack,U=V>>Busx86.BTINFO.SLOT_SHIFT;return R.btiAL>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiAH>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiBL>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiBH>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiCL>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiCH>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiDL>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiDH>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiBPLo>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiBPHi>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiSILo>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiSIHi>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiDILo>>Busx86.BTINFO.SLOT_SHIFT==U||R.btiDIHi>>Busx86.BTINFO.SLOT_SHIFT==U}updateBackTrackCode(V,R){if(BACKTRACK){if(R&Busx86.BTINFO.TYPE_DATA)R=R&~Busx86.BTINFO.TYPE_MASK|Busx86.BTINFO.TYPE_COUNT_INC;else{if(!((R&Busx86.BTINFO.TYPE_MASK)<Busx86.BTINFO.TYPE_COUNT_MAX))return;R+=Busx86.BTINFO.TYPE_COUNT_INC}this.aMemBlocks[(V&this.nBusMask)>>>this.nBlockShift].writeBackTrack(V&this.nBlockLimit,R)}}getBackTrackObject(V){if(BACKTRACK){let R=V>>>Busx86.BTINFO.SLOT_SHIFT;if(R)return this.abtObjects[R-1]}return null}getBackTrackInfo(V,R,U){if(BACKTRACK){let l=this.getBackTrackObject(V);if(l){let e=V&Busx86.BTINFO.OFF_MASK,t=l.obj.file;if(t)return t.getSymbol(l.obj.offFile+e,U);if((!R||U)&&l.obj.idComponent)return l.obj.idComponent+"+"+StrLib.toHex(l.off+e,0,!0)}}return null}getSymbol(V,R){return BACKTRACK?this.getBackTrackInfo(this.readBackTrack(V),!0,R):null}saveMemory(V=!0){let R=this.getA20();R||this.setA20(!0);let U=0,l=[];for(let R=0;R<this.nBlockTotal;R++){let e=this.aMemBlocks[R];if(e.size&&(V&&e.type!=Memoryx86.TYPE.ROM||e.modified())){let V=e.save();V&&(l[U++]=R,l[U++]=State.compress(V))}}return R||this.setA20(!1),l[U]=R,l}restoreMemory(V){let R,U=1;for(R=0;R<V.length-1;R+=2){let l=V[R]*U,e=V[R+1];if(e){(e.length<this.nBlockLen*U||e.length&e.length-1)&&(e=State.decompress(e));let V=e.length/this.nBlockLen|0;for(V&&1==U&&(U=V);V>0;){let R=V>1?e.splice(0,this.nBlockLen):e,U=this.aMemBlocks[l];if(!U||!U.restore(R))return Component.error("Unable to restore memory block "+l),!1;V--,l++}}}return void 0!==V[R]&&this.setA20(V[R]),!0}addPortInputBreak(V){return null==V?(this.fPortInputBreakAll=!this.fPortInputBreakAll,this.fPortInputBreakAll):(void 0===this.aPortInputNotify[V]&&(this.aPortInputNotify[V]=[null,!1]),this.aPortInputNotify[V][1]=!this.aPortInputNotify[V][1],this.aPortInputNotify[V][1])}addPortInputNotify(V,R,U){if(void 0!==U)for(let l=V;l<=R;l++)void 0===this.aPortInputNotify[l]?(this.aPortInputNotify[l]=[U,!1],MAXDEBUG&&this.printf(MESSAGE.LOG,"addPortInputNotify(%#06x)\n",l)):Component.warning("input port "+StrLib.toHexWord(l)+" already registered")}addPortInputTable(V,R,U){void 0===U&&(U=0);for(let l in R)this.addPortInputNotify(+l+U,+l+U,R[l].bind(V))}addPortInputWidth(V,R){this.aPortInputWidth[V]=R}checkPortInputNotify(V,R,U){let l=0,e=0;for(;R>0;){let t=this.aPortInputNotify[V],T=this.aPortInputWidth[V]||1,k=1==T?255:2==T?65535:-1,F=k;BACKTRACK&&(this.cpu.backTrack.btiIO=0),void 0!==t?(t[0]&&(F=t[0](V,U),null==F?F=k:F&=k),DEBUGGER&&this.dbg&&this.fPortInputBreakAll!=t[1]&&this.dbg.checkPortInput(V,R,F)):DEBUGGER&&this.dbg&&(this.dbg.messageIO(this,V,void 0,U),this.fPortInputBreakAll&&this.dbg.checkPortInput(V,R,F)),l|=F<<e,e+=T<<3,V+=T,R-=T}return l}addPortOutputBreak(V){return null==V?(this.fPortOutputBreakAll=!this.fPortOutputBreakAll,this.fPortOutputBreakAll):(void 0===this.aPortOutputNotify[V]&&(this.aPortOutputNotify[V]=[null,!1]),this.aPortOutputNotify[V][1]=!this.aPortOutputNotify[V][1],this.aPortOutputNotify[V][1])}addPortOutputNotify(V,R,U){if(void 0!==U)for(let l=V;l<=R;l++)void 0===this.aPortOutputNotify[l]?(this.aPortOutputNotify[l]=[U,!1],MAXDEBUG&&this.printf(MESSAGE.LOG,"addPortOutputNotify(%#06x)\n",l)):Component.warning("output port "+StrLib.toHexWord(l)+" already registered")}addPortOutputTable(V,R,U){void 0===U&&(U=0);for(let l in R)this.addPortOutputNotify(+l+U,+l+U,R[l].bind(V))}addPortOutputWidth(V,R){this.aPortOutputWidth[V]=R}checkPortOutputNotify(V,R,U,l){let e=0;for(;R>0;){let t=this.aPortOutputNotify[V],T=this.aPortOutputWidth[V]||1,k=(U>>>=e)&(1==T?255:2==T?65535:-1);void 0!==t?(t[0]&&t[0](V,k,l),DEBUGGER&&this.dbg&&this.fPortOutputBreakAll!=t[1]&&this.dbg.checkPortOutput(V,R,k)):DEBUGGER&&this.dbg&&(this.dbg.messageIO(this,V,k,l),this.fPortOutputBreakAll&&this.dbg.checkPortOutput(V,R,k)),e+=T<<3,V+=T,R-=T}}reportError(V,R,U,l){return this.printf(l?MESSAGE.DEBUG:MESSAGE.NONE,"Memory block error (%d: %x,%x)\n",V,R,U),!1}}
var littleEndian=!!TYPEDARRAYS&&function(){let V=new ArrayBuffer(2);return new DataView(V).setUint16(0,256,!0),256===new Uint16Array(V)[0]}();class Memoryx86{static idBlock=0;static TYPE={NONE:0,RAM:1,ROM:2,VIDEO:3,CTRL:4,UNPAGED:5,PAGED:6,COLORS:["black","blue","green","cyan"],NAMES:["NONE","RAM","ROM","VIDEO","H/W","UNPAGED","PAGED"]};static FLAGS={CLEAN:0,DIRTY:1,MODIFIED:2};constructor(V,R,U,l,e,t){let T;if(this.id=Memoryx86.idBlock+=2,this.adw=null,this.offset=0,this.addr=V,this.used=R,this.size=U||0,this.type=l||Memoryx86.TYPE.NONE,this.fReadOnly=l==Memoryx86.TYPE.ROM,this.controller=null,this.cpu=t,this.copyBreakpoints(),this.flags=Memoryx86.FLAGS.CLEAN,BACKTRACK)if(!U||e)this.fModBackTrack=!1,this.readBackTrack=this.readBackTrackNone,this.writeBackTrack=this.writeBackTrackNone,this.modBackTrack=this.modBackTrackNone;else for(this.fModBackTrack=!0,this.readBackTrack=this.readBackTrackIndex,this.writeBackTrack=this.writeBackTrackIndex,this.modBackTrack=this.modBackTrackIndex,this.abtIndexes=new Array(U),T=0;T<U;T++)this.abtIndexes[T]=0;if(U){if(e){this.controller=e;let R=e.getMemoryBuffer(0|V);return this.adw=R[0],this.offset=R[1],void this.setAccess(e.getMemoryAccess())}if(TYPEDARRAYS)this.buffer=new ArrayBuffer(U),this.dv=new DataView(this.buffer,0,U),this.ab=new Uint8Array(this.buffer,0,U),this.aw=new Uint16Array(this.buffer,0,U>>1),this.adw=new Int32Array(this.buffer,0,U>>2),this.setAccess(littleEndian?Memoryx86.afnArrayLE:Memoryx86.afnArrayBE);else{if(BYTEARRAYS)this.ab=new Array(U);else for(this.adw=new Array(U>>2),T=0;T<this.adw.length;T++)this.adw[T]=0;this.setAccess(Memoryx86.afnMemory)}}else this.setAccess()}init(V){this.addr=V}clean(V){return!(this.flags&Memoryx86.FLAGS.DIRTY)||(V&&(this.flags=this.flags&~Memoryx86.FLAGS.DIRTY|Memoryx86.FLAGS.MODIFIED),!1)}modified(){return 0!=(this.flags&(Memoryx86.FLAGS.DIRTY|Memoryx86.FLAGS.MODIFIED))}clone(V,R,U){this.id=1|V.id,this.used=V.used,this.size=V.size,R&&(this.type=R,this.fReadOnly=R==Memoryx86.TYPE.ROM),TYPEDARRAYS?(this.buffer=V.buffer,this.dv=V.dv,this.ab=V.ab,this.aw=V.aw,this.adw=V.adw,this.setAccess(littleEndian?Memoryx86.afnArrayLE:Memoryx86.afnArrayBE)):(BYTEARRAYS?this.ab=V.ab:this.adw=V.adw,this.setAccess(Memoryx86.afnMemory)),this.copyBreakpoints(U,V)}save(){let V,R;if(this.controller)V=null;else if(BYTEARRAYS){V=new Array(this.size>>2);let U=0;for(R=0;R<V.length;R++)V[R]=this.ab[U]|this.ab[U+1]<<8|this.ab[U+2]<<16|this.ab[U+3]<<24,U+=4}else if(TYPEDARRAYS)for(V=new Array(this.size>>2),R=0;R<V.length;R++)V[R]=this.dv.getInt32(R<<2,!0);else V=this.adw;return V}restore(V){let R,U;if(this.controller){if(this.adw){if(2048==this.adw.length||8192==this.adw.length)for(U=this.offset>>1,R=0;R<V.length&&!(U>=this.adw.length);R++)this.adw[U++]=65535&V[R],this.adw[U++]=V[R]>>16&65535;else for(U=this.offset>>2,R=0;R<V.length&&!(U>=this.adw.length);R++)this.adw[U++]=V[R];this.flags|=Memoryx86.FLAGS.DIRTY}return!0}if(this.size==V.length<<2){if(BYTEARRAYS)for(U=0,R=0;R<V.length;R++)this.ab[U]=255&V[R],this.ab[U+1]=V[R]>>8&255,this.ab[U+2]=V[R]>>16&255,this.ab[U+3]=V[R]>>24&255,U+=4;else if(TYPEDARRAYS)for(R=0;R<V.length;R++)this.dv.setInt32(R<<2,V[R],!0);else this.adw=V;return this.flags|=Memoryx86.FLAGS.DIRTY,!0}return!1}setAccess(V,R){V||(V=this.type==Memoryx86.TYPE.UNPAGED?Memoryx86.afnUnpaged:this.type==Memoryx86.TYPE.PAGED?Memoryx86.afnPaged:Memoryx86.afnNone),this.setReadAccess(V,R),this.setWriteAccess(V,R)}setReadAccess(V,R){R&&this.cReadBreakpoints||(this.readByte=V[0]||this.readNone,this.readShort=V[2]||this.readShortDefault,this.readLong=V[4]||this.readLongDefault),(R||void 0===R)&&(this.readByteDirect=V[0]||this.readNone,this.readShortDirect=V[2]||this.readShortDefault,this.readLongDirect=V[4]||this.readLongDefault)}setWriteAccess(V,R){R&&this.cWriteBreakpoints||(this.writeByte=!this.fReadOnly&&V[1]||this.writeNone,this.writeShort=!this.fReadOnly&&V[3]||this.writeShortDefault,this.writeLong=!this.fReadOnly&&V[5]||this.writeLongDefault),(R||void 0===R)&&(this.writeByteDirect=V[1]||this.writeNone,this.writeShortDirect=V[3]||this.writeShortDefault,this.writeLongDirect=V[5]||this.writeLongDefault)}resetReadAccess(){this.readByte=this.readByteDirect,this.readShort=this.readShortDirect,this.readLong=this.readLongDirect}resetWriteAccess(){this.writeByte=this.fReadOnly?this.writeNone:this.writeByteDirect,this.writeShort=this.fReadOnly?this.writeShortDefault:this.writeShortDirect,this.writeLong=this.fReadOnly?this.writeLongDefault:this.writeLongDirect}getPageBlock(V,R){return this.cpu.mapPageBlock(V,R)}setPhysBlock(V,R,U,l,e){this.blockPhys=V,this.blockPDE=R,this.iPDE=U>>2,this.blockPTE=l,this.iPTE=e>>2,TYPEDARRAYS&&littleEndian&&V.adw&&!V.controller&&!V.cReadBreakpoints&&!V.cWriteBreakpoints?(this.ab=V.ab,this.aw=V.aw,this.adw=V.adw,this.setAccess(Memoryx86.afnPagedLE)):(this.bitPTEAccessed=V?Memoryx86.adjustEndian(X86.PTE.ACCESSED):0,this.bitPTEDirty=V?Memoryx86.adjustEndian(X86.PTE.ACCESSED|X86.PTE.DIRTY):0,this.setAccess(Memoryx86.afnPaged))}printAddr(V){DEBUG&&this.dbg&&this.dbg.printf(MESSAGE.MEM,"%s %%%x #%s\n",this.addr,this.id)}addBreakpoint(V,R,U){R?(0==this.cWriteBreakpoints++&&(U&&(this.cpu=U),this.setWriteAccess(Memoryx86.afnChecked,!1)),DEBUG&&this.printAddr("write breakpoint added to memory block")):(0==this.cReadBreakpoints++&&(U&&(this.cpu=U),this.setReadAccess(Memoryx86.afnChecked,!1)),DEBUG&&this.printAddr("read breakpoint added to memory block"))}removeBreakpoint(V,R){R?0==--this.cWriteBreakpoints&&(this.resetWriteAccess(),DEBUG&&this.printAddr("all write breakpoints removed from memory block")):0==--this.cReadBreakpoints&&(this.resetReadAccess(),DEBUG&&this.printAddr("all read breakpoints removed from memory block"))}copyBreakpoints(V,R){this.dbg=V,this.cReadBreakpoints=this.cWriteBreakpoints=0,R&&(R.cpu&&(this.cpu=R.cpu),(this.cReadBreakpoints=R.cReadBreakpoints)&&this.setReadAccess(Memoryx86.afnChecked,!1),(this.cWriteBreakpoints=R.cWriteBreakpoints)&&this.setWriteAccess(Memoryx86.afnChecked,!1))}readNone(V,R){return DEBUGGER&&this.dbg&&this.dbg.printf(MESSAGE.CPU+MESSAGE.MEM,"attempt to read invalid block %%%x\n",R),255}writeNone(V,R,U){DEBUGGER&&this.dbg&&this.dbg.printf(MESSAGE.CPU+MESSAGE.MEM,"attempt to write %#06x to invalid block %%%x\n",R,U)}readShortDefault(V,R){return this.readByte(V++,R++)|this.readByte(V,R)<<8}readLongDefault(V,R){return this.readByte(V++,R++)|this.readByte(V++,R++)<<8|this.readByte(V++,R++)<<16|this.readByte(V,R)<<24}writeShortDefault(V,R,U){this.writeByte(V++,255&R,U++),this.writeByte(V,R>>8,U)}writeLongDefault(V,R,U){this.writeByte(V++,255&R,U++),this.writeByte(V++,R>>8&255,U++),this.writeByte(V++,R>>16&255,U++),this.writeByte(V,R>>>24,U)}readByteMemory(V,R){return BYTEARRAYS?this.ab[V]:this.adw[V>>2]>>>((3&V)<<3)&255}readShortMemory(V,R){if(BYTEARRAYS)return this.ab[V]|this.ab[V+1]<<8;let U,l=V>>2,e=(3&V)<<3,t=this.adw[l]>>e;return U=e<24?65535&t:255&t|(255&this.adw[l+1])<<8,U}readLongMemory(V,R){if(BYTEARRAYS)return this.ab[V]|this.ab[V+1]<<8|this.ab[V+2]<<16|this.ab[V+3]<<24;let U=V>>2,l=(3&V)<<3,e=this.adw[U];return l&&(e>>>=l,e|=this.adw[U+1]<<32-l),e}writeByteMemory(V,R,U){if(BYTEARRAYS)this.ab[V]=R;else{let U=V>>2,l=(3&V)<<3;this.adw[U]=this.adw[U]&~(255<<l)|R<<l}}writeShortMemory(V,R,U){if(BYTEARRAYS)this.ab[V]=255&R,this.ab[V+1]=R>>8;else{let U=V>>2,l=(3&V)<<3;l<24?this.adw[U]=this.adw[U]&~(65535<<l)|R<<l:(this.adw[U]=16777215&this.adw[U]|R<<24,U++,this.adw[U]=-256&this.adw[U]|R>>8)}}writeLongMemory(V,R,U){if(BYTEARRAYS)this.ab[V]=255&R,this.ab[V+1]=R>>8&255,this.ab[V+2]=R>>16&255,this.ab[V+3]=R>>24&255;else{let U=V>>2,l=(3&V)<<3;if(l){let V=-1<<l;this.adw[U]=this.adw[U]&~V|R<<l,U++,this.adw[U]=this.adw[U]&V|R>>>32-l}else this.adw[U]=R}}readByteChecked(V,R){return DEBUGGER&&this.dbg&&null!=this.addr&&this.dbg.checkMemoryRead(this.addr+V)||I386&&this.cpu&&this.cpu.checkMemoryException(R,1,!1),this.readByteDirect(V,R)}readShortChecked(V,R){return DEBUGGER&&this.dbg&&null!=this.addr&&this.dbg.checkMemoryRead(this.addr+V,2)||I386&&this.cpu&&this.cpu.checkMemoryException(R,2,!1),this.readShortDirect(V,R)}readLongChecked(V,R){return DEBUGGER&&this.dbg&&null!=this.addr&&this.dbg.checkMemoryRead(this.addr+V,4)||I386&&this.cpu&&this.cpu.checkMemoryException(R,4,!1),this.readLongDirect(V,R)}writeByteChecked(V,R,U){DEBUGGER&&this.dbg&&null!=this.addr&&this.dbg.checkMemoryWrite(this.addr+V)||I386&&this.cpu&&this.cpu.checkMemoryException(U,1,!0),this.fReadOnly?this.writeNone(V,R,U):this.writeByteDirect(V,R,U)}writeShortChecked(V,R,U){DEBUGGER&&this.dbg&&null!=this.addr&&this.dbg.checkMemoryWrite(this.addr+V,2)||I386&&this.cpu&&this.cpu.checkMemoryException(U,2,!0),this.fReadOnly?this.writeNone(V,R,U):this.writeShortDirect(V,R,U)}writeLongChecked(V,R,U){DEBUGGER&&this.dbg&&null!=this.addr&&this.dbg.checkMemoryWrite(this.addr+V,4)||I386&&this.cpu&&this.cpu.checkMemoryException(U,4,!0),this.fReadOnly?this.writeNone(V,R,U):this.writeLongDirect(V,R,U)}readBytePaged(V,R){return this.blockPDE.adw[this.iPDE]|=this.bitPTEAccessed,this.blockPTE.adw[this.iPTE]|=this.bitPTEAccessed,this.blockPhys.readByte(V,R)}readShortPaged(V,R){return this.blockPDE.adw[this.iPDE]|=this.bitPTEAccessed,this.blockPTE.adw[this.iPTE]|=this.bitPTEAccessed,this.blockPhys.readShort(V,R)}readLongPaged(V,R){return this.blockPDE.adw[this.iPDE]|=this.bitPTEAccessed,this.blockPTE.adw[this.iPTE]|=this.bitPTEAccessed,this.blockPhys.readLong(V,R)}writeBytePaged(V,R,U){this.blockPDE.adw[this.iPDE]|=this.bitPTEAccessed,this.blockPTE.adw[this.iPTE]|=this.bitPTEDirty,this.blockPhys.writeByte(V,R,U)}writeShortPaged(V,R,U){this.blockPDE.adw[this.iPDE]|=this.bitPTEAccessed,this.blockPTE.adw[this.iPTE]|=this.bitPTEDirty,this.blockPhys.writeShort(V,R,U)}writeLongPaged(V,R,U){this.blockPDE.adw[this.iPDE]|=this.bitPTEAccessed,this.blockPTE.adw[this.iPTE]|=this.bitPTEDirty,this.blockPhys.writeLong(V,R,U)}readByteUnpaged(V,R){return this.getPageBlock(R,!1).readByte(V,R)}readShortUnpaged(V,R){return this.getPageBlock(R,!1).readShort(V,R)}readLongUnpaged(V,R){return this.getPageBlock(R,!1).readLong(V,R)}writeByteUnpaged(V,R,U){this.getPageBlock(U,!0).writeByte(V,R,U)}writeShortUnpaged(V,R,U){this.getPageBlock(U,!0).writeShort(V,R,U)}writeLongUnpaged(V,R,U){this.getPageBlock(U,!0).writeLong(V,R,U)}readByteBE(V,R){return this.ab[V]}readByteLE(V,R){return this.ab[V]}readBytePLE(V,R){return this.blockPDE.adw[this.iPDE]|=X86.PTE.ACCESSED,this.blockPTE.adw[this.iPTE]|=X86.PTE.ACCESSED,this.readByte=this.readByteLE,this.ab[V]}readShortBE(V,R){return this.dv.getUint16(V,!0)}readShortLE(V,R){return 1&V?this.ab[V]|this.ab[V+1]<<8:this.aw[V>>1]}readShortPLE(V,R){return this.blockPDE.adw[this.iPDE]|=X86.PTE.ACCESSED,this.blockPTE.adw[this.iPTE]|=X86.PTE.ACCESSED,this.readShort=this.readShortLE,1&V?this.ab[V]|this.ab[V+1]<<8:this.aw[V>>1]}readLongBE(V,R){return this.dv.getInt32(V,!0)}readLongLE(V,R){return 3&V?this.ab[V]|this.ab[V+1]<<8|this.ab[V+2]<<16|this.ab[V+3]<<24:this.adw[V>>2]}readLongPLE(V,R){return this.blockPDE.adw[this.iPDE]|=X86.PTE.ACCESSED,this.blockPTE.adw[this.iPTE]|=X86.PTE.ACCESSED,this.readLong=this.readLongLE,3&V?this.ab[V]|this.ab[V+1]<<8|this.ab[V+2]<<16|this.ab[V+3]<<24:this.adw[V>>2]}writeByteBE(V,R,U){this.ab[V]=R}writeByteLE(V,R,U){this.ab[V]=R}writeBytePLE(V,R,U){this.ab[V]=R,this.blockPDE.adw[this.iPDE]|=X86.PTE.ACCESSED,this.blockPTE.adw[this.iPTE]|=X86.PTE.ACCESSED|X86.PTE.DIRTY,this.writeByte=this.writeByteLE}writeShortBE(V,R,U){this.dv.setUint16(V,R,!0)}writeShortLE(V,R,U){1&V?(this.ab[V]=R,this.ab[V+1]=R>>8):this.aw[V>>1]=R}writeShortPLE(V,R,U){1&V?(this.ab[V]=R,this.ab[V+1]=R>>8):this.aw[V>>1]=R,this.blockPDE.adw[this.iPDE]|=X86.PTE.ACCESSED,this.blockPTE.adw[this.iPTE]|=X86.PTE.ACCESSED|X86.PTE.DIRTY,this.writeShort=this.writeShortLE}writeLongBE(V,R,U){this.dv.setInt32(V,R,!0)}writeLongLE(V,R,U){3&V?(this.ab[V]=R,this.ab[V+1]=R>>8,this.ab[V+2]=R>>16,this.ab[V+3]=R>>24):this.adw[V>>2]=R}writeLongPLE(V,R,U){3&V?(this.ab[V]=R,this.ab[V+1]=R>>8,this.ab[V+2]=R>>16,this.ab[V+3]=R>>24):this.adw[V>>2]=R,this.blockPDE.adw[this.iPDE]|=X86.PTE.ACCESSED,this.blockPTE.adw[this.iPTE]|=X86.PTE.ACCESSED|X86.PTE.DIRTY,this.writeLong=this.writeLongLE}readBackTrackNone(V){return 0}writeBackTrackNone(V,R){}modBackTrackNone(V){return!1}readBackTrackIndex(V){return this.abtIndexes[V]}writeBackTrackIndex(V,R){let U;return U=this.abtIndexes[V],this.abtIndexes[V]=R,U}modBackTrackIndex(V){let R=this.fModBackTrack;return this.fModBackTrack=V,R}static adjustEndian(V){return TYPEDARRAYS&&!littleEndian&&(V=V<<24|V<<8&16711680|V>>8&65280|V>>>24),V}}
let TimeLog,Timer,MonitorSpecs,Font,Sector,FileDesc,FileModule,FileSegment,FileOrdinal,DiskImage,DriveType,DriveInfo,DriveConfig,Drive,DbgAddr,DbgAddrx86,VectorBP;Memoryx86.afnNone=[],Memoryx86.afnMemory=[Memoryx86.prototype.readByteMemory,Memoryx86.prototype.writeByteMemory,Memoryx86.prototype.readShortMemory,Memoryx86.prototype.writeShortMemory,Memoryx86.prototype.readLongMemory,Memoryx86.prototype.writeLongMemory],Memoryx86.afnChecked=[Memoryx86.prototype.readByteChecked,Memoryx86.prototype.writeByteChecked,Memoryx86.prototype.readShortChecked,Memoryx86.prototype.writeShortChecked,Memoryx86.prototype.readLongChecked,Memoryx86.prototype.writeLongChecked],PAGEBLOCKS&&(Memoryx86.afnPaged=[Memoryx86.prototype.readBytePaged,Memoryx86.prototype.writeBytePaged,Memoryx86.prototype.readShortPaged,Memoryx86.prototype.writeShortPaged,Memoryx86.prototype.readLongPaged,Memoryx86.prototype.writeLongPaged],Memoryx86.afnUnpaged=[Memoryx86.prototype.readByteUnpaged,Memoryx86.prototype.writeByteUnpaged,Memoryx86.prototype.readShortUnpaged,Memoryx86.prototype.writeShortUnpaged,Memoryx86.prototype.readLongUnpaged,Memoryx86.prototype.writeLongUnpaged]),TYPEDARRAYS&&(Memoryx86.afnArrayBE=[Memoryx86.prototype.readByteBE,Memoryx86.prototype.writeByteBE,Memoryx86.prototype.readShortBE,Memoryx86.prototype.writeShortBE,Memoryx86.prototype.readLongBE,Memoryx86.prototype.writeLongBE],Memoryx86.afnArrayLE=[Memoryx86.prototype.readByteLE,Memoryx86.prototype.writeByteLE,Memoryx86.prototype.readShortLE,Memoryx86.prototype.writeShortLE,Memoryx86.prototype.readLongLE,Memoryx86.prototype.writeLongLE],Memoryx86.afnPagedLE=[Memoryx86.prototype.readBytePLE,Memoryx86.prototype.writeBytePLE,Memoryx86.prototype.readShortPLE,Memoryx86.prototype.writeShortPLE,Memoryx86.prototype.readLongPLE,Memoryx86.prototype.writeLongPLE]);class CPU extends Component{static YIELDS_PER_SECOND=60;static BUTTONS=["power","reset"];constructor(V,R){super("CPU",V,MESSAGE.CPU);let U=V.cycles||R,l=V.multiplier||1;DEBUG&&(this.aTimeLogs=[null,null]),this.nBaseCyclesPerSecond=U,this.msPerYield=Math.round(1e3/CPU.YIELDS_PER_SECOND),this.nBaseMultiplier=this.nCurrentMultiplier=this.nTargetMultiplier=l,this.mhzBase=Math.round(this.nBaseCyclesPerSecond/1e4)/100,this.mhzCurrent=this.mhzTarget=this.mhzBase*this.nTargetMultiplier,this.flags.starting=this.flags.running=this.flags.yield=!1,this.flags.autoStart=V.autoStart,this.flags.displayLiveRegs=!1,this.flags.checksum=!1,this.nChecksum=this.nCyclesChecksumNext=0,this.nCyclesChecksumStart=V.csStart,this.nCyclesChecksumInterval=V.csInterval,this.nCyclesChecksumStop=V.csStop,this.aTimers=[],this.idRunTimeout=0,this.onRunTimeout=this.runCPU.bind(this)}addTimeLog(V,R,U,l){if(DEBUG){let R=0;if(V&&(this.aTimeLogs[0]?(this.aTimeLogs[0].nCycles+=V,this.aTimeLogs[0].msDuration+=l):this.aTimeLogs[0]={nCycles:V,msDuration:l,msLag:R,msBegin:U}),this.aTimeLogs[1]?(this.aTimeLogs[1].nCycles+=V,this.aTimeLogs[1].msDuration+=l):this.aTimeLogs[1]={nCycles:V,msDuration:l,msLag:R,msBegin:U},this.aTimeLogs.length>2){let V=this.aTimeLogs[this.aTimeLogs.length-1];R=U-(V.msBegin+V.msDuration)}this.aTimeLogs.push({nCycles:V,msDuration:l,msLag:R,msBegin:U}),this.aTimeLogs.length>602&&this.aTimeLogs.splice(2,1)}}initBus(V,R,U,l){this.cmp=V,this.bus=R,this.dbg=l;for(let V=0;V<CPU.BUTTONS.length;V++){let R=this.bindings[CPU.BUTTONS[V]];R&&this.cmp.setBinding("",CPU.BUTTONS[V],R)}this.fpuActive=null,this.fpu=V.getMachineComponent("FPU",!1),this.chipset=V.getMachineComponent("ChipSet"),this.flags.autoStart=V.getMachineBoolean("autoStart",this.flags.autoStart);let e=V.getMachineParm("multiplier");e&&(this.nBaseMultiplier=+e),this.timerYield=U.addTimer(this.id,(function(){U.flags.yield=!0}),this.msPerYield),this.setReady()}reset(){}save(V){return null}restore(V){return!1}powerUp(V,R){if(!R){if(V&&this.restore){if(this.resetCycles(),!this.restore(V))return!1;this.resetChecksum()}else this.reset();DEBUGGER&&this.dbg?this.dbg.init():this.printf(MESSAGE.NONE,"No debugger detected\n")}return this.updateCPU(!1),!0}powerDown(V,R){let U=this.flags.running;return R&&this.stopCPU(),!V||this.save(U)}autoStart(){return!!this.flags.running||!(!this.flags.autoStart&&(null!=this.flags.autoStart||this.dbg))&&this.startCPU(!0)}isPowered(){return!!this.flags.powered||(this.printf(MESSAGE.NONE,"%s not powered\n",this.toString()),!1)}isRunning(){return this.flags.running}getChecksum(){return 0}resetChecksum(){return void 0===this.nCyclesChecksumStart&&(this.nCyclesChecksumStart=0),void 0===this.nCyclesChecksumInterval&&(this.nCyclesChecksumInterval=-1),void 0===this.nCyclesChecksumStop&&(this.nCyclesChecksumStop=-1),this.flags.checksum=this.nCyclesChecksumStart>=0&&this.nCyclesChecksumInterval>0,!!this.flags.checksum&&(this.nChecksum=0,this.nCyclesChecksumNext=this.nCyclesChecksumStart-this.nTotalCycles,!0)}updateChecksum(V){if(this.flags.checksum){let R=!1;this.nChecksum=this.nChecksum+this.getChecksum()|0,this.nCyclesChecksumNext-=V,this.nCyclesChecksumNext<=0&&(this.nCyclesChecksumNext+=this.nCyclesChecksumInterval,R=!0),this.nCyclesChecksumStop>=0&&this.nCyclesChecksumStop<=this.getCycles()&&(this.nCyclesChecksumInterval=this.nCyclesChecksumStop=-1,this.resetChecksum(),this.stopCPU(),R=!0),R&&this.displayChecksum()}}displayChecksum(){this.printf("%d cycles: checksum=%x\n",this.getCycles(),this.nChecksum)}displayValue(V,R,U){if(this.bindings[V]){let l;void 0===R&&(this.setError("Value for "+V+" is invalid"),this.stopCPU()),l=!this.flags.running||this.flags.displayLiveRegs?StrLib.toHex(R,U):"--------".substr(0,U),this.bindings[V].textContent!=l&&(this.bindings[V].textContent=l)}}setBinding(V,R,U,l){let e=this,t=!1;switch(R){case"power":case"reset":case"speed":this.bindings[R]=U,t=!0;break;case"run":this.bindings[R]=U,U.onclick=function(){let V=e.flags.running;e.cmp&&e.cmp.checkPower()&&V==e.flags.running&&(e.flags.running?e.stopCPU(!0):e.startCPU(!0))},t=!0;break;case"setSpeed":this.bindings[R]=U,U.onclick=function(){e.setSpeed(e.nTargetMultiplier<<1,!0)},U.textContent=this.getSpeedTarget(),t=!0}return t}setBurstCycles(V){if(this.flags.running){let R=this.nStepCycles-V;if(R>0)return this.nStepCycles-=R,this.nBurstCycles-=R,!0}return!1}addCycles(V,R){this.nTotalCycles+=V,R&&(this.nBurstCycles=this.nStepCycles=0)}calcCycles(){let V=this.mhzCurrent/this.mhzBase;return!V||V>this.nTargetMultiplier?V=this.nTargetMultiplier:V<1&&(V=1),this.nCyclesPerYield=Math.floor(this.nBaseCyclesPerSecond/CPU.YIELDS_PER_SECOND*V),this.nCurrentMultiplier!==V&&(this.nCurrentMultiplier=V,!0)}getCycles(V){let R=this.nTotalCycles+this.nRunCycles+this.nBurstCycles-this.nStepCycles;return V&&this.nTargetMultiplier>1&&this.mhzCurrent>this.mhzBase&&(R=Math.round(R/this.nTargetMultiplier)),R}getBaseCyclesPerSecond(){return this.nBaseCyclesPerSecond}getCurrentCyclesPerSecond(){return this.nBaseCyclesPerSecond*this.nCurrentMultiplier|0}resetCycles(){this.nTotalCycles=this.nRunCycles=this.nBurstCycles=this.nStepCycles=0,this.resetChecksum(),this.setSpeed(this.nBaseMultiplier)}getSpeed(){return this.nTargetMultiplier}getSpeedCurrent(){return this.flags.running&&this.mhzCurrent?this.mhzCurrent.toFixed(2)+"Mhz":"Stopped"}getSpeedTarget(){return this.mhzTarget.toFixed(2)+"Mhz"}setSpeed(V,R){let U=!0;if(void 0!==V){this.mhzCurrent>0&&this.mhzCurrent<.9*this.mhzTarget&&(V=this.nBaseMultiplier,U=!1),this.mhzCurrent=0,this.nTargetMultiplier=V;let l=this.mhzBase*this.nTargetMultiplier;if(this.mhzTarget!=l){this.mhzTarget=l;let V=this.getSpeedTarget(),R=this.bindings.setSpeed;R&&(R.textContent=V),this.printf(MESSAGE.NONE,"target speed: %s\n",V)}R&&this.cmp&&this.cmp.updateFocus()}return this.addCycles(this.nRunCycles),this.nRunCycles=0,this.msStartRun=this.msEndThisRun=0,this.calcCycles()&&this.resetTimers(),U}calcSpeed(V,R){R&&(this.mhzCurrent=Math.round(V/(10*R))/100,R>=864e5&&(this.nTotalCycles=0,this.chipset&&this.chipset.updateAllTimers(!0),this.setSpeed()))}calcStartTime(){this.calcCycles(),this.nCyclesThisRun=0,this.msDiscount=0,this.msStartThisRun=Component.getTime(),this.msStartRun||(this.msStartRun=this.msStartThisRun);let V=0;this.msEndThisRun&&(V=this.msStartThisRun-this.msEndThisRun,V>this.msPerYield&&(this.msStartRun+=V,this.msStartRun>this.msStartThisRun&&(this.msStartRun=this.msStartThisRun)))}calcRemainingTime(){this.msEndThisRun=Component.getTime(),this.msDiscount&&(this.msStartRun+=this.msDiscount,this.msStartThisRun+=this.msDiscount);let V=this.msPerYield;this.nCyclesThisRun&&(V=Math.round(V*this.nCyclesThisRun/this.nCyclesPerYield));let R=this.msEndThisRun-this.msStartThisRun,U=V-R,l=this.nRunCycles,e=this.msEndThisRun-this.msStartRun;return MAXDEBUG&&U<0&&this.nTargetMultiplier>1&&this.printf("warning: updates @%dms (prefer %dms)\n",R,Math.round(V)),this.calcSpeed(l,e),U<0?(U<-1e3&&(this.msStartRun-=U),U=0):this.mhzCurrent<this.mhzTarget&&(U=0),DEBUG&&this.printf(MESSAGE.CPU,"%3dms run  %3dms wait  %6dcy  %6.2fmhz  %6dms total  %8dcy total  %6.2fmhz total",R,U,this.nCyclesThisRun,Math.round(this.nCyclesThisRun/(10*R))/100,e,l,this.mhzCurrent),this.msEndThisRun+=U,U}addTimer(V,R,U=0){let l=this.aTimers.length;return this.aTimers.push([V,-1,U,R]),U&&this.setTimer(l,U),l}clearTimer(V){return V>=0&&V<this.aTimers.length&&(this.aTimers[V][1]=-1,!0)}findTimer(V){for(let R=0;R<this.aTimers.length;R++){let U=this.aTimers[R];if(U[0]==V)return U}return null}isTimerSet(V){return V>=0&&V<this.aTimers.length&&this.aTimers[V][1]>=0}resetTimers(){for(let V=this.aTimers.length-1;V>=0;V--){let R=this.aTimers[V];R[2]&&this.setTimer(V,R[2],!0)}}restoreTimers(V){for(let R=0;R<V.length;R++){let U=V[R],l=this.findTimer(U[0]);l&&(l[1]=U[1])}}saveTimers(){let V=[];for(let R=0;R<this.aTimers.length;R++){let U=this.aTimers[R];V.push([U[0],U[1],U[2],!0])}return V}setTimer(V,R,U){let l=-1;if(V>=0&&V<this.aTimers.length){let e=this.aTimers[V];(U||e[1]<0)&&(l=R>0?this.getMSCycles(R):-R,this.flags.running&&(l+=this.endBurst()),e[1]=l)}return l}updateTimers(V){for(let R=this.aTimers.length-1;R>=0;R--){let U=this.aTimers[R];U[1]<0||(U[1]-=V,U[1]<=0&&(DEBUG&&this.printf(MESSAGE.CPU+MESSAGE.TIMER,"updateTimer(%d): firing %s with only %d cycles left\n",V,U[0],U[1]+V),U[1]=-1,U[3](),U[2]&&(this.setTimer(R,U[2]),DEBUG&&this.printf(MESSAGE.CPU+MESSAGE.TIMER,"updateTimer(%d): rearming %s for %dms (%d cycles)\n",V,U[0],U[2],U[1]))))}}getMSCycles(V){return this.nBaseCyclesPerSecond*this.nCurrentMultiplier/1e3*V|0}getBurstCycles(V){for(let R=this.aTimers.length-1;R>=0;R--){let U=this.aTimers[R];U[1]<0||V>U[1]&&(V=U[1])}return V}endBurst(){let V=this.nBurstCycles-this.nStepCycles;return this.nBurstCycles=this.nStepCycles=0,this.nCyclesThisRun+=V,this.nRunCycles+=V,V}runCPU(){if(this.idRunTimeout=0,!this.flags.running)return;let V=0,R=0,U=0;DEBUG&&(V=Component.getTime()),this.calcStartTime();try{this.flags.yield=!1;do{let V=this.getBurstCycles(this.flags.checksum?1:this.getCurrentCyclesPerSecond());this.chipset&&(this.chipset.updateAllTimers(),V=this.chipset.getTimerCycleLimit(0,V),V=this.chipset.getRTCCycleLimit(V));try{this.stepCPU(V)}catch(V){if("number"!=typeof V)throw V;MAXDEBUG&&this.printf("CPU exception %#04x\n",V)}V=this.endBurst(),V&&(U+=V,this.updateTimers(V),this.updateChecksum(V))}while(this.flags.running&&!this.flags.yield)}catch(V){return this.stopCPU(),this.updateCPU(),this.cmp&&this.cmp.stop(Component.getTime(),this.getCycles()),void this.setError(V.stack||V.message)}if(DEBUG&&(R=Component.getTime(),this.addTimeLog(U,this.getCycles(),V,R-V)),this.flags.running){let V=this.calcRemainingTime();DEBUG&&this.addTimeLog(0,0,R,V),this.idRunTimeout=setTimeout(this.onRunTimeout,V)}}startCPU(V,R){if(this.isError())return!1;if(this.flags.running)return R||this.printf(MESSAGE.NONE,"%s busy\n",this.toString()),!1;this.idRunTimeout&&(clearTimeout(this.idRunTimeout),this.idRunTimeout=0),this.setSpeed(),this.flags.running=!0,this.flags.starting=!0,this.chipset&&this.chipset.start();let U=this.bindings.run;return U&&(U.textContent="Halt"),this.cmp&&(this.cmp.updateStatus(!0),V&&this.cmp.updateFocus(),this.cmp.start(Component.getTime(),this.getCycles())),this.idRunTimeout=setTimeout(this.onRunTimeout,0),!0}stepCPU(V){return 0}stopCPU(V){let R=!1;if(this.flags.running){let V=this.endBurst();V&&(this.updateTimers(V),this.updateChecksum(V)),this.addCycles(this.nRunCycles),this.nRunCycles=0,this.flags.running=!1,this.chipset&&this.chipset.stop();let U=this.bindings.run;U&&(U.textContent="Run"),this.cmp&&(this.cmp.stop(Component.getTime(),this.getCycles()),this.cmp.updateStatus(!0)),this.dbg||this.printf(MESSAGE.STATUS,"Stopped\n"),R=!0}return this.flags.complete=V,R}nonCPU(V){let R=Component.getTime();if(V()){let V=Component.getTime();return this.msDiscount+=V-R,!0}return!1}updateCPU(V){this.cmp&&this.cmp.updateStatus(V)}yieldCPU(){this.flags.yield=!0,this.updateCPU()}}
class CPUx86 extends CPU{static PFLEN=16;static PFINFO={LENGTH:CPUx86.PFLEN,IP_MASK:CPUx86.PFLEN-1&-4};static PAGEBLOCKS_CACHE=512;constructor(V){let R,U=+V.model||X86.MODEL_8088;switch(U){case X86.MODEL_8088:default:R=4772727;break;case X86.MODEL_80286:R=6e6;break;case X86.MODEL_80386:R=16e6}super(V,R),this.model=U;let l=V.stepping;this.stepping=U+(l?StrLib.parseInt(l,16):0),this.initProcessor(),this.aIntNotify=[],this.aIntReturn=[],this.cIntReturn=0,this.resetCycles(),this.flags.complete=this.flags.debugCheck=!1,this.cLiveRegs=0,this.aBusBlocks=this.aMemBlocks=[],this.nBusMask=this.nMemMask=-1,this.nBlockShift=this.nBlockSize=this.nBlockLimit=this.nBlockTotal=this.nBlockMask=0,PREFETCH&&(this.cbPrefetch=0,this.adwPrefetch=null),this.resetRegs()}initMemory(V,R){this.aBusBlocks=this.aMemBlocks=V,this.nBlockShift=R,this.nBlockSize=1<<this.nBlockShift,this.nBlockLimit=this.nBlockSize-1,this.nBlockTotal=V.length,this.nBlockMask=this.nBlockTotal-1,PREFETCH&&(this.adwPrefetch=new Array(CPUx86.PFINFO.LENGTH))}setAddressMask(V){this.nBusMask=this.nMemMask=V}addMemBreak(V,R,U){if(DEBUGGER){let l=V>>>this.nBlockShift,e=U?this.aBusBlocks:this.aMemBlocks;if(e[l])return e[l].addBreakpoint(V&this.nBlockLimit,R),U&&this.flushPageBlocks(),!0}return!1}removeMemBreak(V,R,U){if(DEBUGGER){let l=V>>>this.nBlockShift;(U?this.aBusBlocks:this.aMemBlocks)[l].removeBreakpoint(V&this.nBlockLimit,R),U&&this.flushPageBlocks()}}addMemCheck(V,R){let U=V>>>this.nBlockShift;this.aMemBlocks[U].addBreakpoint(V&this.nBlockLimit,R,this)}removeMemCheck(V,R){let U=V>>>this.nBlockShift;this.aMemBlocks[U].removeBreakpoint(V&this.nBlockLimit,R)}enablePageBlocks(){if(!PAGEBLOCKS)return void this.setError("PAGEBLOCKS support required");let V;if(this.aMemBlocks===this.aBusBlocks){for(this.aMemBlocks=new Array(this.nBlockTotal),this.blockUnpaged=new Memoryx86(void 0,0,0,Memoryx86.TYPE.UNPAGED,null,this),this.blockUnpaged.copyBreakpoints(this.dbg),V=0;V<this.nBlockTotal;V++)this.aMemBlocks[V]=this.blockUnpaged;this.memEmpty=new Memoryx86,this.aCacheBlocks=new Array(CPUx86.PAGEBLOCKS_CACHE),this.iCacheBlocks=0}else for(let R=0;R<this.aBlocksPaged.length;R++)V=this.aBlocksPaged[R],this.releasePageBlock(this.aMemBlocks[V]),this.aMemBlocks[V]=this.blockUnpaged;this.aBlocksPaged=[]}flushPageBlocks(){this.regCR0&X86.CR0.PG&&this.enablePageBlocks()}acquirePageBlock(V){let R;return this.iCacheBlocks>0?(R=this.aCacheBlocks[--this.iCacheBlocks],R.init(V)):R=new Memoryx86(V,0,0,Memoryx86.TYPE.PAGED),R}releasePageBlock(V){this.iCacheBlocks<CPUx86.PAGEBLOCKS_CACHE&&(this.aCacheBlocks[this.iCacheBlocks++]=V)}mapPageBlock(V,R,U){let l=(V&X86.LADDR.PDE.MASK)>>>X86.LADDR.PDE.SHIFT,e=this.regCR3+l,t=this.aBusBlocks[(e&this.nBusMask)>>>this.nBlockShift],T=t.readLong(l);if(!(T&X86.PTE.PRESENT))return U||X86.helpPageFault.call(this,V,!1,R),this.memEmpty;if(!(T&X86.PTE.USER)&&3==this.nCPL)return U||X86.helpPageFault.call(this,V,!0,R),this.memEmpty;let k=(V&X86.LADDR.PTE.MASK)>>>X86.LADDR.PTE.SHIFT,F=(T&X86.PTE.FRAME)+k,W=this.aBusBlocks[(F&this.nBusMask)>>>this.nBlockShift],a=W.readLong(k);if(!(a&X86.PTE.PRESENT))return U||X86.helpPageFault.call(this,V,!1,R),this.memEmpty;if(!(a&X86.PTE.USER)&&3==this.nCPL)return U||X86.helpPageFault.call(this,V,!0,R),this.memEmpty;let s=(a&X86.PTE.FRAME)+(V&X86.LADDR.OFFSET),Z=this.aBusBlocks[(s&this.nBusMask)>>>this.nBlockShift];if(U)return Z;let S=V>>>this.nBlockShift,h=this.aMemBlocks[S],E=this.acquirePageBlock(V&~X86.LADDR.OFFSET);return E.setPhysBlock(Z,t,l,W,k),E.copyBreakpoints(this.dbg,h),this.aMemBlocks[S]=E,this.aBlocksPaged.push(S),E}disablePageBlocks(){this.aMemBlocks!==this.aBusBlocks&&(this.aMemBlocks=this.aBusBlocks,this.blockUnpaged=null,this.aBlocksPaged=null,this.memEmpty=null)}isPagingEnabled(){return!!(this.regCR0&X86.CR0.PG)}initProcessor(){if(this.PS_SET=X86.PS_SET_8086,this.PS_DIRECT=X86.PS_DIRECT_8086,this.PS_CLEAR_RM=X86.PS.IOPL.MASK|X86.PS.NT,this.OPFLAG_NOINTR_8086=X86.OPFLAG.NOINTR,this.nShiftCountMask=255,this.cycleCounts=this.model>=X86.MODEL_80286?X86.CYCLES_80286:X86.CYCLES_8088,this.aOps=X86.aOps,this.aOpGrp4b=X86.aOpGrp4b,this.aOpGrp4w=X86.aOpGrp4w,this.aOpGrp6=X86.aOpGrp6Real,this.model>=X86.MODEL_80186&&(this.aOps=X86.aOps.slice(),this.aOpGrp4b=X86.aOpGrp4b.slice(),this.aOpGrp4w=X86.aOpGrp4w.slice(),this.nShiftCountMask=31,this.aOps[15]=X86.opInvalid,this.aOps[X86.OPCODE.PUSHA]=X86.opPUSHA,this.aOps[X86.OPCODE.POPA]=X86.opPOPA,this.aOps[X86.OPCODE.BOUND]=X86.opBOUND,this.aOps[X86.OPCODE.ARPL]=X86.opInvalid,this.aOps[X86.OPCODE.FS]=X86.opInvalid,this.aOps[X86.OPCODE.GS]=X86.opInvalid,this.aOps[X86.OPCODE.OS]=X86.opInvalid,this.aOps[X86.OPCODE.AS]=X86.opInvalid,this.aOps[X86.OPCODE.PUSHN]=X86.opPUSHn,this.aOps[X86.OPCODE.IMULN]=X86.opIMULn,this.aOps[X86.OPCODE.PUSH8]=X86.opPUSH8,this.aOps[X86.OPCODE.IMUL8]=X86.opIMUL8,this.aOps[X86.OPCODE.INSB]=X86.opINSb,this.aOps[X86.OPCODE.INSW]=X86.opINSw,this.aOps[X86.OPCODE.OUTSB]=X86.opOUTSb,this.aOps[X86.OPCODE.OUTSW]=X86.opOUTSw,this.aOps[192]=X86.opGRP2bn,this.aOps[193]=X86.opGRP2wn,this.aOps[X86.OPCODE.ENTER]=X86.opENTER,this.aOps[X86.OPCODE.LEAVE]=X86.opLEAVE,this.aOps[X86.OPCODE.INT1]=X86.opUndefined,this.aOpGrp4b[7]=X86.fnGRPInvalid,this.aOpGrp4w[7]=X86.fnGRPInvalid,this.model>=X86.MODEL_80286)){let V;for(this.PS_SET=X86.PS.BIT1,this.PS_DIRECT|=X86.PS.IOPL.MASK|X86.PS.NT,this.OPFLAG_NOINTR_8086=0,this.aOps[15]=X86.op0F,this.aOps0F=X86.aOps0F.slice(),V=0;V<this.aOps0F.length;V++)this.aOps0F[V]||(this.aOps0F[V]=X86.opUndefined);if(this.aOps[X86.OPCODE.PUSHSP]=X86.opPUSHSP,this.aOps[X86.OPCODE.ARPL]=X86.opARPL,I386)if(this.model>=X86.MODEL_80386){let V;for(V in this.PS_CLEAR_RM=0,this.PS_DIRECT|=X86.PS.RF|X86.PS.VM,this.aOps[X86.OPCODE.FS]=X86.opFS,this.aOps[X86.OPCODE.GS]=X86.opGS,this.aOps[X86.OPCODE.OS]=X86.opOS,this.aOps[X86.OPCODE.AS]=X86.opAS,this.aOps[X86.OPCODE.INT1]=X86.opINT1,X86.aOps0F386)this.aOps0F[+V]=X86.aOps0F386[+V];this.stepping>=X86.STEPPING_80386_A0&&this.stepping<=X86.STEPPING_80386_B0&&(this.aOps0F[166]=X86.opXBTS,this.aOps0F[167]=X86.opIBTS)}else for(V=0;V<X86.aOps0F386.length;V++)X86.aOps0F386[V]&&this.aOps0F[V]==X86.opUndefined&&(this.aOps0F[V]=X86.opInvalid)}}reset(){this.resetFPU(),this.resetRegs(),this.resetCycles(),this.clearError()}resetFPU(){this.chipset&&(this.chipset.getDIPCoprocessor()?this.fpuActive=this.fpu:this.fpuActive=null)}getReg(V){let R;switch(V){case 0:R=this.regEAX;break;case 1:R=this.regECX;break;case 2:R=this.regEDX;break;case 3:R=this.regEBX;break;case 4:R=this.getSP();break;case 5:R=this.regEBP;break;case 6:R=this.regESI;break;case 7:R=this.regEDI}return R}setReg(V,R){switch(V){case 0:this.regEAX=R;break;case 1:this.regECX=R;break;case 2:this.regEDX=R;break;case 3:this.regEBX=R;break;case 4:this.setSP(R);break;case 5:this.regEBP=R;break;case 6:this.regESI=R;break;case 7:this.regEDI=R}}resetRegs(){if(this.regEAX=0,this.regEBX=0,this.regECX=0,this.regEDX=0,this.regESP=0,this.regEBP=0,this.regESI=0,this.regEDI=0,this.fMDSet=!1,this.regMDLo=this.regMDHi=0,this.r64Div=[0,0],this.r64Rem=[0,0],this.regXX=0,this.bOpcode=0,this.bModRM=0,this.regCR0=X86.CR0.MSW.ON,this.addrIDT=0,this.addrIDTLimit=1023,this.regPS=this.nIOPL=0,this.resultDst=this.resultSrc=this.resultArith=this.resultLogic=0,this.nFault=-1,this.opCS=this.opSS=-1,this.opLIP=this.opLSP=X86.ADDR_INVALID,this.segCS=new Segx86(this,Segx86.ID.CODE,"CS"),this.segDS=new Segx86(this,Segx86.ID.DATA,"DS"),this.segES=new Segx86(this,Segx86.ID.DATA,"ES"),this.segSS=new Segx86(this,Segx86.ID.STACK,"SS"),this.setSP(0),this.setSS(0),I386&&this.model>=X86.MODEL_80386){switch(this.stepping){case X86.STEPPING_80386_B0:case X86.STEPPING_80386_B1:this.regEDX=771;break;case X86.STEPPING_80386_C0:this.regEDX=772;break;case X86.STEPPING_80386_D0:this.regEDX=773;break;case X86.STEPPING_80386_D1:case X86.STEPPING_80386_D2:this.regEDX=776;break;default:this.regEDX=768}this.regCR0=X86.CR0.ON|X86.CR0.ET,this.regCR1=0,this.regCR2=0,this.regCR3=0,this.regDR=[0,0,0,0,null,null,0,0],this.regTR=[null,null,null,null,null,null,0,0],this.segFS=new Segx86(this,Segx86.ID.DATA,"FS"),this.segGS=new Segx86(this,Segx86.ID.DATA,"GS"),this.disablePageBlocks()}this.segNULL=new Segx86(this,Segx86.ID.NULL,"NULL"),this.segData=this.segDS,this.segStack=this.segSS,this.opFlags=this.opPrefixes=0,this.regEA=this.regEAWrite=X86.ADDR_INVALID,this.segEA=this.segNULL,this.intFlags=X86.INTFLAG.NONE,BACKTRACK&&(this.backTrack={btiAL:0,btiAH:0,btiBL:0,btiBH:0,btiCL:0,btiCH:0,btiDL:0,btiDH:0,btiBPLo:0,btiBPHi:0,btiSILo:0,btiSIHi:0,btiDILo:0,btiDIHi:0,btiMem0:0,btiMem1:0,btiMem2:0,btiMem3:0,btiEALo:0,btiEAHi:0,btiIO:0}),this.model<X86.MODEL_80286?this.setCSIP(0,65535):(this.addrGDT=0,this.addrGDTLimit=65535,this.segLDT=new Segx86(this,Segx86.ID.LDT,"LDT",!0),this.segTSS=new Segx86(this,Segx86.ID.TSS,"TSS",!0),this.segVER=new Segx86(this,Segx86.ID.VER,"VER",!0),this.setCSIP(65520,61440),this.setCSBase(-65536)),this.setPS(0),this.setProtMode()}updateAddrSize(){I386?2==this.sizeAddr?(this.getAddr=PREFETCH?this.getShortPrefetch:this.getShort,this.decodeModRegByte=X86.modRegByte16,this.decodeModMemByte=X86.modMemByte16,this.decodeModGrpByte=X86.modGrpByte16,2==this.sizeData?(this.decodeModRegWord=X86.modRegShort16,this.decodeModMemWord=X86.modMemShort16,this.decodeModGrpWord=X86.modGrpShort16):(this.decodeModRegWord=X86.modRegLong16,this.decodeModMemWord=X86.modMemLong16,this.decodeModGrpWord=X86.modGrpLong16)):(this.getAddr=PREFETCH?this.getLongPrefetch:this.getLong,this.decodeModRegByte=X86.modRegByte32,this.decodeModMemByte=X86.modMemByte32,this.decodeModGrpByte=X86.modGrpByte32,2==this.sizeData?(this.decodeModRegWord=X86.modRegShort32,this.decodeModMemWord=X86.modMemShort32,this.decodeModGrpWord=X86.modGrpShort32):(this.decodeModRegWord=X86.modRegLong32,this.decodeModMemWord=X86.modMemLong32,this.decodeModGrpWord=X86.modGrpLong32)):(this.getAddr=PREFETCH?this.getShortPrefetch:this.getShort,this.decodeModRegByte=X86.modRegByte16,this.decodeModMemByte=X86.modMemByte16,this.decodeModGrpByte=X86.modGrpByte16,this.decodeModRegWord=X86.modRegShort16,this.decodeModMemWord=X86.modMemShort16,this.decodeModGrpWord=X86.modGrpShort16)}setDataSize(V){this.sizeData!=V&&(this.opPrefixes|=X86.OPFLAG.DATASIZE,this.sizeData=V,this.maskData=2==V?65535:-1,this.updateDataSize())}updateDataSize(){2==this.sizeData?(this.typeData=X86.RESULT.WORD,this.getWord=this.getShort,this.setWord=this.setShort,2==this.sizeAddr?(this.decodeModRegWord=X86.modRegShort16,this.decodeModMemWord=X86.modMemShort16,this.decodeModGrpWord=X86.modGrpShort16):(this.decodeModRegWord=X86.modRegShort32,this.decodeModMemWord=X86.modMemShort32,this.decodeModGrpWord=X86.modGrpShort32)):(this.typeData=X86.RESULT.DWORD,this.getWord=this.getLong,this.setWord=this.setLong,2==this.sizeAddr?(this.decodeModRegWord=X86.modRegLong16,this.decodeModMemWord=X86.modMemLong16,this.decodeModGrpWord=X86.modGrpLong16):(this.decodeModRegWord=X86.modRegLong32,this.decodeModMemWord=X86.modMemLong32,this.decodeModGrpWord=X86.modGrpLong32))}resetSizes(){this.sizeAddr!=this.segCS.sizeAddr&&(this.sizeAddr=this.segCS.sizeAddr,this.maskAddr=this.segCS.maskAddr,this.updateAddrSize()),this.sizeData!=this.segCS.sizeData&&(this.sizeData=this.segCS.sizeData,this.maskData=this.segCS.maskData,this.updateDataSize()),this.opPrefixes&=~(X86.OPFLAG.ADDRSIZE|X86.OPFLAG.DATASIZE)}getChecksum(){let V=this.regEAX+this.regEBX+this.regECX+this.regEDX+this.getSP()+this.regEBP+this.regESI+this.regEDI|0;return V=V+this.getIP()+this.getCS()+this.getDS()+this.getSS()+this.getES()+this.getPS()|0,V}addIntNotify(V,R){void 0===this.aIntNotify[V]&&(this.aIntNotify[V]=[]),this.aIntNotify[V].push(R)}checkIntNotify(V){let R=this.aIntNotify[V];if(void 0!==R)for(let V=0;V<R.length;V++)if(!R[V](this.regLIP))return!1;var U,l;return DEBUGGER&&this.flags.debugCheck&&this.messageEnabled(MESSAGE.INT)&&this.dbg.messageInt(V,this.regLIP)&&MAXDEBUG&&this.addIntReturn(this.regLIP,(U=this,l=this.getCycles(),function(R){U.dbg.messageIntReturn(V,R,U.getCycles()-l)})),!0}addIntReturn(V,R){void 0!==R&&(null==this.aIntReturn[V]&&this.cIntReturn++,this.aIntReturn[V]=R)}checkIntReturn(V){let R=this.aIntReturn[V];null!=R&&(R(--this.cIntReturn),delete this.aIntReturn[V])}checkDebugRegisters(V){let R=this.regDR[7],U=R>>16;for(let l=0;l<4;l++){if(R&(X86.DR7.L0|X86.DR7.G0)){let R=!!(1&U),e=this.regDR[l];e&=~(U>>2&3),V?this.addMemCheck(e,R):this.removeMemCheck(e,R)}R>>=2,U>>=4}}checkMemoryException(V,R,U){if(!(this.opFlags&X86.OPFLAG.DBEXC)&&this.regDR[7]&X86.DR7.ENABLE){R--;let l=this.regDR[7],e=l>>16,t=X86.DR7.RW0>>16,T=U?1:0==U?3:0;for(let U=0;U<4;U++){if(l&(X86.DR7.L0|X86.DR7.G0)&&(e&t)==T){let l=e>>2;if(V+R>=this.regDR[U]&&V<=this.regDR[U]+l)return this.regDR[6]|=1<<U,void(this.intFlags|=X86.INTFLAG.TRAP)}l>>=2,e>>=4}}}isProtMode(){return!!(this.regCR0&X86.CR0.MSW.PE)}isV86Mode(){return!!(this.regPS&X86.PS.VM)}setProtMode(V,R){void 0===V&&(V=this.isProtMode()),void 0===R&&(R=this.isV86Mode()),!DEBUG||V==this.isProtMode()&&R==this.isV86Mode()||this.printf(MESSAGE.ADDR,"CPU switching to %s-mode\n",V?R?"v86":"protected":"real"),this.aOpGrp6=V&&!R?X86.aOpGrp6Prot:X86.aOpGrp6Real,this.segCS.updateMode(!1,V,R),this.segDS.updateMode(!1,V,R),this.segSS.updateMode(!1,V,R),this.segES.updateMode(!1,V,R),I386&&this.model>=X86.MODEL_80386&&(this.segFS.updateMode(!1,V,R),this.segGS.updateMode(!1,V,R)),this.resetSizes()}saveProtMode(){if(null!=this.addrGDT){let V=[this.regCR0,this.addrGDT,this.addrGDTLimit,this.addrIDT,this.addrIDTLimit,this.segLDT.save(),this.segTSS.save(),this.nIOPL];return I386&&this.model>=X86.MODEL_80386&&(V.push(this.regCR1),V.push(this.regCR2),V.push(this.regCR3),V.push(this.regDR),V.push(this.regTR)),V}return null}restoreProtMode(V){V&&V.length&&(this.regCR0=V[0],this.addrGDT=V[1],this.addrGDTLimit=V[2],this.addrIDT=V[3],this.addrIDTLimit=V[4],this.segLDT.restore(V[5]),this.segTSS.restore(V[6]),this.nIOPL=V[7],I386&&this.model>=X86.MODEL_80386&&(this.regCR1=V[8],this.regCR2=V[9],this.regCR3=V[10],this.regDR=V[11],this.regTR=V[12]),this.setProtMode())}save(V){let R=new State(this);R.set(0,[this.regEAX,this.regEBX,this.regECX,this.regEDX,this.getSP(),this.regEBP,this.regESI,this.regEDI]);let U=[this.getIP(),this.segCS.save(),this.segDS.save(),this.segSS.save(),this.segES.save(),this.saveProtMode(),this.getPS()];return I386&&this.model>=X86.MODEL_80386&&(U.push(this.segFS.save()),U.push(this.segGS.save())),R.set(1,U),R.set(2,[this.segData.sName,this.segStack.sName,this.opFlags,this.opPrefixes,this.intFlags,this.regEA,this.regEAWrite]),R.set(3,[0,this.nTotalCycles,this.getSpeed(),V,this.saveTimers()]),R.set(4,this.bus.saveMemory()),R.data()}restore(V){let R=V[0];this.regEAX=R[0],this.regEBX=R[1],this.regECX=R[2],this.regEDX=R[3];let U=R[4];this.regEBP=R[5],this.regESI=R[6],this.regEDI=R[7],R=V[1],this.segCS.restore(R[1]),this.segDS.restore(R[2]),this.segSS.restore(R[3]),this.segES.restore(R[4]),this.restoreProtMode(R[5]),this.setPS(R[6]);let l=!1;return this.bus.restoreMemory(V[4])&&(this.setCSIP(R[0],this.segCS.sel),this.setSP(U),this.setSS(this.segSS.sel),I386&&this.model>=X86.MODEL_80386&&(this.segFS.restore(R[7]),this.segGS.restore(R[8])),l=!0),R=V[2],this.segData=null!=R[0]&&this.getSeg(R[0])||this.segDS,this.segStack=null!=R[1]&&this.getSeg(R[1])||this.segSS,this.opFlags=R[2],this.opPrefixes=R[3],this.intFlags=R[4],this.regEA=R[5],this.regEAWrite=R[6],R=V[3],this.nTotalCycles=R[1],this.setSpeed(R[2]),null!=R[3]&&0!==this.flags.autoStart&&(this.flags.autoStart=R[3]||null),null!=R[4]&&this.restoreTimers(R[4]),this.chipset&&this.chipset.syncRTCTime(),l}getSeg(V){switch(V){case"CS":return this.segCS;case"DS":return this.segDS;case"SS":return this.segSS;case"ES":return this.segES;case"NULL":return this.segNULL;default:return[0,V,0,0,""]}}getCS(){return this.segCS.sel}setCS(V){return null!=this.setCSIP(this.getIP(),V)&&(BUGS_8086||(this.opFlags|=this.OPFLAG_NOINTR_8086),!0)}getDS(){return this.segDS.sel}setDS(V){return this.segDS.load(V)!==X86.ADDR_INVALID&&(BUGS_8086||(this.opFlags|=this.OPFLAG_NOINTR_8086),!0)}getSS(){return this.segSS.sel}setSS(V,R){let U=this.getSP();return this.segSS.load(V)!==X86.ADDR_INVALID&&(this.setSP(U),this.segSS.fExpDown?(this.regLSPLimit=(this.segSS.base>>>0)+(this.segSS.maskAddr>>>0),this.regLSPLimitLow=(this.segSS.base>>>0)+(this.segSS.limit>>>0)):(this.regLSPLimit=(this.segSS.base>>>0)+(this.segSS.limit>>>0),this.regLSPLimitLow=this.segSS.base>>>0),this.regLSPLimit=Math.min(this.regLSPLimit,this.nMemMask>>>0),this.regLSPLimitLow=Math.min(this.regLSPLimitLow,this.nMemMask>>>0),BUGS_8086||R||(this.opFlags|=X86.OPFLAG.NOINTR),!0)}getES(){return this.segES.sel}setES(V){return this.segES.load(V)!==X86.ADDR_INVALID&&(BUGS_8086||(this.opFlags|=this.OPFLAG_NOINTR_8086),!0)}getFS(){return this.segFS.sel}setFS(V){return this.segFS.load(V)!==X86.ADDR_INVALID}getGS(){return this.segGS.sel}setGS(V){return this.segGS.load(V)!==X86.ADDR_INVALID}getIP(){return this.regLIP-this.segCS.base|0}setIP(V){this.regLIP=this.segCS.base+(V&(I386?this.maskData:65535))|0,PREFETCH&&this.refillPrefetch()}setLIP(V){this.regLIP=V,this.regLIPMax=(this.segCS.base>>>0)+(this.segCS.limit>>>0)+1,this.nCPL=this.segCS.cpl,I386&&this.model>=X86.MODEL_80386&&this.resetSizes(),PREFETCH&&this.adwPrefetch&&this.refillPrefetch()}setCSIP(V,R,U){let l=this.segCS.loadCode(V,R,U);return l!==X86.ADDR_INVALID?(this.setLIP(l+(this.segCS.offIP&(I386?this.segCS.maskData:65535))),this.segCS.fStackSwitch):null}setCSBase(V){let R=this.getIP();V=this.segCS.setBase(V),this.regLIP=V+R|0,this.regLIPMax=(V>>>0)+(this.segCS.limit>>>0)+1}checkIP(V){let R=(this.regLIP>>>0)+V;return R>this.regLIPMax&&(this.model<=X86.MODEL_8088?(R=this.segCS.base+(R-this.regLIPMax&(I386?this.maskData:65535)),2==V&&(this.opFlags|=X86.OPFLAG.WRAP)):X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0)),0|R}resetIP(){PREFETCH?(this.cbPrefetch+=this.regLIP-this.opLIP,this.regLIP=this.opLIP,this.cbPrefetch>CPUx86.PFINFO.LENGTH&&this.refillPrefetch()):this.regLIP=this.opLIP}rewindIP(V=!1){V&&this.opPrefixes&X86.OPFLAG.SEG&&this.model<=X86.MODEL_8088&&this.opPrefixes&X86.OPFLAG.IRET&&this.regPS&X86.PS.IF||(this.opFlags|=X86.OPFLAG.REPEAT,this.resetIP())}getSP(){return I386?this.regESP&~this.segSS.maskAddr|this.regLSP-this.segSS.base:this.regLSP-this.segSS.base|0}setSP(V){I386?(this.regESP=V,this.regLSP=this.segSS.base+(V&this.segSS.maskAddr)|0):this.regLSP=this.segSS.base+V|0}setArithResult(V,R,U,l,e){if((l&X86.RESULT.ALL)!=X86.RESULT.ALL&&l!=this.resultType){let V=(l^this.resultType)&this.resultType;V&&(V&X86.RESULT.CF&&this.getCF(),V&X86.RESULT.PF&&this.getPF(),V&X86.RESULT.AF&&this.getAF(),V&X86.RESULT.ZF&&this.getZF(),V&X86.RESULT.SF&&this.getSF(),V&X86.RESULT.OF&&this.getOF())}e?(this.resultDst=U,this.resultArith=V):(this.resultDst=V,this.resultArith=U),this.resultSrc=R,this.resultLogic=U,this.resultType=l}setLogicResult(V,R,U,l){return this.resultType=R|X86.RESULT.LOGIC,this.resultLogic=V,U?this.setCF():this.clearCF(),l?this.setOF():this.clearOF(),this.clearAF(),V}setRotateResult(V,R,U){R&U?this.setCF():this.clearCF(),(V^R)&U?this.setOF():this.clearOF()}getCarry(){return this.getCF()?1:0}getCF(){return this.resultType&X86.RESULT.CF&&(this.regPS&=~X86.PS.CF,(this.resultDst^(this.resultDst^this.resultSrc)&(this.resultSrc^this.resultArith))&this.resultType&X86.RESULT.TYPE&&(this.regPS|=X86.PS.CF),this.resultType&=~X86.RESULT.CF),this.regPS&X86.PS.CF}getPF(){return this.resultType&X86.RESULT.PF&&(this.regPS&=~X86.PS.PF,38505>>(15&(this.resultLogic^this.resultLogic>>4))&1&&(this.regPS|=X86.PS.PF),this.resultType&=~X86.RESULT.PF),this.regPS&X86.PS.PF}getAF(){return this.resultType&X86.RESULT.AF&&(this.regPS&=~X86.PS.AF,16&(this.resultArith^this.resultDst^this.resultSrc)&&(this.regPS|=X86.PS.AF),this.resultType&=~X86.RESULT.AF),this.regPS&X86.PS.AF}getZF(){return this.resultType&X86.RESULT.ZF&&(this.regPS&=~X86.PS.ZF,this.resultLogic&((this.resultType&X86.RESULT.TYPE)-1|this.resultType&X86.RESULT.TYPE)||(this.regPS|=X86.PS.ZF),this.resultType&=~X86.RESULT.ZF),this.regPS&X86.PS.ZF}getSF(){return this.resultType&X86.RESULT.SF&&(this.regPS&=~X86.PS.SF,this.resultLogic&this.resultType&X86.RESULT.TYPE&&(this.regPS|=X86.PS.SF),this.resultType&=~X86.RESULT.SF),this.regPS&X86.PS.SF}getOF(){return this.resultType&X86.RESULT.OF&&(this.regPS&=~X86.PS.OF,(this.resultDst^this.resultArith)&(this.resultSrc^this.resultArith)&this.resultType&X86.RESULT.TYPE&&(this.regPS|=X86.PS.OF),this.resultType&=~X86.RESULT.OF),this.regPS&X86.PS.OF}getTF(){return this.regPS&X86.PS.TF}getIF(){return this.regPS&X86.PS.IF}getDF(){return this.regPS&X86.PS.DF}clearCF(){this.resultType&=~X86.RESULT.CF,this.regPS&=~X86.PS.CF}clearPF(){this.resultType&=~X86.RESULT.PF,this.regPS&=~X86.PS.PF}clearAF(){this.resultType&=~X86.RESULT.AF,this.regPS&=~X86.PS.AF}clearZF(){this.resultType&=~X86.RESULT.ZF,this.regPS&=~X86.PS.ZF}clearSF(){this.resultType&=~X86.RESULT.SF,this.regPS&=~X86.PS.SF}clearIF(){this.regPS&=~X86.PS.IF}clearDF(){this.regPS&=~X86.PS.DF}clearOF(){this.resultType&=~X86.RESULT.OF,this.regPS&=~X86.PS.OF}setCF(){this.resultType&=~X86.RESULT.CF,this.regPS|=X86.PS.CF}setPF(){this.resultType&=~X86.RESULT.PF,this.regPS|=X86.PS.PF}setAF(){this.resultType&=~X86.RESULT.AF,this.regPS|=X86.PS.AF}setZF(){this.resultType&=~X86.RESULT.ZF,this.regPS|=X86.PS.ZF}setSF(){this.resultType&=~X86.RESULT.SF,this.regPS|=X86.PS.SF}setIF(){this.regPS|=X86.PS.IF}setDF(){this.regPS|=X86.PS.DF}setOF(){this.resultType&=~X86.RESULT.OF,this.regPS|=X86.PS.OF}getPS(){return this.regPS&~X86.PS_CACHED|this.getCF()|this.getPF()|this.getAF()|this.getZF()|this.getSF()|this.getOF()}setMSW(V){V|=this.regCR0&X86.CR0.MSW.PE|X86.CR0.MSW.ON,this.regCR0=this.regCR0&~X86.CR0.MSW.MASK|V&X86.CR0.MSW.MASK,this.regCR0&X86.CR0.MSW.PE&&this.setProtMode(!0)}setPS(V,R){this.regCR0&X86.CR0.MSW.PE||(V&=~this.PS_CLEAR_RM),void 0===R&&(R=this.nCPL),R?V=V&~X86.PS.IOPL.MASK|this.regPS&X86.PS.IOPL.MASK:this.nIOPL=(V&X86.PS.IOPL.MASK)>>X86.PS.IOPL.SHIFT,R>this.nIOPL&&(V=V&~X86.PS.IF|this.regPS&X86.PS.IF),this.resultType=X86.RESULT.BYTE,this.regPS=this.regPS&~(this.PS_DIRECT|X86.PS_CACHED)|V&(this.PS_DIRECT|X86.PS_CACHED)|this.PS_SET,this.regPS&X86.PS.TF&&(this.intFlags|=X86.INTFLAG.TRAP,this.opFlags|=X86.OPFLAG.NOINTR)}checkIOPM(V,R,U){let l=0;if(I386&&this.regCR0&X86.CR0.MSW.PE&&(this.nCPL>this.nIOPL||this.regPS&X86.PS.VM)&&this.segTSS.addrIOPM){let U=V>>>3,e=this.segTSS.addrIOPM+U;for(l=(1<<R)-1<<(7&V);l&&e<=this.segTSS.addrIOPMLimit;){if(this.getByte(e)&l)break;l>>>=8,e++}}return!l||(this.printf(MESSAGE.IOPM+MESSAGE.ADDR,"checkIOPM(%#06x,%d,%s): trapped\n",V,R,U?"input":"output"),X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0),!1)}setBinding(V,R,U,l){let e=!1;switch(R){case"EAX":case"EBX":case"ECX":case"EDX":case"ESP":case"EBP":case"ESI":case"EDI":case"EIP":case"AX":case"BX":case"CX":case"DX":case"SP":case"BP":case"SI":case"DI":case"IP":case"PC":case"CS":case"DS":case"SS":case"ES":case"FS":case"GS":case"CR0":case"CR2":case"CR3":case"PS":case"C":case"P":case"A":case"Z":case"S":case"T":case"I":case"D":case"V":this.bindings[R]=U,this.cLiveRegs++,e=!0;break;default:e=super.setBinding(V,R,U)}return e}probeAddr(V,R,U){let l=(U?this.aBusBlocks:this.aMemBlocks)[(V&this.nMemMask)>>>this.nBlockShift];if(l&&l.type==Memoryx86.TYPE.UNPAGED&&(l=this.mapPageBlock(V,!1,!0)),l){let e=V&this.nBlockLimit;if(!R||1==R)return l.readByteDirect(e,V);if(2==R)return e<this.nBlockLimit?l.readShortDirect(e,V):l.readByteDirect(e,V)|this.probeAddr(V+1,1,U)<<8;if(4==R)return e<this.nBlockLimit-2?l.readLongDirect(e,V):e==this.nBlockLimit-1?l.readShortDirect(e,V)|this.probeAddr(V+2,2,U)<<16:l.readByteDirect(e,V)|this.probeAddr(V+1,1,U)<<8|this.probeAddr(V+2,1,U)<<16|this.probeAddr(V+3,1,U)<<24}return null}getByte(V){return BACKTRACK&&(this.backTrack.btiMem0=this.bus.readBackTrack(V)),this.aMemBlocks[(V&this.nMemMask)>>>this.nBlockShift].readByte(V&this.nBlockLimit,V)}getShort(V){let R=V&this.nBlockLimit,U=(V&this.nMemMask)>>>this.nBlockShift;if(this.nStepCycles-=this.cycleCounts.nWordCyclePenalty,BACKTRACK&&(this.backTrack.btiMem0=this.bus.readBackTrack(V),this.backTrack.btiMem1=this.bus.readBackTrack(V+1)),R<this.nBlockLimit)return this.aMemBlocks[U].readShort(R,V);let l=this.aMemBlocks[U].readByte(R,V);return this.opFlags&X86.OPFLAG.FAULT||(l|=this.aMemBlocks[U+1&this.nBlockMask].readByte(0,V+1)<<8),l}getLong(V){let R=V&this.nBlockLimit,U=(V&this.nMemMask)>>>this.nBlockShift;if(BACKTRACK&&(this.backTrack.btiMem0=this.bus.readBackTrack(V),this.backTrack.btiMem1=this.bus.readBackTrack(V+1),this.backTrack.btiMem2=this.bus.readBackTrack(V+2),this.backTrack.btiMem3=this.bus.readBackTrack(V+3)),R<this.nBlockLimit-2)return this.aMemBlocks[U].readLong(R,V);let l=0,e=4,t=0,T=4-(3&R);for(;e--&&(l|=this.aMemBlocks[U].readByte(R++,V++)<<t,!(this.opFlags&X86.OPFLAG.FAULT));)--T||(U=U+1&this.nBlockMask,R=0),t+=8;return l}setByte(V,R){BACKTRACK&&this.bus.writeBackTrack(V,this.backTrack.btiMem0),this.aMemBlocks[(V&this.nMemMask)>>>this.nBlockShift].writeByte(V&this.nBlockLimit,255&R,V)}setShort(V,R){let U=V&this.nBlockLimit,l=(V&this.nMemMask)>>>this.nBlockShift;this.nStepCycles-=this.cycleCounts.nWordCyclePenalty,BACKTRACK&&(this.bus.writeBackTrack(V,this.backTrack.btiMem0),this.bus.writeBackTrack(V+1,this.backTrack.btiMem1)),U<this.nBlockLimit?this.aMemBlocks[l].writeShort(U,65535&R,V):(this.aMemBlocks[l++].writeByte(U,255&R,V),this.opFlags&X86.OPFLAG.FAULT||this.aMemBlocks[l&this.nBlockMask].writeByte(0,R>>8&255,V+1))}setLong(V,R){let U=V&this.nBlockLimit,l=(V&this.nMemMask)>>>this.nBlockShift;if(this.nStepCycles-=this.cycleCounts.nWordCyclePenalty,BACKTRACK&&(this.bus.writeBackTrack(V,this.backTrack.btiMem0),this.bus.writeBackTrack(V+1,this.backTrack.btiMem1),this.bus.writeBackTrack(V+2,this.backTrack.btiMem2),this.bus.writeBackTrack(V+3,this.backTrack.btiMem3)),U<this.nBlockLimit-2)return void this.aMemBlocks[l].writeLong(U,R,V);let e=4,t=4-(3&U);for(;e--;){if(this.aMemBlocks[l].writeByte(U++,255&R,V++),this.opFlags&X86.OPFLAG.FAULT)return;--t||(l=l+1&this.nBlockMask,U=0),R>>>=8}}getEAByte(V,R){if(this.segEA=V,this.offEA=R&(I386?this.maskAddr:65535),this.regEA=V.checkRead(this.offEA,1),this.opFlags&X86.OPFLAG.NOREAD)return 0;let U=this.getByte(this.regEA);return BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiMem0),U}getEAByteData(V){return this.getEAByte(this.segData,V)}getEAByteStack(V){return this.getEAByte(this.segStack,V)}getEAWord(V,R){let U;if(this.segEA=V,this.offEA=R&(I386?this.maskAddr:65535),this.regEA=V.checkRead(this.offEA,I386?this.sizeData:2),this.opFlags&(X86.OPFLAG.NOREAD|X86.OPFLAG.WRAP)){if(this.opFlags&X86.OPFLAG.NOREAD)return 0;U=this.getByte(this.regEA)|this.getByte(V.checkRead(0,1))<<8}else U=this.getWord(this.regEA);return BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiMem0,this.backTrack.btiEAHi=this.backTrack.btiMem1),U}getEAShortData(V){let R;if(this.segEA=this.segData,this.offEA=V&(I386?this.maskAddr:65535),this.regEA=this.segEA.checkRead(this.offEA,2),this.opFlags&(X86.OPFLAG.NOREAD|X86.OPFLAG.WRAP)){if(this.opFlags&X86.OPFLAG.NOREAD)return 0;R=this.getByte(this.regEA)|this.getByte(this.segEA.checkRead(0,1))<<8,this.opFlags&=~X86.OPFLAG.WRAP}else R=this.getShort(this.regEA);return BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiMem0,this.backTrack.btiEAHi=this.backTrack.btiMem1),R}getEAShortStack(V){let R;if(this.segEA=this.segStack,this.offEA=V&(I386?this.maskAddr:65535),this.regEA=this.segEA.checkRead(this.offEA,2),this.opFlags&(X86.OPFLAG.NOREAD|X86.OPFLAG.WRAP)){if(this.opFlags&X86.OPFLAG.NOREAD)return 0;R=this.getByte(this.regEA)|this.getByte(this.segEA.checkRead(0,1))<<8,this.opFlags&=~X86.OPFLAG.WRAP}else R=this.getShort(this.regEA);return BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiMem0,this.backTrack.btiEAHi=this.backTrack.btiMem1),R}getEALongData(V){if(this.segEA=this.segData,this.offEA=V&(I386?this.maskAddr:65535),this.regEA=this.segEA.checkRead(this.offEA,4),this.opFlags&X86.OPFLAG.NOREAD)return 0;let R=this.getLong(this.regEA);return BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiMem0,this.backTrack.btiEAHi=this.backTrack.btiMem1),R}getEALongDataWrite(V){if(this.segEA=this.segData,this.offEA=V&(I386?this.maskAddr:65535),this.regEAWrite=this.regEA=this.segEA.checkRead(this.offEA,4),this.opFlags&X86.OPFLAG.NOREAD)return 0;let R=this.getLong(this.regEA);return BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiMem0,this.backTrack.btiEAHi=this.backTrack.btiMem1),R}getEALongStack(V){if(this.segEA=this.segStack,this.offEA=V&(I386?this.maskAddr:65535),this.regEA=this.segEA.checkRead(this.offEA,4),this.opFlags&X86.OPFLAG.NOREAD)return 0;let R=this.getLong(this.regEA);return BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiMem0,this.backTrack.btiEAHi=this.backTrack.btiMem1),R}getEALongStackWrite(V){if(this.segEA=this.segStack,this.offEA=V&(I386?this.maskAddr:65535),this.regEAWrite=this.regEA=this.segEA.checkRead(this.offEA,4),this.opFlags&X86.OPFLAG.NOREAD)return 0;let R=this.getLong(this.regEA);return BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiMem0,this.backTrack.btiEAHi=this.backTrack.btiMem1),R}setEAByte(V){this.opFlags&X86.OPFLAG.NOWRITE||(BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiEALo),this.setByte(this.segEA.checkWrite(this.offEA,1),V))}setEAShort(V){if(this.opFlags&X86.OPFLAG.NOWRITE)return;BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiEALo,this.backTrack.btiMem1=this.backTrack.btiEAHi);let R=this.segEA.checkWrite(this.offEA,2);this.opFlags&X86.OPFLAG.WRAP?(this.setByte(R,V),this.setByte(this.segEA.checkWrite(0,1),V>>8),this.opFlags&=~X86.OPFLAG.WRAP):this.setShort(R,V)}setEALong(V){this.opFlags&X86.OPFLAG.NOWRITE||(BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiEALo,this.backTrack.btiMem1=this.backTrack.btiEAHi),this.setLong(this.segEA.checkWrite(this.offEA,4),V))}setEAWord(V){if(this.opFlags&X86.OPFLAG.NOWRITE)return;BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiEALo,this.backTrack.btiMem1=this.backTrack.btiEAHi);let R=this.segEA.checkWrite(this.offEA,this.sizeData);this.opFlags&X86.OPFLAG.WRAP?(this.setByte(R,V),this.setByte(this.segEA.checkWrite(0,1),V>>8),this.opFlags&=~X86.OPFLAG.WRAP):this.setWord(R,V)}getSOByte(V,R){return this.getByte(V.checkRead(R,1))}getSOWord(V,R){let U,l=V.checkRead(R,this.sizeData);return this.opFlags&X86.OPFLAG.WRAP?(U=this.getByte(l)|this.getByte(V.checkRead(0,1))<<8,this.opFlags&=~X86.OPFLAG.WRAP):U=this.getWord(l),U}setSOByte(V,R,U){this.setByte(V.checkWrite(R,1),U)}setSOWord(V,R,U){let l=V.checkWrite(R,this.sizeData);this.opFlags&X86.OPFLAG.WRAP?(this.setByte(l,U),this.setByte(V.checkWrite(0,1),U>>8),this.opFlags&=~X86.OPFLAG.WRAP):this.setWord(l,U)}getBytePrefetch(){if(!this.cbPrefetch&&(this.refillPrefetch(),!this.cbPrefetch))return this.getByte(this.regLIP);let V=this.adwPrefetch[this.regLIP&CPUx86.PFINFO.IP_MASK]>>((3&this.regLIP)<<3)&255;return this.cbPrefetch--,V}getShortPrefetch(){if(this.cbPrefetch<2&&(this.refillPrefetch(),this.cbPrefetch<2))return this.cbPrefetch=0,this.getShort(this.regLIP);let V=(3&this.regLIP)<<3,R=this.adwPrefetch[this.regLIP&CPUx86.PFINFO.IP_MASK]>>>V&65535;return V>16&&(R|=(255&this.adwPrefetch[this.regLIP+4&CPUx86.PFINFO.IP_MASK])<<8),this.cbPrefetch-=2,R}getLongPrefetch(){if(this.cbPrefetch<4&&(this.refillPrefetch(),this.cbPrefetch<4))return this.cbPrefetch=0,this.getLong(this.regLIP);let V=(3&this.regLIP)<<3,R=this.adwPrefetch[this.regLIP&CPUx86.PFINFO.IP_MASK]>>>V|0;return V&&(R|=this.adwPrefetch[this.regLIP+4&CPUx86.PFINFO.IP_MASK]<<32-V),this.cbPrefetch-=4,R}getWordPrefetch(){return I386&&4==this.sizeData?this.getLongPrefetch():this.getShortPrefetch()}refillPrefetch(){let V=this.aMemBlocks,R=-4&this.regLIP,U=V[(R&this.nMemMask)>>>this.nBlockShift];if(U&&U.type==Memoryx86.TYPE.UNPAGED&&(U=this.mapPageBlock(R,!1,!0),U===this.memEmpty&&(U=null)),U){let V=0,l=R&this.nBlockLimit,e=this.nBlockSize-l;for(e>CPUx86.PFINFO.LENGTH&&(e=CPUx86.PFINFO.LENGTH);V<e;V+=4)this.adwPrefetch[R&CPUx86.PFINFO.IP_MASK]=U.readLongDirect(l,R),l+=4,R+=4;this.cbPrefetch=V-(3&this.regLIP)}else this.cbPrefetch=0}getIPByte(){let V=this.checkIP(1),R=PREFETCH?this.getBytePrefetch():this.getByte(this.regLIP);return BACKTRACK&&this.bus.updateBackTrackCode(this.regLIP,this.backTrack.btiMem0),this.regLIP=V,R}getIPShort(){let V,R=this.checkIP(2);return PREFETCH?V=this.getShortPrefetch():this.opFlags&X86.OPFLAG.WRAP?(V=this.getByte(this.regLIP)|this.getByte(R-1)<<8,this.opFlags&=~X86.OPFLAG.WRAP):V=this.getShort(this.regLIP),BACKTRACK&&(this.bus.updateBackTrackCode(this.regLIP,this.backTrack.btiMem0),this.bus.updateBackTrackCode(this.regLIP+1,this.backTrack.btiMem1)),this.regLIP=R,V}getIPAddr(){let V,R=this.checkIP(this.sizeAddr);return PREFETCH?V=this.getAddr():this.opFlags&X86.OPFLAG.WRAP?(V=this.getByte(this.regLIP)|this.getByte(R-1)<<8,this.opFlags&=~X86.OPFLAG.WRAP):V=this.getAddr(this.regLIP),BACKTRACK&&(this.bus.updateBackTrackCode(this.regLIP,this.backTrack.btiMem0),this.bus.updateBackTrackCode(this.regLIP+1,this.backTrack.btiMem1)),this.regLIP=R,V}getIPWord(){let V,R=this.checkIP(this.sizeData);return PREFETCH?V=this.getWordPrefetch():this.opFlags&X86.OPFLAG.WRAP?(V=this.getByte(this.regLIP)|this.getByte(R-1)<<8,this.opFlags&=~X86.OPFLAG.WRAP):V=this.getWord(this.regLIP),BACKTRACK&&(this.bus.updateBackTrackCode(this.regLIP,this.backTrack.btiMem0),this.bus.updateBackTrackCode(this.regLIP+1,this.backTrack.btiMem1)),this.regLIP=R,V}getIPDisp(){let V=this.checkIP(1),R=(PREFETCH?this.getBytePrefetch():this.getByte(this.regLIP))<<24>>24;return BACKTRACK&&this.bus.updateBackTrackCode(this.regLIP,this.backTrack.btiMem0),this.regLIP=V,R}peekIPByte(){return PREFETCH?this.getBytePrefetch():this.getByte(this.regLIP)}popWord(){let V=this.getWord(this.regLSP),R=I386?this.sizeData:2;this.regLSP=this.regLSP+R|0;let U=this.regLSPLimit-(this.regLSP>>>0);return U<0&&(this.model<=X86.MODEL_8088?(this.setSP(this.regLSP-this.segSS.base&this.segSS.maskAddr),U<-1&&(V=255&V|this.getByte(this.regLSP-1)<<8)):U<-1?X86.helpFault.call(this,X86.EXCEPTION.SS_FAULT,0):(!this.segSS.fExpDown&&this.segSS.limit==this.segSS.maskAddr||this.segSS.fExpDown&&!this.segSS.limit)&&this.setSP(this.regLSP-this.segSS.base&this.segSS.maskAddr)),V}pushWord(V){this.pushData(V,I386?this.sizeData:2)}pushData(V,R,U=R){let l=this.regLSP-R|0,e=(l>>>0)-this.regLSPLimitLow;if(e<0){if(this.model<=X86.MODEL_8088&&-1==e)return this.setByte(l+1,V>>8),this.setSP(l-this.segSS.base&this.segSS.maskAddr),void this.setByte(this.regLSP,V);if(!(!this.segSS.fExpDown&&this.segSS.limit==this.segSS.maskAddr||this.segSS.fExpDown&&!this.segSS.limit))return void X86.helpFault.call(this,X86.EXCEPTION.SS_FAULT,0);if(e>-R)return void X86.helpFault.call(this,X86.EXCEPTION.SS_FAULT,0);this.setSP(l-this.segSS.base&this.segSS.maskAddr),l=this.regLSP}switch(U){case 1:this.setByte(l,V);break;case 2:this.setShort(l,V);break;case 4:this.setLong(l,V)}this.regLSP=l}checkINTR(){if(!(this.opFlags&X86.OPFLAG.NOINTR)){let V=this.model<X86.MODEL_80286?0:1;for(let R=0;R<2;R++){switch(V){case 0:if(this.intFlags&X86.INTFLAG.INTR&&this.regPS&X86.PS.IF){let V=this.chipset.getIRRVector();if(V>=-1&&(this.intFlags&=~X86.INTFLAG.INTR,V>=0))return this.intFlags&=~X86.INTFLAG.HALT,X86.helpInterrupt.call(this,V),!0}break;case 1:if(this.intFlags&X86.INTFLAG.TRAP)return this.intFlags&=~X86.INTFLAG.TRAP,I386&&this.model>=X86.MODEL_80386&&(this.regDR[6]|=X86.DR6.BS),X86.helpInterrupt.call(this,X86.EXCEPTION.DB_EXC),!0}V=1-V}}return!1}updateINTR(V){this.chipset&&(V?this.intFlags|=X86.INTFLAG.INTR:this.intFlags&=~X86.INTFLAG.INTR)}delayINTR(){this.opFlags|=X86.OPFLAG.NOINTR}updateReg(V,R){let U=4;1==V.length&&(U=1,R=R?1:0),this.model<80386?V.length>2&&(V=V.substr(1,2)):("PS"==V||V.length>2)&&(U=8),this.displayValue(V,R,U)}updateStatus(V){if(this.cLiveRegs&&(V||!this.flags.running||this.flags.displayLiveRegs)){this.updateReg("EAX",this.regEAX),this.updateReg("EBX",this.regEBX),this.updateReg("ECX",this.regECX),this.updateReg("EDX",this.regEDX),this.updateReg("ESP",this.getSP()),this.updateReg("EBP",this.regEBP),this.updateReg("ESI",this.regESI),this.updateReg("EDI",this.regEDI),this.updateReg("CS",this.getCS()),this.updateReg("DS",this.getDS()),this.updateReg("SS",this.getSS()),this.updateReg("ES",this.getES()),this.updateReg("EIP",this.getIP());let V=this.getPS();this.updateReg("PS",V),this.updateReg("V",V&X86.PS.OF),this.updateReg("D",V&X86.PS.DF),this.updateReg("I",V&X86.PS.IF),this.updateReg("T",V&X86.PS.TF),this.updateReg("S",V&X86.PS.SF),this.updateReg("Z",V&X86.PS.ZF),this.updateReg("A",V&X86.PS.AF),this.updateReg("P",V&X86.PS.PF),this.updateReg("C",V&X86.PS.CF),this.model==X86.MODEL_80386&&(this.updateReg("FS",this.getFS()),this.updateReg("GS",this.getGS()),this.updateReg("CR0",this.regCR0),this.updateReg("CR2",this.regCR2),this.updateReg("CR3",this.regCR3))}let R=this.bindings.speed;R&&(R.textContent=this.getSpeedCurrent())}setDebugCheck(V){this.flags.debugCheck=V,V?this.intFlags|=X86.INTFLAG.DEBUGGER:this.intFlags&=~X86.INTFLAG.DEBUGGER}stepCPU(V){this.flags.complete=!0,this.setDebugCheck(DEBUGGER&&null!=this.dbg&&this.dbg.checksEnabled());let R=V?this.flags.starting?0:1:-1;this.flags.starting=!1,this.nBurstCycles=this.nStepCycles=V,this.chipset&&!V&&this.chipset.updateAllTimers(),V||this.messageEnabled(MESSAGE.PIC)||(this.opFlags|=X86.OPFLAG.NOINTR);do{let U=this.opFlags&X86.OPFLAG_PREFIXES;if(U)this.opPrefixes|=U;else if(this.opLIP=this.regLIP,this.segData=this.segDS,this.segStack=this.segSS,this.regEA=this.regEAWrite=X86.ADDR_INVALID,I386&&this.opPrefixes&(X86.OPFLAG.ADDRSIZE|X86.OPFLAG.DATASIZE)&&this.resetSizes(),this.opPrefixes=this.opFlags&(X86.OPFLAG.REPEAT|X86.OPFLAG.IRET),this.intFlags){if(this.checkINTR()&&!V&&DEBUGGER){this.printf("interrupt dispatched\n"),this.opFlags=0;break}if(this.intFlags&X86.INTFLAG.HALT){X86.opHLT.call(this);continue}if(this.intFlags&X86.INTFLAG.DEBUGGER){if(this.dbg.checkInstruction(this.regLIP,R)){this.stopCPU();break}R=1}}this.opFlags=0,this.aOps[this.getIPByte()].call(this)}while(this.nStepCycles>0);return this.flags.complete?this.nBurstCycles-this.nStepCycles:void 0===this.flags.complete?0:-1}static init(){let V=Component.getElementsByClass(APPCLASS,"cpu");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new CPUx86(l);Component.bindComponentControls(e,U,APPCLASS)}}}WebLib.onInit(CPUx86.init);
class FPUx86 extends Component{static regL2T=Math.log(10)/Math.LN2;static regL2E=Math.LOG2E;static regPI=Math.PI;static regLG2=Math.log(2)/Math.LN10;static regLN2=Math.LN2;static MAX_INT16=32768;static MAX_INT32=2147483648;static MAX_INT64=Math.pow(2,63);constructor(V){super("FPU",V),this.model=this.parms.model||X86.FPU.MODEL_8087;let R=this.parms.stepping;this.stepping=this.model+(R?StrLib.parseInt(R,16):0),this.regStack=new Float64Array(8),this.intStack=new Int32Array(this.regStack.buffer),this.regTmpSR=new Float32Array(1),this.intTmpSR=new Int32Array(this.regTmpSR.buffer),this.regTmpLR=new Float64Array(1),this.intTmpLR=new Int32Array(this.regTmpLR.buffer),this.intTmpTR=new Array(3),this.regCodeSel=this.regDataSel=-1,this.regCodeOff=this.regDataOff=this.regOpcode=this.iStack=0,this.regIndefinite=new Float64Array(1),this.intIndefinite=new Int32Array(this.regIndefinite.buffer),this.intIndefinite[0]=0,this.intIndefinite[1]=268402688,this.resetFPU(),this.setEAFromSR=FPUx86.prototype.setEAFromSI,this.setEAFromLR=FPUx86.prototype.setEAFromLI}initBus(V,R,U,l){this.cpu=U,this.chipset=V.getMachineComponent("ChipSet"),this.setReady()}clearBusy(){}powerUp(V,R){if(!R)if(V&&this.restore){if(!this.restore(V))return!1}else this.resetFPU();return!0}powerDown(V,R){return!V||this.save()}save(){let V=new State(this),R=[],U=0;R[U++]=this.regControl,R[U++]=this.getStatus(),R[U++]=this.getTags();for(let V=0;V<this.regStack.length;V++)R[U++]=this.regStack[V];return V.set(0,R),V.data()}restore(V){let R=V[0],U=0;this.setControl(R[U++]),this.setStatus(R[U++]),this.setTags(R[U++]);for(let V=0;V<this.regStack.length;V++)this.regStack[V]=R[U++];return!0}resetFPU(){if(this.regUsed=0,this.regControl=X86.FPU.CONTROL.INIT,this.regStatus=0,this.iST=0,DEBUG)for(let V=0;V<this.regStack.length;V++)this.regStack[V]=0;this.chipset&&this.chipset.clearFPUInterrupt()}isModel(V){return this.model==V}isAtLeastModel(V){return this.model>=V}opStop(V){if(DEBUG){let R=this.cpu;if(V||R.isRunning())return R.setIP(R.opLIP-R.segCS.base),R.stopCPU(),!0}return!1}opNone(){DEBUG&&this.printf("%s.opNone(%#04x,%#04x)\n",this.idComponent,this.cpu.bOpcode,this.cpu.bModRM),this.opStop(!0)}opObsolete(){DEBUG&&this.printf("%s.opObsolete(%#04x,%#04x)\n",this.idComponent,this.cpu.bOpcode,this.cpu.bModRM),this.opStop(!0)}opUnimplemented(){DEBUG&&this.printf("%s.opUnimplemented(%#04x,%#04x)\n",this.idComponent,this.cpu.bOpcode,this.cpu.bModRM),this.opStop(!0)}checkException(){return this.regStatus&=~X86.FPU.STATUS.ES,this.regStatus&~this.regControl&X86.FPU.CONTROL.EXC&&(this.regStatus|=X86.FPU.STATUS.ES),this.regStatus&X86.FPU.STATUS.ES&&!(this.regControl&X86.FPU.CONTROL.IEM)?(this.chipset.setFPUInterrupt(),!0):(this.chipset.clearFPUInterrupt(),!1)}setException(V){return DEBUG&&this.printf("%s.setException(%#06x)\n",this.idComponent,V),this.isAtLeastModel(X86.FPU.MODEL_80387)||(V&=~X86.FPU.STATUS.SF),this.regStatus|=V,this.checkException()}getControl(){return this.regControl}setControl(V){this.regControl=V&~X86.FPU.CONTROL.UNUSED}clearStatus(V){this.regStatus&=~V,this.checkException()}getStatus(){return this.regStatus|this.iST<<X86.FPU.STATUS.ST_SHIFT}setStatus(V){this.regStatus=V&~X86.FPU.STATUS.ST,this.iST=(V&X86.FPU.STATUS.ST)>>X86.FPU.STATUS.ST_SHIFT,this.checkException()}checkOperand(V){return!isNaN(V)||!this.setException(X86.FPU.STATUS.IE)}checkResult(V){return!!isFinite(V)||!this.setException(V===1/0?X86.FPU.STATUS.OE:X86.FPU.STATUS.UE)}doAdd(V,R){let U=null;return null!=V&&null!=R&&(U=V+R,this.checkResult(U)||(U=null)),U}doSubtract(V,R){let U=null;return null!=V&&null!=R&&(U=V-R,this.checkResult(U)||(U=null)),U}doMultiply(V,R){let U=null;return null!=V&&null!=R&&(U=V*R,this.checkResult(U)||(U=null)),U}doDivide(V,R){let U=null;return null!=V&&null!=R&&(!R&&this.setException(X86.FPU.STATUS.DE)||(U=V/R,this.checkResult(U)||(U=null))),U}doCompare(V,R){if(null!=V&&null!=R){let U=0;if(isNaN(V)||isNaN(R))U=X86.FPU.STATUS.C0|X86.FPU.STATUS.C2|X86.FPU.STATUS.C3;else{let l=V-R;l<0?U=X86.FPU.STATUS.C0:0===l&&(U=X86.FPU.STATUS.C3)}return this.regStatus=this.regStatus&~X86.FPU.STATUS.CC|U,!0}return!1}doSquareRoot(V){let R=null;return(V>=0||!this.setException(X86.FPU.STATUS.IE))&&(R=Math.sqrt(V),this.checkResult(R)||(R=null)),R}roundValue(V,R){if(null==V)return null;let U,l=this.regControl&X86.FPU.CONTROL.RC.MASK;if(l==X86.FPU.CONTROL.RC.NEAR?(U=Math.round(V),U-V==.5&&U%2&&U--):U=l==X86.FPU.CONTROL.RC.DOWN||l==X86.FPU.CONTROL.RC.CHOP&&V>0?Math.floor(V):Math.ceil(V),R){if(U>=R){if(this.setException(X86.FPU.STATUS.IE))return null;U=-R}else if(U<-R){if(this.setException(X86.FPU.STATUS.IE))return null;U=-R}this.intTmpLR[0]=0|U,R>FPUx86.MAX_INT32&&(this.intTmpLR[1]=U/4294967296|0,!this.intTmpLR[1]&&U<0&&(this.intTmpLR[1]=-1))}return U}truncateValue(V){return V>0?Math.floor(V):Math.ceil(V)}getTag(V){let R=1<<V,U=X86.FPU.TAGS.EMPTY;if(this.regUsed&R){let R=this.regStack[V];U=X86.FPU.TAGS.VALID,0===R?U=X86.FPU.TAGS.ZERO:isFinite(R)||(U=X86.FPU.TAGS.SPECIAL)}return U}getTags(){let V=0;for(let R=this.regStack.length-1;R>=0;R--)V<<=2,V|=this.getTag(R);return V}setTag(V,R){this.regUsed&=~(1<<V)}setTags(V){this.regUsed=0;for(let R=1;R<=128;R<<=1){(V&X86.FPU.TAGS.MASK)!=X86.FPU.TAGS.EMPTY&&(this.regUsed|=R),V>>=2}}getWI(V){return null!=this.roundValue(this.getST(V),FPUx86.MAX_INT16)}getSI(V){return null!=this.roundValue(this.getST(V),FPUx86.MAX_INT32)}getLI(V){return null!=this.roundValue(this.getST(V),FPUx86.MAX_INT64)}getSR(V){let R=this.iST+V&7;return this.regUsed&1<<R?(this.regTmpSR[0]=this.regStack[R],!0):!this.setException(X86.FPU.STATUS.IE)&&(this.regTmpSR[0]=this.regIndefinite[0],!0)}getLR(V){let R=this.iST+V&7;return this.regUsed&1<<R?(this.regTmpLR[0]=this.regStack[R],!0):!this.setException(X86.FPU.STATUS.IE)&&(this.regTmpLR[0]=this.regIndefinite[0],!0)}getST(V){let R=null,U=this.iST+V&7;return this.regUsed&1<<U?R=this.regStack[U]:this.setException(X86.FPU.STATUS.IE)||(R=this.regIndefinite[0]),R}getSTSign(V){let R=(this.iST+V&7)<<1;return-2147483648&this.intStack[R+1]}setST(V,R){if(null!=R&&this.checkOperand(R)){let U=this.iST+V&7;return this.regStack[U]=R,this.regUsed|=1<<U,!0}return!1}getTR(V,R){let U=null,l=this.iST+V&7;if(R||this.regUsed&1<<l||!this.setException(X86.FPU.STATUS.IE)){let V=l<<1;U=this.getTRFromLR(this.intStack[V],this.intStack[V+1])}return U}setTR(V,R){R&&this.setST(V,this.getLRFromTR(R))}getWIFromEA(){return this.cpu.getShort(this.cpu.regEA)<<16>>16}getSIFromEA(){return this.cpu.getLong(this.cpu.regEA)}getLIFromEA(){let V=this.cpu.getLong(this.cpu.regEA);return 4294967296*this.cpu.getLong(this.cpu.regEA+4)+(V>>>0)}getSRFromEA(){return this.intTmpSR[0]=this.cpu.getLong(this.cpu.regEA),this.regTmpSR[0]}getLRFromEA(){return this.intTmpLR[0]=this.cpu.getLong(this.cpu.regEA),this.intTmpLR[1]=this.cpu.getLong(this.cpu.regEA+4),this.regTmpLR[0]}getTRFromEA(){return this.intTmpTR[0]=this.cpu.getLong(this.cpu.regEA),this.intTmpTR[1]=this.cpu.getLong(this.cpu.regEA+4),this.intTmpTR[2]=this.cpu.getShort(this.cpu.regEA+8),this.intTmpTR}setEAFromWI(){this.cpu.setShort(this.cpu.regEA,this.intTmpLR[0])}setEAFromSI(){this.cpu.setLong(this.cpu.regEA,this.intTmpLR[0])}setEAFromLI(){this.cpu.setLong(this.cpu.regEA,this.intTmpLR[0]),this.cpu.setLong(this.cpu.regEA+4,this.intTmpLR[1])}setEAFromTR(){this.cpu.setLong(this.cpu.regEA,this.intTmpTR[0]),this.cpu.setLong(this.cpu.regEA+4,this.intTmpTR[1]),this.cpu.setShort(this.cpu.regEA+8,this.intTmpTR[2])}getLRFromTR(V){let R=V[0],U=V[1],l=(32768&V[2])>>4,e=32767&V[2],t=R>>>11|U<<21,T=U>>11&1048575;return 32767==e?e=2047:e&&(e+=-15360,e<=0&&(e=2047,t=T=0)),this.intTmpLR[0]=t,this.intTmpLR[1]=T|(l|e)<<20,this.regTmpLR[0]}getTRFromLR(V,R){let U=R>>20&2047,l=R>>16&32768,e=V<<11,t=2147483648|(1048575&R)<<11|V>>>21;return 2047==U?U=32767:U?U+=15360:t&=2147483647,this.intTmpTR[0]=e,this.intTmpTR[1]=t,this.intTmpTR[2]=l|U,this.intTmpTR}decodeBCD(V,R){let U=0,l=1;for(;R--;){U+=(15&V)*l,l*=10,V>>=4}return U}encodeBCD(V,R){let U=0,l=0;for(;R--;)U|=V%10<<l,V/=10,l+=4;return U}popValue(){let V=null,R=1<<this.iST;return this.regUsed&R||(this.regStatus&=~X86.FPU.STATUS.C1,!this.setException(X86.FPU.STATUS.SF|X86.FPU.STATUS.IE))?(this.regUsed&=~R,V=this.regStack[this.iST],this.iST=this.iST+1&7,V):V}pushValue(V){if(null==V)return;let R=this.iST-1&7,U=1<<R;if(!(this.regUsed&U&&(this.regStatus|=X86.FPU.STATUS.C1,this.setException(X86.FPU.STATUS.SF|X86.FPU.STATUS.IE)))){if(!this.checkOperand(V)){if(this.setException(X86.FPU.STATUS.IE))return;V=NaN}this.regStack[this.iST=R]=V,this.regUsed|=U}}loadEnv(V){let R,U=this.cpu;return this.setControl(U.getWord(V)),this.setStatus(U.getWord(V+=U.sizeData)),this.setTags(U.getWord(V+=U.sizeData)),!(U.regCR0&X86.CR0.MSW.PE)||U.regPS&X86.PS.VM?(this.regCodeOff=U.getWord(V+=U.sizeData),R=U.getWord(V+=U.sizeData),this.regOpcode=2047&R,this.regCodeOff|=(-4096&R)<<4,this.regCodeSel=-1,this.regDataOff=U.getWord(V+=U.sizeData),this.regDataOff|=(-4096&U.getWord(V+=U.sizeData))<<4,this.regDataSel=-1):(this.regCodeOff=U.getWord(V+=U.sizeData),R=U.getWord(V+=U.sizeData),this.regCodeSel=65535&R,this.regOpcode=R>>16&2047,this.regDataOff=U.getWord(V+=U.sizeData),this.regDataSel=65535&U.getWord(V+=U.sizeData)),V+U.sizeData}saveEnv(V){let R=this.cpu;if(R.setWord(V,this.regControl),R.setWord(V+=R.sizeData,this.getStatus()),R.setWord(V+=R.sizeData,this.getTags()),!(R.regCR0&X86.CR0.MSW.PE)||R.regPS&X86.PS.VM){let U=(this.regCodeSel<<4)+this.regCodeOff;R.setWord(V+=R.sizeData,U),R.setWord(V+=R.sizeData,U>>4&-4096|this.regOpcode),U=(this.regDataSel<<4)+this.regDataOff,R.setWord(V+=R.sizeData,U),R.setWord(V+=R.sizeData,U>>4&-4096)}else R.setWord(V+=R.sizeData,this.regCodeOff),R.setWord(V+=R.sizeData,this.regCodeSel|this.regOpcode<<16),R.setWord(V+=R.sizeData,this.regDataOff),R.setWord(V+=R.sizeData,this.regDataSel);return V+R.sizeData}opFPU(V,R,U,l){let e=R>>6&3,t=R>>3&7;this.iStack=7&R;let T=(e<3?0:48)+t;(V==X86.OPCODE.ESC1||V==X86.OPCODE.ESC3)&&T>=52&&(T=t<<4|this.iStack);let k=FPUx86.aaOps[V][T];if(k){if(FPUx86.afnPreserveExceptions.indexOf(k)<0){let U=this.cpu,l=U.opLIP;this.isModel(X86.FPU.MODEL_8087)&&(U.opPrefixes&X86.OPFLAG.SEG&&l++,U.opPrefixes&X86.OPFLAG.LOCK&&l++),this.regCodeSel=U.segCS.sel,this.regCodeOff=l-U.segCS.base,U.regEA!==X86.ADDR_INVALID&&(this.regDataSel=U.segEA.sel,this.regDataOff=U.regEA-U.segEA.base),this.regOpcode=(7&V)<<8|R}k.call(this)}else this.opNone()}opWAIT(){return!1}readFPUStack(V){let R=null;if(V<this.regStack.length){R=[];let U=this.iST+V&7;R[0]=U,R[1]=this.getTag(U),R[2]=this.regStack[U];let l=U<<1;R[3]=this.intStack[l],R[4]=this.intStack[l+1];let e=this.getTRFromLR(R[3],R[4]);R[5]=e[0],R[6]=e[1],R[7]=e[2]}return R}static init(){let V=Component.getElementsByClass(APPCLASS,"fpu");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new FPUx86(l);Component.bindComponentControls(e,U,APPCLASS)}}}FPUx86.F2XM1=function(){this.setST(0,Math.pow(2,this.getST(0))-1)},FPUx86.FABS=function(){this.setST(0,Math.abs(this.getST(0)))},FPUx86.FADDlr=function(){this.setST(0,this.doAdd(this.getST(0),this.getLRFromEA()))},FPUx86.FADDsr=function(){this.setST(0,this.doAdd(this.getST(0),this.getSRFromEA()))},FPUx86.FADDst=function(){this.setST(0,this.doAdd(this.getST(0),this.getST(this.iStack)))},FPUx86.FADDsti=function(){this.setST(this.iStack,this.doAdd(this.getST(this.iStack),this.getST(0)))},FPUx86.FADDPsti=function(){this.setST(this.iStack,this.doAdd(this.getST(this.iStack),this.getST(0)))&&this.popValue()},FPUx86.FBLDpd=function(){let V=this.getTRFromEA(),R=this.decodeBCD(V[0],8)+1e8*this.decodeBCD(V[1],8)+1e16*this.decodeBCD(V[2],2);32768&V[2]&&(R=-R),this.pushValue(R)},FPUx86.FBSTPpd=function(){let V=this.roundValue(this.popValue());null!=V&&(this.intTmpTR[0]=this.encodeBCD(V,8),this.intTmpTR[1]=this.encodeBCD(V/1e8,8),this.intTmpTR[2]=this.encodeBCD(V/1e16,2),V<0&&(this.intTmpTR[2]|=32768),this.setEAFromTR())},FPUx86.FCHS=function(){this.setST(0,-this.getST(0))},FPUx86.FCLEX=function(){this.clearStatus(X86.FPU.STATUS.EXC|X86.FPU.STATUS.BUSY)},FPUx86.FCOMlr=function(){this.doCompare(this.getST(0),this.getLRFromEA())},FPUx86.FCOMsr=function(){this.doCompare(this.getST(0),this.getSRFromEA())},FPUx86.FCOMst=function(){this.doCompare(this.getST(0),this.getST(this.iStack))},FPUx86.FCOM8087=function(){this.opObsolete(),FPUx86.FCOMst.call(this)},FPUx86.FCOMPlr=function(){this.doCompare(this.getST(0),this.getLRFromEA())&&this.popValue()},FPUx86.FCOMPsr=function(){this.doCompare(this.getST(0),this.getSRFromEA())&&this.popValue()},FPUx86.FCOMPst=function(){this.doCompare(this.getST(0),this.getST(this.iStack))&&this.popValue()},FPUx86.FCOMP8087=function(){this.opObsolete(),FPUx86.FCOMPst.call(this)},FPUx86.FCOMPP=function(){this.doCompare(this.getST(0),this.getST(1))&&null!=this.popValue()&&this.popValue()},FPUx86.FDECSTP=function(){this.iST=this.iST-1&7,this.regStatus&=~X86.FPU.STATUS.C1},FPUx86.FDISI8087=function(){this.isModel(X86.FPU.MODEL_8087)&&(this.regControl|=X86.FPU.CONTROL.IEM)},FPUx86.FDIVlr=function(){this.setST(0,this.doDivide(this.getST(0),this.getLRFromEA()))},FPUx86.FDIVsr=function(){this.setST(0,this.doDivide(this.getST(0),this.getSRFromEA()))},FPUx86.FDIVst=function(){this.setST(0,this.doDivide(this.getST(0),this.getST(this.iStack)))},FPUx86.FDIVsti=function(){this.setST(this.iStack,this.doDivide(this.getST(this.iStack),this.getST(0)))},FPUx86.FDIVPsti=function(){this.setST(this.iStack,this.doDivide(this.getST(this.iStack),this.getST(0)))&&this.popValue()},FPUx86.FDIVRlr=function(){this.setST(0,this.doDivide(this.getLRFromEA(),this.getST(0)))},FPUx86.FDIVRsr=function(){this.setST(0,this.doDivide(this.getSRFromEA(),this.getST(0)))},FPUx86.FDIVRst=function(){this.setST(0,this.doDivide(this.getST(this.iStack),this.getST(0)))},FPUx86.FDIVRsti=function(){this.setST(this.iStack,this.doDivide(this.getST(0),this.getST(this.iStack)))},FPUx86.FDIVRPsti=function(){this.setST(this.iStack,this.doDivide(this.getST(0),this.getST(this.iStack)))&&this.popValue()},FPUx86.FENI8087=function(){this.isModel(X86.FPU.MODEL_8087)&&(this.regControl&=~X86.FPU.CONTROL.IEM)},FPUx86.FFREEsti=function(){this.setTag(this.iST,X86.FPU.TAGS.EMPTY)},FPUx86.FFREEP8087=function(){this.opObsolete(),FPUx86.FFREEsti.call(this),this.popValue()},FPUx86.FIADD16=function(){this.setST(0,this.doAdd(this.getST(0),this.getWIFromEA()))},FPUx86.FIADD32=function(){this.setST(0,this.doAdd(this.getST(0),this.getSIFromEA()))},FPUx86.FICOM16=function(){this.doCompare(this.getST(0),this.getWIFromEA())},FPUx86.FICOM32=function(){this.doCompare(this.getST(0),this.getSIFromEA())},FPUx86.FICOMP16=function(){this.doCompare(this.getST(0),this.getWIFromEA())&&this.popValue()},FPUx86.FICOMP32=function(){this.doCompare(this.getST(0),this.getSIFromEA())&&this.popValue()},FPUx86.FIDIV16=function(){this.setST(0,this.doDivide(this.getST(0),this.getWIFromEA()))},FPUx86.FIDIV32=function(){this.setST(0,this.doDivide(this.getST(0),this.getSIFromEA()))},FPUx86.FIDIVR16=function(){this.setST(0,this.doDivide(this.getWIFromEA(),this.getST(0)))},FPUx86.FIDIVR32=function(){this.setST(0,this.doDivide(this.getSIFromEA(),this.getST(0)))},FPUx86.FILD16=function(){this.pushValue(this.getWIFromEA())},FPUx86.FILD32=function(){this.pushValue(this.getSIFromEA())},FPUx86.FILD64=function(){this.pushValue(this.getLIFromEA())},FPUx86.FIMUL16=function(){this.setST(0,this.doMultiply(this.getST(0),this.getWIFromEA()))},FPUx86.FIMUL32=function(){this.setST(0,this.doMultiply(this.getST(0),this.getSIFromEA()))},FPUx86.FINCSTP=function(){this.iST=this.iST+1&7,this.regStatus&=~X86.FPU.STATUS.C1},FPUx86.FINIT=function(){this.resetFPU()},FPUx86.FIST16=function(){this.getWI(0)&&this.setEAFromWI()},FPUx86.FIST32=function(){this.getSI(0)&&this.setEAFromSI()},FPUx86.FISTP16=function(){this.getWI(0)&&(this.setEAFromWI(),this.popValue())},FPUx86.FISTP32=function(){this.getSI(0)&&(this.setEAFromSI(),this.popValue())},FPUx86.FISTP64=function(){this.getLI(0)&&(this.setEAFromLI(),this.popValue())},FPUx86.FISUB16=function(){this.setST(0,this.doSubtract(this.getST(0),this.getWIFromEA()))},FPUx86.FISUB32=function(){this.setST(0,this.doSubtract(this.getST(0),this.getSIFromEA()))},FPUx86.FISUBR16=function(){this.setST(0,this.doSubtract(this.getWIFromEA(),this.getST(0)))},FPUx86.FISUBR32=function(){this.setST(0,this.doSubtract(this.getSIFromEA(),this.getST(0)))},FPUx86.FLDlr=function(){this.pushValue(this.getLRFromEA())},FPUx86.FLDsr=function(){this.pushValue(this.getSRFromEA())},FPUx86.FLDsti=function(){this.pushValue(this.getST(this.iStack))},FPUx86.FLDtr=function(){this.pushValue(this.getLRFromTR(this.getTRFromEA()))},FPUx86.FLDCW=function(){this.setControl(this.cpu.getShort(this.cpu.regEA))},FPUx86.FLDENV=function(){this.loadEnv(this.cpu.regEA)},FPUx86.FLD1=function(){this.pushValue(1)},FPUx86.FLDL2T=function(){this.pushValue(FPUx86.regL2T)},FPUx86.FLDL2E=function(){this.pushValue(FPUx86.regL2E)},FPUx86.FLDPI=function(){this.pushValue(FPUx86.regPI)},FPUx86.FLDLG2=function(){this.pushValue(FPUx86.regLG2)},FPUx86.FLDLN2=function(){this.pushValue(FPUx86.regLN2)},FPUx86.FLDZ=function(){this.pushValue(0)},FPUx86.FMULlr=function(){this.setST(0,this.doMultiply(this.getST(0),this.getLRFromEA()))},FPUx86.FMULsr=function(){this.setST(0,this.doMultiply(this.getST(0),this.getSRFromEA()))},FPUx86.FMULst=function(){this.setST(0,this.doMultiply(this.getST(0),this.getST(this.iStack)))},FPUx86.FMULsti=function(){this.setST(this.iStack,this.doMultiply(this.getST(this.iStack),this.getST(0)))},FPUx86.FMULPsti=function(){this.setST(this.iStack,this.doMultiply(this.getST(this.iStack),this.getST(0)))&&this.popValue()},FPUx86.FNOP=function(){},FPUx86.FPATAN=function(){this.setST(1,Math.atan2(this.getST(1),this.getST(0)))&&this.popValue()},FPUx86.FPTAN=function(){this.setST(0,Math.tan(this.getST(0)))&&this.pushValue(1)},FPUx86.FPREM=function(){this.setST(0,this.getST(0)%this.getST(1))},FPUx86.FRSTOR=function(){let V=this.cpu,R=this.loadEnv(V.regEA),U=this.intTmpTR;for(let l=0;l<this.regStack.length;l++)U[0]=V.getLong(R),U[1]=V.getLong(R+=4),U[2]=V.getShort(R+=4),this.setTR(l,U),R+=2},FPUx86.FRNDINT=function(){this.setST(0,this.roundValue(this.getST(0),FPUx86.MAX_INT64))},FPUx86.FSAVE=function(){let V=this.cpu,R=this.saveEnv(V.regEA);for(let U=0;U<this.regStack.length;U++){let l=this.getTR(U,!0);V.setLong(R,l[0]),V.setLong(R+=4,l[1]),V.setShort(R+=4,l[2]),R+=2}this.resetFPU()},FPUx86.FSCALE=function(){let V=this.getST(0),R=this.getST(1);null!=V&&null!=R&&this.setST(0,V*Math.pow(2,this.truncateValue(R)))},FPUx86.FSETPM287=function(){this.isModel(X86.FPU.MODEL_80287)&&this.opUnimplemented()},FPUx86.FSINCOS387=function(){this.isAtLeastModel(X86.FPU.MODEL_80287XL)&&this.opUnimplemented()},FPUx86.FSQRT=function(){this.setST(0,this.doSquareRoot(this.getST(0)))},FPUx86.FSTlr=function(){this.getLR(0)&&this.setEAFromLR()},FPUx86.FSTsr=function(){this.getSR(0)&&this.setEAFromSR()},FPUx86.FSTsti=function(){this.setST(this.iStack,this.getST(0))},FPUx86.FSTENV=function(){this.saveEnv(this.cpu.regEA),this.regControl|=X86.FPU.CONTROL.EXC},FPUx86.FSTPlr=function(){this.getLR(0)&&(this.setEAFromLR(),this.popValue())},FPUx86.FSTPsr=function(){this.getSR(0)&&(this.setEAFromSR(),this.popValue())},FPUx86.FSTPsti=function(){this.setST(this.iStack,this.getST(0))&&this.popValue()},FPUx86.FSTP8087=function(){this.opObsolete(),FPUx86.FSTPsti.call(this)},FPUx86.FSTPtr=function(){this.getTR(0)&&(this.setEAFromTR(),this.popValue())},FPUx86.FSTCW=function(){this.cpu.setShort(this.cpu.regEA,this.regControl)},FPUx86.FSTSW=function(){this.cpu.setShort(this.cpu.regEA,this.getStatus())},FPUx86.FSTSWAX287=function(){this.isAtLeastModel(X86.FPU.MODEL_80287)&&(this.cpu.regEAX=-65536&this.cpu.regEAX|this.getStatus())},FPUx86.FSUBlr=function(){this.setST(0,this.doSubtract(this.getST(0),this.getLRFromEA()))},FPUx86.FSUBsr=function(){this.setST(0,this.doSubtract(this.getST(0),this.getSRFromEA()))},FPUx86.FSUBst=function(){this.setST(0,this.doSubtract(this.getST(0),this.getST(this.iStack)))},FPUx86.FSUBsti=function(){this.setST(this.iStack,this.doSubtract(this.getST(this.iStack),this.getST(0)))},FPUx86.FSUBPsti=function(){this.setST(this.iStack,this.doSubtract(this.getST(this.iStack),this.getST(0)))&&this.popValue()},FPUx86.FSUBRlr=function(){this.setST(0,this.doSubtract(this.getLRFromEA(),this.getST(0)))},FPUx86.FSUBRsr=function(){this.setST(0,this.doSubtract(this.getSRFromEA(),this.getST(0)))},FPUx86.FSUBRst=function(){this.setST(0,this.doSubtract(this.getST(this.iStack),this.getST(0)))},FPUx86.FSUBRsti=function(){this.setST(this.iStack,this.doSubtract(this.getST(0),this.getST(this.iStack)))},FPUx86.FSUBRPsti=function(){this.setST(this.iStack,this.doSubtract(this.getST(0),this.getST(this.iStack)))&&this.popValue()},FPUx86.FTST=function(){this.doCompare(this.getST(0),0)},FPUx86.FXAM=function(){if(this.regStatus&=~X86.FPU.STATUS.CC,this.getSTSign(0)&&(this.regStatus|=X86.FPU.STATUS.C1),this.getTag(this.iST)==X86.FPU.TAGS.EMPTY)this.regStatus|=X86.FPU.STATUS.C0|X86.FPU.STATUS.C3;else{let V=this.getST(0);isNaN(V)?this.regStatus|=X86.FPU.STATUS.C0:this.regStatus|=0===V?X86.FPU.STATUS.C3:V===1/0||V===-1/0?X86.FPU.STATUS.C0|X86.FPU.STATUS.C2:X86.FPU.STATUS.C2}},FPUx86.FXCHsti=function(){let V=this.getST(0);this.setST(0,this.getST(this.iStack)),this.setST(this.iStack,V)},FPUx86.FXCH8087=function(){this.opObsolete(),FPUx86.FXCHsti.call(this)},FPUx86.FXTRACT=function(){let V=this.getST(0);null!=V&&(this.regTmpLR[0]=V,this.setST(0,(this.intTmpLR[1]>>20&2047)-1023),this.intTmpLR[1]=-1073741825&(1072693248|this.intTmpLR[1]),this.pushValue(this.regTmpLR[0]))},FPUx86.FYL2X=function(){this.setST(1,this.getST(1)*Math.log(this.getST(0))/Math.LN2)&&this.popValue()},FPUx86.FYL2XP1=function(){this.setST(1,this.getST(1)*Math.log(this.getST(0)+1)/Math.LN2)&&this.popValue()},FPUx86.aaOps={216:{0:FPUx86.FADDsr,1:FPUx86.FMULsr,2:FPUx86.FCOMsr,3:FPUx86.FCOMPsr,4:FPUx86.FSUBsr,5:FPUx86.FSUBRsr,6:FPUx86.FDIVsr,7:FPUx86.FDIVsr,48:FPUx86.FADDst,49:FPUx86.FMULst,50:FPUx86.FCOMst,51:FPUx86.FCOMPst,52:FPUx86.FSUBst,53:FPUx86.FSUBRst,54:FPUx86.FDIVst,55:FPUx86.FDIVRst},217:{0:FPUx86.FLDsr,2:FPUx86.FSTsr,3:FPUx86.FSTPsr,4:FPUx86.FLDENV,5:FPUx86.FLDCW,6:FPUx86.FSTENV,7:FPUx86.FSTCW,48:FPUx86.FLDsti,49:FPUx86.FXCHsti,50:FPUx86.FNOP,51:FPUx86.FSTP8087,64:FPUx86.FCHS,65:FPUx86.FABS,68:FPUx86.FTST,69:FPUx86.FXAM,80:FPUx86.FLD1,81:FPUx86.FLDL2T,82:FPUx86.FLDL2E,83:FPUx86.FLDPI,84:FPUx86.FLDLG2,85:FPUx86.FLDLN2,86:FPUx86.FLDZ,96:FPUx86.F2XM1,97:FPUx86.FYL2X,98:FPUx86.FPTAN,99:FPUx86.FPATAN,100:FPUx86.FXTRACT,102:FPUx86.FDECSTP,103:FPUx86.FINCSTP,112:FPUx86.FPREM,113:FPUx86.FYL2XP1,114:FPUx86.FSQRT,116:FPUx86.FRNDINT,117:FPUx86.FSCALE},218:{0:FPUx86.FIADD32,1:FPUx86.FIMUL32,2:FPUx86.FICOM32,3:FPUx86.FICOMP32,4:FPUx86.FISUB32,5:FPUx86.FISUBR32,6:FPUx86.FIDIV32,7:FPUx86.FIDIVR32},219:{0:FPUx86.FILD32,2:FPUx86.FIST32,3:FPUx86.FISTP32,5:FPUx86.FLDtr,7:FPUx86.FSTPtr,64:FPUx86.FENI8087,65:FPUx86.FDISI8087,66:FPUx86.FCLEX,67:FPUx86.FINIT,68:FPUx86.FSETPM287,115:FPUx86.FSINCOS387},220:{0:FPUx86.FADDlr,1:FPUx86.FMULlr,2:FPUx86.FCOMlr,3:FPUx86.FCOMPlr,4:FPUx86.FSUBlr,5:FPUx86.FSUBRlr,6:FPUx86.FDIVlr,7:FPUx86.FDIVRlr,48:FPUx86.FADDsti,49:FPUx86.FMULsti,50:FPUx86.FCOM8087,51:FPUx86.FCOMP8087,52:FPUx86.FSUBRsti,53:FPUx86.FSUBsti,54:FPUx86.FDIVRsti,55:FPUx86.FDIVsti},221:{0:FPUx86.FLDlr,2:FPUx86.FSTlr,3:FPUx86.FSTPlr,4:FPUx86.FRSTOR,6:FPUx86.FSAVE,7:FPUx86.FSTSW,48:FPUx86.FFREEsti,49:FPUx86.FXCH8087,50:FPUx86.FSTsti,51:FPUx86.FSTPsti},222:{0:FPUx86.FIADD16,1:FPUx86.FIMUL16,2:FPUx86.FICOM16,3:FPUx86.FICOMP16,4:FPUx86.FISUB16,5:FPUx86.FISUBR16,6:FPUx86.FIDIV16,7:FPUx86.FIDIVR16,48:FPUx86.FADDPsti,49:FPUx86.FMULPsti,50:FPUx86.FCOMP8087,51:FPUx86.FCOMPP,52:FPUx86.FSUBRPsti,53:FPUx86.FSUBPsti,54:FPUx86.FDIVRPsti,55:FPUx86.FDIVPsti},223:{0:FPUx86.FILD16,2:FPUx86.FIST16,3:FPUx86.FISTP16,4:FPUx86.FBLDpd,5:FPUx86.FILD64,6:FPUx86.FBSTPpd,7:FPUx86.FISTP64,48:FPUx86.FFREEP8087,49:FPUx86.FXCH8087,50:FPUx86.FSTP8087,51:FPUx86.FSTP8087,52:FPUx86.FSTSWAX287}},FPUx86.afnPreserveExceptions=[FPUx86.FCLEX,FPUx86.FINIT,FPUx86.FLDCW,FPUx86.FLDENV,FPUx86.FRSTOR,FPUx86.FSAVE,FPUx86.FSTCW,FPUx86.FSTENV,FPUx86.FSTSW,FPUx86.FSTSWAX287],WebLib.onInit(FPUx86.init);
class Segx86{static ID={NULL:0,CODE:1,DATA:2,STACK:3,TSS:4,LDT:5,VER:6,DBG:7};static CALLBREAK_SEL=1;constructor(V,R,U,l){this.cpu=V,this.id=R,this.sName=U||"",this.sel=0,this.limit=65535,this.offMax=this.limit+1,this.base=0,this.acc=this.type=0,this.ext=0,this.cpl=this.dpl=0,this.addrDesc=X86.ADDR_INVALID,this.sizeData=this.sizeAddr=2,this.maskData=this.maskAddr=65535,this.loadV86=this.loadReal,this.checkReadV86=this.checkReadWriteReal,this.checkWriteV86=this.checkReadWriteReal,this.probe={sel:-1,base:0,limit:0,acc:0,type:0,ext:0,addrDesc:X86.ADDR_INVALID},1==this.id&&(this.offIP=0,this.fCall=null,this.fStackSwitch=!1,this.awParms=new Array(32),this.aCallBreaks=[]),this.updateMode(!0,l),0==this.id&&(this.checkRead=this.checkReadWriteNone,this.checkWrite=this.checkReadWriteNone)}addCallBreak(V){return this.aCallBreaks.push(V),[this.aCallBreaks.length,Segx86.CALLBREAK_SEL]}loadCode(V,R,U){return this.offIP=V,this.fCall=U,this.load(R)}loadReal(V,R){return this.sel=65535&V,this.base=this.sel<<4}loadProt(V,R){let U,l,e=this.cpu;if((V&=65535)&X86.SEL.LDT?(U=e.segLDT.base,l=U+e.segLDT.limit|0):(U=e.addrGDT,l=e.addrGDTLimit),U){let t=U+(V&X86.SEL.MASK)|0;if(l-t|!1)return e.nStepCycles-=15,this.loadDesc8(t,V,R);this.id<Segx86.ID.VER&&X86.helpFault.call(e,R&&this.id==Segx86.ID.STACK?X86.EXCEPTION.TS_FAULT:X86.EXCEPTION.GP_FAULT,V&X86.ERRCODE.SELMASK)}return X86.ADDR_INVALID}loadIDTReal(V,R=0){let U=this.cpu;if(DEBUGGER&&U.dbg&&U.dbg.checkVectorBP(V,R,!1))return X86.ADDR_INVALID;let l=U.addrIDT+(V<<2),e=U.getShort(l);return U.regPS&=~(X86.PS.TF|X86.PS.IF),this.load(U.getShort(l+2))+e|0}loadIDTProt(V,R=0){let U=this.cpu;if(DEBUGGER&&U.dbg&&U.dbg.checkVectorBP(V,R,!0))return X86.ADDR_INVALID;let l=V<<3,e=U.addrIDT+l|0;if((U.addrIDTLimit-e|0)>=7){this.fCall=!0;let V=this.loadDesc8(e,l);return V!==X86.ADDR_INVALID&&(V+=this.offIP),V}return X86.helpFault.call(U,X86.EXCEPTION.GP_FAULT,l|X86.ERRCODE.IDT),X86.ADDR_INVALID}checkReadWriteNone(V,R){return this.base+V|0}checkReadWriteReal(V,R){return(V>>>0)+R>this.offMax&&(this.cpu.model<=X86.MODEL_8088?this.cpu.opFlags|=X86.OPFLAG.WRAP:X86.helpFault.call(this.cpu,X86.EXCEPTION.GP_FAULT)),this.base+V|0}checkReadProt(V,R){return(V>>>0)+R<=this.offMax?this.base+V|0:this.checkReadProtDisallowed(V,R)}checkReadProtDown(V,R){return(V>>>0)+R>this.offMax?this.base+V|0:this.checkReadProtDisallowed(V,R)}checkReadProtDisallowed(V,R){return X86.helpFault.call(this.cpu,X86.EXCEPTION.GP_FAULT,0),X86.ADDR_INVALID}checkWriteProt(V,R){return(V>>>0)+R<=this.offMax?this.base+V|0:this.checkWriteProtDisallowed(V,R)}checkWriteProtDown(V,R){return(V>>>0)+R>this.offMax?this.base+V|0:this.checkWriteProtDisallowed(V,R)}checkWriteProtDisallowed(V,R){return X86.helpFault.call(this.cpu,X86.EXCEPTION.GP_FAULT,0),X86.ADDR_INVALID}checkReadDebugger(V,R){return DEBUGGER&&(this.addrDesc===X86.ADDR_INVALID||this.fExpDown&&(V>>>0)+R>this.offMax||!this.fExpDown&&(V>>>0)+R<=this.offMax)?this.base+V|0:X86.ADDR_INVALID}checkWriteDebugger(V,R){return DEBUGGER&&(this.addrDesc===X86.ADDR_INVALID||this.fExpDown&&(V>>>0)+R>this.offMax||!this.fExpDown&&(V>>>0)+R<=this.offMax)?this.base+V|0:X86.ADDR_INVALID}loadDesc(V,R,U,l){this.sel=V,this.base=U,this.limit=l,this.offMax=1+(l>>>0),this.acc=R,this.type=R&X86.DESC.ACC.TYPE.MASK,this.ext=R>>16&(X86.DESC.EXT.BIG|X86.DESC.EXT.LIMITPAGES);let e=V&X86.SEL.LDT?this.cpu.segLDT.base:this.cpu.addrGDT;this.addrDesc=e+(V&X86.SEL.MASK)|0,this.id<Segx86.ID.TSS&&this.updateMode(!0),DEBUG&&this.messageSeg(V,U,l,this.type)}loadDesc6(V,R){let U=this.cpu,l=U.getShort(V+2),e=U.getShort(V)|(255&l)<<16,t=U.getShort(V+4);return this.sel=R,this.base=e,this.limit=t,this.offMax=1+(t>>>0),this.acc=l,this.type=l&X86.DESC.ACC.TYPE.MASK,this.ext=0,this.addrDesc=V,this.id<Segx86.ID.TSS&&this.updateMode(!0),DEBUG&&this.messageSeg(R,e,t,this.type),e}loadDesc8(V,R,U){let l=this.cpu;if(!U&&R===this.probe.sel)return this.sel=R,this.base=this.probe.base,this.limit=this.probe.limit,this.offMax=1+(this.probe.limit>>>0),this.acc=this.probe.acc,this.type=this.probe.type,this.ext=this.probe.ext,this.addrDesc=this.probe.addrDesc,this.probe.sel=-1,this.updateMode(!0,!0,!1),this.base;this.probe.sel=-1;let e,t,T,k,F,W,a,s,Z,S,h,E,i,N,r,M,J,d=l.getShort(V+X86.DESC.LIMIT.OFFSET),p=l.getShort(V+X86.DESC.ACC.OFFSET),G=p&X86.DESC.ACC.TYPE.MASK,b=l.getShort(V+X86.DESC.BASE.OFFSET)|(p&X86.DESC.ACC.BASE1623)<<16,D=l.getShort(V+X86.DESC.EXT.OFFSET),o=R&X86.SEL.MASK;switch(I386&&l.model>=X86.MODEL_80386&&(e=d,b|=(D&X86.DESC.EXT.BASE2431)<<16,d|=(D&X86.DESC.EXT.LIMIT1619)<<16,D&X86.DESC.EXT.LIMITPAGES&&(d=d<<12|4095)),this.id){case Segx86.ID.CODE:if(k=this.fCall,this.fStackSwitch=!1,k&&R==Segx86.CALLBREAK_SEL&&this.aCallBreaks.length){let V=this.offIP-1,R=this.aCallBreaks[V];if(R&&!R())return X86.ADDR_INVALID}if(t=R&X86.SEL.RPL,T=(p&X86.DESC.ACC.DPL.MASK)>>X86.DESC.ACC.DPL.SHIFT,W=-1,o||V>=l.addrGDT&&V<l.addrGDTLimit&&(G=0),G>=X86.DESC.ACC.TYPE.CODE_EXECONLY)null!=U?W=0:!1!==k?(G&X86.DESC.ACC.TYPE.CONFORMING?T<=this.cpl&&(W=0):t<=this.cpl&&T==this.cpl&&(W=0),W||(R=R&~X86.SEL.RPL|this.cpl&X86.SEL.RPL)):t>=this.cpl&&(t>this.cpl&&(J=l.popWord(),l.setSS(l.popWord(),!0),l.setSP(J),this.fStackSwitch=!0),W=0);else{if(G==X86.DESC.ACC.TYPE.TSS286||G==X86.DESC.ACC.TYPE.TSS386)return this.switchTSS(R,k)?this.base:X86.ADDR_INVALID;if(G==X86.DESC.ACC.TYPE.GATE_CALL)W=2,M=0,t<this.cpl&&(t=this.cpl);else if(G==X86.DESC.ACC.TYPE.GATE386_CALL)W=4,M=0,t<this.cpl&&(t=this.cpl);else if(G==X86.DESC.ACC.TYPE.GATE286_INT)W=2,M=X86.PS.VM|X86.PS.NT|X86.PS.TF|X86.PS.IF;else if(G==X86.DESC.ACC.TYPE.GATE386_INT)W=4,M=X86.PS.VM|X86.PS.NT|X86.PS.TF|X86.PS.IF;else if(G==X86.DESC.ACC.TYPE.GATE286_TRAP)W=2,M=X86.PS.VM|X86.PS.NT|X86.PS.TF;else if(G==X86.DESC.ACC.TYPE.GATE386_TRAP)W=4,M=X86.PS.VM|X86.PS.NT|X86.PS.TF;else if(G==X86.DESC.ACC.TYPE.GATE_TASK)return this.switchTSS(65535&b,k)?this.base:X86.ADDR_INVALID}if(W>0&&!(p&X86.DESC.ACC.PRESENT)&&(W=0),W>0&&(s=this.cpl,S=V==l.addrIDT+R,t<=T&&(!S||l.nFault>=0||s<=T))){a=65535&b,I386&&G&X86.DESC.ACC.TYPE.NONSEG_386&&(d=e|D<<16);let V=0,R=0;if(Z=a&X86.SEL.RPL,Z<s){if(this.loadProt(a,!0)===X86.ADDR_INVALID)return X86.ADDR_INVALID;if(h=l.segTSS.base,I386&&l.segTSS.type&X86.DESC.ACC.TYPE.NONSEG_386?(E=(Z<<3)+X86.TSS386.CPL0_ESP,i=4):(E=(Z<<2)+X86.TSS286.CPL0_SP,i=2),V=l.getShort(h+E+i),!V)return X86.helpFault.call(l,X86.EXCEPTION.TS_FAULT,V),X86.ADDR_INVALID;if(l.segSS.loadProt(V,!0)===X86.ADDR_INVALID)return X86.ADDR_INVALID;R=2==i?l.getShort(h+E):l.getLong(h+E)}let U=l.regPS;if(l.regPS&=~M,U&X86.PS.VM&&l.setProtMode(!0,!1),this.loadProt(a,!1)===X86.ADDR_INVALID)return X86.ADDR_INVALID;if(l.setDataSize(W),this.offIP=d,Z<s){if(!0!==k)return X86.ADDR_INVALID;J=l.getSP();let e=0,t=31&p;for(;t--;)this.awParms[e++]=l.getSOWord(l.segSS,J),J+=2;for(r=l.getSS(),N=l.getSP(),l.setSS(V,!0),l.setSP(R),U&X86.PS.VM&&(l.setDataSize(4),l.pushData(l.segGS.sel,4,2),l.setGS(0),l.pushData(l.segFS.sel,4,2),l.setFS(0),l.pushData(l.segDS.sel,4,2),l.setDS(0),l.pushData(l.segES.sel,4,2),l.setES(0)),l.pushData(r,l.sizeData,2),l.pushWord(N);e;)l.pushWord(this.awParms[--e]);this.fStackSwitch=!0}return this.base}if(0!=W)return X86.helpFault.call(l,X86.EXCEPTION.GP_FAULT,R&X86.ERRCODE.SELMASK|(S?X86.ERRCODE.IDT:0)),X86.ADDR_INVALID;if(!(p&X86.DESC.ACC.PRESENT))return X86.helpFault.call(l,X86.EXCEPTION.NP_FAULT,R&X86.ERRCODE.SELMASK|(S?X86.ERRCODE.IDT:0)),X86.ADDR_INVALID;break;case Segx86.ID.DATA:if(o){if(G<X86.DESC.ACC.TYPE.SEG||(G&(X86.DESC.ACC.TYPE.CODE|X86.DESC.ACC.TYPE.READABLE))==X86.DESC.ACC.TYPE.CODE)return X86.helpFault.call(l,X86.EXCEPTION.GP_FAULT,R&X86.ERRCODE.SELMASK),X86.ADDR_INVALID;if(!(p&X86.DESC.ACC.PRESENT))return X86.helpFault.call(l,X86.EXCEPTION.NP_FAULT,R&X86.ERRCODE.SELMASK),X86.ADDR_INVALID}break;case Segx86.ID.STACK:if(!o||G<X86.DESC.ACC.TYPE.SEG||(G&(X86.DESC.ACC.TYPE.CODE|X86.DESC.ACC.TYPE.WRITABLE))!=X86.DESC.ACC.TYPE.WRITABLE)return X86.helpFault.call(l,X86.EXCEPTION.GP_FAULT,R&X86.ERRCODE.SELMASK),X86.ADDR_INVALID;if(!(p&X86.DESC.ACC.PRESENT))return X86.helpFault.call(l,X86.EXCEPTION.SS_FAULT,R&X86.ERRCODE.SELMASK),X86.ADDR_INVALID;break;case Segx86.ID.TSS:if(F=G&~X86.DESC.ACC.TYPE.TSS_BUSY,!o||F!=X86.DESC.ACC.TYPE.TSS286&&F!=X86.DESC.ACC.TYPE.TSS386)return X86.helpFault.call(l,X86.EXCEPTION.GP_FAULT,R&X86.ERRCODE.SELMASK),X86.ADDR_INVALID;F==X86.DESC.ACC.TYPE.TSS386&&(this.addrIOPM=b+l.getShort(b+X86.TSS386.TASK_IOPM+2)>>>0,this.addrIOPMLimit=b+this.limit>>>0);break;case Segx86.ID.VER:if(!(G&X86.DESC.ACC.TYPE.SEG)&&G>X86.DESC.ACC.TYPE.TSS286_BUSY&&G!=X86.DESC.ACC.TYPE.TSS386&&G!=X86.DESC.ACC.TYPE.TSS386_BUSY)return X86.ADDR_INVALID}return U?(this.probe.sel=R,this.probe.base=b,this.probe.limit=d,this.probe.acc=p,this.probe.type=G,this.probe.ext=D,this.probe.addrDesc=V):(this.sel=R,this.base=b,this.limit=d,this.offMax=1+(d>>>0),this.acc=p,this.type=G,this.ext=D,this.addrDesc=V,this.updateMode(!0,!0,!1)),DEBUG&&this.messageSeg(R,b,d,G,D),b}switchTSS(V,R){let U=this.cpu,l=this.cpl,e=U.segTSS.sel,t=U.segTSS.base;if(!R){if(!(U.segTSS.type&X86.DESC.ACC.TYPE.TSS_BUSY))return X86.helpFault.call(U,X86.EXCEPTION.GP_FAULT,V&X86.ERRCODE.SELMASK),!1;U.setShort(U.segTSS.addrDesc+X86.DESC.ACC.OFFSET,U.segTSS.acc&=~X86.DESC.ACC.TYPE.TSS_BUSY)}if(U.segTSS.load(V)===X86.ADDR_INVALID)return!1;let T,k,F=U.segTSS.base;if(DEBUG&&DEBUGGER&&U.dbg&&U.dbg.printf(MESSAGE.TSS,"%s: TR %#06x (%#06x), new TR %#06x (%#06x)\n",R?"Task switch":"Task return",e,t,V,F),!1!==R){if(U.segTSS.type&X86.DESC.ACC.TYPE.TSS_BUSY)return X86.helpFault.call(U,X86.EXCEPTION.GP_FAULT,V&X86.ERRCODE.SELMASK),!1;U.setShort(U.segTSS.addrDesc+X86.DESC.ACC.OFFSET,U.segTSS.acc|=X86.DESC.ACC.TYPE.TSS_BUSY)}return U.segTSS.type=U.segTSS.type&~X86.DESC.ACC.TYPE.TSS_BUSY|U.segTSS.acc&X86.DESC.ACC.TYPE.TSS_BUSY,U.segTSS.type==X86.DESC.ACC.TYPE.TSS286||U.segTSS.type==X86.DESC.ACC.TYPE.TSS286_BUSY?(U.setShort(t+X86.TSS286.TASK_IP,U.getIP()),U.setShort(t+X86.TSS286.TASK_PS,U.getPS()),U.setShort(t+X86.TSS286.TASK_AX,U.regEAX),U.setShort(t+X86.TSS286.TASK_CX,U.regECX),U.setShort(t+X86.TSS286.TASK_DX,U.regEDX),U.setShort(t+X86.TSS286.TASK_BX,U.regEBX),U.setShort(t+X86.TSS286.TASK_SP,U.getSP()),U.setShort(t+X86.TSS286.TASK_BP,U.regEBP),U.setShort(t+X86.TSS286.TASK_SI,U.regESI),U.setShort(t+X86.TSS286.TASK_DI,U.regEDI),U.setShort(t+X86.TSS286.TASK_ES,U.segES.sel),U.setShort(t+X86.TSS286.TASK_CS,U.segCS.sel),U.setShort(t+X86.TSS286.TASK_SS,U.segSS.sel),U.setShort(t+X86.TSS286.TASK_DS,U.segDS.sel),U.segLDT.load(U.getShort(F+X86.TSS286.TASK_LDT)),U.setPS(U.getShort(F+X86.TSS286.TASK_PS)|(R?X86.PS.NT:0)),U.regEAX=U.getShort(F+X86.TSS286.TASK_AX),U.regECX=U.getShort(F+X86.TSS286.TASK_CX),U.regEDX=U.getShort(F+X86.TSS286.TASK_DX),U.regEBX=U.getShort(F+X86.TSS286.TASK_BX),U.regEBP=U.getShort(F+X86.TSS286.TASK_BP),U.regESI=U.getShort(F+X86.TSS286.TASK_SI),U.regEDI=U.getShort(F+X86.TSS286.TASK_DI),U.segES.load(U.getShort(F+X86.TSS286.TASK_ES)),U.segDS.load(U.getShort(F+X86.TSS286.TASK_DS)),U.setCSIP(U.getShort(F+X86.TSS286.TASK_IP),U.getShort(F+X86.TSS286.TASK_CS)),T=X86.TSS286.TASK_SS,k=X86.TSS286.TASK_SP,this.cpl<l&&(k=(this.cpl<<2)+X86.TSS286.CPL0_SP,T=k+2),U.setSS(U.getShort(F+T),!0),U.setSP(U.getShort(F+k))):(U.setLong(t+X86.TSS386.TASK_CR3,U.regCR3),U.setLong(t+X86.TSS386.TASK_EIP,U.getIP()),U.setLong(t+X86.TSS386.TASK_PS,U.getPS()),U.setLong(t+X86.TSS386.TASK_EAX,U.regEAX),U.setLong(t+X86.TSS386.TASK_ECX,U.regECX),U.setLong(t+X86.TSS386.TASK_EDX,U.regEDX),U.setLong(t+X86.TSS386.TASK_EBX,U.regEBX),U.setLong(t+X86.TSS386.TASK_ESP,U.getSP()),U.setLong(t+X86.TSS386.TASK_EBP,U.regEBP),U.setLong(t+X86.TSS386.TASK_ESI,U.regESI),U.setLong(t+X86.TSS386.TASK_EDI,U.regEDI),U.setLong(t+X86.TSS386.TASK_ES,U.segES.sel),U.setLong(t+X86.TSS386.TASK_CS,U.segCS.sel),U.setLong(t+X86.TSS386.TASK_SS,U.segSS.sel),U.setLong(t+X86.TSS386.TASK_DS,U.segDS.sel),U.setLong(t+X86.TSS386.TASK_FS,U.segFS.sel),U.setLong(t+X86.TSS386.TASK_GS,U.segGS.sel),X86.helpLoadCR3.call(U,U.getLong(F+X86.TSS386.TASK_CR3)),U.segLDT.load(U.getShort(F+X86.TSS386.TASK_LDT)),U.setPS(U.getLong(F+X86.TSS386.TASK_PS)|(R?X86.PS.NT:0)),U.regEAX=U.getLong(F+X86.TSS386.TASK_EAX),U.regECX=U.getLong(F+X86.TSS386.TASK_ECX),U.regEDX=U.getLong(F+X86.TSS386.TASK_EDX),U.regEBX=U.getLong(F+X86.TSS386.TASK_EBX),U.regEBP=U.getLong(F+X86.TSS386.TASK_EBP),U.regESI=U.getLong(F+X86.TSS386.TASK_ESI),U.regEDI=U.getLong(F+X86.TSS386.TASK_EDI),U.segES.load(U.getShort(F+X86.TSS386.TASK_ES)),U.segDS.load(U.getShort(F+X86.TSS386.TASK_DS)),U.segFS.load(U.getShort(F+X86.TSS386.TASK_FS)),U.segGS.load(U.getShort(F+X86.TSS386.TASK_GS)),U.setCSIP(U.getLong(F+X86.TSS386.TASK_EIP),U.getShort(F+X86.TSS386.TASK_CS)),T=X86.TSS386.TASK_SS,k=X86.TSS386.TASK_ESP,this.cpl<l&&(k=(this.cpl<<3)+X86.TSS386.CPL0_ESP,T=k+4),U.setSS(U.getShort(F+T),!0),U.setSP(U.getLong(F+k))),R&&U.setShort(F+X86.TSS286.PREV_TSS,e),U.regCR0|=X86.CR0.MSW.TS,!0}setBase(V){return this.cpu.model<X86.MODEL_80386&&(V&=16777215),this.base=V}save(){return[this.sel,this.base,this.limit,this.acc,this.id,this.sName,this.cpl,this.dpl,this.addrDesc,this.sizeAddr,this.maskAddr,this.sizeData,this.maskData,this.type,this.offMax]}restore(V){"number"==typeof V?this.load(V):(this.sel=V[0],this.base=V[1],this.limit=V[2],this.acc=V[3],this.id=V[4],this.sName=V[5],this.cpl=V[6],this.dpl=V[7],this.addrDesc=V[8],this.sizeAddr=V[9]||2,this.maskAddr=V[10]||65535,this.sizeData=V[11]||2,this.maskData=V[12]||65535,this.type=V[13]||this.acc&X86.DESC.ACC.TYPE.MASK,this.offMax=V[14]||1+(this.limit>>>0))}updateMode(V,R,U){if(void 0===R&&(R=!!(this.cpu.regCR0&X86.CR0.MSW.PE)),this.fExpDown=!1,R){if(this.load=this.loadProt,this.loadIDT=this.loadIDTProt,this.checkRead=this.checkReadProt,this.checkWrite=this.checkWriteProt,void 0===U&&(U=!!(this.cpu.regPS&X86.PS.VM)),U)return this.load=this.loadV86,this.checkRead=this.checkReadV86,this.checkWrite=this.checkWriteV86,this.cpl=this.dpl=3,this.sizeData=this.sizeAddr=2,this.maskData=this.maskAddr=65535,this.limit=65535,this.offMax=this.limit+1,this.addrDesc=X86.ADDR_INVALID,void(this.fStackSwitch=!1);if(this.sel&~X86.SEL.RPL){if(this.type&X86.DESC.ACC.TYPE.SEG&&((this.type&X86.DESC.ACC.TYPE.CODE_READABLE)==X86.DESC.ACC.TYPE.CODE_EXECONLY&&(this.checkRead=this.checkReadProtDisallowed),!(this.type&X86.DESC.ACC.TYPE.CODE)&&this.type&X86.DESC.ACC.TYPE.WRITABLE||(this.checkWrite=this.checkWriteProtDisallowed),(this.type&(X86.DESC.ACC.TYPE.CODE|X86.DESC.ACC.TYPE.EXPDOWN))==X86.DESC.ACC.TYPE.EXPDOWN&&(this.checkRead==this.checkReadProt&&(this.checkRead=this.checkReadProtDown),this.checkWrite==this.checkWriteProt&&(this.checkWrite=this.checkWriteProtDown),this.fExpDown=!0),V&&this.id<Segx86.ID.VER&&this.sel&~X86.SEL.RPL&&this.addrDesc!==X86.ADDR_INVALID)){let V=this.addrDesc+X86.DESC.ACC.TYPE.OFFSET,R=this.cpu.getByte(V);R&X86.DESC.ACC.TYPE.ACCESSED>>8||this.cpu.setByte(V,R|X86.DESC.ACC.TYPE.ACCESSED>>8)}}else this.checkRead=this.checkReadProtDisallowed,this.checkWrite=this.checkWriteProtDisallowed;V&&(this.cpl=this.sel&X86.SEL.RPL,this.dpl=(this.acc&X86.DESC.ACC.DPL.MASK)>>X86.DESC.ACC.DPL.SHIFT,this.cpu.model<X86.MODEL_80386||!(this.ext&X86.DESC.EXT.BIG)?(this.sizeData=2,this.maskData=65535):(this.sizeData=4,this.maskData=-1),this.sizeAddr=this.sizeData,this.maskAddr=this.maskData)}else this.load=this.loadReal,this.loadIDT=this.loadIDTReal,this.checkRead=this.checkReadWriteReal,this.checkWrite=this.checkReadWriteReal,this.cpl=this.dpl=0,this.addrDesc=X86.ADDR_INVALID,this.fStackSwitch=!1}messageSeg(V,R,U,l,e){if(DEBUG){let e=this.cpu.dbg;if(DEBUGGER&&e&&e.messageEnabled(MESSAGE.SEG)){let t=this.sName.length<3?" ":"",T=" dpl="+this.dpl;this.id==Segx86.ID.CODE&&(T+=" cpl="+this.cpl),e.printf(MESSAGE.SEG,"loadSeg(%s):%ssel=%#06x base=%x limit=%#06x type=%#06x%s\n",this.sName,t,V,R,U,l,T)}}}probeDesc(V){if(DEBUGGER){let R,U,l=this.cpu;(V&=65535)&X86.SEL.LDT?(R=l.segLDT.base,U=R+l.segLDT.limit|0):(R=l.addrGDT,U=l.addrGDTLimit);let e=R+(V&X86.SEL.MASK)|0;if(U-e|!1){let R=l.probeAddr(e+X86.DESC.LIMIT.OFFSET,2),U=l.probeAddr(e+X86.DESC.ACC.OFFSET,2),t=U&X86.DESC.ACC.TYPE.MASK,T=l.probeAddr(e+X86.DESC.BASE.OFFSET,2)|(U&X86.DESC.ACC.BASE1623)<<16,k=l.probeAddr(e+X86.DESC.EXT.OFFSET,2);return I386&&l.model>=X86.MODEL_80386&&(T|=(k&X86.DESC.EXT.BASE2431)<<16,R|=(k&X86.DESC.EXT.LIMIT1619)<<16,k&X86.DESC.EXT.LIMITPAGES&&(R=R<<12|4095)),this.sel=V,this.base=T,this.limit=R,this.offMax=1+(R>>>0),this.acc=U,this.type=t,this.ext=k,this.addrDesc=e,this.updateMode(!0,!0,!1),T}}return X86.ADDR_INVALID}}
X86.fnADCb=function(V,R){let U=V+R+this.getCarry()|0;return this.setArithResult(V,R,U,X86.RESULT.BYTE|X86.RESULT.ALL),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,255&U},X86.fnADCw=function(V,R){let U=V+R+this.getCarry()|0;return this.setArithResult(V,R,U,this.typeData|X86.RESULT.ALL),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,U&this.maskData},X86.fnADDb=function(V,R){let U=V+R|0;return this.setArithResult(V,R,U,X86.RESULT.BYTE|X86.RESULT.ALL),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,255&U},X86.fnADDw=function(V,R){let U=V+R|0;return this.setArithResult(V,R,U,this.typeData|X86.RESULT.ALL),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,U&this.maskData},X86.fnANDb=function(V,R){let U=V&R;return this.setLogicResult(U,X86.RESULT.BYTE),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,U},X86.fnANDw=function(V,R){return this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,this.setLogicResult(V&R,this.typeData)&this.maskData},X86.fnARPL=function(V,R){return this.nStepCycles-=10+(this.regEA===X86.ADDR_INVALID?0:1),(V&X86.SEL.RPL)<(R&X86.SEL.RPL)?(V=V&~X86.SEL.RPL|R&X86.SEL.RPL,this.setZF(),V):(this.clearZF(),V)},X86.fnBOUND=function(V,R){if(this.regEA===X86.ADDR_INVALID)return X86.opInvalid.call(this),V;let U=V,l=this.getWord(this.regEA),e=this.getWord(this.regEA+this.sizeData);return 2==this.sizeData&&(U=V<<16>>16,l=l<<16>>16,e=e<<16>>16),this.nStepCycles-=this.cycleCounts.nOpCyclesBound,(U<l||U>e)&&X86.helpFault.call(this,X86.EXCEPTION.BR_FAULT),this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnBSF=function(V,R){let U=0;if(R){this.clearZF();let l=1;for(;l&this.maskData;){if(R&l){V=U;break}l<<=1,U++}}else this.setZF();return this.nStepCycles-=11+3*U,V},X86.fnBSR=function(V,R){let U=0;if(R){this.clearZF();let l=2==this.sizeData?15:31,e=1<<l;for(;e;){if(R&e){V=l;break}e>>>=1,U++,l--}}else this.setZF();return this.nStepCycles-=11+3*U,V},X86.fnBT=function(V,R){return V&1<<(R&(2==this.sizeData?15:31))?this.setCF():this.clearCF(),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?3:6,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnBTC=function(V,R){let U=1<<(R&(2==this.sizeData?15:31));return V&U?this.setCF():this.clearCF(),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?6:8,V^U},X86.fnBTR=function(V,R){let U=1<<(R&(2==this.sizeData?15:31));return V&U?this.setCF():this.clearCF(),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?6:8,V&~U},X86.fnBTS=function(V,R){let U=1<<(R&(2==this.sizeData?15:31));return V&U?this.setCF():this.clearCF(),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?6:8,V|U},X86.fnBTMem=function(V,R){if(this.regEA===X86.ADDR_INVALID)return X86.fnBT.call(this,V,R);let U=this.sizeData<<3;if(R>=U||R<-U){let U=R>>(2==this.sizeData?4:5);V=this.getEAWord(this.segEA,this.offEA+U*this.sizeData)}return V&(R=1<<(R&(2==this.sizeData?15:31)))?this.setCF():this.clearCF(),this.nStepCycles-=6,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnBTCMem=function(V,R){if(this.regEA===X86.ADDR_INVALID)return X86.fnBTC.call(this,V,R);let U=this.sizeData<<3;if(R>=U||R<-U){let U=R>>(2==this.sizeData?4:5);V=this.getEAWord(this.segEA,this.offEA+U*this.sizeData)}return V&(R=1<<(R&(2==this.sizeData?15:31)))?this.setCF():this.clearCF(),this.nStepCycles-=8,V^R},X86.fnBTRMem=function(V,R){if(this.regEA===X86.ADDR_INVALID)return X86.fnBTR.call(this,V,R);let U=this.sizeData<<3;if(R>=U||R<-U){let U=R>>(2==this.sizeData?4:5);V=this.getEAWord(this.segEA,this.offEA+U*this.sizeData)}return V&(R=1<<(R&(2==this.sizeData?15:31)))?this.setCF():this.clearCF(),this.nStepCycles-=8,V&~R},X86.fnBTSMem=function(V,R){if(this.regEA===X86.ADDR_INVALID)return X86.fnBTS.call(this,V,R);let U=this.sizeData<<3;if(R>=U||R<-U){let U=R>>(2==this.sizeData?4:5);V=this.getEAWord(this.segEA,this.offEA+U*this.sizeData)}return V&(R=1<<(R&(2==this.sizeData?15:31)))?this.setCF():this.clearCF(),this.nStepCycles-=8,V|R},X86.fnCALLw=function(V,R){return this.pushWord(this.getIP()),this.setIP(V),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesCallWR:this.cycleCounts.nOpCyclesCallWM,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnCALLFdw=function(V,R){return this.regEA===X86.ADDR_INVALID?X86.fnGRPUndefined.call(this,V,R):(this.opLSP=this.regLSP,X86.helpCALLF.call(this,V,this.getShort(this.regEA+this.sizeData)),this.nStepCycles-=this.cycleCounts.nOpCyclesCallDM,this.opFlags|=X86.OPFLAG.NOWRITE,this.opLSP=X86.ADDR_INVALID,V)},X86.fnCMPb=function(V,R){let U=V-R|0;return this.setArithResult(V,R,U,X86.RESULT.BYTE|X86.RESULT.ALL,!0),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesCompareRM:this.cycleCounts.nOpCyclesArithRM,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnCMPw=function(V,R){let U=V-R|0;return this.setArithResult(V,R,U,this.typeData|X86.RESULT.ALL,!0),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesCompareRM:this.cycleCounts.nOpCyclesArithRM,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnDECb=function(V,R){let U=V-1|0;return this.setArithResult(V,1,U,X86.RESULT.BYTE|X86.RESULT.NOTCF,!0),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesIncR:this.cycleCounts.nOpCyclesIncM,255&U},X86.fnDECw=function(V,R){let U=V-1|0;return this.setArithResult(V,1,U,this.typeData|X86.RESULT.NOTCF,!0),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesIncR:this.cycleCounts.nOpCyclesIncM,U&this.maskData},X86.fnDIVb=function(V,R){if(!V)return X86.helpDIVOverflow.call(this),V;let U=(R=65535&this.regEAX)/V;return U>255?(X86.helpDIVOverflow.call(this),V):(this.regMDLo=255&U|(R%V&255)<<8,this.fMDSet=!0,this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesDivBR:this.cycleCounts.nOpCyclesDivBM,this.opFlags|=X86.OPFLAG.NOWRITE,V)},X86.fnDIVw=function(V,R){if(2==this.sizeData){if(!V)return X86.helpDIVOverflow.call(this),V;let U=(R=65536*(65535&this.regEDX)+(65535&this.regEAX))/V;if(U>=65536)return X86.helpDIVOverflow.call(this),V;this.regMDLo=65535&U,this.regMDHi=R%V&65535}else{if(!X86.helpDIV32.call(this,this.regEAX,this.regEDX,V))return X86.helpDIVOverflow.call(this),V;this.regMDLo|=0,this.regMDHi|=0}return this.fMDSet=!0,this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesDivWR:this.cycleCounts.nOpCyclesDivWM,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnESC=function(V,R){return this.fpuActive&&this.fpuActive.opFPU(this.bOpcode,this.bModRM,V,R),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?2:8,V},X86.fnGRPFault=function(V,R){return this.model<X86.MODEL_80186?X86.fnGRPUndefined.call(this,V,R):(X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0),V)},X86.fnGRPInvalid=function(V,R){return X86.opInvalid.call(this),V},X86.fnGRPUndefined=function(V,R){return X86.opUndefined.call(this),V},X86.fnIDIVb=function(V,R){if(!V)return X86.helpDIVOverflow.call(this),V;let U=V<<24>>24,l=(R=this.regEAX<<16>>16)/U|0;return l!=l<<24>>24||this.model<=X86.MODEL_8088&&-128==l?(X86.helpDIVOverflow.call(this),V):(this.regMDLo=255&l|(R%U&255)<<8,this.fMDSet=!0,this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesIDivBR:this.cycleCounts.nOpCyclesIDivBM,this.opFlags|=X86.OPFLAG.NOWRITE,V)},X86.fnIDIVw=function(V,R){if(2==this.sizeData){if(!V)return X86.helpDIVOverflow.call(this),V;let U=V<<16>>16,l=(R=this.regEDX<<16|65535&this.regEAX)/U|0;if(l!=l<<16>>16||this.model<=X86.MODEL_8088&&-32768==l)return X86.helpDIVOverflow.call(this),V;this.regMDLo=65535&l,this.regMDHi=R%U&65535}else{if(!X86.helpIDIV32.call(this,this.regEAX,this.regEDX,V))return X86.helpDIVOverflow.call(this),V;this.regMDLo|=0,this.regMDHi|=0}return this.fMDSet=!0,this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesIDivWR:this.cycleCounts.nOpCyclesIDivWM,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnIMUL8=function(V,R){let U=X86.fnIMULrw.call(this,this.getIPDisp(),R);return this.model<X86.MODEL_80386&&(this.nStepCycles-=12),U},X86.fnIMULn=function(V,R){let U;return V=this.getIPWord(),U=2==this.sizeData?X86.fnIMULrw.call(this,V,R):X86.fnIMULrd.call(this,V,R),this.model<X86.MODEL_80386&&(this.nStepCycles-=12),U},X86.fnIMUL32=function(V,R){let U=!1;R<0&&(R=0|-R,U=!U),V<0&&(V=0|-V,U=!U),X86.fnMUL32.call(this,V,R),U&&(this.regMDLo=1+~this.regMDLo|0,this.regMDHi=~this.regMDHi+(this.regMDLo?0:1)|0)},X86.fnIMULb=function(V,R){let U=(this.regEAX<<24>>24)*(V<<24>>24)|0;return this.regMDLo=65535&U,U>127||U<-128?(this.setCF(),this.setOF()):(this.clearCF(),this.clearOF()),this.model<=X86.MODEL_8088&&this.clearZF(),this.fMDSet=!0,this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesIMulBR:this.cycleCounts.nOpCyclesIMulBM,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnIMULw=function(V,R){let U;if(2==this.sizeData){let R=((65535&this.regEAX)<<16>>16)*(V<<16>>16)|0;this.regMDLo=65535&R,this.regMDHi=R>>16&65535,U=R>32767||R<-32768}else X86.fnIMUL32.call(this,V,this.regEAX),U=this.regMDHi!=this.regMDLo>>31;return U?(this.setCF(),this.setOF()):(this.clearCF(),this.clearOF()),this.model<=X86.MODEL_8088&&this.clearZF(),this.fMDSet=!0,this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesIMulWR:this.cycleCounts.nOpCyclesIMulWM,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnIMULrw=function(V,R){let U=(V<<16>>16)*(R<<16>>16)|0;return U>32767||U<-32768?(this.setCF(),this.setOF()):(this.clearCF(),this.clearOF()),U&=65535,this.nStepCycles-=this.regEA===X86.ADDR_INVALID?9:12,U},X86.fnIMULrd=function(V,R){return X86.fnIMUL32.call(this,V,R),this.regMDHi!=this.regMDLo>>31?(this.setCF(),this.setOF()):(this.clearCF(),this.clearOF()),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?9:12,this.regMDLo},X86.fnINCb=function(V,R){let U=V+1|0;return this.setArithResult(V,1,U,X86.RESULT.BYTE|X86.RESULT.NOTCF),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesIncR:this.cycleCounts.nOpCyclesIncM,255&U},X86.fnINCw=function(V,R){let U=V+1|0;return this.setArithResult(V,1,U,this.typeData|X86.RESULT.NOTCF),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesIncR:this.cycleCounts.nOpCyclesIncM,U&this.maskData},X86.fnJMPw=function(V,R){return this.setIP(V),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesJmpWR:this.cycleCounts.nOpCyclesJmpWM,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnJMPFdw=function(V,R){return this.regEA===X86.ADDR_INVALID?X86.fnGRPUndefined.call(this,V,R):(this.setCSIP(V,this.getShort(this.regEA+this.sizeData)),MAXDEBUG&&this.cIntReturn&&this.checkIntReturn(this.regLIP),this.nStepCycles-=this.cycleCounts.nOpCyclesJmpDM,this.opFlags|=X86.OPFLAG.NOWRITE,V)},X86.fnLAR=function(V,R){return this.nStepCycles-=14+(this.regEA===X86.ADDR_INVALID?0:2),this.clearZF(),this.segVER.load(R)!==X86.ADDR_INVALID&&this.segVER.dpl>=this.nCPL&&this.segVER.dpl>=(R&X86.SEL.RPL)&&(this.setZF(),V=this.segVER.acc&~X86.DESC.ACC.BASE1623,this.sizeData>2&&(V|=(this.segVER.ext&~X86.DESC.EXT.BASE2431)<<16)),V},X86.fnLDS=function(V,R){return this.regEA===X86.ADDR_INVALID?(X86.opUndefined.call(this),V):(this.setDS(this.getShort(this.regEA+this.sizeData)),this.nStepCycles-=this.cycleCounts.nOpCyclesLS,R)},X86.fnLEA=function(V,R){return this.regEA===X86.ADDR_INVALID?(X86.opUndefined.call(this),V):(this.nStepCycles-=this.cycleCounts.nOpCyclesLEA,this.regEA&this.maskData)},X86.fnLES=function(V,R){return this.regEA===X86.ADDR_INVALID?(X86.opUndefined.call(this),V):(this.setES(this.getShort(this.regEA+this.sizeData)),this.nStepCycles-=this.cycleCounts.nOpCyclesLS,R)},X86.fnLFS=function(V,R){return this.regEA===X86.ADDR_INVALID?(X86.opUndefined.call(this),V):(this.setFS(this.getShort(this.regEA+this.sizeData)),this.nStepCycles-=this.cycleCounts.nOpCyclesLS,R)},X86.fnLGDT=function(V,R){return this.regEA===X86.ADDR_INVALID||I386&&this.regPS&X86.PS.VM?X86.opInvalid.call(this):(this.addrGDT=this.getLong(this.regEA+2)&(this.maskData|this.maskData<<8),V&=65535,this.addrGDTLimit=this.addrGDT+V,this.opFlags|=X86.OPFLAG.NOWRITE,this.nStepCycles-=11),V},X86.fnLGS=function(V,R){return this.regEA===X86.ADDR_INVALID?(X86.opUndefined.call(this),V):(this.setGS(this.getShort(this.regEA+this.sizeData)),this.nStepCycles-=this.cycleCounts.nOpCyclesLS,R)},X86.fnLIDT=function(V,R){return this.regEA===X86.ADDR_INVALID||I386&&this.regPS&X86.PS.VM?X86.opInvalid.call(this):(this.addrIDT=this.getLong(this.regEA+2)&(this.maskData|this.maskData<<8),V&=65535,this.addrIDTLimit=this.addrIDT+V,this.opFlags|=X86.OPFLAG.NOWRITE,this.nStepCycles-=12),V},X86.fnLLDT=function(V,R){return this.opFlags|=X86.OPFLAG.NOWRITE,this.segLDT.load(V),this.nStepCycles-=17+(this.regEA===X86.ADDR_INVALID?0:2),V},X86.fnLMSW=function(V,R){return I386&&this.regPS&X86.PS.VM?X86.opInvalid.call(this):(this.setMSW(V),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?3:6,this.opFlags|=X86.OPFLAG.NOWRITE),V},X86.fnLSL=function(V,R){if(this.nStepCycles-=14+(this.regEA===X86.ADDR_INVALID?0:2),R&X86.SEL.MASK&&this.segVER.load(R)!==X86.ADDR_INVALID){if(((this.segVER.acc&X86.DESC.ACC.TYPE.CODE_CONFORMING)==X86.DESC.ACC.TYPE.CODE_CONFORMING||this.segVER.dpl>=this.nCPL)&&this.segVER.dpl>=(R&X86.SEL.RPL))return this.setZF(),this.segVER.limit}return this.clearZF(),V},X86.fnLSS=function(V,R){return this.regEA===X86.ADDR_INVALID?(X86.opUndefined.call(this),V):(this.setSS(this.getShort(this.regEA+this.sizeData)),this.nStepCycles-=this.cycleCounts.nOpCyclesLS,R)},X86.fnLTR=function(V,R){return this.opFlags|=X86.OPFLAG.NOWRITE,this.segTSS.load(V)!==X86.ADDR_INVALID&&(this.setShort(this.segTSS.addrDesc+X86.DESC.ACC.OFFSET,this.segTSS.acc|=X86.DESC.ACC.TYPE.TSS_BUSY),this.segTSS.type|=X86.DESC.ACC.TYPE.TSS_BUSY),this.nStepCycles-=17+(this.regEA===X86.ADDR_INVALID?0:2),V},X86.fnMOV=function(V,R){return this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesMovRR:this.cycleCounts.nOpCyclesMovRM:this.cycleCounts.nOpCyclesMovMR,R},X86.fnMOVXb=function(V,R){switch(this.bModRM>>3&7){case 4:this.regXX=this.regEAX;break;case 5:this.regXX=this.regECX;break;case 6:this.regXX=this.regEDX;break;case 7:this.regXX=this.regEBX}return R},X86.fnMOVXw=function(V,R){return R},X86.fnMOVn=function(V,R){return this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesMovRI:this.cycleCounts.nOpCyclesMovMI,R},X86.fnMOVsrw=function(V,R){let U=this.bModRM>>3&7;switch(U){case 0:this.regXX=this.regEAX;break;case 2:this.regXX=this.regEDX;break;case 3:this.regXX=this.regEBX;break;default:if(this.model==X86.MODEL_80286||this.model==X86.MODEL_80386&&4!=U&&5!=U){X86.opInvalid.call(this);break}switch(U){case 1:this.regXX=this.regECX;break;case 4:this.regXX=this.getSP();break;case 5:this.regXX=this.regEBP;break;case 6:this.regXX=this.regESI;break;case 7:this.regXX=this.regEDI}}return X86.fnMOV.call(this,V,R)},X86.fnMOVwsr=function(V,R){switch(this.bModRM>>3&7){case 0:R=this.segES.sel;break;case 1:R=this.segCS.sel;break;case 2:R=this.segSS.sel;break;case 3:R=this.segDS.sel;break;case 4:if(I386&&this.model>=X86.MODEL_80386){R=this.segFS.sel;break}X86.opInvalid.call(this),R=V;break;case 5:if(I386&&this.model>=X86.MODEL_80386){R=this.segGS.sel;break}default:X86.opInvalid.call(this),R=V}return this.regEAWrite!==X86.ADDR_INVALID&&this.setDataSize(2),X86.fnMOV.call(this,V,R)},X86.fnMULb=function(V,R){return this.regMDLo=(255&this.regEAX)*V&65535,65280&this.regMDLo?(this.setCF(),this.setOF()):(this.clearCF(),this.clearOF()),this.model<=X86.MODEL_8088&&this.clearZF(),this.fMDSet=!0,this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesMulBR:this.cycleCounts.nOpCyclesMulBM,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnMUL32=function(V,R){if(-65536&V||-65536&R){let U=65535&R,l=R>>>16,e=65535&V,t=V>>>16,T=U*e,k=(T>>>16)+l*e,F=k>>>16;k=(65535&k)+U*t,F+=(k>>>16)+l*t,this.regMDLo=k<<16|65535&T,this.regMDHi=0|F}else this.regMDLo=V*R|0,this.regMDHi=0},X86.fnMULw=function(V,R){if(2==this.sizeData){let R=(65535&this.regEAX)*V|0;this.regMDLo=65535&R,this.regMDHi=R>>16&65535}else X86.fnMUL32.call(this,V,this.regEAX),this.stepping==X86.STEPPING_80386_B1&&68657152==this.regEAX&&129==V&&(this.regMDHi=0);return this.regMDHi?(this.setCF(),this.setOF()):(this.clearCF(),this.clearOF()),this.model<=X86.MODEL_8088&&this.clearZF(),this.fMDSet=!0,this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesMulWR:this.cycleCounts.nOpCyclesMulWM,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnNEGb=function(V,R){let U=0|-V;return this.setArithResult(0,V,U,X86.RESULT.BYTE|X86.RESULT.ALL,!0),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesNegR:this.cycleCounts.nOpCyclesNegM,255&U},X86.fnNEGw=function(V,R){let U=0|-V;return this.setArithResult(0,V,U,this.typeData|X86.RESULT.ALL,!0),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesNegR:this.cycleCounts.nOpCyclesNegM,U&this.maskData},X86.fnNOTb=function(V,R){return this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesNegR:this.cycleCounts.nOpCyclesNegM,255^V},X86.fnNOTw=function(V,R){return this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesNegR:this.cycleCounts.nOpCyclesNegM,V^this.maskData},X86.fnORb=function(V,R){return this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,this.setLogicResult(V|R,X86.RESULT.BYTE)},X86.fnORw=function(V,R){return this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,this.setLogicResult(V|R,this.typeData)&this.maskData},X86.fnPOPw=function(V,R){return this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesPopReg:this.cycleCounts.nOpCyclesPopMem,R},X86.fnPUSHw=function(V,R){let U=V;return this.opFlags&X86.OPFLAG.PUSHSP&&(V=V-2&65535,this.model<X86.MODEL_80286&&(U=V)),this.pushWord(U),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesPushReg:this.cycleCounts.nOpCyclesPushMem,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnRCLb=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R=this.getCarry();l%=9,l?(U=255&(V<<l|R<<l-1|V>>9-l),R=V<<l-1):R<<=7,this.setRotateResult(U,R,X86.RESULT.BYTE)}return U},X86.fnRCLw=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R=this.getCarry();l%=17,l?(U=65535&(V<<l|R<<l-1|V>>17-l),R=V<<l-1):R<<=15,this.setRotateResult(U,R,X86.RESULT.WORD)}return U},X86.fnRCLd=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R=this.getCarry();U=V<<l|R<<l-1|V>>>32-l>>>1,R=V<<l-1,this.setRotateResult(U,R,X86.RESULT.DWORD)}return U},X86.fnRCRb=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R=this.getCarry();l%=9,l?(U=255&(V>>l|R<<8-l|V<<9-l),R=V<<8-l):R<<=7,this.setRotateResult(U,R,X86.RESULT.BYTE)}return U},X86.fnRCRw=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R=this.getCarry();l%=17,l?(U=65535&(V>>l|R<<16-l|V<<17-l),R=V<<16-l):R<<=15,this.setRotateResult(U,R,X86.RESULT.WORD)}return U},X86.fnRCRd=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R=this.getCarry();U=V>>>l|R<<32-l|V<<32-l<<1,R=V<<32-l,this.setRotateResult(U,R,X86.RESULT.DWORD)}return U},X86.fnROLb=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R;l&=7,l?(R=V<<l-1,U=255&(V<<l|V>>8-l)):R=V<<7,this.setRotateResult(U,R,X86.RESULT.BYTE)}return U},X86.fnROLw=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R;l&=15,l?(R=V<<l-1,U=65535&(V<<l|V>>16-l)):R=V<<15,this.setRotateResult(U,R,X86.RESULT.WORD)}return U},X86.fnROLd=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R=V<<l-1;U=V<<l|V>>>32-l,this.setRotateResult(U,R,X86.RESULT.DWORD)}return U},X86.fnRORb=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R;l&=7,l?(R=V<<8-l,U=255&(V>>>l|R)):R=V,this.setRotateResult(U,R,X86.RESULT.BYTE)}return U},X86.fnRORw=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R;l&=15,l?(R=V<<16-l,U=65535&(V>>>l|R)):R=V,this.setRotateResult(U,R,X86.RESULT.WORD)}return U},X86.fnRORd=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R=V<<32-l;U=V>>>l|R,this.setRotateResult(U,R,X86.RESULT.DWORD)}return U},X86.fnSARb=function(V,R){let U=R&this.nShiftCountMask;if(U){U>9&&(U=9);let R=V<<24>>24>>U-1;V=R>>1&255,this.setLogicResult(V,X86.RESULT.BYTE,1&R)}return V},X86.fnSARw=function(V,R){let U=R&this.nShiftCountMask;if(U){U>17&&(U=17);let R=V<<16>>16>>U-1;V=R>>1&65535,this.setLogicResult(V,X86.RESULT.WORD,1&R)}return V},X86.fnSARd=function(V,R){let U=R&this.nShiftCountMask;if(U){let R=V>>U-1;V=R>>1,this.setLogicResult(V,X86.RESULT.DWORD,1&R)}return V},X86.fnSBBb=function(V,R){let U=V-R-this.getCarry()|0;return this.setArithResult(V,R,U,X86.RESULT.BYTE|X86.RESULT.ALL,!0),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,255&U},X86.fnSBBw=function(V,R){let U=V-R-this.getCarry()|0;return this.setArithResult(V,R,U,this.typeData|X86.RESULT.ALL,!0),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,U&this.maskData},X86.fnSETO=function(V,R){return this.getOF()?1:0},X86.fnSETNO=function(V,R){return this.getOF()?0:1},X86.fnSETC=function(V,R){return this.getCF()?1:0},X86.fnSETNC=function(V,R){return this.getCF()?0:1},X86.fnSETZ=function(V,R){return this.getZF()?1:0},X86.fnSETNZ=function(V,R){return this.getZF()?0:1},X86.fnSETBE=function(V,R){return this.getCF()||this.getZF()?1:0},X86.fnSETNBE=function(V,R){return this.getCF()||this.getZF()?0:1},X86.fnSETS=function(V,R){return this.getSF()?1:0},X86.fnSETNS=function(V,R){return this.getSF()?0:1},X86.fnSETP=function(V,R){return this.getPF()?1:0},X86.fnSETNP=function(V,R){return this.getPF()?0:1},X86.fnSETL=function(V,R){return!this.getSF()!=!this.getOF()?1:0},X86.fnSETNL=function(V,R){return!this.getSF()!=!this.getOF()?0:1},X86.fnSETLE=function(V,R){return this.getZF()||!this.getSF()!=!this.getOF()?1:0},X86.fnSETNLE=function(V,R){return this.getZF()||!this.getSF()!=!this.getOF()?0:1},X86.fnSGDT=function(V,R){if(this.regEA===X86.ADDR_INVALID)X86.opInvalid.call(this);else{V=this.addrGDTLimit-this.addrGDT;let R=this.addrGDT;this.model==X86.MODEL_80286?R|=-16777216:this.model>=X86.MODEL_80386&&(2==this.sizeData||(V|=R<<16)),this.setLong(this.regEA+2,R),this.nStepCycles-=11}return V},X86.fnSHLb=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R=0;l>8?U=0:(R=V<<l-1,U=R<<1&255),this.setLogicResult(U,X86.RESULT.BYTE,R&X86.RESULT.BYTE,(U^R)&X86.RESULT.BYTE)}return U},X86.fnSHLw=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R=0;l>16?U=0:(R=V<<l-1,U=R<<1&65535),this.setLogicResult(U,X86.RESULT.WORD,R&X86.RESULT.WORD,(U^R)&X86.RESULT.WORD)}return U},X86.fnSHLd=function(V,R){let U=V,l=R&this.nShiftCountMask;if(l){let R=V<<l-1;U=R<<1,this.setLogicResult(U,X86.RESULT.DWORD,R&X86.RESULT.DWORD,(U^R)&X86.RESULT.DWORD)}return U},X86.fnSHLDwi=function(V,R){return X86.helpSHLDw.call(this,V,R,this.getIPByte())},X86.fnSHLDdi=function(V,R){return X86.helpSHLDd.call(this,V,R,this.getIPByte())},X86.fnSHLDwCL=function(V,R){return X86.helpSHLDw.call(this,V,R,31&this.regECX)},X86.fnSHLDdCL=function(V,R){return X86.helpSHLDd.call(this,V,R,31&this.regECX)},X86.fnSHRb=function(V,R){let U=R&this.nShiftCountMask;if(U){let R=U>8?0:V>>>U-1;V=R>>>1&255,this.setLogicResult(V,X86.RESULT.BYTE,1&R,V&X86.RESULT.BYTE)}return V},X86.fnSHRw=function(V,R){let U=R&this.nShiftCountMask;if(U){let R=U>16?0:V>>>U-1;V=R>>>1&65535,this.setLogicResult(V,X86.RESULT.WORD,1&R,V&X86.RESULT.WORD)}return V},X86.fnSHRd=function(V,R){let U=R&this.nShiftCountMask;if(U){let R=V>>>U-1;V=R>>>1,this.setLogicResult(V,X86.RESULT.DWORD,1&R,V&X86.RESULT.DWORD)}return V},X86.fnSHRDwi=function(V,R){return X86.helpSHRDw.call(this,V,R,this.getIPByte())},X86.fnSHRDdi=function(V,R){return X86.helpSHRDd.call(this,V,R,this.getIPByte())},X86.fnSHRDwCL=function(V,R){return X86.helpSHRDw.call(this,V,R,31&this.regECX)},X86.fnSHRDdCL=function(V,R){return X86.helpSHRDd.call(this,V,R,31&this.regECX)},X86.fnSIDT=function(V,R){if(this.regEA===X86.ADDR_INVALID)X86.opInvalid.call(this);else{V=this.addrIDTLimit-this.addrIDT;let R=this.addrIDT;this.model==X86.MODEL_80286?R|=-16777216:this.model>=X86.MODEL_80386&&(2==this.sizeData||(V|=R<<16)),this.setLong(this.regEA+2,R),this.nStepCycles-=12}return V},X86.fnSLDT=function(V,R){return this.nStepCycles-=2+(this.regEA===X86.ADDR_INVALID?0:1),this.segLDT.sel},X86.fnSMSW=function(V,R){return this.nStepCycles-=2+(this.regEA===X86.ADDR_INVALID?0:1),this.regCR0&this.maskData},X86.fnSTR=function(V,R){return this.nStepCycles-=2+(this.regEA===X86.ADDR_INVALID?0:1),this.segTSS.sel},X86.fnSUBb=function(V,R){let U=V-R|0;return this.setArithResult(V,R,U,X86.RESULT.BYTE|X86.RESULT.ALL,!0),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,255&U},X86.fnSUBw=function(V,R){let U=V-R|0;return this.setArithResult(V,R,U,this.typeData|X86.RESULT.ALL,!0),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,U&this.maskData},X86.fnTESTib=function(V,R){return R=this.getIPByte(),this.setLogicResult(V&R,X86.RESULT.BYTE),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesTestRI:this.cycleCounts.nOpCyclesTestMI,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnTESTiw=function(V,R){return R=this.getIPWord(),this.setLogicResult(V&R,this.typeData),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesTestRI:this.cycleCounts.nOpCyclesTestMI,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnTESTb=function(V,R){return this.setLogicResult(V&R,X86.RESULT.BYTE),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID&&this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesTestRR:this.cycleCounts.nOpCyclesTestRM,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnTESTw=function(V,R){return this.setLogicResult(V&R,this.typeData),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID&&this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesTestRR:this.cycleCounts.nOpCyclesTestRM,this.opFlags|=X86.OPFLAG.NOWRITE,V},X86.fnVERR=function(V,R){return this.opFlags|=X86.OPFLAG.NOWRITE,this.nStepCycles-=14+(this.regEA===X86.ADDR_INVALID?0:2),this.segVER.load(V)!==X86.ADDR_INVALID&&(this.segVER.acc&(X86.DESC.ACC.TYPE.READABLE|X86.DESC.ACC.TYPE.CODE))!=X86.DESC.ACC.TYPE.CODE&&(this.segVER.dpl>=this.nCPL&&this.segVER.dpl>=(V&X86.SEL.RPL)||(this.segVER.acc&X86.DESC.ACC.TYPE.CODE_CONFORMING)==X86.DESC.ACC.TYPE.CODE_CONFORMING)?(this.setZF(),V):(this.clearZF(),DEBUG&&(this.sizeData>2||this.sizeAddr>2)&&this.stopCPU(),V)},X86.fnVERW=function(V,R){return this.opFlags|=X86.OPFLAG.NOWRITE,this.nStepCycles-=14+(this.regEA===X86.ADDR_INVALID?0:2),this.segVER.load(V)!==X86.ADDR_INVALID&&(this.segVER.acc&(X86.DESC.ACC.TYPE.WRITABLE|X86.DESC.ACC.TYPE.CODE))==X86.DESC.ACC.TYPE.WRITABLE&&this.segVER.dpl>=this.nCPL&&this.segVER.dpl>=(V&X86.SEL.RPL)?(this.setZF(),V):(this.clearZF(),DEBUG&&(this.sizeData>2||this.sizeAddr>2)&&this.stopCPU(),V)},X86.fnIBTS=function(V,R){let U=this.regEAX&this.maskData,l=(1<<(31&this.regECX))-1;return V&~(l<<U)|(R&l)<<U},X86.fnXBTS=function(V,R){return R>>(this.regEAX&this.maskData)&(1<<(31&this.regECX))-1&this.maskData},X86.fnXCHGrb=function(V,R){if(this.regEA===X86.ADDR_INVALID){switch(7&this.bModRM){case 0:this.regEAX=-256&this.regEAX|V;break;case 1:this.regECX=-256&this.regECX|V;break;case 2:this.regEDX=-256&this.regEDX|V;break;case 3:this.regEBX=-256&this.regEBX|V;break;case 4:this.regEAX=-65281&this.regEAX|V<<8;break;case 5:this.regECX=-65281&this.regECX|V<<8;break;case 6:this.regEDX=-65281&this.regEDX|V<<8;break;case 7:this.regEBX=-65281&this.regEBX|V<<8}this.nStepCycles-=this.cycleCounts.nOpCyclesXchgRR}else this.regEAWrite=this.regEA,this.setEAByte(V),this.nStepCycles-=this.cycleCounts.nOpCyclesXchgRM;return R},X86.fnXCHGrw=function(V,R){if(this.regEA===X86.ADDR_INVALID){switch(7&this.bModRM){case 0:this.regEAX=this.regEAX&~this.maskData|V;break;case 1:this.regECX=this.regECX&~this.maskData|V;break;case 2:this.regEDX=this.regEDX&~this.maskData|V;break;case 3:this.regEBX=this.regEBX&~this.maskData|V;break;case 4:this.setSP(this.getSP()&~this.maskData|V);break;case 5:this.regEBP=this.regEBX&~this.maskData|V;break;case 6:this.regESI=this.regESI&~this.maskData|V;break;case 7:this.regEDI=this.regEDI&~this.maskData|V}this.nStepCycles-=this.cycleCounts.nOpCyclesXchgRR}else this.regEAWrite=this.regEA,this.setEAWord(V),this.nStepCycles-=this.cycleCounts.nOpCyclesXchgRM;return R},X86.fnXORb=function(V,R){let U=V^R;return this.setLogicResult(U,X86.RESULT.BYTE),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,U},X86.fnXORw=function(V,R){return this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesArithRR:this.cycleCounts.nOpCyclesArithRM:this.cycleCounts.nOpCyclesArithMR,this.setLogicResult(V^R,this.typeData)&this.maskData},
X86.helpAdd64=function(V,R){V[0]+=R[0],V[1]+=R[1],V[0]>4294967295&&(V[0]>>>=0,V[1]++)},X86.helpCmp64=function(V,R){let U=V[1]-R[1];return U||(U=V[0]-R[0]),U},X86.helpSet64=function(V,R,U){return V[0]=R>>>0,V[1]=U>>>0,V},X86.helpShr64=function(V){V[0]>>>=1,1&V[1]&&(V[0]=(2147483648|V[0])>>>0),V[1]>>>=1},X86.helpSub64=function(V,R){V[0]-=R[0],V[1]-=R[1],V[0]<0&&(V[0]>>>=0,V[1]--)},X86.helpDECreg=function(V){let R=V-1|0;return this.setArithResult(V,1,R,this.typeData|X86.RESULT.NOTCF,!0),this.nStepCycles-=2,V&~this.maskData|R&this.maskData},X86.helpDIV32=function(V,R,U){if(!(U>>>=0)||U<=R>>>0)return!1;let l=0,e=1,t=X86.helpSet64(this.r64Div,U,0),T=X86.helpSet64(this.r64Rem,V,R);for(;X86.helpCmp64(T,t)>0;)X86.helpAdd64(t,t),e+=e;do{X86.helpCmp64(T,t)>=0&&(X86.helpSub64(T,t),l+=e),X86.helpShr64(t),e/=2}while(e>=1);return this.regMDLo=l,this.regMDHi=T[0],!0},X86.helpIDIV32=function(V,R,U){let l=0,e=0;return U<0&&(U=0|-U,l=1-l),R<0&&(R=~R+((V=0|-V)?0:1)|0,e=1,l=1-l),!(!X86.helpDIV32.call(this,V,R,U)||this.regMDLo>2147483647+l||this.regMDHi>2147483647+e)&&(l&&(this.regMDLo=-this.regMDLo),e&&(this.regMDHi=-this.regMDHi),!0)},X86.helpINCreg=function(V){let R=V+1|0;return this.setArithResult(V,1,R,this.typeData|X86.RESULT.NOTCF),this.nStepCycles-=2,V&~this.maskData|R&this.maskData},X86.helpLoadCR0=function(V){this.regCR0=V|X86.CR0.ON,this.setProtMode(),this.regCR0&X86.CR0.PG?this.enablePageBlocks():this.disablePageBlocks()},X86.helpLoadCR3=function(V){this.regCR3=V,this.flushPageBlocks()},X86.helpSETcc=function(V){this.opFlags|=X86.OPFLAG.NOREAD,this.decodeModMemByte.call(this,V),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?4:5},X86.helpSHLDw=function(V,R,U){if(U){U>16&&(V=R,U-=16);let l=V<<U-1;V=65535&(l<<1|R>>>16-U),this.setLogicResult(V,X86.RESULT.WORD,l&X86.RESULT.WORD)}return V},X86.helpSHLDd=function(V,R,U){if(U){let l=V<<U-1;V=l<<1|R>>>32-U,this.setLogicResult(V,X86.RESULT.DWORD,l&X86.RESULT.DWORD)}return V},X86.helpSHRDw=function(V,R,U){if(U){U>16&&(V=R,U-=16);let l=V>>>U-1;V=65535&(l>>>1|R<<16-U),this.setLogicResult(V,X86.RESULT.WORD,1&l)}return V},X86.helpSHRDd=function(V,R,U){if(U){let l=V>>>U-1;V=l>>>1|R<<32-U,this.setLogicResult(V,X86.RESULT.DWORD,1&l)}return V},X86.helpSRC1=function(){return this.nStepCycles-=this.regEA===X86.ADDR_INVALID?2:this.cycleCounts.nOpCyclesShift1M,1},X86.helpSRCCL=function(){let V=255&this.regECX;return this.nStepCycles-=(this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesShiftCR:this.cycleCounts.nOpCyclesShiftCM)+(V<<this.cycleCounts.nOpCyclesShiftCS),V},X86.helpSRCByte=function(){let V=this.getIPByte();return this.nStepCycles-=(this.regEA===X86.ADDR_INVALID?this.cycleCounts.nOpCyclesShiftCR:this.cycleCounts.nOpCyclesShiftCM)+(V<<this.cycleCounts.nOpCyclesShiftCS),V},X86.helpSRCNone=function(){return null},X86.helpSRCxx=function(){return this.regXX},X86.helpCALLF=function(V,R){this.opCS=this.getCS(),this.opSS=this.getSS(),this.opLSP=this.regLSP;let U=this.getIP(),l=I386?this.sizeData:2;null!=this.setCSIP(V,R,!0)&&(this.pushData(this.opCS,l,2),this.pushData(U,l,l)),this.opLSP=X86.ADDR_INVALID,this.opCS=this.opSS=-1},X86.helpINT=function(V,R,U=0,l=0){this.nStepCycles-=this.cycleCounts.nOpCyclesInt+l;let e=this.getPS(),t=this.getCS(),T=this.getIP();if(6==V&&this.model<=X86.MODEL_8088){if(1741==this.getSOWord(this.segCS,T-2)){let V,R=this.getSOWord(this.segSS,this.regEBP+10)|this.getSOWord(this.segSS,this.regEBP+12)<<16,U=this.getSOWord(this.segSS,this.regEBP+6)|this.getSOWord(this.segSS,this.regEBP+8)<<16,l=this.regEAX|this.regEDX<<16,e=this.regEDI|this.regESI<<16;switch(this.peekIPByte()){case 204:if(DEBUGGER&&this.dbg&&this.flags.running)return this.getIPByte(),this.printf("debugger halting on INT 0x06,0xCC\n"),void this.dbg.stopCPU();break;case 251:V=R*U|0,l!=V&&(COMPILED||this.printf(MESSAGE.INT,"result %#x for %#x * %#x does not match actual: %#x\n",l,R,U,V));break;case 252:V=R/U|0,l!=V&&(COMPILED||this.printf(MESSAGE.INT,"result %#x for %#x / %#x does not match actual: %#x\n",l,R,U,V)),V=R%U|0,e!=V&&(COMPILED||this.printf(MESSAGE.INT,"result %#x for %#x % %#x does not match actual: %#x\n",l,R,U,V))}}}19==V&&this.model<=X86.MODEL_8088&&DEBUGGER&&this.dbg&&513==this.regEAX&&31744==this.regEBX&&0==this.segES.sel&&this.setShort(1325,17474);let k=this.segCS.loadIDT(V,U);k!==X86.ADDR_INVALID&&(this.pushWord(e),this.pushWord(t),this.pushWord(T),null!=R&&this.pushWord(R),this.nFault=-1,this.setLIP(k))},X86.helpIRET=function(){if(this.opSS=this.getSS(),this.opLSP=this.regLSP,this.nStepCycles-=this.cycleCounts.nOpCyclesIRet,this.regCR0&X86.CR0.MSW.PE&&(this.regPS&(X86.PS.NT|X86.PS.VM))==X86.PS.NT){let V=this.segTSS.base,R=this.getShort(V+X86.TSS286.PREV_TSS);this.segCS.switchTSS(R,!1)}else{let V=this.nCPL,R=this.popWord(),U=this.popWord(),l=this.popWord();if(I386)if(this.regPS&X86.PS.VM)l=l&(65535|X86.PS.RF)|this.regPS&~(65535|X86.PS.RF);else if(l&X86.PS.VM){let V=this.popWord(),R=this.popWord(),U=this.popWord(),l=this.popWord(),e=this.popWord(),t=this.popWord();this.setProtMode(!0,!0),this.setSS(R),this.setSP(V),this.setES(U),this.setDS(l),this.setFS(e),this.setGS(t)}null!=this.setCSIP(R,U,!1)&&(this.setPS(l,V),this.cIntReturn&&this.checkIntReturn(this.regLIP))}this.opLSP=X86.ADDR_INVALID,this.opSS=-1},X86.helpRETF=function(V){this.opSS=this.getSS(),this.opLSP=this.regLSP;let R=this.popWord(),U=this.popWord();V&&this.setSP(this.getSP()+V),this.setCSIP(R,U,!1)&&(V&&this.setSP(this.getSP()+V),X86.zeroSeg.call(this,this.segDS),X86.zeroSeg.call(this,this.segES),I386&&this.model>=X86.MODEL_80386&&(X86.zeroSeg.call(this,this.segFS),X86.zeroSeg.call(this,this.segGS))),2==V&&this.cIntReturn&&this.checkIntReturn(this.regLIP),this.opLSP=X86.ADDR_INVALID,this.opSS=-1},X86.helpDIVOverflow=function(){this.model<=X86.MODEL_8088?X86.helpTrap.call(this,X86.EXCEPTION.DE_EXC,0,2):X86.helpFault.call(this,X86.EXCEPTION.DE_EXC,null,2)},X86.helpInterrupt=function(V,R=11){this.nFault=V,X86.helpINT.call(this,V,null,0,R)},X86.helpTrap=function(V,R,U){this.nFault=-1,X86.helpINT.call(this,V,null,R,U)},X86.helpFault=function(V,R,U,l){let e=!1;if(this.flags.complete?this.model>=X86.MODEL_80186&&(e=!0,this.nFault<0?(-1!=this.opCS&&(this.opCS!==this.segCS.sel&&(this.segCS.cpl=3&this.opCS,this.setCS(this.opCS)),this.opCS=-1),this.opLIP!==this.regLIP&&this.setLIP(this.opLIP),-1!=this.opSS&&(this.opSS!==this.segSS.sel&&this.setSS(this.opSS),this.opSS=-1),this.opLSP!==X86.ADDR_INVALID&&(this.opLSP!==this.regLSP&&this.setSP(this.regESP&~this.segSS.maskAddr|this.opLSP-this.segSS.base),this.opLSP=X86.ADDR_INVALID)):this.nFault!=X86.EXCEPTION.DF_FAULT?(R=0,V=X86.EXCEPTION.DF_FAULT):(R=0,V=-1,l=!1,this.resetRegs())):this.setLIP(this.opLIP),(X86.helpCheckFault.call(this,V,R,l)||V<0)&&e)throw-1;if(e)throw this.nFault=V,X86.helpINT.call(this,V,R,0,U),this.opLIP=this.regLIP,V==X86.EXCEPTION.DB_EXC?this.opFlags|=X86.OPFLAG.DBEXC:this.opFlags|=X86.OPFLAG.FAULT,V},X86.helpPageFault=function(V,R,U){this.regCR2=V;let l=0;R&&(l|=X86.PTE.PRESENT),U&&(l|=X86.PTE.READWRITE),3==this.nCPL&&(l|=X86.PTE.USER),X86.helpFault.call(this,X86.EXCEPTION.PF_FAULT,l)},X86.helpCheckFault=function(V,R,U){let l=MESSAGE.FAULT,e=this.probeAddr(this.regLIP);if(e!=X86.OPCODE.INT3||this.addrIDTLimit||(U=!1),this.regPS&X86.PS.VM&&(V==X86.EXCEPTION.UD_FAULT&&e==X86.OPCODE.ARPL||V==X86.EXCEPTION.GP_FAULT&&(e==X86.OPCODE.PUSHF||e==X86.OPCODE.POPF||e==X86.OPCODE.INTN||e==X86.OPCODE.IRET||e>=X86.OPCODE.INB&&e<=X86.OPCODE.OUTW||e>=X86.OPCODE.INDXB&&e<=X86.OPCODE.OUTDXW||e==X86.OPCODE.CLI||e==X86.OPCODE.STI))&&(U=!1),!1===U&&(l|=MESSAGE.CPU),this.regLIP>=983040&&this.regLIP<=1048575&&(U=!1),this.messageEnabled(l+MESSAGE.HALT)&&(U=!0),this.messageEnabled(l)||U){let t=this.flags.running,T="Fault "+StrLib.toHexByte(V)+(null!=R?" ("+StrLib.toHexWord(R)+")":"")+" on opcode "+StrLib.toHexByte(e);U&&t&&(T+=" (blocked)"),DEBUGGER&&this.dbg?(this.printf((U?MESSAGE.PROGRESS:l)+MESSAGE.ADDR,"%s\n",T),U&&(U=t,this.dbg.stopCPU())):(this.printf(MESSAGE.NOTICE,"%s\n",T),this.stopCPU())}return U},X86.zeroSeg=function(V){let R=V.acc&X86.DESC.ACC.TYPE.CODE_OR_DATA;V.sel&X86.SEL.MASK&&(R==X86.DESC.ACC.TYPE.CODE_EXECONLY||R==X86.DESC.ACC.TYPE.CODE_CONFORMING||R<X86.DESC.ACC.TYPE.CODE_CONFORMING&&V.dpl<this.nCPL&&V.dpl<(V.sel&X86.SEL.RPL))&&V.load(0)},
X86.modRegByte16=function(V){let R,U;switch(199&(this.bModRM=this.getIPByte())){case 0:U=this.getEAByteData(this.regEBX+this.regESI),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndex;break;case 1:U=this.getEAByteData(this.regEBX+this.regEDI),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexExtra;break;case 2:U=this.getEAByteStack(this.regEBP+this.regESI),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexExtra;break;case 3:U=this.getEAByteStack(this.regEBP+this.regEDI),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndex;break;case 4:U=this.getEAByteData(this.regESI),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 5:U=this.getEAByteData(this.regEDI),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 6:U=this.getEAByteData(this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesDisp;break;case 7:U=this.getEAByteData(this.regEBX),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 64:U=this.getEAByteData(this.regEBX+this.regESI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 65:U=this.getEAByteData(this.regEBX+this.regEDI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 66:U=this.getEAByteStack(this.regEBP+this.regESI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 67:U=this.getEAByteStack(this.regEBP+this.regEDI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 68:U=this.getEAByteData(this.regESI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 69:U=this.getEAByteData(this.regEDI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 70:U=this.getEAByteStack(this.regEBP+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 71:U=this.getEAByteData(this.regEBX+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 128:U=this.getEAByteData(this.regEBX+this.regESI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 129:U=this.getEAByteData(this.regEBX+this.regEDI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 130:U=this.getEAByteStack(this.regEBP+this.regESI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 131:U=this.getEAByteStack(this.regEBP+this.regEDI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 132:U=this.getEAByteData(this.regESI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 133:U=this.getEAByteData(this.regEDI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 134:U=this.getEAByteStack(this.regEBP+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 135:U=this.getEAByteData(this.regEBX+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 192:U=255&this.regEAX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAL);break;case 193:U=255&this.regECX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCL);break;case 194:U=255&this.regEDX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDL);break;case 195:U=255&this.regEBX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBL);break;case 196:U=this.regEAX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAH);break;case 197:U=this.regECX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCH);break;case 198:U=this.regEDX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDH);break;case 199:U=this.regEBX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBH);break;default:U=0}let l=this.bModRM>>3&7;switch(l){case 0:R=255&this.regEAX;break;case 1:R=255&this.regECX;break;case 2:R=255&this.regEDX;break;case 3:R=255&this.regEBX;break;case 4:R=this.regEAX>>8&255;break;case 5:R=this.regECX>>8&255;break;case 6:R=this.regEDX>>8&255;break;case 7:R=this.regEBX>>8&255;break;default:R=0}let e=V.call(this,R,U);switch(l){case 0:this.regEAX=-256&this.regEAX|e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiEALo);break;case 1:this.regECX=-256&this.regECX|e,BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiEALo);break;case 2:this.regEDX=-256&this.regEDX|e,BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiEALo);break;case 3:this.regEBX=-256&this.regEBX|e,BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiEALo);break;case 4:this.regEAX=-65281&this.regEAX|e<<8,BACKTRACK&&(this.backTrack.btiAH=this.backTrack.btiEALo);break;case 5:this.regECX=-65281&this.regECX|e<<8,BACKTRACK&&(this.backTrack.btiCH=this.backTrack.btiEALo);break;case 6:this.regEDX=-65281&this.regEDX|e<<8,BACKTRACK&&(this.backTrack.btiDH=this.backTrack.btiEALo);break;case 7:this.regEBX=-65281&this.regEBX|e<<8,BACKTRACK&&(this.backTrack.btiBH=this.backTrack.btiEALo)}},X86.modMemByte16=function(V){let R,U,l=199&(this.bModRM=this.getIPByte());switch(l){case 0:R=this.getEAByteData(this.regEBX+this.regESI),this.regEAWrite=this.regEA;break;case 1:R=this.getEAByteData(this.regEBX+this.regEDI),this.regEAWrite=this.regEA;break;case 2:R=this.getEAByteStack(this.regEBP+this.regESI),this.regEAWrite=this.regEA;break;case 3:R=this.getEAByteStack(this.regEBP+this.regEDI),this.regEAWrite=this.regEA;break;case 4:R=this.getEAByteData(this.regESI),this.regEAWrite=this.regEA;break;case 5:R=this.getEAByteData(this.regEDI),this.regEAWrite=this.regEA;break;case 6:R=this.getEAByteData(this.getIPAddr()),this.regEAWrite=this.regEA;break;case 7:R=this.getEAByteData(this.regEBX),this.regEAWrite=this.regEA;break;case 64:R=this.getEAByteData(this.regEBX+this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 65:R=this.getEAByteData(this.regEBX+this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 66:R=this.getEAByteStack(this.regEBP+this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 67:R=this.getEAByteStack(this.regEBP+this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 68:R=this.getEAByteData(this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 69:R=this.getEAByteData(this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 70:R=this.getEAByteStack(this.regEBP+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 71:R=this.getEAByteData(this.regEBX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 128:R=this.getEAByteData(this.regEBX+this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 129:R=this.getEAByteData(this.regEBX+this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 130:R=this.getEAByteStack(this.regEBP+this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 131:R=this.getEAByteStack(this.regEBP+this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 132:R=this.getEAByteData(this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 133:R=this.getEAByteData(this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 134:R=this.getEAByteStack(this.regEBP+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 135:R=this.getEAByteData(this.regEBX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 192:R=255&this.regEAX;break;case 193:R=255&this.regECX;break;case 194:R=255&this.regEDX;break;case 195:R=255&this.regEBX;break;case 196:R=this.regEAX>>8&255;break;case 197:R=this.regECX>>8&255;break;case 198:R=this.regEDX>>8&255;break;case 199:R=this.regEBX>>8&255;break;default:R=0}switch(this.bModRM>>3&7){case 0:U=255&this.regEAX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAL);break;case 1:U=255&this.regECX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCL);break;case 2:U=255&this.regEDX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDL);break;case 3:U=255&this.regEBX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBL);break;case 4:U=this.regEAX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAH);break;case 5:U=this.regECX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCH);break;case 6:U=this.regEDX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDH);break;case 7:U=this.regEBX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBH);break;default:U=0}let e=V.call(this,R,U);switch(l){case 0:case 3:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndex;break;case 1:case 2:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexExtra;break;case 4:case 5:case 7:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 6:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesDisp;break;case 64:case 67:case 128:case 131:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 65:case 66:case 129:case 130:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 68:case 69:case 70:case 71:case 132:case 133:case 134:case 135:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 192:this.regEAX=-256&this.regEAX|e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiEALo);break;case 193:this.regECX=-256&this.regECX|e,BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiEALo);break;case 194:this.regEDX=-256&this.regEDX|e,BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiEALo);break;case 195:this.regEBX=-256&this.regEBX|e,BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiEALo);break;case 196:this.regEAX=-65281&this.regEAX|e<<8,BACKTRACK&&(this.backTrack.btiAH=this.backTrack.btiEALo);break;case 197:this.regECX=-65281&this.regECX|e<<8,BACKTRACK&&(this.backTrack.btiCH=this.backTrack.btiEALo);break;case 198:this.regEDX=-65281&this.regEDX|e<<8,BACKTRACK&&(this.backTrack.btiDH=this.backTrack.btiEALo);break;case 199:this.regEBX=-65281&this.regEBX|e<<8,BACKTRACK&&(this.backTrack.btiBH=this.backTrack.btiEALo)}},X86.modGrpByte16=function(V,R){let U,l=199&(this.bModRM=this.getIPByte());switch(l){case 0:U=this.getEAByteData(this.regEBX+this.regESI),this.regEAWrite=this.regEA;break;case 1:U=this.getEAByteData(this.regEBX+this.regEDI),this.regEAWrite=this.regEA;break;case 2:U=this.getEAByteStack(this.regEBP+this.regESI),this.regEAWrite=this.regEA;break;case 3:U=this.getEAByteStack(this.regEBP+this.regEDI),this.regEAWrite=this.regEA;break;case 4:U=this.getEAByteData(this.regESI),this.regEAWrite=this.regEA;break;case 5:U=this.getEAByteData(this.regEDI),this.regEAWrite=this.regEA;break;case 6:U=this.getEAByteData(this.getIPAddr()),this.regEAWrite=this.regEA;break;case 7:U=this.getEAByteData(this.regEBX),this.regEAWrite=this.regEA;break;case 64:U=this.getEAByteData(this.regEBX+this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 65:U=this.getEAByteData(this.regEBX+this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 66:U=this.getEAByteStack(this.regEBP+this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 67:U=this.getEAByteStack(this.regEBP+this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 68:U=this.getEAByteData(this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 69:U=this.getEAByteData(this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 70:U=this.getEAByteStack(this.regEBP+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 71:U=this.getEAByteData(this.regEBX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 128:U=this.getEAByteData(this.regEBX+this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 129:U=this.getEAByteData(this.regEBX+this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 130:U=this.getEAByteStack(this.regEBP+this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 131:U=this.getEAByteStack(this.regEBP+this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 132:U=this.getEAByteData(this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 133:U=this.getEAByteData(this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 134:U=this.getEAByteStack(this.regEBP+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 135:U=this.getEAByteData(this.regEBX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 192:U=255&this.regEAX;break;case 193:U=255&this.regECX;break;case 194:U=255&this.regEDX;break;case 195:U=255&this.regEBX;break;case 196:U=this.regEAX>>8&255;break;case 197:U=this.regECX>>8&255;break;case 198:U=this.regEDX>>8&255;break;case 199:U=this.regEBX>>8&255;break;default:U=0}let e=V[this.bModRM>>3&7].call(this,U,R.call(this));switch(l){case 0:case 3:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndex;break;case 1:case 2:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexExtra;break;case 4:case 5:case 7:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 6:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesDisp;break;case 64:case 67:case 128:case 131:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 65:case 66:case 129:case 130:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 68:case 69:case 70:case 71:case 132:case 133:case 134:case 135:this.setEAByte(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 192:this.regEAX=-256&this.regEAX|e;break;case 193:this.regECX=-256&this.regECX|e;break;case 194:this.regEDX=-256&this.regEDX|e;break;case 195:this.regEBX=-256&this.regEBX|e;break;case 196:this.regEAX=-65281&this.regEAX|e<<8;break;case 197:this.regECX=-65281&this.regECX|e<<8;break;case 198:this.regEDX=-65281&this.regEDX|e<<8;break;case 199:this.regEBX=-65281&this.regEBX|e<<8}},X86.modRegShort16=function(V){let R,U;switch(199&(this.bModRM=this.getIPByte())){case 0:U=this.getEAShortData(this.regEBX+this.regESI),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndex;break;case 1:U=this.getEAShortData(this.regEBX+this.regEDI),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexExtra;break;case 2:U=this.getEAShortStack(this.regEBP+this.regESI),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexExtra;break;case 3:U=this.getEAShortStack(this.regEBP+this.regEDI),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndex;break;case 4:U=this.getEAShortData(this.regESI),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 5:U=this.getEAShortData(this.regEDI),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 6:U=this.getEAShortData(this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesDisp;break;case 7:U=this.getEAShortData(this.regEBX),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 64:U=this.getEAShortData(this.regEBX+this.regESI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 65:U=this.getEAShortData(this.regEBX+this.regEDI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 66:U=this.getEAShortStack(this.regEBP+this.regESI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 67:U=this.getEAShortStack(this.regEBP+this.regEDI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 68:U=this.getEAShortData(this.regESI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 69:U=this.getEAShortData(this.regEDI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 70:U=this.getEAShortStack(this.regEBP+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 71:U=this.getEAShortData(this.regEBX+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 128:U=this.getEAShortData(this.regEBX+this.regESI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 129:U=this.getEAShortData(this.regEBX+this.regEDI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 130:U=this.getEAShortStack(this.regEBP+this.regESI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 131:U=this.getEAShortStack(this.regEBP+this.regEDI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 132:U=this.getEAShortData(this.regESI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 133:U=this.getEAShortData(this.regEDI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 134:U=this.getEAShortStack(this.regEBP+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 135:U=this.getEAShortData(this.regEBX+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 192:U=65535&this.regEAX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAL,this.backTrack.btiEAHi=this.backTrack.btiAH);break;case 193:U=65535&this.regECX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCL,this.backTrack.btiEAHi=this.backTrack.btiCH);break;case 194:U=65535&this.regEDX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDL,this.backTrack.btiEAHi=this.backTrack.btiDH);break;case 195:U=65535&this.regEBX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBL,this.backTrack.btiEAHi=this.backTrack.btiBH);break;case 196:U=65535&this.getSP(),BACKTRACK&&(this.backTrack.btiEALo=X86.BTINFO.SP_LO,this.backTrack.btiEAHi=X86.BTINFO.SP_HI);break;case 197:U=65535&this.regEBP,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBPLo,this.backTrack.btiEAHi=this.backTrack.btiBPHi);break;case 198:U=65535&this.regESI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiSILo,this.backTrack.btiEAHi=this.backTrack.btiSIHi);break;case 199:U=65535&this.regEDI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDILo,this.backTrack.btiEAHi=this.backTrack.btiDIHi);break;default:U=0}let l=this.bModRM>>3&7;switch(l){case 0:R=65535&this.regEAX;break;case 1:R=65535&this.regECX;break;case 2:R=65535&this.regEDX;break;case 3:R=65535&this.regEBX;break;case 4:R=65535&this.getSP();break;case 5:R=65535&this.regEBP;break;case 6:R=65535&this.regESI;break;case 7:R=65535&this.regEDI;break;default:R=0}let e=V.call(this,R,U);switch(l){case 0:this.regEAX=-65536&this.regEAX|e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiEALo,this.backTrack.btiAH=this.backTrack.btiEAHi);break;case 1:this.regECX=-65536&this.regECX|e,BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiEALo,this.backTrack.btiCH=this.backTrack.btiEAHi);break;case 2:this.regEDX=-65536&this.regEDX|e,BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiEALo,this.backTrack.btiDH=this.backTrack.btiEAHi);break;case 3:this.regEBX=-65536&this.regEBX|e,BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiEALo,this.backTrack.btiBH=this.backTrack.btiEAHi);break;case 4:this.setSP(-65536&this.getSP()|e);break;case 5:this.regEBP=-65536&this.regEBP|e,BACKTRACK&&(this.backTrack.btiBPLo=this.backTrack.btiEALo,this.backTrack.btiBPHi=this.backTrack.btiEAHi);break;case 6:this.regESI=-65536&this.regESI|e,BACKTRACK&&(this.backTrack.btiSILo=this.backTrack.btiEALo,this.backTrack.btiSIHi=this.backTrack.btiEAHi);break;case 7:this.regEDI=-65536&this.regEDI|e,BACKTRACK&&(this.backTrack.btiDILo=this.backTrack.btiEALo,this.backTrack.btiDIHi=this.backTrack.btiEAHi)}},X86.modMemShort16=function(V){let R,U,l=199&(this.bModRM=this.getIPByte());switch(l){case 0:R=this.getEAShortData(this.regEBX+this.regESI),this.regEAWrite=this.regEA;break;case 1:R=this.getEAShortData(this.regEBX+this.regEDI),this.regEAWrite=this.regEA;break;case 2:R=this.getEAShortStack(this.regEBP+this.regESI),this.regEAWrite=this.regEA;break;case 3:R=this.getEAShortStack(this.regEBP+this.regEDI),this.regEAWrite=this.regEA;break;case 4:R=this.getEAShortData(this.regESI),this.regEAWrite=this.regEA;break;case 5:R=this.getEAShortData(this.regEDI),this.regEAWrite=this.regEA;break;case 6:R=this.getEAShortData(this.getIPAddr()),this.regEAWrite=this.regEA;break;case 7:R=this.getEAShortData(this.regEBX),this.regEAWrite=this.regEA;break;case 64:R=this.getEAShortData(this.regEBX+this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 65:R=this.getEAShortData(this.regEBX+this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 66:R=this.getEAShortStack(this.regEBP+this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 67:R=this.getEAShortStack(this.regEBP+this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 68:R=this.getEAShortData(this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 69:R=this.getEAShortData(this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 70:R=this.getEAShortStack(this.regEBP+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 71:R=this.getEAShortData(this.regEBX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 128:R=this.getEAShortData(this.regEBX+this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 129:R=this.getEAShortData(this.regEBX+this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 130:R=this.getEAShortStack(this.regEBP+this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 131:R=this.getEAShortStack(this.regEBP+this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 132:R=this.getEAShortData(this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 133:R=this.getEAShortData(this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 134:R=this.getEAShortStack(this.regEBP+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 135:R=this.getEAShortData(this.regEBX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 192:R=65535&this.regEAX;break;case 193:R=65535&this.regECX;break;case 194:R=65535&this.regEDX;break;case 195:R=65535&this.regEBX;break;case 196:R=65535&this.getSP();break;case 197:R=65535&this.regEBP;break;case 198:R=65535&this.regESI;break;case 199:R=65535&this.regEDI;break;default:R=0}switch(this.bModRM>>3&7){case 0:U=65535&this.regEAX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAL,this.backTrack.btiEAHi=this.backTrack.btiAH);break;case 1:U=65535&this.regECX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCL,this.backTrack.btiEAHi=this.backTrack.btiCH);break;case 2:U=65535&this.regEDX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDL,this.backTrack.btiEAHi=this.backTrack.btiDH);break;case 3:U=65535&this.regEBX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBL,this.backTrack.btiEAHi=this.backTrack.btiBH);break;case 4:U=65535&this.getSP(),BACKTRACK&&(this.backTrack.btiEALo=X86.BTINFO.SP_LO,this.backTrack.btiEAHi=X86.BTINFO.SP_HI);break;case 5:U=65535&this.regEBP,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBPLo,this.backTrack.btiEAHi=this.backTrack.btiBPHi);break;case 6:U=65535&this.regESI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiSILo,this.backTrack.btiEAHi=this.backTrack.btiSIHi);break;case 7:U=65535&this.regEDI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDILo,this.backTrack.btiEAHi=this.backTrack.btiDIHi);break;default:U=0}let e=V.call(this,R,U);switch(l){case 0:case 3:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndex;break;case 1:case 2:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexExtra;break;case 4:case 5:case 7:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 6:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesDisp;break;case 64:case 67:case 128:case 131:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 65:case 66:case 129:case 130:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 68:case 69:case 70:case 71:case 132:case 133:case 134:case 135:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 192:this.regEAX=-65536&this.regEAX|e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiEALo,this.backTrack.btiAH=this.backTrack.btiEAHi);break;case 193:this.regECX=-65536&this.regECX|e,BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiEALo,this.backTrack.btiCH=this.backTrack.btiEAHi);break;case 194:this.regEDX=-65536&this.regEDX|e,BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiEALo,this.backTrack.btiDH=this.backTrack.btiEAHi);break;case 195:this.regEBX=-65536&this.regEBX|e,BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiEALo,this.backTrack.btiBH=this.backTrack.btiEAHi);break;case 196:this.setSP(-65536&this.getSP()|e);break;case 197:this.regEBP=-65536&this.regEBP|e,BACKTRACK&&(this.backTrack.btiBPLo=this.backTrack.btiEALo,this.backTrack.btiBPHi=this.backTrack.btiEAHi);break;case 198:this.regESI=-65536&this.regESI|e,BACKTRACK&&(this.backTrack.btiSILo=this.backTrack.btiEALo,this.backTrack.btiSIHi=this.backTrack.btiEAHi);break;case 199:this.regEDI=-65536&this.regEDI|e,BACKTRACK&&(this.backTrack.btiDILo=this.backTrack.btiEALo,this.backTrack.btiDIHi=this.backTrack.btiEAHi)}},X86.modGrpShort16=function(V,R){let U,l=199&(this.bModRM=this.getIPByte());switch(l){case 0:U=this.getEAShortData(this.regEBX+this.regESI),this.regEAWrite=this.regEA;break;case 1:U=this.getEAShortData(this.regEBX+this.regEDI),this.regEAWrite=this.regEA;break;case 2:U=this.getEAShortStack(this.regEBP+this.regESI),this.regEAWrite=this.regEA;break;case 3:U=this.getEAShortStack(this.regEBP+this.regEDI),this.regEAWrite=this.regEA;break;case 4:U=this.getEAShortData(this.regESI),this.regEAWrite=this.regEA;break;case 5:U=this.getEAShortData(this.regEDI),this.regEAWrite=this.regEA;break;case 6:U=this.getEAShortData(this.getIPAddr()),this.regEAWrite=this.regEA;break;case 7:U=this.getEAShortData(this.regEBX),this.regEAWrite=this.regEA;break;case 64:U=this.getEAShortData(this.regEBX+this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 65:U=this.getEAShortData(this.regEBX+this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 66:U=this.getEAShortStack(this.regEBP+this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 67:U=this.getEAShortStack(this.regEBP+this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 68:U=this.getEAShortData(this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 69:U=this.getEAShortData(this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 70:U=this.getEAShortStack(this.regEBP+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 71:U=this.getEAShortData(this.regEBX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 128:U=this.getEAShortData(this.regEBX+this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 129:U=this.getEAShortData(this.regEBX+this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 130:U=this.getEAShortStack(this.regEBP+this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 131:U=this.getEAShortStack(this.regEBP+this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 132:U=this.getEAShortData(this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 133:U=this.getEAShortData(this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 134:U=this.getEAShortStack(this.regEBP+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 135:U=this.getEAShortData(this.regEBX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 192:U=65535&this.regEAX;break;case 193:U=65535&this.regECX;break;case 194:U=65535&this.regEDX;break;case 195:U=65535&this.regEBX;break;case 196:U=65535&this.getSP();break;case 197:U=65535&this.regEBP;break;case 198:U=65535&this.regESI;break;case 199:U=65535&this.regEDI;break;default:U=0}let e=V[this.bModRM>>3&7].call(this,U,R.call(this));switch(l){case 0:case 3:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndex;break;case 1:case 2:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexExtra;break;case 4:case 5:case 7:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 6:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesDisp;break;case 64:case 67:case 128:case 131:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 65:case 66:case 129:case 130:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 68:case 69:case 70:case 71:case 132:case 133:case 134:case 135:this.setEAShort(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 192:this.regEAX=-65536&this.regEAX|e;break;case 193:this.regECX=-65536&this.regECX|e;break;case 194:this.regEDX=-65536&this.regEDX|e;break;case 195:this.regEBX=-65536&this.regEBX|e;break;case 196:this.setSP(-65536&this.getSP()|e);break;case 197:this.regEBP=-65536&this.regEBP|e;break;case 198:this.regESI=-65536&this.regESI|e;break;case 199:this.regEDI=-65536&this.regEDI|e}},X86.modRegLong16=function(V){let R,U;switch(199&(this.bModRM=this.getIPByte())){case 0:U=this.getEALongData(this.regEBX+this.regESI),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndex;break;case 1:U=this.getEALongData(this.regEBX+this.regEDI),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexExtra;break;case 2:U=this.getEALongStack(this.regEBP+this.regESI),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexExtra;break;case 3:U=this.getEALongStack(this.regEBP+this.regEDI),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndex;break;case 4:U=this.getEALongData(this.regESI),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 5:U=this.getEALongData(this.regEDI),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 6:U=this.getEALongData(this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesDisp;break;case 7:U=this.getEALongData(this.regEBX),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 64:U=this.getEALongData(this.regEBX+this.regESI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 65:U=this.getEALongData(this.regEBX+this.regEDI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 66:U=this.getEALongStack(this.regEBP+this.regESI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 67:U=this.getEALongStack(this.regEBP+this.regEDI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 68:U=this.getEALongData(this.regESI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 69:U=this.getEALongData(this.regEDI+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 70:U=this.getEALongStack(this.regEBP+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 71:U=this.getEALongData(this.regEBX+this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 128:U=this.getEALongData(this.regEBX+this.regESI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 129:U=this.getEALongData(this.regEBX+this.regEDI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 130:U=this.getEALongStack(this.regEBP+this.regESI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 131:U=this.getEALongStack(this.regEBP+this.regEDI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 132:U=this.getEALongData(this.regESI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 133:U=this.getEALongData(this.regEDI+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 134:U=this.getEALongStack(this.regEBP+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 135:U=this.getEALongData(this.regEBX+this.getIPAddr()),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 192:U=this.regEAX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAL,this.backTrack.btiEAHi=this.backTrack.btiAH);break;case 193:U=this.regECX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCL,this.backTrack.btiEAHi=this.backTrack.btiCH);break;case 194:U=this.regEDX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDL,this.backTrack.btiEAHi=this.backTrack.btiDH);break;case 195:U=this.regEBX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBL,this.backTrack.btiEAHi=this.backTrack.btiBH);break;case 196:U=this.getSP(),BACKTRACK&&(this.backTrack.btiEALo=X86.BTINFO.SP_LO,this.backTrack.btiEAHi=X86.BTINFO.SP_HI);break;case 197:U=this.regEBP,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBPLo,this.backTrack.btiEAHi=this.backTrack.btiBPHi);break;case 198:U=this.regESI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiSILo,this.backTrack.btiEAHi=this.backTrack.btiSIHi);break;case 199:U=this.regEDI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDILo,this.backTrack.btiEAHi=this.backTrack.btiDIHi);break;default:U=0}let l=this.bModRM>>3&7;switch(l){case 0:R=this.regEAX;break;case 1:R=this.regECX;break;case 2:R=this.regEDX;break;case 3:R=this.regEBX;break;case 4:R=this.getSP();break;case 5:R=this.regEBP;break;case 6:R=this.regESI;break;case 7:R=this.regEDI;break;default:R=0}let e=V.call(this,R,U);switch(l){case 0:this.regEAX=e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiEALo,this.backTrack.btiAH=this.backTrack.btiEAHi);break;case 1:this.regECX=e,BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiEALo,this.backTrack.btiCH=this.backTrack.btiEAHi);break;case 2:this.regEDX=e,BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiEALo,this.backTrack.btiDH=this.backTrack.btiEAHi);break;case 3:this.regEBX=e,BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiEALo,this.backTrack.btiBH=this.backTrack.btiEAHi);break;case 4:this.setSP(e);break;case 5:this.regEBP=e,BACKTRACK&&(this.backTrack.btiBPLo=this.backTrack.btiEALo,this.backTrack.btiBPHi=this.backTrack.btiEAHi);break;case 6:this.regESI=e,BACKTRACK&&(this.backTrack.btiSILo=this.backTrack.btiEALo,this.backTrack.btiSIHi=this.backTrack.btiEAHi);break;case 7:this.regEDI=e,BACKTRACK&&(this.backTrack.btiDILo=this.backTrack.btiEALo,this.backTrack.btiDIHi=this.backTrack.btiEAHi)}},X86.modMemLong16=function(V){let R,U,l=199&(this.bModRM=this.getIPByte());switch(l){case 0:R=this.getEALongData(this.regEBX+this.regESI),this.regEAWrite=this.regEA;break;case 1:R=this.getEALongData(this.regEBX+this.regEDI),this.regEAWrite=this.regEA;break;case 2:R=this.getEALongStack(this.regEBP+this.regESI),this.regEAWrite=this.regEA;break;case 3:R=this.getEALongStack(this.regEBP+this.regEDI),this.regEAWrite=this.regEA;break;case 4:R=this.getEALongData(this.regESI),this.regEAWrite=this.regEA;break;case 5:R=this.getEALongData(this.regEDI),this.regEAWrite=this.regEA;break;case 6:R=this.getEALongData(this.getIPAddr()),this.regEAWrite=this.regEA;break;case 7:R=this.getEALongData(this.regEBX),this.regEAWrite=this.regEA;break;case 64:R=this.getEALongData(this.regEBX+this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 65:R=this.getEALongData(this.regEBX+this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 66:R=this.getEALongStack(this.regEBP+this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 67:R=this.getEALongStack(this.regEBP+this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 68:R=this.getEALongData(this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 69:R=this.getEALongData(this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 70:R=this.getEALongStack(this.regEBP+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 71:R=this.getEALongData(this.regEBX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 128:R=this.getEALongData(this.regEBX+this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 129:R=this.getEALongData(this.regEBX+this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 130:R=this.getEALongStack(this.regEBP+this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 131:R=this.getEALongStack(this.regEBP+this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 132:R=this.getEALongData(this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 133:R=this.getEALongData(this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 134:R=this.getEALongStack(this.regEBP+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 135:R=this.getEALongData(this.regEBX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 192:R=this.regEAX;break;case 193:R=this.regECX;break;case 194:R=this.regEDX;break;case 195:R=this.regEBX;break;case 196:R=this.getSP();break;case 197:R=this.regEBP;break;case 198:R=this.regESI;break;case 199:R=this.regEDI;break;default:R=0}switch(this.bModRM>>3&7){case 0:U=this.regEAX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAL,this.backTrack.btiEAHi=this.backTrack.btiAH);break;case 1:U=this.regECX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCL,this.backTrack.btiEAHi=this.backTrack.btiCH);break;case 2:U=this.regEDX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDL,this.backTrack.btiEAHi=this.backTrack.btiDH);break;case 3:U=this.regEBX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBL,this.backTrack.btiEAHi=this.backTrack.btiBH);break;case 4:U=this.getSP(),BACKTRACK&&(this.backTrack.btiEALo=X86.BTINFO.SP_LO,this.backTrack.btiEAHi=X86.BTINFO.SP_HI);break;case 5:U=this.regEBP,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBPLo,this.backTrack.btiEAHi=this.backTrack.btiBPHi);break;case 6:U=this.regESI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiSILo,this.backTrack.btiEAHi=this.backTrack.btiSIHi);break;case 7:U=this.regEDI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDILo,this.backTrack.btiEAHi=this.backTrack.btiDIHi);break;default:U=0}let e=V.call(this,R,U);switch(l){case 0:case 3:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndex;break;case 1:case 2:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexExtra;break;case 4:case 5:case 7:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 6:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesDisp;break;case 64:case 67:case 128:case 131:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 65:case 66:case 129:case 130:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 68:case 69:case 70:case 71:case 132:case 133:case 134:case 135:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 192:this.regEAX=e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiEALo,this.backTrack.btiAH=this.backTrack.btiEAHi);break;case 193:this.regECX=e,BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiEALo,this.backTrack.btiCH=this.backTrack.btiEAHi);break;case 194:this.regEDX=e,BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiEALo,this.backTrack.btiDH=this.backTrack.btiEAHi);break;case 195:this.regEBX=e,BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiEALo,this.backTrack.btiBH=this.backTrack.btiEAHi);break;case 196:this.setSP(e);break;case 197:this.regEBP=e,BACKTRACK&&(this.backTrack.btiBPLo=this.backTrack.btiEALo,this.backTrack.btiBPHi=this.backTrack.btiEAHi);break;case 198:this.regESI=e,BACKTRACK&&(this.backTrack.btiSILo=this.backTrack.btiEALo,this.backTrack.btiSIHi=this.backTrack.btiEAHi);break;case 199:this.regEDI=e,BACKTRACK&&(this.backTrack.btiDILo=this.backTrack.btiEALo,this.backTrack.btiDIHi=this.backTrack.btiEAHi)}},X86.modGrpLong16=function(V,R){let U,l=199&(this.bModRM=this.getIPByte());switch(l){case 0:U=this.getEALongData(this.regEBX+this.regESI),this.regEAWrite=this.regEA;break;case 1:U=this.getEALongData(this.regEBX+this.regEDI),this.regEAWrite=this.regEA;break;case 2:U=this.getEALongStack(this.regEBP+this.regESI),this.regEAWrite=this.regEA;break;case 3:U=this.getEALongStack(this.regEBP+this.regEDI),this.regEAWrite=this.regEA;break;case 4:U=this.getEALongData(this.regESI),this.regEAWrite=this.regEA;break;case 5:U=this.getEALongData(this.regEDI),this.regEAWrite=this.regEA;break;case 6:U=this.getEALongData(this.getIPAddr()),this.regEAWrite=this.regEA;break;case 7:U=this.getEALongData(this.regEBX),this.regEAWrite=this.regEA;break;case 64:U=this.getEALongData(this.regEBX+this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 65:U=this.getEALongData(this.regEBX+this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 66:U=this.getEALongStack(this.regEBP+this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 67:U=this.getEALongStack(this.regEBP+this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 68:U=this.getEALongData(this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 69:U=this.getEALongData(this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 70:U=this.getEALongStack(this.regEBP+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 71:U=this.getEALongData(this.regEBX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 128:U=this.getEALongData(this.regEBX+this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 129:U=this.getEALongData(this.regEBX+this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 130:U=this.getEALongStack(this.regEBP+this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 131:U=this.getEALongStack(this.regEBP+this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 132:U=this.getEALongData(this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 133:U=this.getEALongData(this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 134:U=this.getEALongStack(this.regEBP+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 135:U=this.getEALongData(this.regEBX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 192:U=this.regEAX;break;case 193:U=this.regECX;break;case 194:U=this.regEDX;break;case 195:U=this.regEBX;break;case 196:U=this.getSP();break;case 197:U=this.regEBP;break;case 198:U=this.regESI;break;case 199:U=this.regEDI}let e=V[this.bModRM>>3&7].call(this,U,R.call(this));switch(l){case 0:case 3:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndex;break;case 1:case 2:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexExtra;break;case 4:case 5:case 7:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesBase;break;case 6:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesDisp;break;case 64:case 67:case 128:case 131:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDisp;break;case 65:case 66:case 129:case 130:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseIndexDispExtra;break;case 68:case 69:case 70:case 71:case 132:case 133:case 134:case 135:this.setEALong(e),this.nStepCycles-=this.cycleCounts.nEACyclesBaseDisp;break;case 192:this.regEAX=e;break;case 193:this.regECX=e;break;case 194:this.regEDX=e;break;case 195:this.regEBX=e;break;case 196:this.setSP(e);break;case 197:this.regEBP=e;break;case 198:this.regESI=e;break;case 199:this.regEDI=e}},X86.modRegByte32=function(V){let R,U;switch(199&(this.bModRM=this.getIPByte())){case 0:U=this.getEAByteData(this.regEAX);break;case 1:U=this.getEAByteData(this.regECX);break;case 2:U=this.getEAByteData(this.regEDX);break;case 3:U=this.getEAByteData(this.regEBX);break;case 4:U=this.getEAByteData(X86.modSIB.call(this,0));break;case 5:U=this.getEAByteData(this.getIPAddr());break;case 6:U=this.getEAByteData(this.regESI);break;case 7:U=this.getEAByteData(this.regEDI);break;case 64:U=this.getEAByteData(this.regEAX+this.getIPDisp());break;case 65:U=this.getEAByteData(this.regECX+this.getIPDisp());break;case 66:U=this.getEAByteData(this.regEDX+this.getIPDisp());break;case 67:U=this.getEAByteData(this.regEBX+this.getIPDisp());break;case 68:U=this.getEAByteData(X86.modSIB.call(this,1)+this.getIPDisp());break;case 69:U=this.getEAByteStack(this.regEBP+this.getIPDisp());break;case 70:U=this.getEAByteData(this.regESI+this.getIPDisp());break;case 71:U=this.getEAByteData(this.regEDI+this.getIPDisp());break;case 128:U=this.getEAByteData(this.regEAX+this.getIPAddr());break;case 129:U=this.getEAByteData(this.regECX+this.getIPAddr());break;case 130:U=this.getEAByteData(this.regEDX+this.getIPAddr());break;case 131:U=this.getEAByteData(this.regEBX+this.getIPAddr());break;case 132:U=this.getEAByteData(X86.modSIB.call(this,2)+this.getIPAddr());break;case 133:U=this.getEAByteStack(this.regEBP+this.getIPAddr());break;case 134:U=this.getEAByteData(this.regESI+this.getIPAddr());break;case 135:U=this.getEAByteData(this.regEDI+this.getIPAddr());break;case 192:U=255&this.regEAX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAL);break;case 193:U=255&this.regECX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCL);break;case 194:U=255&this.regEDX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDL);break;case 195:U=255&this.regEBX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBL);break;case 196:U=this.regEAX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAH);break;case 197:U=this.regECX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCH);break;case 198:U=this.regEDX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDH);break;case 199:U=this.regEBX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBH);break;default:U=0}let l=this.bModRM>>3&7;switch(l){case 0:R=255&this.regEAX;break;case 1:R=255&this.regECX;break;case 2:R=255&this.regEDX;break;case 3:R=255&this.regEBX;break;case 4:R=this.regEAX>>8&255;break;case 5:R=this.regECX>>8&255;break;case 6:R=this.regEDX>>8&255;break;case 7:R=this.regEBX>>8&255;break;default:R=0}let e=V.call(this,R,U);switch(l){case 0:this.regEAX=-256&this.regEAX|e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiEALo);break;case 1:this.regECX=-256&this.regECX|e,BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiEALo);break;case 2:this.regEDX=-256&this.regEDX|e,BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiEALo);break;case 3:this.regEBX=-256&this.regEBX|e,BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiEALo);break;case 4:this.regEAX=-65281&this.regEAX|e<<8,BACKTRACK&&(this.backTrack.btiAH=this.backTrack.btiEALo);break;case 5:this.regECX=-65281&this.regECX|e<<8,BACKTRACK&&(this.backTrack.btiCH=this.backTrack.btiEALo);break;case 6:this.regEDX=-65281&this.regEDX|e<<8,BACKTRACK&&(this.backTrack.btiDH=this.backTrack.btiEALo);break;case 7:this.regEBX=-65281&this.regEBX|e<<8,BACKTRACK&&(this.backTrack.btiBH=this.backTrack.btiEALo)}},X86.modMemByte32=function(V){let R,U,l=199&(this.bModRM=this.getIPByte());switch(l){case 0:R=this.getEAByteData(this.regEAX),this.regEAWrite=this.regEA;break;case 1:R=this.getEAByteData(this.regECX),this.regEAWrite=this.regEA;break;case 2:R=this.getEAByteData(this.regEDX),this.regEAWrite=this.regEA;break;case 3:R=this.getEAByteData(this.regEBX),this.regEAWrite=this.regEA;break;case 4:R=this.getEAByteData(X86.modSIB.call(this,0)),this.regEAWrite=this.regEA;break;case 5:R=this.getEAByteData(this.getIPAddr()),this.regEAWrite=this.regEA;break;case 6:R=this.getEAByteData(this.regESI),this.regEAWrite=this.regEA;break;case 7:R=this.getEAByteData(this.regEDI),this.regEAWrite=this.regEA;break;case 64:R=this.getEAByteData(this.regEAX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 65:R=this.getEAByteData(this.regECX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 66:R=this.getEAByteData(this.regEDX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 67:R=this.getEAByteData(this.regEBX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 68:R=this.getEAByteData(X86.modSIB.call(this,1)+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 69:R=this.getEAByteStack(this.regEBP+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 70:R=this.getEAByteData(this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 71:R=this.getEAByteData(this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 128:R=this.getEAByteData(this.regEAX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 129:R=this.getEAByteData(this.regECX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 130:R=this.getEAByteData(this.regEDX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 131:R=this.getEAByteData(this.regEBX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 132:R=this.getEAByteData(X86.modSIB.call(this,2)+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 133:R=this.getEAByteStack(this.regEBP+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 134:R=this.getEAByteData(this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 135:R=this.getEAByteData(this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 192:R=255&this.regEAX;break;case 193:R=255&this.regECX;break;case 194:R=255&this.regEDX;break;case 195:R=255&this.regEBX;break;case 196:R=this.regEAX>>8&255;break;case 197:R=this.regECX>>8&255;break;case 198:R=this.regEDX>>8&255;break;case 199:R=this.regEBX>>8&255;break;default:R=0}switch(this.bModRM>>3&7){case 0:U=255&this.regEAX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAL);break;case 1:U=255&this.regECX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCL);break;case 2:U=255&this.regEDX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDL);break;case 3:U=255&this.regEBX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBL);break;case 4:U=this.regEAX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAH);break;case 5:U=this.regECX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCH);break;case 6:U=this.regEDX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDH);break;case 7:U=this.regEBX>>8&255,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBH);break;default:U=0}let e=V.call(this,R,U);switch(l){case 192:this.regEAX=-256&this.regEAX|e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiEALo);break;case 193:this.regECX=-256&this.regECX|e,BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiEALo);break;case 194:this.regEDX=-256&this.regEDX|e,BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiEALo);break;case 195:this.regEBX=-256&this.regEBX|e,BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiEALo);break;case 196:this.regEAX=-65281&this.regEAX|e<<8,BACKTRACK&&(this.backTrack.btiAH=this.backTrack.btiEALo);break;case 197:this.regECX=-65281&this.regECX|e<<8,BACKTRACK&&(this.backTrack.btiCH=this.backTrack.btiEALo);break;case 198:this.regEDX=-65281&this.regEDX|e<<8,BACKTRACK&&(this.backTrack.btiDH=this.backTrack.btiEALo);break;case 199:this.regEBX=-65281&this.regEBX|e<<8,BACKTRACK&&(this.backTrack.btiBH=this.backTrack.btiEALo);break;default:this.setEAByte(e)}},X86.modGrpByte32=function(V,R){let U,l=199&(this.bModRM=this.getIPByte());switch(l){case 0:U=this.getEAByteData(this.regEAX),this.regEAWrite=this.regEA;break;case 1:U=this.getEAByteData(this.regECX),this.regEAWrite=this.regEA;break;case 2:U=this.getEAByteData(this.regEDX),this.regEAWrite=this.regEA;break;case 3:U=this.getEAByteData(this.regEBX),this.regEAWrite=this.regEA;break;case 4:U=this.getEAByteData(X86.modSIB.call(this,0)),this.regEAWrite=this.regEA;break;case 5:U=this.getEAByteData(this.getIPAddr()),this.regEAWrite=this.regEA;break;case 6:U=this.getEAByteData(this.regESI),this.regEAWrite=this.regEA;break;case 7:U=this.getEAByteData(this.regEDI),this.regEAWrite=this.regEA;break;case 64:U=this.getEAByteData(this.regEAX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 65:U=this.getEAByteData(this.regECX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 66:U=this.getEAByteData(this.regEDX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 67:U=this.getEAByteData(this.regEBX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 68:U=this.getEAByteData(X86.modSIB.call(this,1)+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 69:U=this.getEAByteStack(this.regEBP+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 70:U=this.getEAByteData(this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 71:U=this.getEAByteData(this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 128:U=this.getEAByteData(this.regEAX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 129:U=this.getEAByteData(this.regECX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 130:U=this.getEAByteData(this.regEDX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 131:U=this.getEAByteData(this.regEBX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 132:U=this.getEAByteData(X86.modSIB.call(this,2)+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 133:U=this.getEAByteStack(this.regEBP+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 134:U=this.getEAByteData(this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 135:U=this.getEAByteData(this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 192:U=255&this.regEAX;break;case 193:U=255&this.regECX;break;case 194:U=255&this.regEDX;break;case 195:U=255&this.regEBX;break;case 196:U=this.regEAX>>8&255;break;case 197:U=this.regECX>>8&255;break;case 198:U=this.regEDX>>8&255;break;case 199:U=this.regEBX>>8&255;break;default:U=0}let e=V[this.bModRM>>3&7].call(this,U,R.call(this));switch(l){case 192:this.regEAX=-256&this.regEAX|e;break;case 193:this.regECX=-256&this.regECX|e;break;case 194:this.regEDX=-256&this.regEDX|e;break;case 195:this.regEBX=-256&this.regEBX|e;break;case 196:this.regEAX=-65281&this.regEAX|e<<8;break;case 197:this.regECX=-65281&this.regECX|e<<8;break;case 198:this.regEDX=-65281&this.regEDX|e<<8;break;case 199:this.regEBX=-65281&this.regEBX|e<<8;break;default:this.setEAByte(e)}},X86.modRegShort32=function(V){let R,U;switch(199&(this.bModRM=this.getIPByte())){case 0:U=this.getEAShortData(this.regEAX);break;case 1:U=this.getEAShortData(this.regECX);break;case 2:U=this.getEAShortData(this.regEDX);break;case 3:U=this.getEAShortData(this.regEBX);break;case 4:U=this.getEAShortData(X86.modSIB.call(this,0));break;case 5:U=this.getEAShortData(this.getIPAddr());break;case 6:U=this.getEAShortData(this.regESI);break;case 7:U=this.getEAShortData(this.regEDI);break;case 64:U=this.getEAShortData(this.regEAX+this.getIPDisp());break;case 65:U=this.getEAShortData(this.regECX+this.getIPDisp());break;case 66:U=this.getEAShortData(this.regEDX+this.getIPDisp());break;case 67:U=this.getEAShortData(this.regEBX+this.getIPDisp());break;case 68:U=this.getEAShortData(X86.modSIB.call(this,1)+this.getIPDisp());break;case 69:U=this.getEAShortStack(this.regEBP+this.getIPDisp());break;case 70:U=this.getEAShortData(this.regESI+this.getIPDisp());break;case 71:U=this.getEAShortData(this.regEDI+this.getIPDisp());break;case 128:U=this.getEAShortData(this.regEAX+this.getIPAddr());break;case 129:U=this.getEAShortData(this.regECX+this.getIPAddr());break;case 130:U=this.getEAShortData(this.regEDX+this.getIPAddr());break;case 131:U=this.getEAShortData(this.regEBX+this.getIPAddr());break;case 132:U=this.getEAShortData(X86.modSIB.call(this,2)+this.getIPAddr());break;case 133:U=this.getEAShortStack(this.regEBP+this.getIPAddr());break;case 134:U=this.getEAShortData(this.regESI+this.getIPAddr());break;case 135:U=this.getEAShortData(this.regEDI+this.getIPAddr());break;case 192:U=65535&this.regEAX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAL,this.backTrack.btiEAHi=this.backTrack.btiAH);break;case 193:U=65535&this.regECX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCL,this.backTrack.btiEAHi=this.backTrack.btiCH);break;case 194:U=65535&this.regEDX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDL,this.backTrack.btiEAHi=this.backTrack.btiDH);break;case 195:U=65535&this.regEBX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBL,this.backTrack.btiEAHi=this.backTrack.btiBH);break;case 196:U=65535&this.getSP(),BACKTRACK&&(this.backTrack.btiEALo=X86.BTINFO.SP_LO,this.backTrack.btiEAHi=X86.BTINFO.SP_HI);break;case 197:U=65535&this.regEBP,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBPLo,this.backTrack.btiEAHi=this.backTrack.btiBPHi);break;case 198:U=65535&this.regESI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiSILo,this.backTrack.btiEAHi=this.backTrack.btiSIHi);break;case 199:U=65535&this.regEDI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDILo,this.backTrack.btiEAHi=this.backTrack.btiDIHi);break;default:U=0}let l=this.bModRM>>3&7;switch(l){case 0:R=65535&this.regEAX;break;case 1:R=65535&this.regECX;break;case 2:R=65535&this.regEDX;break;case 3:R=65535&this.regEBX;break;case 4:R=65535&this.getSP();break;case 5:R=65535&this.regEBP;break;case 6:R=65535&this.regESI;break;case 7:R=65535&this.regEDI;break;default:R=0}let e=V.call(this,R,U);switch(l){case 0:this.regEAX=-65536&this.regEAX|e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiEALo,this.backTrack.btiAH=this.backTrack.btiEAHi);break;case 1:this.regECX=-65536&this.regECX|e,BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiEALo,this.backTrack.btiCH=this.backTrack.btiEAHi);break;case 2:this.regEDX=-65536&this.regEDX|e,BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiEALo,this.backTrack.btiDH=this.backTrack.btiEAHi);break;case 3:this.regEBX=-65536&this.regEBX|e,BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiEALo,this.backTrack.btiBH=this.backTrack.btiEAHi);break;case 4:this.setSP(-65536&this.getSP()|e);break;case 5:this.regEBP=-65536&this.regEBP|e,BACKTRACK&&(this.backTrack.btiBPLo=this.backTrack.btiEALo,this.backTrack.btiBPHi=this.backTrack.btiEAHi);break;case 6:this.regESI=-65536&this.regESI|e,BACKTRACK&&(this.backTrack.btiSILo=this.backTrack.btiEALo,this.backTrack.btiSIHi=this.backTrack.btiEAHi);break;case 7:this.regEDI=-65536&this.regEDI|e,BACKTRACK&&(this.backTrack.btiDILo=this.backTrack.btiEALo,this.backTrack.btiDIHi=this.backTrack.btiEAHi)}},X86.modMemShort32=function(V){let R,U,l=199&(this.bModRM=this.getIPByte());switch(l){case 0:R=this.getEAShortData(this.regEAX),this.regEAWrite=this.regEA;break;case 1:R=this.getEAShortData(this.regECX),this.regEAWrite=this.regEA;break;case 2:R=this.getEAShortData(this.regEDX),this.regEAWrite=this.regEA;break;case 3:R=this.getEAShortData(this.regEBX),this.regEAWrite=this.regEA;break;case 4:R=this.getEAShortData(X86.modSIB.call(this,0)),this.regEAWrite=this.regEA;break;case 5:R=this.getEAShortData(this.getIPAddr()),this.regEAWrite=this.regEA;break;case 6:R=this.getEAShortData(this.regESI),this.regEAWrite=this.regEA;break;case 7:R=this.getEAShortData(this.regEDI),this.regEAWrite=this.regEA;break;case 64:R=this.getEAShortData(this.regEAX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 65:R=this.getEAShortData(this.regECX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 66:R=this.getEAShortData(this.regEDX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 67:R=this.getEAShortData(this.regEBX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 68:R=this.getEAShortData(X86.modSIB.call(this,1)+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 69:R=this.getEAShortStack(this.regEBP+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 70:R=this.getEAShortData(this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 71:R=this.getEAShortData(this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 128:R=this.getEAShortData(this.regEAX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 129:R=this.getEAShortData(this.regECX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 130:R=this.getEAShortData(this.regEDX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 131:R=this.getEAShortData(this.regEBX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 132:R=this.getEAShortData(X86.modSIB.call(this,2)+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 133:R=this.getEAShortStack(this.regEBP+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 134:R=this.getEAShortData(this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 135:R=this.getEAShortData(this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 192:R=65535&this.regEAX;break;case 193:R=65535&this.regECX;break;case 194:R=65535&this.regEDX;break;case 195:R=65535&this.regEBX;break;case 196:R=65535&this.getSP();break;case 197:R=65535&this.regEBP;break;case 198:R=65535&this.regESI;break;case 199:R=65535&this.regEDI;break;default:R=0}switch(this.bModRM>>3&7){case 0:U=65535&this.regEAX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAL,this.backTrack.btiEAHi=this.backTrack.btiAH);break;case 1:U=65535&this.regECX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCL,this.backTrack.btiEAHi=this.backTrack.btiCH);break;case 2:U=65535&this.regEDX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDL,this.backTrack.btiEAHi=this.backTrack.btiDH);break;case 3:U=65535&this.regEBX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBL,this.backTrack.btiEAHi=this.backTrack.btiBH);break;case 4:U=65535&this.getSP(),BACKTRACK&&(this.backTrack.btiEALo=X86.BTINFO.SP_LO,this.backTrack.btiEAHi=X86.BTINFO.SP_HI);break;case 5:U=65535&this.regEBP,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBPLo,this.backTrack.btiEAHi=this.backTrack.btiBPHi);break;case 6:U=65535&this.regESI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiSILo,this.backTrack.btiEAHi=this.backTrack.btiSIHi);break;case 7:U=65535&this.regEDI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDILo,this.backTrack.btiEAHi=this.backTrack.btiDIHi);break;default:U=0}let e=V.call(this,R,U);switch(l){case 192:this.regEAX=-65536&this.regEAX|e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiEALo,this.backTrack.btiAH=this.backTrack.btiEAHi);break;case 193:this.regECX=-65536&this.regECX|e,BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiEALo,this.backTrack.btiCH=this.backTrack.btiEAHi);break;case 194:this.regEDX=-65536&this.regEDX|e,BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiEALo,this.backTrack.btiDH=this.backTrack.btiEAHi);break;case 195:this.regEBX=-65536&this.regEBX|e,BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiEALo,this.backTrack.btiBH=this.backTrack.btiEAHi);break;case 196:this.setSP(-65536&this.getSP()|e);break;case 197:this.regEBP=-65536&this.regEBP|e,BACKTRACK&&(this.backTrack.btiBPLo=this.backTrack.btiEALo,this.backTrack.btiBPHi=this.backTrack.btiEAHi);break;case 198:this.regESI=-65536&this.regESI|e,BACKTRACK&&(this.backTrack.btiSILo=this.backTrack.btiEALo,this.backTrack.btiSIHi=this.backTrack.btiEAHi);break;case 199:this.regEDI=-65536&this.regEDI|e,BACKTRACK&&(this.backTrack.btiDILo=this.backTrack.btiEALo,this.backTrack.btiDIHi=this.backTrack.btiEAHi);break;default:this.setEAShort(e)}},X86.modGrpShort32=function(V,R){let U,l=199&(this.bModRM=this.getIPByte());switch(l){case 0:U=this.getEAShortData(this.regEAX),this.regEAWrite=this.regEA;break;case 1:U=this.getEAShortData(this.regECX),this.regEAWrite=this.regEA;break;case 2:U=this.getEAShortData(this.regEDX),this.regEAWrite=this.regEA;break;case 3:U=this.getEAShortData(this.regEBX),this.regEAWrite=this.regEA;break;case 4:U=this.getEAShortData(X86.modSIB.call(this,0)),this.regEAWrite=this.regEA;break;case 5:U=this.getEAShortData(this.getIPAddr()),this.regEAWrite=this.regEA;break;case 6:U=this.getEAShortData(this.regESI),this.regEAWrite=this.regEA;break;case 7:U=this.getEAShortData(this.regEDI),this.regEAWrite=this.regEA;break;case 64:U=this.getEAShortData(this.regEAX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 65:U=this.getEAShortData(this.regECX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 66:U=this.getEAShortData(this.regEDX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 67:U=this.getEAShortData(this.regEBX+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 68:U=this.getEAShortData(X86.modSIB.call(this,1)+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 69:U=this.getEAShortStack(this.regEBP+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 70:U=this.getEAShortData(this.regESI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 71:U=this.getEAShortData(this.regEDI+this.getIPDisp()),this.regEAWrite=this.regEA;break;case 128:U=this.getEAShortData(this.regEAX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 129:U=this.getEAShortData(this.regECX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 130:U=this.getEAShortData(this.regEDX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 131:U=this.getEAShortData(this.regEBX+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 132:U=this.getEAShortData(X86.modSIB.call(this,2)+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 133:U=this.getEAShortStack(this.regEBP+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 134:U=this.getEAShortData(this.regESI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 135:U=this.getEAShortData(this.regEDI+this.getIPAddr()),this.regEAWrite=this.regEA;break;case 192:U=65535&this.regEAX;break;case 193:U=65535&this.regECX;break;case 194:U=65535&this.regEDX;break;case 195:U=65535&this.regEBX;break;case 196:U=65535&this.getSP();break;case 197:U=65535&this.regEBP;break;case 198:U=65535&this.regESI;break;case 199:U=65535&this.regEDI;break;default:U=0}let e=V[this.bModRM>>3&7].call(this,U,R.call(this));switch(l){case 192:this.regEAX=-65536&this.regEAX|e;break;case 193:this.regECX=-65536&this.regECX|e;break;case 194:this.regEDX=-65536&this.regEDX|e;break;case 195:this.regEBX=-65536&this.regEBX|e;break;case 196:this.setSP(-65536&this.getSP()|e);break;case 197:this.regEBP=-65536&this.regEBP|e;break;case 198:this.regESI=-65536&this.regESI|e;break;case 199:this.regEDI=-65536&this.regEDI|e;break;default:this.setEAShort(e)}},X86.modRegLong32=function(V){let R,U,l,e=this.bModRM=this.getIPByte();switch(199&e){case 0:U=this.getEALongData(this.regEAX);break;case 1:U=this.getEALongData(this.regECX);break;case 2:U=this.getEALongData(this.regEDX);break;case 3:U=this.getEALongData(this.regEBX);break;case 4:U=this.getEALongData(X86.modSIB.call(this,0));break;case 5:U=this.getEALongData(this.getIPAddr());break;case 6:U=this.getEALongData(this.regESI);break;case 7:U=this.getEALongData(this.regEDI);break;case 64:U=this.getEALongData(this.regEAX+this.getIPDisp());break;case 65:U=this.getEALongData(this.regECX+this.getIPDisp());break;case 66:U=this.getEALongData(this.regEDX+this.getIPDisp());break;case 67:U=this.getEALongData(this.regEBX+this.getIPDisp());break;case 68:U=this.getEALongData(X86.modSIB.call(this,1)+this.getIPDisp());break;case 69:U=this.getEALongStack(this.regEBP+this.getIPDisp());break;case 70:U=this.getEALongData(this.regESI+this.getIPDisp());break;case 71:U=this.getEALongData(this.regEDI+this.getIPDisp());break;case 128:U=this.getEALongData(this.regEAX+this.getIPAddr());break;case 129:U=this.getEALongData(this.regECX+this.getIPAddr());break;case 130:U=this.getEALongData(this.regEDX+this.getIPAddr());break;case 131:U=this.getEALongData(this.regEBX+this.getIPAddr());break;case 132:U=this.getEALongData(X86.modSIB.call(this,2)+this.getIPAddr());break;case 133:U=this.getEALongStack(this.regEBP+this.getIPAddr());break;case 134:U=this.getEALongData(this.regESI+this.getIPAddr());break;case 135:U=this.getEALongData(this.regEDI+this.getIPAddr());break;case 192:U=this.regEAX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAL,this.backTrack.btiEAHi=this.backTrack.btiAH);break;case 193:U=this.regECX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCL,this.backTrack.btiEAHi=this.backTrack.btiCH);break;case 194:U=this.regEDX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDL,this.backTrack.btiEAHi=this.backTrack.btiDH);break;case 195:U=this.regEBX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBL,this.backTrack.btiEAHi=this.backTrack.btiBH);break;case 196:U=this.getSP(),BACKTRACK&&(this.backTrack.btiEALo=X86.BTINFO.SP_LO,this.backTrack.btiEAHi=X86.BTINFO.SP_HI);break;case 197:U=this.regEBP,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBPLo,this.backTrack.btiEAHi=this.backTrack.btiBPHi);break;case 198:U=this.regESI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiSILo,this.backTrack.btiEAHi=this.backTrack.btiSIHi);break;case 199:U=this.regEDI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDILo,this.backTrack.btiEAHi=this.backTrack.btiDIHi)}switch(e>>3&7){case 0:R=this.regEAX,l=V.call(this,R,U),this.regEAX=l,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiEALo,this.backTrack.btiAH=this.backTrack.btiEAHi);break;case 1:R=this.regECX,l=V.call(this,R,U),this.regECX=l,BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiEALo,this.backTrack.btiCH=this.backTrack.btiEAHi);break;case 2:R=this.regEDX,l=V.call(this,R,U),this.regEDX=l,BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiEALo,this.backTrack.btiDH=this.backTrack.btiEAHi);break;case 3:R=this.regEBX,l=V.call(this,R,U),this.regEBX=l,BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiEALo,this.backTrack.btiBH=this.backTrack.btiEAHi);break;case 4:R=this.getSP(),l=V.call(this,R,U),this.setSP(l);break;case 5:R=this.regEBP,l=V.call(this,R,U),this.regEBP=l,BACKTRACK&&(this.backTrack.btiBPLo=this.backTrack.btiEALo,this.backTrack.btiBPHi=this.backTrack.btiEAHi);break;case 6:R=this.regESI,l=V.call(this,R,U),this.regESI=l,BACKTRACK&&(this.backTrack.btiSILo=this.backTrack.btiEALo,this.backTrack.btiSIHi=this.backTrack.btiEAHi);break;case 7:R=this.regEDI,l=V.call(this,R,U),this.regEDI=l,BACKTRACK&&(this.backTrack.btiDILo=this.backTrack.btiEALo,this.backTrack.btiDIHi=this.backTrack.btiEAHi)}},X86.modMemLong32=function(V){let R,U,l=this.bModRM=this.getIPByte();switch(199&l){case 0:R=this.getEALongDataWrite(this.regEAX);break;case 1:R=this.getEALongDataWrite(this.regECX);break;case 2:R=this.getEALongDataWrite(this.regEDX);break;case 3:R=this.getEALongDataWrite(this.regEBX);break;case 4:R=this.getEALongDataWrite(X86.modSIB.call(this,0));break;case 5:R=this.getEALongDataWrite(this.getIPAddr());break;case 6:R=this.getEALongDataWrite(this.regESI);break;case 7:R=this.getEALongDataWrite(this.regEDI);break;case 64:R=this.getEALongDataWrite(this.regEAX+this.getIPDisp());break;case 65:R=this.getEALongDataWrite(this.regECX+this.getIPDisp());break;case 66:R=this.getEALongDataWrite(this.regEDX+this.getIPDisp());break;case 67:R=this.getEALongDataWrite(this.regEBX+this.getIPDisp());break;case 68:R=this.getEALongDataWrite(X86.modSIB.call(this,1)+this.getIPDisp());break;case 69:R=this.getEALongStackWrite(this.regEBP+this.getIPDisp());break;case 70:R=this.getEALongDataWrite(this.regESI+this.getIPDisp());break;case 71:R=this.getEALongDataWrite(this.regEDI+this.getIPDisp());break;case 128:R=this.getEALongDataWrite(this.regEAX+this.getIPAddr());break;case 129:R=this.getEALongDataWrite(this.regECX+this.getIPAddr());break;case 130:R=this.getEALongDataWrite(this.regEDX+this.getIPAddr());break;case 131:R=this.getEALongDataWrite(this.regEBX+this.getIPAddr());break;case 132:R=this.getEALongDataWrite(X86.modSIB.call(this,2)+this.getIPAddr());break;case 133:R=this.getEALongStackWrite(this.regEBP+this.getIPAddr());break;case 134:R=this.getEALongDataWrite(this.regESI+this.getIPAddr());break;case 135:R=this.getEALongDataWrite(this.regEDI+this.getIPAddr());break;case 192:R=this.regEAX;break;case 193:R=this.regECX;break;case 194:R=this.regEDX;break;case 195:R=this.regEBX;break;case 196:R=this.getSP();break;case 197:R=this.regEBP;break;case 198:R=this.regESI;break;case 199:R=this.regEDI}switch(l>>3&7){case 0:U=this.regEAX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiAL,this.backTrack.btiEAHi=this.backTrack.btiAH);break;case 1:U=this.regECX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiCL,this.backTrack.btiEAHi=this.backTrack.btiCH);break;case 2:U=this.regEDX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDL,this.backTrack.btiEAHi=this.backTrack.btiDH);break;case 3:U=this.regEBX,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBL,this.backTrack.btiEAHi=this.backTrack.btiBH);break;case 4:U=this.getSP(),BACKTRACK&&(this.backTrack.btiEALo=X86.BTINFO.SP_LO,this.backTrack.btiEAHi=X86.BTINFO.SP_HI);break;case 5:U=this.regEBP,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiBPLo,this.backTrack.btiEAHi=this.backTrack.btiBPHi);break;case 6:U=this.regESI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiSILo,this.backTrack.btiEAHi=this.backTrack.btiSIHi);break;case 7:U=this.regEDI,BACKTRACK&&(this.backTrack.btiEALo=this.backTrack.btiDILo,this.backTrack.btiEAHi=this.backTrack.btiDIHi)}let e=V.call(this,R,U);switch(199&l){case 192:this.regEAX=e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiEALo,this.backTrack.btiAH=this.backTrack.btiEAHi);break;case 193:this.regECX=e,BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiEALo,this.backTrack.btiCH=this.backTrack.btiEAHi);break;case 194:this.regEDX=e,BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiEALo,this.backTrack.btiDH=this.backTrack.btiEAHi);break;case 195:this.regEBX=e,BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiEALo,this.backTrack.btiBH=this.backTrack.btiEAHi);break;case 196:this.setSP(e);break;case 197:this.regEBP=e,BACKTRACK&&(this.backTrack.btiBPLo=this.backTrack.btiEALo,this.backTrack.btiBPHi=this.backTrack.btiEAHi);break;case 198:this.regESI=e,BACKTRACK&&(this.backTrack.btiSILo=this.backTrack.btiEALo,this.backTrack.btiSIHi=this.backTrack.btiEAHi);break;case 199:this.regEDI=e,BACKTRACK&&(this.backTrack.btiDILo=this.backTrack.btiEALo,this.backTrack.btiDIHi=this.backTrack.btiEAHi);break;default:this.setEALong(e)}},X86.modGrpLong32=function(V,R){let U,l=this.bModRM=this.getIPByte();switch(199&l){case 0:U=this.getEALongDataWrite(this.regEAX);break;case 1:U=this.getEALongDataWrite(this.regECX);break;case 2:U=this.getEALongDataWrite(this.regEDX);break;case 3:U=this.getEALongDataWrite(this.regEBX);break;case 4:U=this.getEALongDataWrite(X86.modSIB.call(this,0));break;case 5:U=this.getEALongDataWrite(this.getIPAddr());break;case 6:U=this.getEALongDataWrite(this.regESI);break;case 7:U=this.getEALongDataWrite(this.regEDI);break;case 64:U=this.getEALongDataWrite(this.regEAX+this.getIPDisp());break;case 65:U=this.getEALongDataWrite(this.regECX+this.getIPDisp());break;case 66:U=this.getEALongDataWrite(this.regEDX+this.getIPDisp());break;case 67:U=this.getEALongDataWrite(this.regEBX+this.getIPDisp());break;case 68:U=this.getEALongDataWrite(X86.modSIB.call(this,1)+this.getIPDisp());break;case 69:U=this.getEALongStackWrite(this.regEBP+this.getIPDisp());break;case 70:U=this.getEALongDataWrite(this.regESI+this.getIPDisp());break;case 71:U=this.getEALongDataWrite(this.regEDI+this.getIPDisp());break;case 128:U=this.getEALongDataWrite(this.regEAX+this.getIPAddr());break;case 129:U=this.getEALongDataWrite(this.regECX+this.getIPAddr());break;case 130:U=this.getEALongDataWrite(this.regEDX+this.getIPAddr());break;case 131:U=this.getEALongDataWrite(this.regEBX+this.getIPAddr());break;case 132:U=this.getEALongDataWrite(X86.modSIB.call(this,2)+this.getIPAddr());break;case 133:U=this.getEALongStackWrite(this.regEBP+this.getIPAddr());break;case 134:U=this.getEALongDataWrite(this.regESI+this.getIPAddr());break;case 135:U=this.getEALongDataWrite(this.regEDI+this.getIPAddr());break;case 192:U=this.regEAX;break;case 193:U=this.regECX;break;case 194:U=this.regEDX;break;case 195:U=this.regEBX;break;case 196:U=this.getSP();break;case 197:U=this.regEBP;break;case 198:U=this.regESI;break;case 199:U=this.regEDI}let e=V[l>>3&7].call(this,U,R.call(this));switch(199&l){case 192:this.regEAX=e;break;case 193:this.regECX=e;break;case 194:this.regEDX=e;break;case 195:this.regEBX=e;break;case 196:this.setSP(e);break;case 197:this.regEBP=e;break;case 198:this.regESI=e;break;case 199:this.regEDI=e;break;default:this.setEALong(e)}},X86.modSIB=function(V){let R,U,l=this.getIPByte(),e=l>>6;switch(l>>3&7){case 0:R=this.regEAX;break;case 1:R=this.regECX;break;case 2:R=this.regEDX;break;case 3:R=this.regEBX;break;case 4:R=0;break;case 5:R=this.regEBP;break;case 6:R=this.regESI;break;case 7:R=this.regEDI}switch(7&l){case 0:U=this.regEAX;break;case 1:U=this.regECX;break;case 2:U=this.regEDX;break;case 3:U=this.regEBX;break;case 4:U=this.getSP(),this.segData=this.segStack;break;case 5:V?(U=this.regEBP,this.segData=this.segStack):U=this.getIPAddr();break;case 6:U=this.regESI;break;case 7:U=this.regEDI}return(R<<e)+U|0},
X86.opADDmb=function(){this.decodeModMemByte.call(this,X86.fnADDb),MAXDEBUG&&!this.bModRM&&this.flags.running&&(this.printf("suspicious opcode (0x00,0x00)\n"),DEBUGGER&&this.dbg&&this.dbg.stopCPU())},X86.opADDmw=function(){this.decodeModMemWord.call(this,X86.fnADDw)},X86.opADDrb=function(){this.decodeModRegByte.call(this,X86.fnADDb)},X86.opADDrw=function(){this.decodeModRegWord.call(this,X86.fnADDw)},X86.opADDALb=function(){this.regEAX=-256&this.regEAX|X86.fnADDb.call(this,255&this.regEAX,this.getIPByte()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0),this.nStepCycles--},X86.opADDAX=function(){this.regEAX=this.regEAX&~this.maskData|X86.fnADDw.call(this,this.regEAX&this.maskData,this.getIPWord()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0,this.backTrack.btiAH=this.backTrack.btiMem1),this.nStepCycles--},X86.opPUSHES=function(){I386?this.pushData(this.segES.sel,this.sizeData,2):this.pushWord(this.segES.sel),this.nStepCycles-=this.cycleCounts.nOpCyclesPushSeg},X86.opPOPES=function(){this.opLSP=this.regLSP,this.setES(this.popWord()),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg,this.opLSP=X86.ADDR_INVALID},X86.opORmb=function(){this.decodeModMemByte.call(this,X86.fnORb)},X86.opORmw=function(){this.decodeModMemWord.call(this,X86.fnORw)},X86.opORrb=function(){this.decodeModRegByte.call(this,X86.fnORb)},X86.opORrw=function(){this.decodeModRegWord.call(this,X86.fnORw)},X86.opORALb=function(){this.regEAX=-256&this.regEAX|X86.fnORb.call(this,255&this.regEAX,this.getIPByte()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0),this.nStepCycles--},X86.opORAX=function(){this.regEAX=this.regEAX&~this.maskData|X86.fnORw.call(this,this.regEAX&this.maskData,this.getIPWord()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0,this.backTrack.btiAH=this.backTrack.btiMem1),this.nStepCycles--},X86.opPUSHCS=function(){I386?this.pushData(this.segCS.sel,this.sizeData,2):this.pushWord(this.segCS.sel),this.nStepCycles-=this.cycleCounts.nOpCyclesPushSeg},X86.opPOPCS=function(){this.setCS(this.popWord()),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg},X86.op0F=function(){this.aOps0F[this.getIPByte()].call(this)},X86.opADCmb=function(){this.decodeModMemByte.call(this,X86.fnADCb)},X86.opADCmw=function(){this.decodeModMemWord.call(this,X86.fnADCw)},X86.opADCrb=function(){this.decodeModRegByte.call(this,X86.fnADCb)},X86.opADCrw=function(){this.decodeModRegWord.call(this,X86.fnADCw)},X86.opADCALb=function(){this.regEAX=-256&this.regEAX|X86.fnADCb.call(this,255&this.regEAX,this.getIPByte()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0),this.nStepCycles--},X86.opADCAX=function(){this.regEAX=this.regEAX&~this.maskData|X86.fnADCw.call(this,this.regEAX&this.maskData,this.getIPWord()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0,this.backTrack.btiAH=this.backTrack.btiMem1),this.nStepCycles--},X86.opPUSHSS=function(){I386?this.pushData(this.segSS.sel,this.sizeData,2):this.pushWord(this.segSS.sel),this.nStepCycles-=this.cycleCounts.nOpCyclesPushSeg},X86.opPOPSS=function(){this.opLSP=this.regLSP,this.setSS(this.popWord()),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg,this.opLSP=X86.ADDR_INVALID},X86.opSBBmb=function(){this.decodeModMemByte.call(this,X86.fnSBBb)},X86.opSBBmw=function(){this.decodeModMemWord.call(this,X86.fnSBBw)},X86.opSBBrb=function(){this.decodeModRegByte.call(this,X86.fnSBBb)},X86.opSBBrw=function(){this.decodeModRegWord.call(this,X86.fnSBBw)},X86.opSBBALb=function(){this.regEAX=-256&this.regEAX|X86.fnSBBb.call(this,255&this.regEAX,this.getIPByte()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0),this.nStepCycles--},X86.opSBBAX=function(){this.regEAX=this.regEAX&~this.maskData|X86.fnSBBw.call(this,this.regEAX&this.maskData,this.getIPWord()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0,this.backTrack.btiAH=this.backTrack.btiMem1),this.nStepCycles--},X86.opPUSHDS=function(){I386?this.pushData(this.segDS.sel,this.sizeData,2):this.pushWord(this.segDS.sel),this.nStepCycles-=this.cycleCounts.nOpCyclesPushSeg},X86.opPOPDS=function(){this.opLSP=this.regLSP,this.setDS(this.popWord()),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg,this.opLSP=X86.ADDR_INVALID},X86.opANDmb=function(){this.decodeModMemByte.call(this,X86.fnANDb)},X86.opANDmw=function(){this.decodeModMemWord.call(this,X86.fnANDw)},X86.opANDrb=function(){this.decodeModRegByte.call(this,X86.fnANDb)},X86.opANDrw=function(){this.decodeModRegWord.call(this,X86.fnANDw)},X86.opANDAL=function(){this.regEAX=-256&this.regEAX|X86.fnANDb.call(this,255&this.regEAX,this.getIPByte()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0),this.nStepCycles--},X86.opANDAX=function(){this.regEAX=this.regEAX&~this.maskData|X86.fnANDw.call(this,this.regEAX&this.maskData,this.getIPWord()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0,this.backTrack.btiAH=this.backTrack.btiMem1),this.nStepCycles--},X86.opES=function(){this.opFlags|=X86.OPFLAG.SEG|X86.OPFLAG.NOINTR,this.segData=this.segStack=this.segES,this.nStepCycles-=this.cycleCounts.nOpCyclesPrefix},X86.opDAA=function(){let V=255&this.regEAX,R=this.getAF(),U=this.getCF();(15&V)>9||R?(V+=6,R=X86.PS.AF):R=0,V>159||U?(V+=96,U=X86.PS.CF):U=0;let l=255&V;this.regEAX=-256&this.regEAX|l,this.setLogicResult(l,X86.RESULT.BYTE),U?this.setCF():this.clearCF(),R?this.setAF():this.clearAF(),this.nStepCycles-=this.cycleCounts.nOpCyclesAAA},X86.opSUBmb=function(){this.decodeModMemByte.call(this,X86.fnSUBb)},X86.opSUBmw=function(){this.decodeModMemWord.call(this,X86.fnSUBw)},X86.opSUBrb=function(){this.decodeModRegByte.call(this,X86.fnSUBb)},X86.opSUBrw=function(){this.decodeModRegWord.call(this,X86.fnSUBw)},X86.opSUBALb=function(){this.regEAX=-256&this.regEAX|X86.fnSUBb.call(this,255&this.regEAX,this.getIPByte()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0),this.nStepCycles--},X86.opSUBAX=function(){this.regEAX=this.regEAX&~this.maskData|X86.fnSUBw.call(this,this.regEAX&this.maskData,this.getIPWord()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0,this.backTrack.btiAH=this.backTrack.btiMem1),this.nStepCycles--},X86.opCS=function(){this.opFlags|=X86.OPFLAG.SEG|X86.OPFLAG.NOINTR,this.segData=this.segStack=this.segCS,this.nStepCycles-=this.cycleCounts.nOpCyclesPrefix},X86.opDAS=function(){let V=255&this.regEAX,R=this.getAF(),U=this.getCF();(15&V)>9||R?(V-=6,R=X86.PS.AF):R=0,V>159||U?(V-=96,U=X86.PS.CF):U=0;let l=255&V;this.regEAX=-256&this.regEAX|l,this.setLogicResult(l,X86.RESULT.BYTE),U?this.setCF():this.clearCF(),R?this.setAF():this.clearAF(),this.nStepCycles-=this.cycleCounts.nOpCyclesAAA},X86.opXORmb=function(){this.decodeModMemByte.call(this,X86.fnXORb)},X86.opXORmw=function(){this.decodeModMemWord.call(this,X86.fnXORw)},X86.opXORrb=function(){this.decodeModRegByte.call(this,X86.fnXORb)},X86.opXORrw=function(){this.decodeModRegWord.call(this,X86.fnXORw)},X86.opXORALb=function(){this.regEAX=-256&this.regEAX|X86.fnXORb.call(this,255&this.regEAX,this.getIPByte()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0),this.nStepCycles--},X86.opXORAX=function(){this.regEAX=this.regEAX&~this.maskData|X86.fnXORw.call(this,this.regEAX&this.maskData,this.getIPWord()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0,this.backTrack.btiAH=this.backTrack.btiMem1),this.nStepCycles--},X86.opSS=function(){this.opFlags|=X86.OPFLAG.SEG|X86.OPFLAG.NOINTR,this.segData=this.segStack=this.segSS,this.nStepCycles-=this.cycleCounts.nOpCyclesPrefix},X86.opAAA=function(){let V,R,U=255&this.regEAX,l=this.regEAX>>8&255;(15&U)>9||this.getAF()?(U+=6,this.model>=X86.MODEL_80286&&U>255&&l++,l++,V=R=1):V=R=0,this.regEAX=-65536&this.regEAX|65295&(l<<8|U),V?this.setCF():this.clearCF(),R?this.setAF():this.clearAF(),this.nStepCycles-=this.cycleCounts.nOpCyclesAAA},X86.opCMPmb=function(){this.decodeModMemByte.call(this,X86.fnCMPb)},X86.opCMPmw=function(){this.decodeModMemWord.call(this,X86.fnCMPw)},X86.opCMPrb=function(){this.decodeModRegByte.call(this,X86.fnCMPb)},X86.opCMPrw=function(){this.decodeModRegWord.call(this,X86.fnCMPw)},X86.opCMPALb=function(){X86.fnCMPb.call(this,255&this.regEAX,this.getIPByte()),this.nStepCycles--},X86.opCMPAX=function(){X86.fnCMPw.call(this,this.regEAX&this.maskData,this.getIPWord()),this.nStepCycles--},X86.opDS=function(){this.opFlags|=X86.OPFLAG.SEG|X86.OPFLAG.NOINTR,this.segData=this.segStack=this.segDS,this.nStepCycles-=this.cycleCounts.nOpCyclesPrefix},X86.opAAS=function(){let V,R,U=255&this.regEAX,l=this.regEAX>>8&255;(15&U)>9||this.getAF()?(U=U-6&15,l=l-1&255,V=R=1):V=R=0,this.regEAX=-65536&this.regEAX|l<<8|U,V?this.setCF():this.clearCF(),R?this.setAF():this.clearAF(),this.nStepCycles-=this.cycleCounts.nOpCyclesAAA},X86.opINCAX=function(){this.regEAX=X86.helpINCreg.call(this,this.regEAX)},X86.opINCCX=function(){this.regECX=X86.helpINCreg.call(this,this.regECX)},X86.opINCDX=function(){this.regEDX=X86.helpINCreg.call(this,this.regEDX)},X86.opINCBX=function(){this.regEBX=X86.helpINCreg.call(this,this.regEBX)},X86.opINCSP=function(){this.setSP(X86.helpINCreg.call(this,this.getSP()))},X86.opINCBP=function(){this.regEBP=X86.helpINCreg.call(this,this.regEBP)},X86.opINCSI=function(){this.regESI=X86.helpINCreg.call(this,this.regESI)},X86.opINCDI=function(){this.regEDI=X86.helpINCreg.call(this,this.regEDI)},X86.opDECAX=function(){this.regEAX=X86.helpDECreg.call(this,this.regEAX)},X86.opDECCX=function(){this.regECX=X86.helpDECreg.call(this,this.regECX)},X86.opDECDX=function(){this.regEDX=X86.helpDECreg.call(this,this.regEDX)},X86.opDECBX=function(){this.regEBX=X86.helpDECreg.call(this,this.regEBX)},X86.opDECSP=function(){this.setSP(X86.helpDECreg.call(this,this.getSP()))},X86.opDECBP=function(){this.regEBP=X86.helpDECreg.call(this,this.regEBP)},X86.opDECSI=function(){this.regESI=X86.helpDECreg.call(this,this.regESI)},X86.opDECDI=function(){this.regEDI=X86.helpDECreg.call(this,this.regEDI)},X86.opPUSHAX=function(){BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiAL,this.backTrack.btiMem1=this.backTrack.btiAH),this.pushWord(this.regEAX&this.maskData),this.nStepCycles-=this.cycleCounts.nOpCyclesPushReg},X86.opPUSHCX=function(){BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiCL,this.backTrack.btiMem1=this.backTrack.btiCH),this.pushWord(this.regECX&this.maskData),this.nStepCycles-=this.cycleCounts.nOpCyclesPushReg},X86.opPUSHDX=function(){BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiDL,this.backTrack.btiMem1=this.backTrack.btiDH),this.pushWord(this.regEDX&this.maskData),this.nStepCycles-=this.cycleCounts.nOpCyclesPushReg},X86.opPUSHBX=function(){BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiBL,this.backTrack.btiMem1=this.backTrack.btiBH),this.pushWord(this.regEBX&this.maskData),this.nStepCycles-=this.cycleCounts.nOpCyclesPushReg},X86.opPUSHSP_8086=function(){let V=this.getSP()-2&65535;this.pushWord(V),this.nStepCycles-=this.cycleCounts.nOpCyclesPushReg},X86.opPUSHSP=function(){this.pushWord(this.getSP()&this.maskData),this.nStepCycles-=this.cycleCounts.nOpCyclesPushReg},X86.opPUSHBP=function(){BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiBPLo,this.backTrack.btiMem1=this.backTrack.btiBPHi),this.pushWord(this.regEBP&this.maskData),this.nStepCycles-=this.cycleCounts.nOpCyclesPushReg},X86.opPUSHSI=function(){BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiSILo,this.backTrack.btiMem1=this.backTrack.btiSIHi),this.pushWord(this.regESI&this.maskData),this.nStepCycles-=this.cycleCounts.nOpCyclesPushReg},X86.opPUSHDI=function(){BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiDILo,this.backTrack.btiMem1=this.backTrack.btiDIHi),this.pushWord(this.regEDI&this.maskData),this.nStepCycles-=this.cycleCounts.nOpCyclesPushReg},X86.opPOPAX=function(){this.regEAX=this.regEAX&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0,this.backTrack.btiAH=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg},X86.opPOPCX=function(){this.regECX=this.regECX&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiMem0,this.backTrack.btiCH=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg},X86.opPOPDX=function(){this.regEDX=this.regEDX&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiMem0,this.backTrack.btiDH=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg},X86.opPOPBX=function(){this.regEBX=this.regEBX&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiMem0,this.backTrack.btiBH=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg},X86.opPOPSP=function(){this.setSP(this.getSP()&~this.maskData|this.popWord()),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg},X86.opPOPBP=function(){this.regEBP=this.regEBP&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiBPLo=this.backTrack.btiMem0,this.backTrack.btiBPHi=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg},X86.opPOPSI=function(){this.regESI=this.regESI&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiSILo=this.backTrack.btiMem0,this.backTrack.btiSIHi=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg},X86.opPOPDI=function(){this.regEDI=this.regEDI&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiDILo=this.backTrack.btiMem0,this.backTrack.btiDIHi=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg},X86.opPUSHA=function(){this.opLSP=this.regLSP;let V=this.getSP()&this.maskData;BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiAL,this.backTrack.btiMem1=this.backTrack.btiAH),this.pushWord(this.regEAX&this.maskData),BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiCL,this.backTrack.btiMem1=this.backTrack.btiCH),this.pushWord(this.regECX&this.maskData),BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiDL,this.backTrack.btiMem1=this.backTrack.btiDH),this.pushWord(this.regEDX&this.maskData),BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiBL,this.backTrack.btiMem1=this.backTrack.btiBH),this.pushWord(this.regEBX&this.maskData),this.pushWord(V),BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiBPLo,this.backTrack.btiMem1=this.backTrack.btiBPHi),this.pushWord(this.regEBP&this.maskData),BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiSILo,this.backTrack.btiMem1=this.backTrack.btiSIHi),this.pushWord(this.regESI&this.maskData),BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiDILo,this.backTrack.btiMem1=this.backTrack.btiDIHi),this.pushWord(this.regEDI&this.maskData),this.nStepCycles-=this.cycleCounts.nOpCyclesPushAll,this.opLSP=X86.ADDR_INVALID},X86.opPOPA=function(){this.opLSP=this.regLSP,this.regEDI=this.regEDI&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiDILo=this.backTrack.btiMem0,this.backTrack.btiDIHi=this.backTrack.btiMem1),this.regESI=this.regESI&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiSILo=this.backTrack.btiMem0,this.backTrack.btiSIHi=this.backTrack.btiMem1),this.regEBP=this.regEBP&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiBPLo=this.backTrack.btiMem0,this.backTrack.btiBPHi=this.backTrack.btiMem1),this.setSP(this.getSP()+this.sizeData),this.regEBX=this.regEBX&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiMem0,this.backTrack.btiBH=this.backTrack.btiMem1),this.regEDX=this.regEDX&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiMem0,this.backTrack.btiDH=this.backTrack.btiMem1),this.regECX=this.regECX&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiMem0,this.backTrack.btiCH=this.backTrack.btiMem1),this.regEAX=this.regEAX&~this.maskData|this.popWord(),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0,this.backTrack.btiAH=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesPopAll,this.opLSP=X86.ADDR_INVALID},X86.opBOUND=function(){this.decodeModRegWord.call(this,X86.fnBOUND)},X86.opARPL=function(){this.regCR0&X86.CR0.MSW.PE&&!(I386&&this.regPS&X86.PS.VM)?this.decodeModMemWord.call(this,X86.fnARPL):X86.opInvalid.call(this)},X86.opFS=function(){this.opFlags|=X86.OPFLAG.SEG|X86.OPFLAG.NOINTR,this.segData=this.segStack=this.segFS,this.nStepCycles-=this.cycleCounts.nOpCyclesPrefix},X86.opGS=function(){this.opFlags|=X86.OPFLAG.SEG|X86.OPFLAG.NOINTR,this.segData=this.segStack=this.segGS,this.nStepCycles-=this.cycleCounts.nOpCyclesPrefix},X86.opOS=function(){I386&&(this.opFlags|=X86.OPFLAG.DATASIZE,this.opPrefixes&X86.OPFLAG.DATASIZE||(this.sizeData^=6,this.maskData^=-65536,this.updateDataSize()),this.nStepCycles-=this.cycleCounts.nOpCyclesPrefix)},X86.opAS=function(){I386&&(this.opFlags|=X86.OPFLAG.ADDRSIZE,this.opPrefixes&X86.OPFLAG.ADDRSIZE||(this.sizeAddr^=6,this.maskAddr^=-65536,this.updateAddrSize()),this.nStepCycles-=this.cycleCounts.nOpCyclesPrefix)},X86.opPUSHn=function(){this.pushWord(this.getIPWord()),this.nStepCycles-=this.cycleCounts.nOpCyclesPushReg},X86.opIMULn=function(){this.decodeModRegWord.call(this,X86.fnIMULn)},X86.opPUSH8=function(){BACKTRACK&&(this.backTrack.btiMem1=0),this.pushWord(this.getIPDisp()),this.nStepCycles-=this.cycleCounts.nOpCyclesPushReg},X86.opIMUL8=function(){this.decodeModRegWord.call(this,X86.fnIMUL8)},X86.opINSb=function(){let V=1,R=0,U=this.maskAddr,l=5;if(this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,this.opPrefixes&X86.OPFLAG.REPEAT&&(l=4)),V--){let e=65535&this.regEDX;if(!this.checkIOPM(e,1,!0))return;let t=this.bus.checkPortInputNotify(e,1,this.regLIP-R-1);this.setSOByte(this.segES,this.regEDI&U,t),BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiIO),this.regEDI=this.regEDI&~U|this.regEDI+(this.regPS&X86.PS.DF?-1:1)&U,this.regECX=this.regECX&~U|this.regECX-R&U,this.nStepCycles-=l,V&&this.rewindIP()}},X86.opINSw=function(){let V=1,R=0,U=this.maskAddr,l=5;if(this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,this.opPrefixes&X86.OPFLAG.REPEAT&&(l=4)),V--){let e=65535&this.regEDX;if(!this.checkIOPM(e,this.sizeData,!0))return;let t=this.bus.checkPortInputNotify(e,this.sizeData,this.regLIP-R-1);BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiIO,this.backTrack.btiMem1=this.backTrack.btiIO),this.setSOWord(this.segES,this.regEDI&U,t),this.regEDI=this.regEDI&~U|this.regEDI+(this.regPS&X86.PS.DF?-this.sizeData:this.sizeData)&U,this.regECX=this.regECX&~U|this.regECX-R&U,this.nStepCycles-=l,V&&this.rewindIP()}},X86.opOUTSb=function(){let V=1,R=0,U=this.maskAddr,l=5;if(this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,this.opPrefixes&X86.OPFLAG.REPEAT&&(l=4)),V--){let e=65535&this.regEDX;if(!this.checkIOPM(e,1,!1))return;let t=this.getSOByte(this.segDS,this.regESI&U);BACKTRACK&&(this.backTrack.btiIO=this.backTrack.btiMem0),this.bus.checkPortOutputNotify(e,1,t,this.regLIP-R-1),this.regESI=this.regESI&~U|this.regESI+(this.regPS&X86.PS.DF?-1:1)&U,this.regECX=this.regECX&~U|this.regECX-R&U,this.nStepCycles-=l,V&&this.rewindIP()}},X86.opOUTSw=function(){let V=1,R=0,U=this.maskAddr,l=5;if(this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,this.opPrefixes&X86.OPFLAG.REPEAT&&(l=4)),V--){let e=this.getSOWord(this.segDS,this.regESI&U),t=65535&this.regEDX;if(!this.checkIOPM(t,this.sizeData,!1))return;BACKTRACK&&(this.backTrack.btiIO=this.backTrack.btiMem0,this.backTrack.btiIO=this.backTrack.btiMem1),this.bus.checkPortOutputNotify(t,this.sizeData,e,this.regLIP-R-1),this.regESI=this.regESI&~U|this.regESI+(this.regPS&X86.PS.DF?-this.sizeData:this.sizeData)&U,this.regECX=this.regECX&~U|this.regECX-R&U,this.nStepCycles-=l,V&&this.rewindIP()}},X86.opJO=function(){let V=this.getIPDisp();if(this.getOF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNO=function(){let V=this.getIPDisp();if(!this.getOF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJC=function(){let V=this.getIPDisp();if(this.getCF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNC=function(){let V=this.getIPDisp();if(!this.getCF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJZ=function(){let V=this.getIPDisp();if(this.getZF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNZ=function(){let V=this.getIPDisp();if(!this.getZF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJBE=function(){let V=this.getIPDisp();if(this.getCF()||this.getZF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNBE=function(){let V=this.getIPDisp();if(!this.getCF()&&!this.getZF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJS=function(){let V=this.getIPDisp();if(this.getSF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNS=function(){let V=this.getIPDisp();if(!this.getSF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJP=function(){let V=this.getIPDisp();if(this.getPF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNP=function(){let V=this.getIPDisp();if(!this.getPF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJL=function(){let V=this.getIPDisp();if(!this.getSF()!=!this.getOF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNL=function(){let V=this.getIPDisp();if(!this.getSF()==!this.getOF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJLE=function(){let V=this.getIPDisp();if(this.getZF()||!this.getSF()!=!this.getOF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNLE=function(){let V=this.getIPDisp();if(!this.getZF()&&!this.getSF()==!this.getOF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opGRP1b=function(){this.decodeModGrpByte.call(this,X86.aOpGrp1b,this.getIPByte),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?1:this.cycleCounts.nOpCyclesArithMID},X86.opGRP1w=function(){this.decodeModGrpWord.call(this,X86.aOpGrp1w,this.getIPWord),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?1:this.cycleCounts.nOpCyclesArithMID},X86.opGRP1sw=function(){this.decodeModGrpWord.call(this,X86.aOpGrp1w,this.getIPDisp),this.nStepCycles-=this.regEAWrite===X86.ADDR_INVALID?1:this.cycleCounts.nOpCyclesArithMID},X86.opTESTrb=function(){this.decodeModMemByte.call(this,X86.fnTESTb)},X86.opTESTrw=function(){this.decodeModMemWord.call(this,X86.fnTESTw)},X86.opXCHGrb=function(){this.decodeModRegByte.call(this,X86.fnXCHGrb)},X86.opXCHGrw=function(){this.decodeModRegWord.call(this,X86.fnXCHGrw)},X86.opMOVmb=function(){this.opFlags|=X86.OPFLAG.NOREAD,this.decodeModMemByte.call(this,X86.fnMOV)},X86.opMOVmw=function(){this.opFlags|=X86.OPFLAG.NOREAD,this.decodeModMemWord.call(this,X86.fnMOV)},X86.opMOVrb=function(){this.decodeModRegByte.call(this,X86.fnMOV)},X86.opMOVrw=function(){this.decodeModRegWord.call(this,X86.fnMOV)},X86.opMOVwsr=function(){this.opFlags|=X86.OPFLAG.NOREAD,this.decodeModMemWord.call(this,X86.fnMOVwsr)},X86.opLEA=function(){this.opFlags|=X86.OPFLAG.NOREAD,this.segData=this.segStack=this.segNULL,this.decodeModRegWord.call(this,X86.fnLEA)},X86.opMOVsrw=function(){let V;switch(this.decodeModRegWord.call(this,X86.fnMOVsrw),this.bModRM>>3&7){case 0:V=this.regEAX,this.regEAX=this.regXX,this.setES(V);break;case 1:V=this.regECX,this.regECX=this.regXX,this.setCS(V);break;case 2:V=this.regEDX,this.regEDX=this.regXX,this.setSS(V);break;case 3:V=this.regEBX,this.regEBX=this.regXX,this.setDS(V);break;case 4:V=this.getSP(),this.setSP(this.regXX),I386&&this.model>=X86.MODEL_80386?this.setFS(V):this.setES(V);break;case 5:V=this.regEBP,this.regEBP=this.regXX,I386&&this.model>=X86.MODEL_80386?this.setGS(V):this.setCS(V);break;case 6:V=this.regESI,this.regESI=this.regXX,this.setSS(V);break;case 7:V=this.regEDI,this.regEDI=this.regXX,this.setDS(V)}},X86.opPOPmw=function(){this.opFlags|=X86.OPFLAG.NOREAD,this.opLSP=this.regLSP,this.regXX=this.popWord(),this.decodeModGrpWord.call(this,X86.aOpGrpPOPw,X86.helpSRCxx),this.opLSP=X86.ADDR_INVALID},X86.opNOP=function(){this.nStepCycles-=3,I386&&this.opPrefixes&X86.OPFLAG.LOCK&&this.model>=X86.MODEL_80386&&X86.helpFault.call(this,X86.EXCEPTION.UD_FAULT,0)},X86.opXCHGCX=function(){let V=this.regEAX;this.regEAX=I386?this.regEAX&~this.maskData|this.regECX&this.maskData:this.regECX,this.regECX=I386?this.regECX&~this.maskData|V&this.maskData:V,BACKTRACK&&(V=this.backTrack.btiAL,this.backTrack.btiAL=this.backTrack.btiCL,this.backTrack.btiCL=V,V=this.backTrack.btiAH,this.backTrack.btiAH=this.backTrack.btiCH,this.backTrack.btiCH=V),this.nStepCycles-=3},X86.opXCHGDX=function(){let V=this.regEAX;this.regEAX=I386?this.regEAX&~this.maskData|this.regEDX&this.maskData:this.regEDX,this.regEDX=I386?this.regEDX&~this.maskData|V&this.maskData:V,BACKTRACK&&(V=this.backTrack.btiAL,this.backTrack.btiAL=this.backTrack.btiDL,this.backTrack.btiDL=V,V=this.backTrack.btiAH,this.backTrack.btiAH=this.backTrack.btiDH,this.backTrack.btiDH=V),this.nStepCycles-=3},X86.opXCHGBX=function(){let V=this.regEAX;this.regEAX=I386?this.regEAX&~this.maskData|this.regEBX&this.maskData:this.regEBX,this.regEBX=I386?this.regEBX&~this.maskData|V&this.maskData:V,BACKTRACK&&(V=this.backTrack.btiAL,this.backTrack.btiAL=this.backTrack.btiBL,this.backTrack.btiBL=V,V=this.backTrack.btiAH,this.backTrack.btiAH=this.backTrack.btiBH,this.backTrack.btiBH=V),this.nStepCycles-=3},X86.opXCHGSP=function(){let V=this.regEAX,R=this.getSP();this.regEAX=I386?this.regEAX&~this.maskData|R&this.maskData:R,this.setSP(I386?R&~this.maskData|V&this.maskData:V),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiAH=0),this.nStepCycles-=3},X86.opXCHGBP=function(){let V=this.regEAX;this.regEAX=I386?this.regEAX&~this.maskData|this.regEBP&this.maskData:this.regEBP,this.regEBP=I386?this.regEBP&~this.maskData|V&this.maskData:V,BACKTRACK&&(V=this.backTrack.btiAL,this.backTrack.btiAL=this.backTrack.btiBPLo,this.backTrack.btiBPLo=V,V=this.backTrack.btiAH,this.backTrack.btiAH=this.backTrack.btiBPHi,this.backTrack.btiBPHi=V),this.nStepCycles-=3},X86.opXCHGSI=function(){let V=this.regEAX;this.regEAX=I386?this.regEAX&~this.maskData|this.regESI&this.maskData:this.regESI,this.regESI=I386?this.regESI&~this.maskData|V&this.maskData:V,BACKTRACK&&(V=this.backTrack.btiAL,this.backTrack.btiAL=this.backTrack.btiSILo,this.backTrack.btiSILo=V,V=this.backTrack.btiAH,this.backTrack.btiAH=this.backTrack.btiSIHi,this.backTrack.btiSIHi=V),this.nStepCycles-=3},X86.opXCHGDI=function(){let V=this.regEAX;this.regEAX=I386?this.regEAX&~this.maskData|this.regEDI&this.maskData:this.regEDI,this.regEDI=I386?this.regEDI&~this.maskData|V&this.maskData:V,BACKTRACK&&(V=this.backTrack.btiAL,this.backTrack.btiAL=this.backTrack.btiDILo,this.backTrack.btiDILo=V,V=this.backTrack.btiAH,this.backTrack.btiAH=this.backTrack.btiDIHi,this.backTrack.btiDIHi=V),this.nStepCycles-=3},X86.opCBW=function(){2==this.sizeData?(this.regEAX=-65536&this.regEAX|this.regEAX<<24>>24&65535,BACKTRACK&&(this.backTrack.btiAH=this.backTrack.btiAL)):this.regEAX=this.regEAX<<16>>16,this.nStepCycles-=2},X86.opCWD=function(){2==this.sizeData?(this.regEDX=-65536&this.regEDX|(32768&this.regEAX?65535:0),BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiDH=this.backTrack.btiAH)):this.regEDX=-2147483648&this.regEAX?-1:0,this.nStepCycles-=this.cycleCounts.nOpCyclesCWD},X86.opCALLF=function(){X86.helpCALLF.call(this,this.getIPWord(),this.getIPShort()),this.nStepCycles-=this.cycleCounts.nOpCyclesCallF},X86.opWAIT=function(){this.fpu&&this.fpu.opWAIT()||(this.nStepCycles-=3)},X86.opPUSHF=function(){let V=this.getPS();if(I386){if(V&X86.PS.VM&&this.nIOPL<3)return DEBUG&&this.printf(MESSAGE.ADDR,"PUSHF in v86-mode (IOPL < 3)\n"),void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);V&=~(X86.PS.VM|X86.PS.RF)}this.pushWord(V),this.nStepCycles-=this.cycleCounts.nOpCyclesPushReg},X86.opPOPF=function(){if(I386&&this.regPS&X86.PS.VM&&this.nIOPL<3)return DEBUG&&this.printf(MESSAGE.ADDR,"POPF in v86-mode (IOPL < 3)\n"),void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);let V=this.popWord();I386&&(V=65535&V|-65536&this.regPS),this.setPS(V),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg},X86.opSAHF=function(){let V=this.regEAX>>8&255;V&X86.PS.CF?this.setCF():this.clearCF(),V&X86.PS.PF?this.setPF():this.clearPF(),V&X86.PS.AF?this.setAF():this.clearAF(),V&X86.PS.ZF?this.setZF():this.clearZF(),V&X86.PS.SF?this.setSF():this.clearSF(),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opLAHF=function(){this.regEAX=-65281&this.regEAX|(255&this.getPS())<<8,this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVALm=function(){this.regEAX=-256&this.regEAX|this.getSOByte(this.segData,this.getIPAddr()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0),this.nStepCycles-=this.cycleCounts.nOpCyclesMovAM},X86.opMOVAXm=function(){this.regEAX=this.regEAX&~this.maskData|this.getSOWord(this.segData,this.getIPAddr()),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0,this.backTrack.btiAH=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesMovAM},X86.opMOVmAL=function(){BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiAL),this.setSOByte(this.segData,this.getIPAddr(),this.regEAX),this.nStepCycles-=this.cycleCounts.nOpCyclesMovMA},X86.opMOVmAX=function(){BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiAL,this.backTrack.btiMem1=this.backTrack.btiAH),this.setSOWord(this.segData,this.getIPAddr(),this.regEAX),this.nStepCycles-=this.cycleCounts.nOpCyclesMovMA},X86.opMOVSb=function(){let V=1,R=0,U=this.maskAddr,l=this.cycleCounts.nOpCyclesMovS;if(this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,l=this.cycleCounts.nOpCyclesMovSrn,this.opPrefixes&X86.OPFLAG.REPEAT||(this.nStepCycles-=this.cycleCounts.nOpCyclesMovSr0)),V--){this.setSOByte(this.segES,this.regEDI&U,this.getSOByte(this.segData,this.regESI&U));let e=this.regPS&X86.PS.DF?-1:1;this.regESI=this.regESI&~U|this.regESI+e&U,this.regEDI=this.regEDI&~U|this.regEDI+e&U,this.nStepCycles-=l,this.regECX=this.regECX&~U|this.regECX-R&U,V&&this.rewindIP(!0)}},X86.opMOVSw=function(){let V=1,R=0,U=this.maskAddr,l=this.cycleCounts.nOpCyclesMovS;if(this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,l=this.cycleCounts.nOpCyclesMovSrn,this.opPrefixes&X86.OPFLAG.REPEAT||(this.nStepCycles-=this.cycleCounts.nOpCyclesMovSr0)),V--){this.setSOWord(this.segES,this.regEDI&U,this.getSOWord(this.segData,this.regESI&U));let e=this.regPS&X86.PS.DF?-this.sizeData:this.sizeData;this.regESI=this.regESI&~U|this.regESI+e&U,this.regEDI=this.regEDI&~U|this.regEDI+e&U,this.nStepCycles-=l,this.regECX=this.regECX&~U|this.regECX-R&U,V&&this.rewindIP(!0)}},X86.opCMPSb=function(){let V=1,R=0,U=this.maskAddr,l=this.cycleCounts.nOpCyclesCmpS;if(this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,l=this.cycleCounts.nOpCyclesCmpSrn,this.opPrefixes&X86.OPFLAG.REPEAT||(this.nStepCycles-=this.cycleCounts.nOpCyclesCmpSr0)),V--){let e=this.getEAByte(this.segData,this.regESI),t=this.getEAByte(this.segES,this.regEDI);this.regEAWrite=this.regEA,X86.fnCMPb.call(this,e,t);let T=this.regPS&X86.PS.DF?-1:1;this.regESI=this.regESI&~U|this.regESI+T&U,this.regEDI=this.regEDI&~U|this.regEDI+T&U,this.regECX=this.regECX&~U|this.regECX-R&U,this.nStepCycles-=l-this.cycleCounts.nOpCyclesArithRM,V&&this.getZF()==(this.opPrefixes&X86.OPFLAG.REPZ)&&this.rewindIP(!0)}},X86.opCMPSw=function(){let V=1,R=0,U=this.maskAddr,l=this.cycleCounts.nOpCyclesCmpS;if(this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,l=this.cycleCounts.nOpCyclesCmpSrn,this.opPrefixes&X86.OPFLAG.REPEAT||(this.nStepCycles-=this.cycleCounts.nOpCyclesCmpSr0)),V--){let e=this.getEAWord(this.segData,this.regESI&U),t=this.getEAWord(this.segES,this.regEDI&U);this.regEAWrite=this.regEA,X86.fnCMPw.call(this,e,t);let T=this.regPS&X86.PS.DF?-this.sizeData:this.sizeData;this.regESI=this.regESI&~U|this.regESI+T&U,this.regEDI=this.regEDI&~U|this.regEDI+T&U,this.regECX=this.regECX&~U|this.regECX-R&U,this.nStepCycles-=l-this.cycleCounts.nOpCyclesArithRM,V&&this.getZF()==(this.opPrefixes&X86.OPFLAG.REPZ)&&this.rewindIP(!0)}},X86.opTESTALb=function(){this.setLogicResult(this.regEAX&this.getIPByte(),X86.RESULT.BYTE),this.nStepCycles-=this.cycleCounts.nOpCyclesAAA},X86.opTESTAX=function(){this.setLogicResult(this.regEAX&this.getIPWord(),this.typeData),this.nStepCycles-=this.cycleCounts.nOpCyclesAAA},X86.opSTOSb=function(){let V=1,R=0,U=this.maskAddr,l=this.cycleCounts.nOpCyclesStoS;this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,l=this.cycleCounts.nOpCyclesStoSrn,this.opPrefixes&X86.OPFLAG.REPEAT||(this.nStepCycles-=this.cycleCounts.nOpCyclesStoSr0)),V--&&(this.setSOByte(this.segES,this.regEDI&U,this.regEAX),BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiAL),this.regECX=this.regECX&~U|this.regECX-R&U,this.stepping>=X86.STEPPING_80386_A0&&this.stepping<=X86.STEPPING_80386_B2&&!(this.opPrefixes&X86.OPFLAG.ADDRSIZE)!=(this.getByte(this.regLIP)!=X86.OPCODE.AS)&&(U^=-65536),this.regEDI=this.regEDI&~U|this.regEDI+(this.regPS&X86.PS.DF?-1:1)&U,this.nStepCycles-=l,V&&this.rewindIP())},X86.opSTOSw=function(){let V=1,R=0,U=this.maskAddr,l=this.cycleCounts.nOpCyclesStoS;this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,l=this.cycleCounts.nOpCyclesStoSrn,this.opPrefixes&X86.OPFLAG.REPEAT||(this.nStepCycles-=this.cycleCounts.nOpCyclesStoSr0)),V--&&(this.setSOWord(this.segES,this.regEDI&U,this.regEAX),BACKTRACK&&(this.backTrack.btiMem0=this.backTrack.btiAL,this.backTrack.btiMem1=this.backTrack.btiAH),this.regEDI=this.regEDI&~U|this.regEDI+(this.regPS&X86.PS.DF?-this.sizeData:this.sizeData)&U,this.regECX=this.regECX&~U|this.regECX-R&U,this.nStepCycles-=l,V&&this.rewindIP())},X86.opLODSb=function(){let V=1,R=0,U=this.maskAddr,l=this.cycleCounts.nOpCyclesLodS;if(this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,l=this.cycleCounts.nOpCyclesLodSrn,this.opPrefixes&X86.OPFLAG.REPEAT||(this.nStepCycles-=this.cycleCounts.nOpCyclesLodSr0)),V--){let e=this.getSOByte(this.segData,this.regESI&U);this.regEAX=-256&this.regEAX|e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0),this.regESI=this.regESI&~U|this.regESI+(this.regPS&X86.PS.DF?-1:1)&U,this.regECX=this.regECX&~U|this.regECX-R&U,this.nStepCycles-=l,V&&this.rewindIP(!0)}},X86.opLODSw=function(){let V=1,R=0,U=this.maskAddr,l=this.cycleCounts.nOpCyclesLodS;if(this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,l=this.cycleCounts.nOpCyclesLodSrn,this.opPrefixes&X86.OPFLAG.REPEAT||(this.nStepCycles-=this.cycleCounts.nOpCyclesLodSr0)),V--){let e=this.getSOWord(this.segData,this.regESI&U);this.regEAX=this.regEAX&~this.maskData|e,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0,this.backTrack.btiAH=this.backTrack.btiMem1),this.regESI=this.regESI&~U|this.regESI+(this.regPS&X86.PS.DF?-this.sizeData:this.sizeData)&U,this.regECX=this.regECX&~U|this.regECX-R&U,this.nStepCycles-=l,V&&this.rewindIP(!0)}},X86.opSCASb=function(){let V=1,R=0,U=this.maskAddr,l=this.cycleCounts.nOpCyclesScaS;if(this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,l=this.cycleCounts.nOpCyclesScaSrn,this.opPrefixes&X86.OPFLAG.REPEAT||(this.nStepCycles-=this.cycleCounts.nOpCyclesScaSr0)),V--){let e=255&this.regEAX,t=this.getEAByte(this.segES,this.regEDI);this.regEAWrite=this.regEA,X86.fnCMPb.call(this,e,t),this.regEDI=this.regEDI&~U|this.regEDI+(this.regPS&X86.PS.DF?-1:1)&U,this.regECX=this.regECX&~U|this.regECX-R&U,this.nStepCycles-=l-this.cycleCounts.nOpCyclesArithRM,V&&this.getZF()==(this.opPrefixes&X86.OPFLAG.REPZ)&&this.rewindIP()}},X86.opSCASw=function(){let V=1,R=0,U=this.maskAddr,l=this.cycleCounts.nOpCyclesScaS;if(this.opPrefixes&(X86.OPFLAG.REPZ|X86.OPFLAG.REPNZ)&&(V=this.regECX&U,R=1,l=this.cycleCounts.nOpCyclesScaSrn,this.opPrefixes&X86.OPFLAG.REPEAT||(this.nStepCycles-=this.cycleCounts.nOpCyclesScaSr0)),V--){let e=this.regEAX&this.maskData,t=this.getEAWord(this.segES,this.regEDI&U);this.regEAWrite=this.regEA,X86.fnCMPw.call(this,e,t),this.regEDI=this.regEDI&~U|this.regEDI+(this.regPS&X86.PS.DF?-this.sizeData:this.sizeData)&U,this.regECX=this.regECX&~U|this.regECX-R&U,this.nStepCycles-=l-this.cycleCounts.nOpCyclesArithRM,V&&this.getZF()==(this.opPrefixes&X86.OPFLAG.REPZ)&&this.rewindIP()}},X86.opMOVALb=function(){this.regEAX=-256&this.regEAX|this.getIPByte(),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVCLb=function(){this.regECX=-256&this.regECX|this.getIPByte(),BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiMem0),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVDLb=function(){this.regEDX=-256&this.regEDX|this.getIPByte(),BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiMem0),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVBLb=function(){this.regEBX=-256&this.regEBX|this.getIPByte(),BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiMem0),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVAHb=function(){this.regEAX=-65281&this.regEAX|this.getIPByte()<<8,BACKTRACK&&(this.backTrack.btiAH=this.backTrack.btiMem0),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVCHb=function(){this.regECX=-65281&this.regECX|this.getIPByte()<<8,BACKTRACK&&(this.backTrack.btiCH=this.backTrack.btiMem0),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVDHb=function(){this.regEDX=-65281&this.regEDX|this.getIPByte()<<8,BACKTRACK&&(this.backTrack.btiDH=this.backTrack.btiMem0),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVBHb=function(){this.regEBX=-65281&this.regEBX|this.getIPByte()<<8,BACKTRACK&&(this.backTrack.btiBH=this.backTrack.btiMem0),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVAX=function(){this.regEAX=this.regEAX&~this.maskData|this.getIPWord(),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiMem0,this.backTrack.btiAH=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVCX=function(){this.regECX=this.regECX&~this.maskData|this.getIPWord(),BACKTRACK&&(this.backTrack.btiCL=this.backTrack.btiMem0,this.backTrack.btiCH=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVDX=function(){this.regEDX=this.regEDX&~this.maskData|this.getIPWord(),BACKTRACK&&(this.backTrack.btiDL=this.backTrack.btiMem0,this.backTrack.btiDH=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVBX=function(){this.regEBX=this.regEBX&~this.maskData|this.getIPWord(),BACKTRACK&&(this.backTrack.btiBL=this.backTrack.btiMem0,this.backTrack.btiBH=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVSP=function(){this.setSP(this.getSP()&~this.maskData|this.getIPWord()),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVBP=function(){this.regEBP=this.regEBP&~this.maskData|this.getIPWord(),BACKTRACK&&(this.backTrack.btiBPLo=this.backTrack.btiMem0,this.backTrack.btiBPHi=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVSI=function(){this.regESI=this.regESI&~this.maskData|this.getIPWord(),BACKTRACK&&(this.backTrack.btiSILo=this.backTrack.btiMem0,this.backTrack.btiSIHi=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opMOVDI=function(){this.regEDI=this.regEDI&~this.maskData|this.getIPWord(),BACKTRACK&&(this.backTrack.btiDILo=this.backTrack.btiMem0,this.backTrack.btiDIHi=this.backTrack.btiMem1),this.nStepCycles-=this.cycleCounts.nOpCyclesLAHF},X86.opGRP2bn=function(){this.decodeModGrpByte.call(this,X86.aOpGrp2b,X86.helpSRCByte)},X86.opGRP2wn=function(){this.decodeModGrpWord.call(this,2==this.sizeData?X86.aOpGrp2w:X86.aOpGrp2d,X86.helpSRCByte)},X86.opRETn=function(){let V=this.getIPShort(),R=this.popWord();this.setIP(R),V&&this.setSP(this.getSP()+V),this.nStepCycles-=this.cycleCounts.nOpCyclesRetn},X86.opRET=function(){let V=this.popWord();this.setIP(V),this.nStepCycles-=this.cycleCounts.nOpCyclesRet},X86.opLES=function(){this.decodeModRegWord.call(this,X86.fnLES)},X86.opLDS=function(){this.decodeModRegWord.call(this,X86.fnLDS)},X86.opMOVb=function(){this.opFlags|=X86.OPFLAG.NOREAD,this.decodeModGrpByte.call(this,X86.aOpGrpMOVn,this.getIPByte)},X86.opMOVw=function(){this.opFlags|=X86.OPFLAG.NOREAD,this.decodeModGrpWord.call(this,X86.aOpGrpMOVn,this.getIPWord)},X86.opENTER=function(){this.opLSP=this.regLSP;let V=this.getIPShort(),R=31&this.getIPByte();this.nStepCycles-=11,this.pushWord(this.regEBP);let U=this.getSP()&this.maskData;if(R>0){for(this.nStepCycles-=(R<<2)+(R>1?1:0);--R;)this.regEBP=this.regEBP&~this.maskData|this.regEBP-this.sizeData&this.maskData,this.pushWord(this.getSOWord(this.segSS,this.regEBP&this.maskData));this.pushWord(U)}this.regEBP=this.regEBP&~this.maskData|U,this.setSP(this.getSP()&~this.segSS.maskAddr|this.getSP()-V&this.segSS.maskAddr),this.opLSP=X86.ADDR_INVALID},X86.opLEAVE=function(){this.opLSP=this.regLSP,this.setSP(this.getSP()&~this.segSS.maskAddr|this.regEBP&this.segSS.maskAddr),this.regEBP=this.regEBP&~this.maskData|this.popWord()&this.maskData,this.nStepCycles-=5,this.opLSP=X86.ADDR_INVALID},X86.opRETFn=function(){X86.helpRETF.call(this,this.getIPShort()),this.nStepCycles-=this.cycleCounts.nOpCyclesRetFn},X86.opRETF=function(){X86.helpRETF.call(this,0),this.nStepCycles-=this.cycleCounts.nOpCyclesRetF},X86.opINT3=function(){if(I386&&this.regPS&X86.PS.VM&&this.nIOPL<3)return DEBUG&&this.printf(MESSAGE.ADDR,"INT 0x03 in v86-mode (IOPL < 3)\n"),void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);X86.helpTrap.call(this,X86.EXCEPTION.BP_TRAP,1,this.cycleCounts.nOpCyclesInt3D)},X86.opINTn=function(){let V=this.getIPByte();if(I386&&this.regPS&X86.PS.VM&&this.nIOPL<3)return DEBUG&&this.printf(MESSAGE.ADDR,"INT %#04x in v86-mode (IOPL < 3)\n",V),void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);this.checkIntNotify(V)?X86.helpTrap.call(this,V,2):this.nStepCycles--},X86.opINTO=function(){if(this.getOF())return I386&&this.regPS&X86.PS.VM&&this.nIOPL<3?(DEBUG&&this.printf(MESSAGE.ADDR,"INTO in v86-mode (IOPL < 3)\n"),void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0)):void X86.helpTrap.call(this,X86.EXCEPTION.OF_TRAP,1,this.cycleCounts.nOpCyclesIntOD);this.nStepCycles-=this.cycleCounts.nOpCyclesIntOFall},X86.opIRET=function(){if(I386&&this.regPS&X86.PS.VM&&this.nIOPL<3)return DEBUG&&this.printf(MESSAGE.ADDR,"IRET in v86-mode (IOPL < 3)\n"),void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);this.opFlags|=X86.OPFLAG.IRET,X86.helpIRET.call(this)},X86.opGRP2b1=function(){this.decodeModGrpByte.call(this,X86.aOpGrp2b,X86.helpSRC1)},X86.opGRP2w1=function(){this.decodeModGrpWord.call(this,2==this.sizeData?X86.aOpGrp2w:X86.aOpGrp2d,X86.helpSRC1)},X86.opGRP2bCL=function(){this.decodeModGrpByte.call(this,X86.aOpGrp2b,X86.helpSRCCL)},X86.opGRP2wCL=function(){this.decodeModGrpWord.call(this,2==this.sizeData?X86.aOpGrp2w:X86.aOpGrp2d,X86.helpSRCCL)},X86.opAAM=function(){let V=this.getIPByte();if(!V)return void X86.helpDIVOverflow.call(this);let R=255&this.regEAX;this.regEAX=-65536&this.regEAX|R/V<<8|R%V,this.setLogicResult(this.regEAX,X86.RESULT.BYTE),this.nStepCycles-=this.cycleCounts.nOpCyclesAAM},X86.opAAD=function(){let V=255&this.regEAX,R=(this.regEAX>>8&255)*this.getIPByte()|0,U=V+R|0;this.regEAX=-65536&this.regEAX|255&U,this.setArithResult(V,R,U,X86.RESULT.BYTE|X86.RESULT.ALL),this.nStepCycles-=this.cycleCounts.nOpCyclesAAD},X86.opSALC=function(){this.regEAX=-256&this.regEAX|(this.getCF()?255:0),this.nStepCycles-=2},X86.opXLAT=function(){this.regEAX=-256&this.regEAX|this.getEAByte(this.segData,this.regEBX+(255&this.regEAX)),this.nStepCycles-=this.cycleCounts.nOpCyclesXLAT},X86.opESC=function(V){this.bOpcode=V,this.decodeModRegWord.call(this,X86.fnESC)},X86.opESC0=function(){X86.opESC.call(this,X86.OPCODE.ESC0)},X86.opESC1=function(){X86.opESC.call(this,X86.OPCODE.ESC1)},X86.opESC2=function(){X86.opESC.call(this,X86.OPCODE.ESC2)},X86.opESC3=function(){X86.opESC.call(this,X86.OPCODE.ESC3)},X86.opESC4=function(){X86.opESC.call(this,X86.OPCODE.ESC4)},X86.opESC5=function(){X86.opESC.call(this,X86.OPCODE.ESC5)},X86.opESC6=function(){X86.opESC.call(this,X86.OPCODE.ESC6)},X86.opESC7=function(){X86.opESC.call(this,X86.OPCODE.ESC7)},X86.opLOOPNZ=function(){let V=this.getIPDisp(),R=this.regECX-1&this.maskAddr;if(this.regECX=this.regECX&~this.maskAddr|R,R&&!this.getZF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesLoopNZ);this.nStepCycles-=this.cycleCounts.nOpCyclesLoopFall},X86.opLOOPZ=function(){let V=this.getIPDisp(),R=this.regECX-1&this.maskAddr;if(this.regECX=this.regECX&~this.maskAddr|R,R&&this.getZF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesLoopZ);this.nStepCycles-=this.cycleCounts.nOpCyclesLoopZFall},X86.opLOOP=function(){let V=this.getIPDisp(),R=this.regECX-1&this.maskAddr;if(this.regECX=this.regECX&~this.maskAddr|R,R)return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesLoop);this.nStepCycles-=this.cycleCounts.nOpCyclesLoopFall},X86.opJCXZ=function(){let V=this.getIPDisp();if(!(this.regECX&this.maskAddr))return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesLoopZ);this.nStepCycles-=this.cycleCounts.nOpCyclesLoopZFall},X86.opINb=function(){let V=this.getIPByte();this.checkIOPM(V,1,!0)&&(this.regEAX=-256&this.regEAX|255&this.bus.checkPortInputNotify(V,1,this.regLIP-2),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiIO),this.nStepCycles-=this.cycleCounts.nOpCyclesInP)},X86.opINw=function(){let V=this.getIPByte();this.checkIOPM(V,this.sizeData,!0)&&(this.regEAX=this.regEAX&~this.maskData|this.bus.checkPortInputNotify(V,this.sizeData,this.regLIP-2)&this.maskData,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiIO,this.backTrack.btiAH=this.backTrack.btiIO),this.nStepCycles-=this.cycleCounts.nOpCyclesInP)},X86.opOUTb=function(){let V=this.getIPByte();this.checkIOPM(V,1,!1)&&(this.bus.checkPortOutputNotify(V,1,255&this.regEAX,this.regLIP-2),this.nStepCycles-=this.cycleCounts.nOpCyclesOutP)},X86.opOUTw=function(){let V=this.getIPByte();this.checkIOPM(V,this.sizeData,!1)&&(this.bus.checkPortOutputNotify(V,this.sizeData,this.regEAX&this.maskData,this.regLIP-2),this.nStepCycles-=this.cycleCounts.nOpCyclesOutP)},X86.opCALL=function(){let V=this.getIPWord(),R=this.getIP(),U=R+V;this.pushWord(R),this.setIP(U),this.nStepCycles-=this.cycleCounts.nOpCyclesCall},X86.opJMP=function(){let V=this.getIPWord();this.setIP(this.getIP()+V),this.nStepCycles-=this.cycleCounts.nOpCyclesJmp},X86.opJMPF=function(){this.setCSIP(this.getIPWord(),this.getIPShort()),this.nStepCycles-=this.cycleCounts.nOpCyclesJmpF},X86.opJMPs=function(){let V=this.getIPDisp();this.setIP(this.getIP()+V),this.nStepCycles-=this.cycleCounts.nOpCyclesJmp},X86.opINDXb=function(){let V=65535&this.regEDX;this.checkIOPM(V,1,!0)&&(this.regEAX=-256&this.regEAX|255&this.bus.checkPortInputNotify(V,1,this.regLIP-1),BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiIO),this.nStepCycles-=this.cycleCounts.nOpCyclesInDX)},X86.opINDXw=function(){let V=65535&this.regEDX;this.checkIOPM(V,this.sizeData,!0)&&(this.regEAX=this.regEAX&~this.maskData|this.bus.checkPortInputNotify(V,this.sizeData,this.regLIP-1)&this.maskData,BACKTRACK&&(this.backTrack.btiAL=this.backTrack.btiIO,this.backTrack.btiAH=this.backTrack.btiIO),this.nStepCycles-=this.cycleCounts.nOpCyclesInDX)},X86.opOUTDXb=function(){let V=65535&this.regEDX;this.checkIOPM(V,1,!1)&&(BACKTRACK&&(this.backTrack.btiIO=this.backTrack.btiAL),this.bus.checkPortOutputNotify(V,1,255&this.regEAX,this.regLIP-1),this.nStepCycles-=this.cycleCounts.nOpCyclesOutDX)},X86.opOUTDXw=function(){let V=65535&this.regEDX;this.checkIOPM(V,2,!1)&&(BACKTRACK&&(this.backTrack.btiIO=this.backTrack.btiAL,this.backTrack.btiIO=this.backTrack.btiAH),this.bus.checkPortOutputNotify(V,this.sizeData,this.regEAX&this.maskData,this.regLIP-1),this.nStepCycles-=this.cycleCounts.nOpCyclesOutDX)},X86.opLOCK=function(){this.opFlags|=X86.OPFLAG.LOCK|X86.OPFLAG.NOINTR,this.nStepCycles-=this.cycleCounts.nOpCyclesPrefix},X86.opINT1=function(){X86.helpTrap.call(this,X86.EXCEPTION.DB_EXC,1,this.cycleCounts.nOpCyclesInt3D)},X86.opREPNZ=function(){this.opFlags|=X86.OPFLAG.REPNZ|X86.OPFLAG.NOINTR,this.nStepCycles-=this.cycleCounts.nOpCyclesPrefix},X86.opREPZ=function(){this.opFlags|=X86.OPFLAG.REPZ|X86.OPFLAG.NOINTR,this.nStepCycles-=this.cycleCounts.nOpCyclesPrefix},X86.opHLT=function(){if(I386&&this.regPS&X86.PS.VM)X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);else{if(this.intFlags|=X86.INTFLAG.HALT,this.nStepCycles-=2,DEBUGGER&&this.dbg&&this.messageEnabled(MESSAGE.CPU+MESSAGE.HALT))return this.resetIP(),void this.dbg.stopCPU();this.getIF()||(DEBUGGER&&this.dbg&&this.resetIP(),this.stopCPU())}},X86.opCMC=function(){this.getCF()?this.clearCF():this.setCF(),this.nStepCycles-=2},X86.opGRP3b=function(){this.fMDSet=!1,this.decodeModGrpByte.call(this,X86.aOpGrp3b,X86.helpSRCNone),this.fMDSet&&(this.regEAX=this.regEAX&~this.maskData|this.regMDLo&this.maskData)},X86.opGRP3w=function(){this.fMDSet=!1,this.decodeModGrpWord.call(this,X86.aOpGrp3w,X86.helpSRCNone),this.fMDSet&&(this.regEAX=this.regEAX&~this.maskData|this.regMDLo&this.maskData,this.regEDX=this.regEDX&~this.maskData|this.regMDHi&this.maskData)},X86.opCLC=function(){this.clearCF(),this.nStepCycles-=2},X86.opSTC=function(){this.setCF(),this.nStepCycles-=2},X86.opCLI=function(){if(this.nCPL>this.nIOPL)return DEBUG&&this.regPS&X86.PS.VM&&this.printf(MESSAGE.ADDR,"CLI in v86-mode (IOPL < 3)\n"),void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);this.clearIF(),this.nStepCycles-=this.cycleCounts.nOpCyclesCLI},X86.opSTI=function(){if(this.nCPL>this.nIOPL)return DEBUG&&this.regPS&X86.PS.VM&&this.printf(MESSAGE.ADDR,"STI in v86-mode (IOPL < 3)\n"),void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);this.setIF(),this.opFlags|=X86.OPFLAG.NOINTR,this.nStepCycles-=2},X86.opCLD=function(){this.clearDF(),this.nStepCycles-=2},X86.opSTD=function(){this.setDF(),this.nStepCycles-=2},X86.opGRP4b=function(){this.decodeModGrpByte.call(this,X86.aOpGrp4b,X86.helpSRCNone)},X86.opGRP4w=function(){this.decodeModGrpWord.call(this,X86.aOpGrp4w,X86.helpSRCNone)},X86.opInvalid=function(){X86.helpFault.call(this,X86.EXCEPTION.UD_FAULT)},X86.opUndefined=function(){this.setIP(this.opLIP-this.segCS.base),this.setError("Undefined opcode "+StrLib.toHexByte(this.getByte(this.regLIP))+" at "+StrLib.toHexLong(this.regLIP)),this.stopCPU()},X86.opTBD=function(){this.setIP(this.opLIP-this.segCS.base),this.printf(MESSAGE.NONE,"unimplemented 80386 opcode\n"),this.stopCPU()},X86.aOps=[X86.opADDmb,X86.opADDmw,X86.opADDrb,X86.opADDrw,X86.opADDALb,X86.opADDAX,X86.opPUSHES,X86.opPOPES,X86.opORmb,X86.opORmw,X86.opORrb,X86.opORrw,X86.opORALb,X86.opORAX,X86.opPUSHCS,X86.opPOPCS,X86.opADCmb,X86.opADCmw,X86.opADCrb,X86.opADCrw,X86.opADCALb,X86.opADCAX,X86.opPUSHSS,X86.opPOPSS,X86.opSBBmb,X86.opSBBmw,X86.opSBBrb,X86.opSBBrw,X86.opSBBALb,X86.opSBBAX,X86.opPUSHDS,X86.opPOPDS,X86.opANDmb,X86.opANDmw,X86.opANDrb,X86.opANDrw,X86.opANDAL,X86.opANDAX,X86.opES,X86.opDAA,X86.opSUBmb,X86.opSUBmw,X86.opSUBrb,X86.opSUBrw,X86.opSUBALb,X86.opSUBAX,X86.opCS,X86.opDAS,X86.opXORmb,X86.opXORmw,X86.opXORrb,X86.opXORrw,X86.opXORALb,X86.opXORAX,X86.opSS,X86.opAAA,X86.opCMPmb,X86.opCMPmw,X86.opCMPrb,X86.opCMPrw,X86.opCMPALb,X86.opCMPAX,X86.opDS,X86.opAAS,X86.opINCAX,X86.opINCCX,X86.opINCDX,X86.opINCBX,X86.opINCSP,X86.opINCBP,X86.opINCSI,X86.opINCDI,X86.opDECAX,X86.opDECCX,X86.opDECDX,X86.opDECBX,X86.opDECSP,X86.opDECBP,X86.opDECSI,X86.opDECDI,X86.opPUSHAX,X86.opPUSHCX,X86.opPUSHDX,X86.opPUSHBX,X86.opPUSHSP_8086,X86.opPUSHBP,X86.opPUSHSI,X86.opPUSHDI,X86.opPOPAX,X86.opPOPCX,X86.opPOPDX,X86.opPOPBX,X86.opPOPSP,X86.opPOPBP,X86.opPOPSI,X86.opPOPDI,X86.opJO,X86.opJNO,X86.opJC,X86.opJNC,X86.opJZ,X86.opJNZ,X86.opJBE,X86.opJNBE,X86.opJS,X86.opJNS,X86.opJP,X86.opJNP,X86.opJL,X86.opJNL,X86.opJLE,X86.opJNLE,X86.opJO,X86.opJNO,X86.opJC,X86.opJNC,X86.opJZ,X86.opJNZ,X86.opJBE,X86.opJNBE,X86.opJS,X86.opJNS,X86.opJP,X86.opJNP,X86.opJL,X86.opJNL,X86.opJLE,X86.opJNLE,X86.opGRP1b,X86.opGRP1w,X86.opGRP1b,X86.opGRP1sw,X86.opTESTrb,X86.opTESTrw,X86.opXCHGrb,X86.opXCHGrw,X86.opMOVmb,X86.opMOVmw,X86.opMOVrb,X86.opMOVrw,X86.opMOVwsr,X86.opLEA,X86.opMOVsrw,X86.opPOPmw,X86.opNOP,X86.opXCHGCX,X86.opXCHGDX,X86.opXCHGBX,X86.opXCHGSP,X86.opXCHGBP,X86.opXCHGSI,X86.opXCHGDI,X86.opCBW,X86.opCWD,X86.opCALLF,X86.opWAIT,X86.opPUSHF,X86.opPOPF,X86.opSAHF,X86.opLAHF,X86.opMOVALm,X86.opMOVAXm,X86.opMOVmAL,X86.opMOVmAX,X86.opMOVSb,X86.opMOVSw,X86.opCMPSb,X86.opCMPSw,X86.opTESTALb,X86.opTESTAX,X86.opSTOSb,X86.opSTOSw,X86.opLODSb,X86.opLODSw,X86.opSCASb,X86.opSCASw,X86.opMOVALb,X86.opMOVCLb,X86.opMOVDLb,X86.opMOVBLb,X86.opMOVAHb,X86.opMOVCHb,X86.opMOVDHb,X86.opMOVBHb,X86.opMOVAX,X86.opMOVCX,X86.opMOVDX,X86.opMOVBX,X86.opMOVSP,X86.opMOVBP,X86.opMOVSI,X86.opMOVDI,X86.opRETn,X86.opRET,X86.opRETn,X86.opRET,X86.opLES,X86.opLDS,X86.opMOVb,X86.opMOVw,X86.opRETFn,X86.opRETF,X86.opRETFn,X86.opRETF,X86.opINT3,X86.opINTn,X86.opINTO,X86.opIRET,X86.opGRP2b1,X86.opGRP2w1,X86.opGRP2bCL,X86.opGRP2wCL,X86.opAAM,X86.opAAD,X86.opSALC,X86.opXLAT,X86.opESC0,X86.opESC1,X86.opESC2,X86.opESC3,X86.opESC4,X86.opESC5,X86.opESC6,X86.opESC7,X86.opLOOPNZ,X86.opLOOPZ,X86.opLOOP,X86.opJCXZ,X86.opINb,X86.opINw,X86.opOUTb,X86.opOUTw,X86.opCALL,X86.opJMP,X86.opJMPF,X86.opJMPs,X86.opINDXb,X86.opINDXw,X86.opOUTDXb,X86.opOUTDXw,X86.opLOCK,X86.opLOCK,X86.opREPNZ,X86.opREPZ,X86.opHLT,X86.opCMC,X86.opGRP3b,X86.opGRP3w,X86.opCLC,X86.opSTC,X86.opCLI,X86.opSTI,X86.opCLD,X86.opSTD,X86.opGRP4b,X86.opGRP4w],X86.aOpGrp1b=[X86.fnADDb,X86.fnORb,X86.fnADCb,X86.fnSBBb,X86.fnANDb,X86.fnSUBb,X86.fnXORb,X86.fnCMPb],X86.aOpGrp1w=[X86.fnADDw,X86.fnORw,X86.fnADCw,X86.fnSBBw,X86.fnANDw,X86.fnSUBw,X86.fnXORw,X86.fnCMPw],X86.aOpGrpPOPw=[X86.fnPOPw,X86.fnGRPFault,X86.fnGRPFault,X86.fnGRPFault,X86.fnGRPFault,X86.fnGRPFault,X86.fnGRPFault,X86.fnGRPFault],X86.aOpGrpMOVn=[X86.fnMOVn,X86.fnGRPUndefined,X86.fnGRPUndefined,X86.fnGRPUndefined,X86.fnGRPUndefined,X86.fnGRPUndefined,X86.fnGRPUndefined,X86.fnGRPUndefined],X86.aOpGrp2b=[X86.fnROLb,X86.fnRORb,X86.fnRCLb,X86.fnRCRb,X86.fnSHLb,X86.fnSHRb,X86.fnGRPUndefined,X86.fnSARb],X86.aOpGrp2w=[X86.fnROLw,X86.fnRORw,X86.fnRCLw,X86.fnRCRw,X86.fnSHLw,X86.fnSHRw,X86.fnGRPUndefined,X86.fnSARw],X86.aOpGrp2d=[X86.fnROLd,X86.fnRORd,X86.fnRCLd,X86.fnRCRd,X86.fnSHLd,X86.fnSHRd,X86.fnGRPUndefined,X86.fnSARd],X86.aOpGrp3b=[X86.fnTESTib,X86.fnGRPUndefined,X86.fnNOTb,X86.fnNEGb,X86.fnMULb,X86.fnIMULb,X86.fnDIVb,X86.fnIDIVb],X86.aOpGrp3w=[X86.fnTESTiw,X86.fnGRPUndefined,X86.fnNOTw,X86.fnNEGw,X86.fnMULw,X86.fnIMULw,X86.fnDIVw,X86.fnIDIVw],X86.aOpGrp4b=[X86.fnINCb,X86.fnDECb,X86.fnGRPUndefined,X86.fnGRPUndefined,X86.fnGRPUndefined,X86.fnGRPUndefined,X86.fnGRPUndefined,X86.fnGRPUndefined],X86.aOpGrp4w=[X86.fnINCw,X86.fnDECw,X86.fnCALLw,X86.fnCALLFdw,X86.fnJMPw,X86.fnJMPFdw,X86.fnPUSHw,X86.fnGRPUndefined],
X86.opGRP6=function(){(56&this.peekIPByte())<16&&(this.opFlags|=X86.OPFLAG.NOREAD),this.decodeModGrpWord.call(this,this.aOpGrp6,X86.helpSRCNone)},X86.opGRP7=function(){16&this.peekIPByte()||(this.opFlags|=X86.OPFLAG.NOREAD),this.decodeModGrpWord.call(this,X86.aOpGrp7,X86.helpSRCNone)},X86.opLAR=function(){this.regCR0&X86.CR0.MSW.PE&&!(I386&&this.regPS&X86.PS.VM)?this.decodeModRegWord.call(this,X86.fnLAR):X86.opInvalid.call(this)},X86.opLSL=function(){this.regCR0&X86.CR0.MSW.PE&&!(I386&&this.regPS&X86.PS.VM)?this.decodeModRegWord.call(this,X86.fnLSL):X86.opInvalid.call(this)},X86.opLOADALL286=function(){this.nCPL?X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0,0,!0):(this.setMSW(this.getShort(2054)),this.regEDI=this.getShort(2086),this.regESI=this.getShort(2088),this.regEBP=this.getShort(2090),this.regEBX=this.getShort(2094),this.regEDX=this.getShort(2096),this.regECX=this.getShort(2098),this.regEAX=this.getShort(2100),this.segES.loadDesc6(2102,this.getShort(2084)),this.segCS.loadDesc6(2108,this.getShort(2082)),this.segSS.loadDesc6(2114,this.getShort(2080)),this.segDS.loadDesc6(2120,this.getShort(2078)),this.setPS(this.getShort(2072)),this.setIP(this.getShort(2074)),this.setSP(this.getShort(2092)),this.addrGDT=this.getShort(2126)|this.getByte(2128)<<16,this.addrGDTLimit=this.addrGDT+this.getShort(2130),this.addrIDT=this.getShort(2138)|this.getByte(2140)<<16,this.addrIDTLimit=this.addrIDT+this.getShort(2142),this.segLDT.loadDesc6(2132,this.getShort(2076)),this.segTSS.loadDesc6(2144,this.getShort(2070)),this.nStepCycles-=195,DEBUG&&DEBUGGER&&this.regCR0&X86.CR0.MSW.PE&&this.stopCPU())},X86.opCLTS=function(){this.nCPL?X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0):(this.regCR0&=~X86.CR0.MSW.TS,this.nStepCycles-=2)},X86.opLOADALL386=function(){if(this.nCPL)return void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0,0,!0);let V=this.segES.checkRead(this.regEDI&this.maskAddr,204);if(V!==X86.ADDR_INVALID){X86.helpLoadCR0.call(this,this.getLong(V));let R=this.getLong(V+168),U=(R&X86.DESC.ACC.DPL.MASK)>>X86.DESC.ACC.DPL.SHIFT;this.setPS(this.getLong(V+4),U),this.addrGDT=this.getLong(V+112),this.addrGDTLimit=this.addrGDT+this.getLong(V+116),this.addrIDT=this.getLong(V+100),this.addrIDTLimit=this.addrIDT+this.getLong(V+104),this.segLDT.loadDesc(this.getLong(V+56),this.getLong(V+120),this.getLong(V+124),this.getLong(V+128)),this.segTSS.loadDesc(this.getLong(V+52),this.getLong(V+84),this.getLong(V+88),this.getLong(V+92)),this.regEDI=this.getLong(V+12),this.regESI=this.getLong(V+16),this.regEBP=this.getLong(V+20),this.regEBX=this.getLong(V+28),this.regEDX=this.getLong(V+32),this.regECX=this.getLong(V+36),this.regEAX=this.getLong(V+40),this.segGS.loadDesc(this.getLong(V+60),this.getLong(V+132),this.getLong(V+136),this.getLong(V+140)),this.segFS.loadDesc(this.getLong(V+64),this.getLong(V+144),this.getLong(V+148),this.getLong(V+152)),this.segDS.loadDesc(this.getLong(V+68),this.getLong(V+156),this.getLong(V+160),this.getLong(V+164)),this.segSS.loadDesc(this.getLong(V+72),R,this.getLong(V+172),this.getLong(V+176)),this.segCS.loadDesc(this.getLong(V+76),this.getLong(V+180),this.getLong(V+184),this.getLong(V+188)),this.segES.loadDesc(this.getLong(V+80),this.getLong(V+192),this.getLong(V+196),this.getLong(V+200)),this.setIP(this.getLong(V+8)),this.setSP(this.getLong(V+24))}this.nStepCycles-=122<<(3&V?1:0)},X86.opMOVrc=function(){if(this.nCPL)return void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);let V,R=this.getIPByte();switch((56&R)>>3){case 0:V=this.regCR0;break;case 2:V=this.regCR2;break;case 3:V=this.regCR3;break;default:return void X86.opUndefined.call(this)}this.setReg(7&R,V),this.nStepCycles-=6},X86.opMOVrd=function(){if(this.nCPL)return void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);let V=this.getIPByte(),R=(56&V)>>3;4!=R&&5!=R?(this.setReg(7&V,this.regDR[R]),this.nStepCycles-=22):X86.opUndefined.call(this)},X86.opMOVcr=function(){if(this.nCPL)return void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);let V=this.getIPByte(),R=this.getReg(7&V);switch((56&V)>>3){case 0:X86.helpLoadCR0.call(this,R),this.nStepCycles-=10;break;case 2:this.regCR2=R,this.nStepCycles-=4;break;case 3:X86.helpLoadCR3.call(this,R),this.nStepCycles-=5;break;default:return void X86.opUndefined.call(this)}},X86.opMOVdr=function(){if(this.nCPL)return void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);let V=this.getIPByte(),R=(56&V)>>3;if(4==R||5==R)return void X86.opUndefined.call(this);let U=this.getReg(7&V);U!=this.regDR[R]&&(this.checkDebugRegisters(!1),this.regDR[R]=U,this.checkDebugRegisters(!0)),this.nStepCycles-=R<4?22:14},X86.opMOVrt=function(){if(this.nCPL)return void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);let V=this.getIPByte(),R=(56&V)>>3;R<6?X86.opUndefined.call(this):(this.setReg(7&V,this.regTR[R]),this.nStepCycles-=12)},X86.opMOVtr=function(){if(this.nCPL)return void X86.helpFault.call(this,X86.EXCEPTION.GP_FAULT,0);let V=this.getIPByte(),R=(56&V)>>3;R<6?X86.opUndefined.call(this):(this.regTR[R]=this.getReg(7&V),this.nStepCycles-=12)},X86.opJOw=function(){let V=this.getIPWord();if(this.getOF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNOw=function(){let V=this.getIPWord();if(!this.getOF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJCw=function(){let V=this.getIPWord();if(this.getCF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNCw=function(){let V=this.getIPWord();if(!this.getCF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJZw=function(){let V=this.getIPWord();if(this.getZF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNZw=function(){let V=this.getIPWord();if(!this.getZF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJBEw=function(){let V=this.getIPWord();if(this.getCF()||this.getZF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNBEw=function(){let V=this.getIPWord();if(!this.getCF()&&!this.getZF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJSw=function(){let V=this.getIPWord();if(this.getSF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNSw=function(){let V=this.getIPWord();if(!this.getSF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJPw=function(){let V=this.getIPWord();if(this.getPF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNPw=function(){let V=this.getIPWord();if(!this.getPF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJLw=function(){let V=this.getIPWord();if(!this.getSF()!=!this.getOF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNLw=function(){let V=this.getIPWord();if(!this.getSF()==!this.getOF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJLEw=function(){let V=this.getIPWord();if(this.getZF()||!this.getSF()!=!this.getOF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opJNLEw=function(){let V=this.getIPWord();if(!this.getZF()&&!this.getSF()==!this.getOF())return this.setIP(this.getIP()+V),void(this.nStepCycles-=this.cycleCounts.nOpCyclesJmpC);this.nStepCycles-=this.cycleCounts.nOpCyclesJmpCFall},X86.opSETO=function(){X86.helpSETcc.call(this,X86.fnSETO)},X86.opSETNO=function(){X86.helpSETcc.call(this,X86.fnSETO)},X86.opSETC=function(){X86.helpSETcc.call(this,X86.fnSETC)},X86.opSETNC=function(){X86.helpSETcc.call(this,X86.fnSETNC)},X86.opSETZ=function(){X86.helpSETcc.call(this,X86.fnSETZ)},X86.opSETNZ=function(){X86.helpSETcc.call(this,X86.fnSETNZ)},X86.opSETBE=function(){X86.helpSETcc.call(this,X86.fnSETBE)},X86.opSETNBE=function(){X86.helpSETcc.call(this,X86.fnSETNBE)},X86.opSETS=function(){X86.helpSETcc.call(this,X86.fnSETS)},X86.opSETNS=function(){X86.helpSETcc.call(this,X86.fnSETNS)},X86.opSETP=function(){X86.helpSETcc.call(this,X86.fnSETP)},X86.opSETNP=function(){X86.helpSETcc.call(this,X86.fnSETNP)},X86.opSETL=function(){X86.helpSETcc.call(this,X86.fnSETL)},X86.opSETNL=function(){X86.helpSETcc.call(this,X86.fnSETNL)},X86.opSETLE=function(){X86.helpSETcc.call(this,X86.fnSETLE)},X86.opSETNLE=function(){X86.helpSETcc.call(this,X86.fnSETNLE)},X86.opPUSHFS=function(){I386?this.pushData(this.segFS.sel,this.sizeData,2):this.pushWord(this.segFS.sel),this.nStepCycles-=this.cycleCounts.nOpCyclesPushSeg},X86.opPOPFS=function(){this.opLSP=this.regLSP,this.setFS(this.popWord()),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg,this.opLSP=X86.ADDR_INVALID},X86.opBT=function(){this.decodeModMemWord.call(this,X86.fnBTMem),this.regEA!==X86.ADDR_INVALID&&(this.nStepCycles-=6)},X86.opSHLDn=function(){this.decodeModMemWord.call(this,2==this.sizeData?X86.fnSHLDwi:X86.fnSHLDdi),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?3:7},X86.opSHLDcl=function(){this.decodeModMemWord.call(this,2==this.sizeData?X86.fnSHLDwCL:X86.fnSHLDdCL),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?3:7},X86.opXBTS=function(){this.decodeModRegWord.call(this,X86.fnXBTS),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?6:13},X86.opIBTS=function(){this.decodeModMemWord.call(this,X86.fnIBTS),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?12:19},X86.opPUSHGS=function(){I386?this.pushData(this.segGS.sel,this.sizeData,2):this.pushWord(this.segGS.sel),this.nStepCycles-=this.cycleCounts.nOpCyclesPushSeg},X86.opPOPGS=function(){this.opLSP=this.regLSP,this.setGS(this.popWord()),this.nStepCycles-=this.cycleCounts.nOpCyclesPopReg,this.opLSP=X86.ADDR_INVALID},X86.opBTS=function(){this.decodeModMemWord.call(this,X86.fnBTSMem),this.regEA!==X86.ADDR_INVALID&&(this.nStepCycles-=5)},X86.opSHRDn=function(){this.decodeModMemWord.call(this,2==this.sizeData?X86.fnSHRDwi:X86.fnSHRDdi),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?3:7},X86.opSHRDcl=function(){this.decodeModMemWord.call(this,2==this.sizeData?X86.fnSHRDwCL:X86.fnSHRDdCL),this.nStepCycles-=this.regEA===X86.ADDR_INVALID?3:7},X86.opIMUL=function(){this.decodeModRegWord.call(this,2==this.sizeData?X86.fnIMULrw:X86.fnIMULrd)},X86.opLSS=function(){this.decodeModRegWord.call(this,X86.fnLSS)},X86.opBTR=function(){this.decodeModMemWord.call(this,X86.fnBTRMem),this.regEA!==X86.ADDR_INVALID&&(this.nStepCycles-=5)},X86.opLFS=function(){this.decodeModRegWord.call(this,X86.fnLFS)},X86.opLGS=function(){this.decodeModRegWord.call(this,X86.fnLGS)},X86.opMOVZXb=function(){switch(this.decodeModRegByte.call(this,X86.fnMOVXb),this.bModRM>>3&7){case 0:this.regEAX=this.regEAX&~this.maskData|255&this.regEAX;break;case 1:this.regECX=this.regECX&~this.maskData|255&this.regECX;break;case 2:this.regEDX=this.regEDX&~this.maskData|255&this.regEDX;break;case 3:this.regEBX=this.regEBX&~this.maskData|255&this.regEBX;break;case 4:this.regESP=this.regESP&~this.maskData|this.regEAX>>8&255,this.regEAX=this.regXX;break;case 5:this.regEBP=this.regEBP&~this.maskData|this.regECX>>8&255,this.regECX=this.regXX;break;case 6:this.regESI=this.regESI&~this.maskData|this.regEDX>>8&255,this.regEDX=this.regXX;break;case 7:this.regEDI=this.regEDI&~this.maskData|this.regEBX>>8&255,this.regEBX=this.regXX}this.nStepCycles-=this.regEA===X86.ADDR_INVALID?3:6},X86.opMOVZXw=function(){switch(this.setDataSize(2),this.decodeModRegWord.call(this,X86.fnMOVXw),this.bModRM>>3&7){case 0:this.regEAX=65535&this.regEAX;break;case 1:this.regECX=65535&this.regECX;break;case 2:this.regEDX=65535&this.regEDX;break;case 3:this.regEBX=65535&this.regEBX;break;case 4:this.regESP=65535&this.regESP;break;case 5:this.regEBP=65535&this.regEBP;break;case 6:this.regESI=65535&this.regESI;break;case 7:this.regEDI=65535&this.regEDI}this.nStepCycles-=this.regEA===X86.ADDR_INVALID?3:6},X86.opGRP8=function(){this.decodeModGrpWord.call(this,X86.aOpGrp8,this.getIPByte)},X86.opBTC=function(){this.decodeModMemWord.call(this,X86.fnBTCMem),this.regEA!==X86.ADDR_INVALID&&(this.nStepCycles-=5)},X86.opBSF=function(){this.decodeModRegWord.call(this,X86.fnBSF)},X86.opBSR=function(){this.decodeModRegWord.call(this,X86.fnBSR)},X86.opMOVSXb=function(){switch(this.decodeModRegByte.call(this,X86.fnMOVXb),this.bModRM>>3&7){case 0:this.regEAX=this.regEAX&~this.maskData|(255&this.regEAX)<<24>>24&this.maskData;break;case 1:this.regECX=this.regECX&~this.maskData|(255&this.regECX)<<24>>24&this.maskData;break;case 2:this.regEDX=this.regEDX&~this.maskData|(255&this.regEDX)<<24>>24&this.maskData;break;case 3:this.regEBX=this.regEBX&~this.maskData|(255&this.regEBX)<<24>>24&this.maskData;break;case 4:this.regESP=this.regESP&~this.maskData|this.regEAX<<16>>24&this.maskData,this.regEAX=this.regXX;break;case 5:this.regEBP=this.regEBP&~this.maskData|this.regECX<<16>>24&this.maskData,this.regECX=this.regXX;break;case 6:this.regESI=this.regESI&~this.maskData|this.regEDX<<16>>24&this.maskData,this.regEDX=this.regXX;break;case 7:this.regEDI=this.regEDI&~this.maskData|this.regEBX<<16>>24&this.maskData,this.regEBX=this.regXX}this.nStepCycles-=this.regEA===X86.ADDR_INVALID?3:6},X86.opMOVSXw=function(){switch(this.setDataSize(2),this.decodeModRegWord.call(this,X86.fnMOVXw),this.bModRM>>3&7){case 0:this.regEAX=this.regEAX<<16>>16;break;case 1:this.regECX=this.regECX<<16>>16;break;case 2:this.regEDX=this.regEDX<<16>>16;break;case 3:this.regEBX=this.regEBX<<16>>16;break;case 4:this.regESP=this.regESP<<16>>16;break;case 5:this.regEBP=this.regEBP<<16>>16;break;case 6:this.regESI=this.regESI<<16>>16;break;case 7:this.regEDI=this.regEDI<<16>>16}this.nStepCycles-=this.regEA===X86.ADDR_INVALID?3:6},X86.aOps0F=new Array(256),X86.aOps0F[0]=X86.opGRP6,X86.aOps0F[1]=X86.opGRP7,X86.aOps0F[2]=X86.opLAR,X86.aOps0F[3]=X86.opLSL,X86.aOps0F[5]=X86.opLOADALL286,X86.aOps0F[6]=X86.opCLTS,X86.aOps0F[11]=X86.opInvalid,X86.aOps0F[166]=X86.opInvalid,X86.aOps0F[255]=X86.opInvalid,I386&&(X86.aOps0F386=[],X86.aOps0F386[5]=X86.opInvalid,X86.aOps0F386[7]=X86.opLOADALL386,X86.aOps0F386[16]=X86.opMOVmb,X86.aOps0F386[17]=X86.opMOVmw,X86.aOps0F386[18]=X86.opMOVrb,X86.aOps0F386[19]=X86.opMOVrw,X86.aOps0F386[32]=X86.opMOVrc,X86.aOps0F386[33]=X86.opMOVrd,X86.aOps0F386[34]=X86.opMOVcr,X86.aOps0F386[35]=X86.opMOVdr,X86.aOps0F386[36]=X86.opMOVrt,X86.aOps0F386[38]=X86.opMOVtr,X86.aOps0F386[128]=X86.opJOw,X86.aOps0F386[129]=X86.opJNOw,X86.aOps0F386[130]=X86.opJCw,X86.aOps0F386[131]=X86.opJNCw,X86.aOps0F386[132]=X86.opJZw,X86.aOps0F386[133]=X86.opJNZw,X86.aOps0F386[134]=X86.opJBEw,X86.aOps0F386[135]=X86.opJNBEw,X86.aOps0F386[136]=X86.opJSw,X86.aOps0F386[137]=X86.opJNSw,X86.aOps0F386[138]=X86.opJPw,X86.aOps0F386[139]=X86.opJNPw,X86.aOps0F386[140]=X86.opJLw,X86.aOps0F386[141]=X86.opJNLw,X86.aOps0F386[142]=X86.opJLEw,X86.aOps0F386[143]=X86.opJNLEw,X86.aOps0F386[144]=X86.opSETO,X86.aOps0F386[145]=X86.opSETNO,X86.aOps0F386[146]=X86.opSETC,X86.aOps0F386[147]=X86.opSETNC,X86.aOps0F386[148]=X86.opSETZ,X86.aOps0F386[149]=X86.opSETNZ,X86.aOps0F386[150]=X86.opSETBE,X86.aOps0F386[151]=X86.opSETNBE,X86.aOps0F386[152]=X86.opSETS,X86.aOps0F386[153]=X86.opSETNS,X86.aOps0F386[154]=X86.opSETP,X86.aOps0F386[155]=X86.opSETNP,X86.aOps0F386[156]=X86.opSETL,X86.aOps0F386[157]=X86.opSETNL,X86.aOps0F386[158]=X86.opSETLE,X86.aOps0F386[159]=X86.opSETNLE,X86.aOps0F386[160]=X86.opPUSHFS,X86.aOps0F386[161]=X86.opPOPFS,X86.aOps0F386[163]=X86.opBT,X86.aOps0F386[164]=X86.opSHLDn,X86.aOps0F386[165]=X86.opSHLDcl,X86.aOps0F386[168]=X86.opPUSHGS,X86.aOps0F386[169]=X86.opPOPGS,X86.aOps0F386[171]=X86.opBTS,X86.aOps0F386[172]=X86.opSHRDn,X86.aOps0F386[173]=X86.opSHRDcl,X86.aOps0F386[175]=X86.opIMUL,X86.aOps0F386[178]=X86.opLSS,X86.aOps0F386[179]=X86.opBTR,X86.aOps0F386[180]=X86.opLFS,X86.aOps0F386[181]=X86.opLGS,X86.aOps0F386[182]=X86.opMOVZXb,X86.aOps0F386[183]=X86.opMOVZXw,X86.aOps0F386[186]=X86.opGRP8,X86.aOps0F386[187]=X86.opBTC,X86.aOps0F386[188]=X86.opBSF,X86.aOps0F386[189]=X86.opBSR,X86.aOps0F386[190]=X86.opMOVSXb,X86.aOps0F386[191]=X86.opMOVSXw),X86.aOpGrp6Prot=[X86.fnSLDT,X86.fnSTR,X86.fnLLDT,X86.fnLTR,X86.fnVERR,X86.fnVERW,X86.fnGRPUndefined,X86.fnGRPUndefined],X86.aOpGrp6Real=[X86.fnGRPInvalid,X86.fnGRPInvalid,X86.fnGRPInvalid,X86.fnGRPInvalid,X86.fnGRPInvalid,X86.fnGRPInvalid,X86.fnGRPUndefined,X86.fnGRPUndefined],X86.aOpGrp7=[X86.fnSGDT,X86.fnSIDT,X86.fnLGDT,X86.fnLIDT,X86.fnSMSW,X86.fnGRPUndefined,X86.fnLMSW,X86.fnGRPUndefined],X86.aOpGrp8=[X86.fnGRPUndefined,X86.fnGRPUndefined,X86.fnGRPUndefined,X86.fnGRPUndefined,X86.fnBT,X86.fnBTS,X86.fnBTR,X86.fnBTC];class ChipSet extends Component{static MODEL_S100=100;static MODEL_4860=4860;static MODEL_5150=5150;static MODEL_5150_REV2=5150.2;static MODEL_5150_REV3=5150.3;static MODEL_5150_OTHER=5150.9;static MODEL_5160=5160;static MODEL_5160_REV2=5160.2;static MODEL_5160_REV3=5160.3;static MODEL_5160_OTHER=5160.9;static MODEL_5170=5170;static MODEL_5170_REV2=5170.2;static MODEL_5170_REV3=5170.3;static MODEL_5170_OTHER=5170.9;static MODEL_CDP_MPC1600=5150.101;static MODEL_COMPAQ_PORTABLE=5150.102;static MODEL_ATT_6300=5160.101;static MODEL_ZENITH_Z150=5160.15;static MODEL_COMPAQ_DESKPRO386=5180;static MODELS={100:ChipSet.MODEL_S100,4860:ChipSet.MODEL_4860,5150:ChipSet.MODEL_5150,5160:ChipSet.MODEL_5160,5170:ChipSet.MODEL_5170,att6300:ChipSet.MODEL_ATT_6300,mpc1600:ChipSet.MODEL_CDP_MPC1600,z150:ChipSet.MODEL_ZENITH_Z150,compaq:ChipSet.MODEL_COMPAQ_PORTABLE,other:ChipSet.MODEL_5150_OTHER,deskpro386:ChipSet.MODEL_COMPAQ_DESKPRO386};static CONTROLS={SW1:"sw1",SW2:"sw2",SWDESC:"swdesc"};static MONITOR={NONE:0,TV:1,COLOR:2,MONO:3,EGACOLOR:4,EGAEMULATION:6,VGACOLOR:7};static PPI_SW={FDRIVE:{IPL:1,ONE:0,TWO:64,THREE:128,FOUR:192,MASK:192,SHIFT:6},FPU:2,MEMORY:{X1:0,X2:4,X3:8,X4:12,MASK:12,SHIFT:2},MONITOR:{TV:16,COLOR:32,MONO:48,MASK:48,SHIFT:4}};static SW_TYPE={FLOPNUM:1,FLOPTYPE:2,FPU:3,MONITOR:4,LOWMEM:5,EXPMEM:6};static SW_FLOPPY={MASK:192,VALUES:{1:0,2:64,3:128,4:192},LABEL:"Number of Floppy Drives"};static SW_FPU={MASK:2,VALUES:{0:0,1:2},LABEL:"FPU"};static SW_MONITOR={MASK:48,VALUES:{0:0,1:16,2:32,3:48,none:0,tv:16,color:32,cga:32,mda:48,mono:48,ega:0,vga:0},LABEL:"Monitor Type"};static SW_MEMORY={MASK:31,VALUES:{0:0,32:1,64:2,96:3,128:4,160:5,192:6,224:7,256:8,288:9,320:10,352:11,384:12,416:13,448:14,480:15,512:16,544:17,576:18},LABEL:"Expansion Memory (32Kb Increments)"};static DIPSW={[ChipSet.MODEL_5150]:[{[ChipSet.SW_TYPE.FLOPNUM]:ChipSet.SW_FLOPPY,[ChipSet.SW_TYPE.FPU]:ChipSet.SW_FPU,[ChipSet.SW_TYPE.MONITOR]:ChipSet.SW_MONITOR,[ChipSet.SW_TYPE.LOWMEM]:{MASK:12,VALUES:{16:0,32:4,48:8,64:12},LABEL:"Base Memory (16Kb Increments)"}},{[ChipSet.SW_TYPE.EXPMEM]:ChipSet.SW_MEMORY}],[ChipSet.MODEL_5160]:[{[ChipSet.SW_TYPE.FLOPNUM]:ChipSet.SW_FLOPPY,[ChipSet.SW_TYPE.FPU]:ChipSet.SW_FPU,[ChipSet.SW_TYPE.MONITOR]:ChipSet.SW_MONITOR,[ChipSet.SW_TYPE.LOWMEM]:{MASK:12,VALUES:{64:0,128:4,192:8,256:12},LABEL:"Base Memory (64Kb Increments)"}},{[ChipSet.SW_TYPE.EXPMEM]:ChipSet.SW_MEMORY}],[ChipSet.MODEL_ATT_6300]:[{[ChipSet.SW_TYPE.LOWMEM]:{MASK:143,VALUES:{128:1,256:130,512:8,640:141},LABEL:"Base Memory (128Kb Increments)"},[ChipSet.SW_TYPE.FPU]:{MASK:16,VALUES:{0:0,1:16},LABEL:"FPU"}},{[ChipSet.SW_TYPE.FLOPTYPE]:{MASK:1,VALUES:{0:0,1:1},LABEL:"Floppy Type"},[ChipSet.SW_TYPE.FLOPNUM]:ChipSet.SW_FLOPPY,[ChipSet.SW_TYPE.MONITOR]:ChipSet.SW_MONITOR}]};static DMA0={INDEX:0,PORT:{CH0_ADDR:0,CH0_COUNT:1,CH1_ADDR:2,CH1_COUNT:3,CH2_ADDR:4,CH2_COUNT:5,CH3_ADDR:6,CH3_COUNT:7,CMD_STATUS:8,REQUEST:9,MASK:10,MODE:11,RESET_FF:12,MASTER_CLEAR:13,MASK_CLEAR:14,MASK_ALL:15,CH2_PAGE:129,CH3_PAGE:130,CH1_PAGE:131,CH0_PAGE:135}};static DMA1={INDEX:1,PORT:{CH6_PAGE:137,CH7_PAGE:138,CH5_PAGE:139,CH4_PAGE:143,CH4_ADDR:192,CH4_COUNT:194,CH5_ADDR:196,CH5_COUNT:198,CH6_ADDR:200,CH6_COUNT:202,CH7_ADDR:204,CH7_COUNT:206,CMD_STATUS:208,REQUEST:210,MASK:212,MODE:214,RESET_FF:216,MASTER_CLEAR:218,MASK_CLEAR:220,MASK_ALL:222}};static DMA_CMD={M2M_ENABLE:1,CH0HOLD_ENABLE:2,CTRL_DISABLE:4,COMP_TIMING:8,ROT_PRIORITY:16,EXT_WRITE_SEL:32,DREQ_ACTIVE_LO:64,DACK_ACTIVE_HI:128};static DMA_STATUS={CH0_TC:1,CH1_TC:2,CH2_TC:4,CH3_TC:8,ALL_TC:15,CH0_REQ:16,CH1_REQ:32,CH2_REQ:64,CH3_REQ:128};static DMA_MASK={CHANNEL:3,CHANNEL_SET:4};static DMA_MODE={CHANNEL:3,TYPE:12,TYPE_VERIFY:0,TYPE_WRITE:4,TYPE_READ:8,AUTOINIT:16,DECREMENT:32,MODE:192,MODE_DEMAND:0,MODE_SINGLE:64,MODE_BLOCK:128,MODE_CASCADE:192};static DMA_REFRESH=0;static DMA_FDC=2;static DMA_HDC=3;static PIC0={INDEX:0,PORT:32};static PIC1={INDEX:1,PORT:160};static PIC_LO={ICW1:16,ICW1_ICW4:1,ICW1_SNGL:2,ICW1_ADI:4,ICW1_LTIM:8,OCW2:0,OCW2_IR_LVL:7,OCW2_OP_MASK:224,OCW2_EOI:32,OCW2_EOI_SPEC:96,OCW2_EOI_ROT:160,OCW2_EOI_ROTSPEC:224,OCW2_SET_ROTAUTO:128,OCW2_CLR_ROTAUTO:0,OCW2_SET_PRI:192,OCW3:8,OCW3_READ_IRR:2,OCW3_READ_ISR:3,OCW3_READ_CMD:3,OCW3_POLL_CMD:4,OCW3_SMM_RESET:64,OCW3_SMM_SET:96,OCW3_SMM_CMD:96};static PIC_HI={ICW2_VECTOR:248,ICW4_8086:1,ICW4_AUTO_EOI:2,ICW4_MASTER:4,ICW4_BUFFERED:8,ICW4_FULLY_NESTED:16,OCW1_IMR:255};static IRQ={TIMER0:0,KBD:1,VID:2,SLAVE:2,COM2:3,COM1:4,XTC:5,LPT2:5,FDC:6,LPT1:7,RTC:8,IRQ2:9,FPU:13,ATC1:14,ATC2:15};static PIT0={PORT:64,INDEX:0,TIMER0:0,TIMER1:1,TIMER2:2};static PIT1={PORT:72,INDEX:1,TIMER3:0,TIMER4:1,TIMER5:2};static PIT_CTRL={PORT1:67,PORT2:75,BCD:1,MODE:14,MODE0:0,MODE1:2,MODE2:4,MODE3:6,MODE4:8,MODE5:10,RW:48,RW_LATCH:0,RW_LSB:16,RW_MSB:32,RW_BOTH:48,SC:192,SC_CTR0:0,SC_CTR1:64,SC_CTR2:128,SC_BACK:192,SC_SHIFT:6,RB_CTR0:2,RB_CTR1:4,RB_CTR2:8,RB_STATUS:16,RB_COUNTS:32,RB_NULL:64,RB_OUT:128};static TIMER_TICKS_PER_SEC=1193181;static PPI={PORT:96};static PPI_B={PORT:97,CLK_TIMER2:1,SPK_TIMER2:2,ENABLE_SW2:4,CASS_MOTOR_OFF:8,ENABLE_SW_HI:8,DISABLE_RW_MEM:16,DISABLE_IO_CHK:32,CLK_KBD:64,CLEAR_KBD:128};static PPI_C={PORT:98,KBD_LATCH:1,NO_MODEM:2,NO_DISKETTE:4,NO_MEMEXP:8,SW:15,CASS_DATA_IN:16,TIMER2_OUT:32,KBD_DATA:64,NO_KBD_CABLE:128,IO_CHANNEL_CHK:64,RW_PARITY_CHK:128};static PPI_CTRL={PORT:99,A_IN:16,B_IN:2,C_IN_LO:1,C_IN_HI:8,B_MODE:4,A_MODE:96};static C8041={PORT:96};static C8042={PORT:96,DATA:{PORT:96,CMD:{INT_ENABLE:1,SYS_FLAG:4,NO_INHIBIT:8,NO_CLOCK:16,PC_MODE:32,PC_COMPAT:64},SELF_TEST:{OK:85},INTF_TEST:{OK:0,CLOCK_LO:1,CLOCK_HI:2,DATA_LO:3,DATA_HI:4}},INPORT:{COMPAQ_50MHZ:1,UNDEFINED:2,COMPAQ_NO80387:4,COMPAQ_NOWEITEK:8,ENABLE_256KB:16,COMPAQ_HISPEED:16,MFG_OFF:32,COMPAQ_DIP5OFF:32,MONO:64,COMPAQ_NONDUAL:64,KBD_UNLOCKED:128},OUTPORT:{NO_RESET:1,A20_ON:2,COMPAQ_SLOWD:8,OUTBUFF_FULL:16,INBUFF_EMPTY:32,KBD_CLOCK:64,KBD_DATA:128},TESTPORT:{KBD_CLOCK:1,KBD_DATA:2},RWREG:{PORT:97,CLK_TIMER2:1,SPK_TIMER2:2,COMPAQ_FSNMI:4,COMPAQ_IONMI:8,DISABLE_NMI:12,REFRESH_BIT:16,OUT_TIMER2:32,IOCHK_NMI:64,RAMFS_NMI:128,NMI_ERROR:192},CMD:{PORT:100,READ_CMD:32,WRITE_CMD:96,COMPAQ_SLOWD:163,COMPAQ_TOGGLE:164,COMPAQ_SREAD2:165,SELF_TEST:170,INTF_TEST:171,DIAG_DUMP:172,DISABLE_KBD:173,ENABLE_KBD:174,READ_INPORT:192,READ_OUTPORT:208,WRITE_OUTPORT:209,READ_TEST:224,PULSE_OUTPORT:240},STATUS:{PORT:100,OUTBUFF_FULL:1,INBUFF_FULL:2,SYS_FLAG:4,CMD_FLAG:8,NO_INHIBIT:16,XMT_TIMEOUT:32,RCV_TIMEOUT:64,PARITY_ERR:128,OUTBUFF_DELAY:256}};static CMOS={ADDR:{PORT:112,RTC_SEC:0,RTC_SEC_ALARM:1,RTC_MIN:2,RTC_MIN_ALARM:3,RTC_HOUR:4,RTC_HOUR_ALARM:5,RTC_WEEK_DAY:6,RTC_MONTH_DAY:7,RTC_MONTH:8,RTC_YEAR:9,STATUSA:10,STATUSB:11,STATUSC:12,STATUSD:13,DIAG:14,SHUTDOWN:15,FDRIVE:16,HDRIVE:18,EQUIP:20,BASEMEM_LO:21,BASEMEM_HI:22,EXTMEM_LO:23,EXTMEM_HI:24,EXTHDRIVE0:25,EXTHDRIVE1:26,CHKSUM_HI:46,CHKSUM_LO:47,EXTMEM2_LO:48,EXTMEM2_HI:49,CENTURY_DATE:50,BOOT_INFO:51,MASK:63,TOTAL:64,NMI_DISABLE:128},DATA:{PORT:113},STATUSA:{UIP:128,DV:112,RS:15},STATUSB:{SET:128,PIE:64,AIE:32,UIE:16,SQWE:8,BINARY:4,HOUR24:2,DST:1},STATUSC:{IRQF:128,PF:64,AF:32,UF:16,RESERVED:15},STATUSD:{VRB:128,RESERVED:127},DIAG:{RTCFAIL:128,CHKSUMFAIL:64,CONFIGFAIL:32,MEMSIZEFAIL:16,HDRIVEFAIL:8,TIMEFAIL:4,RESERVED:3},FDRIVE:{D0_MASK:240,D1_MASK:15,NONE:0,FD360:1,FD1200:2,FD720:3,FD1440:4},HDRIVE:{D0_MASK:240,D1_MASK:15},EQUIP:{MONITOR:ChipSet.PPI_SW.MONITOR,FPU:ChipSet.PPI_SW.FPU,FDRIVE:ChipSet.PPI_SW.FDRIVE}};static NMI={PORT:160,ENABLE:128,IRTEST:64,SELCLK1:32,DISHRQ:16,KBD_LATCH:1,RESET:0};static FPU={PORT_CLEAR:240,PORT_RESET:241};constructor(V){super("ChipSet",V,MESSAGE.CHIPSET);let R,U=V.model;if(U&&!ChipSet.MODELS[U]&&Component.printf(MESSAGE.NOTICE,"Unrecognized ChipSet model: %s\n",U),this.model=ChipSet.MODELS[U]||ChipSet.MODEL_5150_OTHER,this.aDIPSwitches=[],this.aDMAControllerInit=[0,null,null,0,new Array(4),0],this.aDMAChannelInit=[!0,[0,0],[0,0],[0,0],[0,0]],this.aPICInit=[0,new Array(4)],this.aTimerInit=[[0,0],[0,0],[0,0],[0,0]],R=this.parseDIPSwitches(V[ChipSet.CONTROLS.SW1]),this.aDIPSwitches[0]=[R,R],null==R){this.aFloppyDrives=[360,360];let R=V.floppies;"string"==typeof R&&(R=JSON.parse(R)),R&&R.length&&(this.aFloppyDrives=R),this.setDIPSwitches(ChipSet.SW_TYPE.FLOPNUM,this.aFloppyDrives.length);let U=V.monitor||(this.model<ChipSet.MODEL_5170?"mono":"ega");this.setDIPSwitches(ChipSet.SW_TYPE.MONITOR,U)}R=this.parseDIPSwitches(V[ChipSet.CONTROLS.SW2]),this.aDIPSwitches[1]=[R,R],this.sCellClass=CSSCLASS+"-bitCell",this.cDMACs=0,this.model>=ChipSet.MODEL_5150&&this.cDMACs++,this.model>=ChipSet.MODEL_5170&&this.cDMACs++,this.cPICs=1,(this.model==ChipSet.MODEL_S100||this.model>=ChipSet.MODEL_5170)&&this.cPICs++,this.fScaleTimers=V.scaleTimers||!1,this.sDateRTC=V.dateRTC,this.volumeInit=0;let l=V.sound;l&&(this.volumeInit="number"!=typeof l||l<0||l>1?.5:l,this.classAudio=this.contextAudio=null,this.classAudio=globals.window.AudioContext||globals.window.webkitAudioContext,this.classAudio?this.contextAudio=new this.classAudio:DEBUG&&this.printf(MESSAGE.LOG,"AudioContext not available")),this.fSpeakerEnabled=this.fSpeakerOn=this.fUserSound=!1,this.reset(!0)}initBus(V,R,U,l){this.bus=R,this.cpu=U,this.dbg=l,this.cmp=V,this.fpuActive=null,this.setDIPSwitches(ChipSet.SW_TYPE.FPU,this.cmp.fpu?1:0,!0),this.kbd=V.getMachineComponent("Keyboard");let e=V.getMachineParm("sound");if(null!=e){let V=+e||0;this.volumeInit="true"==e||V<0||V>1?.5:V}this.volumeInit||this.printf(MESSAGE.NONE,"note: speaker disabled\n"),this.nTicksDivisor=U.getBaseCyclesPerSecond()/ChipSet.TIMER_TICKS_PER_SEC;let t=ChipSet.aPortInput,T=ChipSet.aPortOutput;if(this.model==ChipSet.MODEL_S100&&(t={[this.portPIC0+0]:ChipSet.aPortInput[ChipSet.PIC0.PORT+0],[this.portPIC0+1]:ChipSet.aPortInput[ChipSet.PIC0.PORT+1],[this.portPIC1+0]:ChipSet.aPortInput5170[ChipSet.PIC1.PORT+0],[this.portPIC1+1]:ChipSet.aPortInput5170[ChipSet.PIC1.PORT+1]},T={[this.portPIC0+0]:ChipSet.aPortOutput[ChipSet.PIC0.PORT+0],[this.portPIC0+1]:ChipSet.aPortOutput[ChipSet.PIC0.PORT+1],[this.portPIC1+0]:ChipSet.aPortOutput5170[ChipSet.PIC1.PORT+0],[this.portPIC1+1]:ChipSet.aPortOutput5170[ChipSet.PIC1.PORT+1]}),R.addPortInputTable(this,t),R.addPortOutputTable(this,T),this.model==ChipSet.MODEL_4860?(R.addPortInputTable(this,ChipSet.aPortInput4860),R.addPortOutputTable(this,ChipSet.aPortOutput4860)):this.model>=ChipSet.MODEL_5150&&(R.addPortInputTable(this,ChipSet.aPortInput51xx),R.addPortOutputTable(this,ChipSet.aPortOutput51xx),this.model<ChipSet.MODEL_5170?this.model==ChipSet.MODEL_ATT_6300?(R.addPortInputTable(this,ChipSet.aPortInput6300),R.addPortOutputTable(this,ChipSet.aPortOutput6300)):(R.addPortInputTable(this,ChipSet.aPortInput5150),R.addPortOutputTable(this,ChipSet.aPortOutput5150)):(R.addPortInputTable(this,ChipSet.aPortInput5170),R.addPortOutputTable(this,ChipSet.aPortOutput5170),DESKPRO386&&(0|this.model)==ChipSet.MODEL_COMPAQ_DESKPRO386&&(R.addPortInputTable(this,ChipSet.aPortInputDeskPro386),R.addPortOutputTable(this,ChipSet.aPortOutputDeskPro386)))),DEBUGGER){if(l){let V=this;l.messageDump(MESSAGE.PIC,(function(){V.dumpPIC()})),l.messageDump(MESSAGE.TIMER,(function(R){V.dumpTimer(R)})),this.model>=ChipSet.MODEL_5170&&l.messageDump(MESSAGE.CMOS,(function(){V.dumpCMOS()}))}U.addIntNotify(Interrupts.TIMER,this.intBIOSTimer.bind(this))}this.setReady()}setBinding(V,R,U,l){switch(R){case ChipSet.CONTROLS.SW1:return this.bindings[R]=U,this.addDIPSwitches(0,R),!0;case ChipSet.CONTROLS.SW2:if((0|this.model)==ChipSet.MODEL_5150||this.model==ChipSet.MODEL_ATT_6300)return this.bindings[R]=U,this.addDIPSwitches(1,R),!0;break;case ChipSet.CONTROLS.SWDESC:return this.bindings[R]=U,!0}return!1}powerUp(V,R){if(!R){if(V){if(!this.restore(V))return!1}else this.reset();this.cpu&&(this.fpuActive=this.cpu.fpuActive)}return!0}powerDown(V,R){return!V||this.save()}reset(V){let R;for(this.updateDIPSwitches(),this.cpu&&this.cpu.resetFPU(),this.aDMACs=new Array(this.cDMACs),R=0;R<this.cDMACs;R++)this.initDMAController(R);if(this.aPICs=new Array(this.cPICs),this.portPIC0=ChipSet.PIC0.PORT,this.portPIC1=ChipSet.PIC1.PORT,this.model==ChipSet.MODEL_S100){const V=[240,112,176,48,208,80,144,16,224,96,160,32,192,64,128,0];this.portPIC0=V[15&this.aDIPSwitches[0][0]],this.portPIC1=this.portPIC0+2}for(this.initPIC(ChipSet.PIC0.INDEX,this.portPIC0),this.cPICs>1&&this.initPIC(ChipSet.PIC1.INDEX,this.portPIC1),this.bPIT0Ctrl=null,this.bPIT1Ctrl=null,this.aTimers=new Array((0|this.model)==ChipSet.MODEL_COMPAQ_DESKPRO386?6:3),R=0;R<this.aTimers.length;R++)this.initTimer(R);this.bPPIA=null,this.bPPIB=null,this.bPPIC=null,this.bPPICtrl=null,this.bNMI=ChipSet.NMI.RESET,this.bKbdData=0,this.model==ChipSet.MODEL_ATT_6300&&(this.b8041Status=0),this.model>=ChipSet.MODEL_5170&&(this.b8042Status=ChipSet.C8042.STATUS.NO_INHIBIT,this.b8042InBuff=0,this.b8042CmdData=ChipSet.C8042.DATA.CMD.NO_CLOCK,this.b8042OutBuff=0,this.b8042InPort=ChipSet.C8042.INPORT.MFG_OFF|ChipSet.C8042.INPORT.KBD_UNLOCKED,this.getDIPMemorySize()>=512&&(this.b8042InPort|=ChipSet.C8042.INPORT.ENABLE_256KB),this.getDIPVideoMonitor()==ChipSet.MONITOR.MONO&&(this.b8042InPort|=ChipSet.C8042.INPORT.MONO),DESKPRO386&&(0|this.model)==ChipSet.MODEL_COMPAQ_DESKPRO386&&(this.b8042InPort|=ChipSet.C8042.INPORT.COMPAQ_NO80387|ChipSet.C8042.INPORT.COMPAQ_NOWEITEK),this.b8042OutPort=ChipSet.C8042.OUTPORT.NO_RESET|ChipSet.C8042.OUTPORT.A20_ON,this.abDMAPageSpare=new Array(8),this.bCMOSAddr=0,V&&(this.abCMOSData=new Array(ChipSet.CMOS.ADDR.TOTAL)),this.initRTCTime(this.sDateRTC),this.initCMOSData()),DEBUGGER&&MAXDEBUG&&(this.acInterrupts=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.acTimersFired=[0,0,0],this.acTimer0Counts=[])}initRTCTime(V){let R,U,l,e=V?new Date(V):new Date;"[object Date]"!==Object.prototype.toString.call(e)||isNaN(e.getTime())?(e=new Date,this.printf(MESSAGE.NONE,"CMOS date invalid (%s), using %T\n",V,e)):V&&this.printf(MESSAGE.NONE,"CMOS date: %T\n",e),this.abCMOSData[ChipSet.CMOS.ADDR.RTC_SEC]=l=e.getSeconds(),this.abCMOSData[ChipSet.CMOS.ADDR.RTC_SEC_ALARM]=0,this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MIN]=U=e.getMinutes(),this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MIN_ALARM]=0,this.abCMOSData[ChipSet.CMOS.ADDR.RTC_HOUR]=R=e.getHours(),this.abCMOSData[ChipSet.CMOS.ADDR.RTC_HOUR_ALARM]=0,this.abCMOSData[ChipSet.CMOS.ADDR.RTC_WEEK_DAY]=e.getDay()+1,this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MONTH_DAY]=e.getDate(),this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MONTH]=e.getMonth()+1;let t=e.getFullYear();this.abCMOSData[ChipSet.CMOS.ADDR.RTC_YEAR]=t%100;let T=t/100;return this.abCMOSData[ChipSet.CMOS.ADDR.CENTURY_DATE]=T%10|T/10<<4,this.abCMOSData[ChipSet.CMOS.ADDR.STATUSA]=38,this.abCMOSData[ChipSet.CMOS.ADDR.STATUSB]=ChipSet.CMOS.STATUSB.HOUR24,this.abCMOSData[ChipSet.CMOS.ADDR.STATUSC]=0,this.abCMOSData[ChipSet.CMOS.ADDR.STATUSD]=ChipSet.CMOS.STATUSD.VRB,this.nRTCCyclesLastUpdate=this.nRTCCyclesNextUpdate=0,this.nRTCPeriodsPerSecond=this.nRTCCyclesPerPeriod=null,3600*R+60*U+l}getRTCByte(V){let R=this.abCMOSData[V];if(V<ChipSet.CMOS.ADDR.STATUSA){let U=!1;V!=ChipSet.CMOS.ADDR.RTC_HOUR&&V!=ChipSet.CMOS.ADDR.RTC_HOUR_ALARM||this.abCMOSData[ChipSet.CMOS.ADDR.STATUSB]&ChipSet.CMOS.STATUSB.HOUR24||(R<12?R=R||12:(R-=12,R=R?R+128:140),U=!0),this.abCMOSData[ChipSet.CMOS.ADDR.STATUSB]&ChipSet.CMOS.STATUSB.BINARY||(U&&R>128&&(R-=48),R=R%10|R/10<<4)}else V==ChipSet.CMOS.ADDR.STATUSA&&(this.abCMOSData[V]&=~ChipSet.CMOS.STATUSA.UIP);return R}setRTCByte(V,R){if(V<ChipSet.CMOS.ADDR.STATUSA){let U=!1;this.abCMOSData[ChipSet.CMOS.ADDR.STATUSB]&ChipSet.CMOS.STATUSB.BINARY||(R=10*(R>>4)+(15&R),U=!0),V!=ChipSet.CMOS.ADDR.RTC_HOUR&&V!=ChipSet.CMOS.ADDR.RTC_HOUR_ALARM||(U&&R>23&&(R+=48),this.abCMOSData[ChipSet.CMOS.ADDR.STATUSB]&ChipSet.CMOS.STATUSB.HOUR24||(R=R<=12?12==R?0:R:24==(R-=116)?12:R))}return R}calcRTCCyclePeriod(){this.nRTCCyclesLastUpdate=this.cpu.getCycles(this.fScaleTimers),this.nRTCPeriodsPerSecond=1024,this.nRTCCyclesPerPeriod=Math.floor(this.cpu.getBaseCyclesPerSecond()/this.nRTCPeriodsPerSecond),this.setRTCCycleLimit()}getRTCCycleLimit(V){if(this.abCMOSData&&this.abCMOSData[ChipSet.CMOS.ADDR.STATUSB]&ChipSet.CMOS.STATUSB.PIE){let R=this.nRTCCyclesNextUpdate-this.cpu.getCycles(this.fScaleTimers);R>0?V>R?(DEBUG&&this.printf(MESSAGE.RTC,"getRTCCycleLimit(%d): reduced to %d cycles\n",V,R),V=R):DEBUG&&this.printf(MESSAGE.RTC,"getRTCCycleLimit(%d): already less than %d cycles\n",V,R):DEBUG&&this.printf(MESSAGE.RTC,"RTC next update has passed by %d cycles\n",R)}return V}setRTCCycleLimit(){let V=this.nRTCCyclesPerPeriod;this.nRTCCyclesNextUpdate=this.cpu.getCycles(this.fScaleTimers)+V,this.abCMOSData[ChipSet.CMOS.ADDR.STATUSB]&ChipSet.CMOS.STATUSB.PIE&&this.cpu.setBurstCycles(V)}updateRTCTime(){let V=this.cpu.getBaseCyclesPerSecond(),R=this.cpu.getCycles(this.fScaleTimers);if(null==this.nRTCCyclesPerPeriod&&this.calcRTCCyclePeriod(),R>=this.nRTCCyclesNextUpdate){let V=this.abCMOSData[ChipSet.CMOS.ADDR.STATUSC];this.abCMOSData[ChipSet.CMOS.ADDR.STATUSC]|=ChipSet.CMOS.STATUSC.PF,this.abCMOSData[ChipSet.CMOS.ADDR.STATUSB]&ChipSet.CMOS.STATUSB.PIE&&(DEBUG&&R-this.nRTCCyclesNextUpdate>this.nRTCCyclesPerPeriod&&(V&ChipSet.CMOS.STATUSC.PF?this.printf(MESSAGE.RTC,"RTC interrupt handler failed to clear STATUSC\n"):this.printf(MESSAGE.RTC,"CPU took too long trigger new RTC periodic interrupt\n")),this.abCMOSData[ChipSet.CMOS.ADDR.STATUSC]|=ChipSet.CMOS.STATUSC.IRQF,this.setIRR(ChipSet.IRQ.RTC)),this.nRTCCyclesNextUpdate=R+this.nRTCCyclesPerPeriod}this.abCMOSData[ChipSet.CMOS.ADDR.RTC_SEC]==this.abCMOSData[ChipSet.CMOS.ADDR.RTC_SEC_ALARM]&&this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MIN]==this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MIN_ALARM]&&this.abCMOSData[ChipSet.CMOS.ADDR.RTC_HOUR]==this.abCMOSData[ChipSet.CMOS.ADDR.RTC_HOUR_ALARM]&&(this.abCMOSData[ChipSet.CMOS.ADDR.STATUSC]|=ChipSet.CMOS.STATUSC.AF,this.abCMOSData[ChipSet.CMOS.ADDR.STATUSB]&ChipSet.CMOS.STATUSB.AIE&&(this.abCMOSData[ChipSet.CMOS.ADDR.STATUSC]|=ChipSet.CMOS.STATUSC.IRQF,this.setIRR(ChipSet.IRQ.RTC)));let U=R-this.nRTCCyclesLastUpdate,l=Math.floor(U/V);if(l&&!(this.abCMOSData[ChipSet.CMOS.ADDR.STATUSB]&ChipSet.CMOS.STATUSB.SET)){for(;l--;)if(++this.abCMOSData[ChipSet.CMOS.ADDR.RTC_SEC]>=60&&(this.abCMOSData[ChipSet.CMOS.ADDR.RTC_SEC]=0,++this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MIN]>=60&&(this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MIN]=0,++this.abCMOSData[ChipSet.CMOS.ADDR.RTC_HOUR]>=24))){this.abCMOSData[ChipSet.CMOS.ADDR.RTC_HOUR]=0,this.abCMOSData[ChipSet.CMOS.ADDR.RTC_WEEK_DAY]=this.abCMOSData[ChipSet.CMOS.ADDR.RTC_WEEK_DAY]%7+1;let V=UsrLib.getMonthDays(this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MONTH],this.abCMOSData[ChipSet.CMOS.ADDR.RTC_YEAR]);++this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MONTH_DAY]>V&&(this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MONTH_DAY]=1,++this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MONTH]>12&&(this.abCMOSData[ChipSet.CMOS.ADDR.RTC_MONTH]=1,this.abCMOSData[ChipSet.CMOS.ADDR.RTC_YEAR]=(this.abCMOSData[ChipSet.CMOS.ADDR.RTC_YEAR]+1)%100))}this.abCMOSData[ChipSet.CMOS.ADDR.STATUSA]|=ChipSet.CMOS.STATUSA.UIP,this.abCMOSData[ChipSet.CMOS.ADDR.STATUSC]|=ChipSet.CMOS.STATUSC.UF,this.abCMOSData[ChipSet.CMOS.ADDR.STATUSB]&ChipSet.CMOS.STATUSB.UIE&&(this.abCMOSData[ChipSet.CMOS.ADDR.STATUSC]|=ChipSet.CMOS.STATUSC.IRQF,this.setIRR(ChipSet.IRQ.RTC))}this.nRTCCyclesLastUpdate=R-U%V}initCMOSData(){let V;for(V=ChipSet.CMOS.ADDR.BASEMEM_LO;V<=ChipSet.CMOS.ADDR.EXTMEM_HI;V++)this.abCMOSData[V]=0;for(V=ChipSet.CMOS.ADDR.DIAG;V<ChipSet.CMOS.ADDR.CHKSUM_HI;V++)void 0===this.abCMOSData[V]&&(this.abCMOSData[V]=0);this.abCMOSData[ChipSet.CMOS.ADDR.EQUIP]=this.getDIPLegacyBits(0),this.abCMOSData[ChipSet.CMOS.ADDR.FDRIVE]=this.getDIPFloppyDriveType(0)<<4|this.getDIPFloppyDriveType(1),this.updateCMOSChecksum()}setCMOSByte(V,R){return!!this.abCMOSData&&(this.abCMOSData[V]=R,this.updateCMOSChecksum(),!0)}addCMOSMemory(V,R){if(this.abCMOSData){let U=V<1048576?ChipSet.CMOS.ADDR.BASEMEM_LO:ChipSet.CMOS.ADDR.EXTMEM_LO,l=this.abCMOSData[U]|this.abCMOSData[U+1]<<8;return l+=R>>10,this.abCMOSData[U]=255&l,this.abCMOSData[U+1]=l>>8,this.updateCMOSChecksum(),!0}return!1}setCMOSDriveType(V,R){if(this.abCMOSData){let U,l=null,e=this.abCMOSData[ChipSet.CMOS.ADDR.HDRIVE];return R>15&&(l=R,R=15),V?(e=e&ChipSet.CMOS.HDRIVE.D0_MASK|R,U=ChipSet.CMOS.ADDR.EXTHDRIVE1):(e=e&ChipSet.CMOS.HDRIVE.D1_MASK|R<<4,U=ChipSet.CMOS.ADDR.EXTHDRIVE0),this.setCMOSByte(ChipSet.CMOS.ADDR.HDRIVE,e),null!=l&&this.setCMOSByte(U,l),!0}return!1}syncRTCTime(){if(null!=this.nRTCSeconds){let V=18.2065*this.nRTCSeconds;this.bus.setShort(ROMx86.BIOS.TIMER_LOW,65535&V),this.bus.setShort(ROMx86.BIOS.TIMER_HIGH,V>>>16),this.bus.setByte(ROMx86.BIOS.TIMER_OFL,0),this.nRTCSeconds=void 0}}updateCMOSChecksum(){let V=0;for(let R=ChipSet.CMOS.ADDR.FDRIVE;R<ChipSet.CMOS.ADDR.CHKSUM_HI;R++)V+=this.abCMOSData[R];this.abCMOSData[ChipSet.CMOS.ADDR.CHKSUM_LO]=255&V,this.abCMOSData[ChipSet.CMOS.ADDR.CHKSUM_HI]=V>>8}save(){let V=new State(this);return V.set(0,[this.aDIPSwitches]),V.set(1,[this.saveDMAControllers()]),V.set(2,[this.savePICs()]),V.set(3,[this.bPIT0Ctrl,this.saveTimers(),this.bPIT1Ctrl]),V.set(4,[this.bPPIA,this.bPPIB,this.bPPIC,this.bPPICtrl,this.bNMI]),this.model>=ChipSet.MODEL_5170&&(V.set(5,[this.b8042Status,this.b8042InBuff,this.b8042CmdData,this.b8042OutBuff,this.b8042InPort,this.b8042OutPort]),V.set(6,[this.abDMAPageSpare[7],this.abDMAPageSpare,this.bCMOSAddr,this.abCMOSData,this.nRTCCyclesLastUpdate,this.nRTCCyclesNextUpdate])),V.data()}restore(V){let R,U;for(R=V[0],Array.isArray(R[0])?this.aDIPSwitches=R[0]:(this.aDIPSwitches[0][0]=R[0],this.aDIPSwitches[1][0]=15&R[1],this.aDIPSwitches[0][1]=R[2],this.aDIPSwitches[1][1]=15&R[3]),this.updateDIPSwitches(),R=V[1],U=0;U<this.cDMACs;U++)this.initDMAController(U,1==R.length?R[0][U]:R);for(R=V[2],U=0;U<this.cPICs;U++)this.initPIC(U,0===U?this.portPIC0:this.portPIC1,R[0][U]);for(R=V[3],this.bPIT0Ctrl=R[0],this.bPIT1Ctrl=R[2],U=0;U<this.aTimers.length;U++)this.initTimer(U,R[1][U]);return R=V[4],this.bPPIA=R[0],this.bPPIB=R[1],this.bPPIC=R[2],this.bPPICtrl=R[3],this.bNMI=R[4],R=V[5],R&&(this.b8042Status=R[0],this.b8042InBuff=R[1],this.b8042CmdData=R[2],this.b8042OutBuff=R[3],this.b8042InPort=R[4],this.b8042OutPort=R[5]),R=V[6],R&&(this.abDMAPageSpare=R[1],this.abDMAPageSpare[7]=R[0],this.bCMOSAddr=R[2],this.abCMOSData=R[3],this.nRTCCyclesLastUpdate=R[4],this.nRTCCyclesNextUpdate=R[5],this.nRTCSeconds=this.initRTCTime()),!0}start(){this.setSpeaker()}stop(){this.setSpeaker()}initDMAController(V,R){let U=this.aDMACs[V];U||(U={aChannels:new Array(4)});let l=R&&R.length>=5?R:this.aDMAControllerInit;U.bStatus=l[0],U.bCmd=l[1],U.bReq=l[2],U.bIndex=l[3],U.nChannelBase=V<<2;for(let V=0;V<U.aChannels.length;V++)this.initDMAChannel(U,V,l[4][V]);U.bTemp=l[5]||0,this.aDMACs[V]=U}initDMAChannel(V,R,U){let l=V.aChannels[R];l||(l={addrInit:[0,0],countInit:[0,0],addrCurrent:[0,0],countCurrent:[0,0]});let e=U&&8==U.length?U:this.aDMAChannelInit;l.masked=e[0],l.addrInit[0]=e[1][0],l.addrInit[1]=e[1][1],l.countInit[0]=e[2][0],l.countInit[1]=e[2][1],l.addrCurrent[0]=e[3][0],l.addrCurrent[1]=e[3][1],l.countCurrent[0]=e[4][0],l.countCurrent[1]=e[4][1],l.mode=e[5],l.bPage=e[6],l.controller=V,l.iChannel=R,this.initDMAFunction(l,e[8],e[9]),V.aChannels[R]=l}initDMAFunction(V,R,U,l){return"string"==typeof R&&(R=Component.getComponentByID(R)),R&&(V.done=null,V.sDevice=R.id,V.sFunction=U,V.component=R,V.fnTransfer=R[U],V.obj=l),V.fnTransfer}saveDMAControllers(){let V=[];for(let R=0;R<this.aDMACs;R++){let U=this.aDMACs[R];V[R]=[U.bStatus,U.bCmd,U.bReq,U.bIndex,this.saveDMAChannels(U),U.bTemp]}return V}saveDMAChannels(V){let R=[];for(let U=0;U<V.aChannels.length;U++){let l=V.aChannels[U];R[U]=[l.masked,l.addrInit,l.countInit,l.addrCurrent,l.countCurrent,l.mode,l.bPage,l.sDevice,l.sFunction]}return R}initPIC(V,R,U){let l=this.aPICs[V];l||(l={aICW:[null,null,null,null]});let e=U&&8==U.length?U:this.aPICInit;l.port=R,l.nIRQBase=V<<3,l.nDelay=e[0],l.aICW[0]=e[1][0],l.aICW[1]=e[1][1],l.aICW[2]=e[1][2],l.aICW[3]=e[1][3],l.nICW=e[2],l.bIMR=e[3],l.bIRR=e[4],l.bISR=e[5],l.bIRLow=e[6],l.bOCW3=e[7],this.aPICs[V]=l}savePICs(){let V=[];for(let R=0;R<this.aPICs.length;R++){let U=this.aPICs[R];V[R]=[U.nDelay,U.aICW,U.nICW,U.bIMR,U.bIRR,U.bISR,U.bIRLow,U.bOCW3]}return V}initTimer(V,R){let U=this.aTimers[V];U||(U={countInit:[0,0],countStart:[0,0],countCurrent:[0,0],countLatched:[0,0]});let l=R&&R.length>=13?R:this.aTimerInit;U.countInit[0]=l[0][0],U.countInit[1]=l[0][1],U.countStart[0]=l[1][0],U.countStart[1]=l[1][1],U.countCurrent[0]=l[2][0],U.countCurrent[1]=l[2][1],U.countLatched[0]=l[3][0],U.countLatched[1]=l[3][1],U.bcd=l[4],U.mode=l[5],U.rw=l[6],U.countIndex=l[7],U.countBytes=l[8],U.fOUT=l[9],U.fCountLatched=l[10],U.fCounting=l[11],U.nCyclesStart=l[12],U.bStatus=l[13]||0,U.fStatusLatched=l[14]||!1,this.aTimers[V]=U}saveTimers(){let V=[];for(let R=0;R<this.aTimers.length;R++){let U=this.aTimers[R];V[R]=[U.countInit,U.countStart,U.countCurrent,U.countLatched,U.bcd,U.mode,U.rw,U.countIndex,U.countBytes,U.fOUT,U.fCountLatched,U.fCounting,U.nCyclesStart,U.bStatus,U.fStatusLatched]}return V}addDIPSwitches(V,R){let U="",l=this.bindings[R];for(let V=1;V<=8;V++){let l=this.sCellClass;V||(l+=" "+this.sCellClass+"Left"),U+='<div id="'+(R+"-"+V)+'" class="'+l+'" data-value="0">'+V+"</div>\n"}l.innerHTML=U,this.updateDIPSwitchControls(V,R,!0)}findDIPSwitch(V,R){let U=ChipSet.DIPSW[0|this.model],l=U&&U[V];if(l)for(let V in l){let U=l[V];if(U.MASK&1<<R)return U}return null}getDIPLegacyBits(V){let R;if(!V){R=0,R|=this.getDIPVideoMonitor()<<ChipSet.PPI_SW.MONITOR.SHIFT&ChipSet.PPI_SW.MONITOR.MASK,R|=this.getDIPCoprocessor()?ChipSet.PPI_SW.FPU:0;let V=this.getDIPFloppyDrives();R|=V?V-1<<ChipSet.PPI_SW.FDRIVE.SHIFT&ChipSet.PPI_SW.FDRIVE.MASK|ChipSet.PPI_SW.FDRIVE.IPL:0}return R}getDIPSwitches(V,R){let U=null,l=ChipSet.DIPSW[this.model]||ChipSet.DIPSW[0|this.model]||ChipSet.DIPSW[ChipSet.MODEL_5150];for(let e=0;e<l.length;e++){let t=l[e];if(t){let l=t[V];if(l){let V=this.aDIPSwitches[e][R?0:1]&l.MASK;for(let R in l.VALUES)if(l.VALUES[R]==V&&(U=R,"number"==typeof+U))break;break}}}return U}getDIPSwitchRange(V){let R=[-1,-1],U=ChipSet.DIPSW[this.model]||ChipSet.DIPSW[0|this.model]||ChipSet.DIPSW[ChipSet.MODEL_5150];for(let l=0;l<U.length;l++){let e=U[l];if(e){let U=e[V];if(U)for(let V in U.VALUES)(R[0]<0||R[0]>+V)&&(R[0]=+V),(R[1]<0||R[1]<+V)&&(R[1]=+V)}}return R}getDIPCoprocessor(V){return+this.getDIPSwitches(ChipSet.SW_TYPE.FPU,V)}getDIPFloppyDrives(V){return+this.getDIPSwitches(ChipSet.SW_TYPE.FLOPNUM,V)}getDIPFloppyDriveType(V){if(V<this.getDIPFloppyDrives()){if(!this.aFloppyDrives)return ChipSet.CMOS.FDRIVE.FD360;if(V<this.aFloppyDrives.length)switch(this.aFloppyDrives[V]){case 160:case 180:case 320:case 360:return ChipSet.CMOS.FDRIVE.FD360;case 720:return ChipSet.CMOS.FDRIVE.FD720;case 1200:return ChipSet.CMOS.FDRIVE.FD1200;case 1440:return ChipSet.CMOS.FDRIVE.FD1440}}return ChipSet.CMOS.FDRIVE.NONE}getDIPFloppyDriveSize(V){if(V<this.getDIPFloppyDrives()){if(!this.aFloppyDrives)return 360;if(V<this.aFloppyDrives.length)return this.aFloppyDrives[V]}return 0}getDIPMemorySize(V){return+this.getDIPSwitches(ChipSet.SW_TYPE.LOWMEM,V)+ +this.getDIPSwitches(ChipSet.SW_TYPE.EXPMEM,V)}setDIPMemorySize(V){let R=this.getDIPSwitchRange(ChipSet.SW_TYPE.LOWMEM);if(V<=R[1]&&this.setDIPSwitches(ChipSet.SW_TYPE.LOWMEM,V)&&this.setDIPSwitches(ChipSet.SW_TYPE.EXPMEM,0))return!0;let U=this.getDIPSwitchRange(ChipSet.SW_TYPE.EXPMEM);return!!(V<=R[1]+U[1]&&(V-=R[1],this.setDIPSwitches(ChipSet.SW_TYPE.LOWMEM,R[1])&&this.setDIPSwitches(ChipSet.SW_TYPE.EXPMEM,V)))}getDIPVideoMonitor(V){return+this.getDIPSwitches(ChipSet.SW_TYPE.MONITOR,V)}parseDIPSwitches(V,R){let U=R;if(V){U=0;let R=1;for(let l=0;l<V.length;l++)"0"==V.charAt(l)&&(U|=R),R<<=1}return U}setDIPSwitches(V,R,U){let l=ChipSet.DIPSW[this.model]||ChipSet.DIPSW[0|this.model]||ChipSet.DIPSW[ChipSet.MODEL_5150];for(let e=0;e<l.length;e++){let t=l[e];if(t){let l=t[V];if(l)for(let V in l.VALUES)if(V==R)return this.aDIPSwitches[e][U?0:1]&=~l.MASK,this.aDIPSwitches[e][U?0:1]|=l.VALUES[V],!0}}return!1}getDIPSwitchControl(V){return"1"==V.getAttribute("data-value")}setDIPSwitchControl(V,R){V.setAttribute("data-value",R?"1":"0"),V.style.color=R?"#ffffff":"#000000",V.style.backgroundColor=R?"#000000":"#ffffff"}toggleDIPSwitchControl(V){let R=!this.getDIPSwitchControl(V);this.setDIPSwitchControl(V,R);let U=V.getAttribute("id").split("-"),l=1<<+U[1]-1;switch(U[0]){case ChipSet.CONTROLS.SW1:this.aDIPSwitches[0][0]=this.aDIPSwitches[0][0]&~l|(R?0:l);break;case ChipSet.CONTROLS.SW2:this.aDIPSwitches[1][0]=this.aDIPSwitches[1][0]&~l|(R?0:l)}this.updateDIPSwitchDescriptions()}updateDIPSwitches(){this.updateDIPSwitchControls(0,ChipSet.CONTROLS.SW1),this.updateDIPSwitchControls(1,ChipSet.CONTROLS.SW2),this.updateDIPSwitchDescriptions()}updateDIPSwitchControls(V,R,U){let l=this.bindings[R];if(l){let R;R=U?this.aDIPSwitches[V][0]:this.aDIPSwitches[V][1]=this.aDIPSwitches[V][0];let e=Component.getElementsByClass(this.sCellClass,"",l);for(let U=0;U<e.length;U++){let l=this.findDIPSwitch(V,U),t=l&&l.LABEL||"Reserved";e[U].setAttribute("title",t),this.setDIPSwitchControl(e[U],!(R&1<<U)),e[U].onclick=function(V,R){return function(){V.toggleDIPSwitchControl(R)}}(this,e[U])}}}updateDIPSwitchDescriptions(){let V=this.bindings[ChipSet.CONTROLS.SWDESC];if(null!=V){let R="",U={0:"Enhanced Color",1:"TV",2:"Color",3:"Monochrome"};R+=this.getDIPMemorySize(!0)+"K",R+=", "+(+this.getDIPCoprocessor(!0)?"":"No ")+"FPU",R+=", "+U[this.getDIPVideoMonitor(!0)]+" Monitor",R+=", "+this.getDIPFloppyDrives(!0)+" Floppy Drives",(null!=this.aDIPSwitches[0][1]&&this.aDIPSwitches[0][1]!=this.aDIPSwitches[0][0]||null!=this.aDIPSwitches[1][1]&&this.aDIPSwitches[1][1]!=this.aDIPSwitches[1][0])&&(R+=" (Reset required)"),V.textContent=R}}dumpPIC(){if(DEBUGGER)for(let V=0;V<this.aPICs.length;V++){let R=this.aPICs[V],U="PIC"+V+":";for(let V=0;V<R.aICW.length;V++){let l=R.aICW[V];U+=" IC"+(V+1)+"="+StrLib.toHexByte(l)}U+=" IMR="+StrLib.toHexByte(R.bIMR)+" IRR="+StrLib.toHexByte(R.bIRR)+" ISR="+StrLib.toHexByte(R.bISR)+" DELAY="+R.nDelay+"\n",this.print(U)}}dumpTimer(V){if(DEBUGGER){let R=V[0],U=R?+R:null;for(let V=0;V<this.aTimers.length;V++){if(null!=U&&V!=U)continue;this.updateTimer(V);let R=this.aTimers[V],l="TIMER"+V+":",e=0;if(null!=R.countBytes)for(let V=0;V<=R.countBytes;V++)e|=R.countCurrent[V]<<8*V;l+=" mode="+(R.mode>>1)+" bytes="+R.countBytes+" count="+StrLib.toHexWord(e)+"\n",this.print(l)}}}dumpCMOS(){if(DEBUGGER){let V="";for(let R=0;R<ChipSet.CMOS.ADDR.TOTAL;R++){let U=R<=ChipSet.CMOS.ADDR.STATUSD?this.getRTCByte(R):this.abCMOSData[R];V&&(V+="\n"),V+="CMOS["+StrLib.toHexByte(R)+"]: "+StrLib.toHexByte(U)+"\n"}this.print(V)}}inDMAChannelAddr(V,R,U,l){let e=this.aDMACs[V],t=e.aChannels[R],T=t.addrCurrent[e.bIndex];return this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(U,void 0,l,"DMA"+V+".CHANNEL"+R+".ADDR["+e.bIndex+"]",T,!0),e.bIndex^=1,V||R!=ChipSet.DMA_REFRESH||e.bIndex||(t.addrCurrent[0]++,t.addrCurrent[0]>255&&(t.addrCurrent[0]=0,t.addrCurrent[1]++,t.addrCurrent[1]>255&&(t.addrCurrent[1]=0))),T}outDMAChannelAddr(V,R,U,l,e){let t=this.aDMACs[V];this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(U,l,e,"DMA"+V+".CHANNEL"+R+".ADDR["+t.bIndex+"]",void 0,!0);let T=t.aChannels[R];T.addrCurrent[t.bIndex]=T.addrInit[t.bIndex]=l,t.bIndex^=1}inDMAChannelCount(V,R,U,l){let e=this.aDMACs[V],t=e.aChannels[R],T=t.countCurrent[e.bIndex];return this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(U,void 0,l,"DMA"+V+".CHANNEL"+R+".COUNT["+e.bIndex+"]",T,!0),e.bIndex^=1,V||R!=ChipSet.DMA_REFRESH||e.bIndex||(t.countCurrent[0]--,t.countCurrent[0]<0&&(t.countCurrent[0]=255,t.countCurrent[1]--,t.countCurrent[1]<0&&(t.countCurrent[1]=255))),T}outDMAChannelCount(V,R,U,l,e){let t=this.aDMACs[V];this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(U,l,e,"DMA"+V+".CHANNEL"+R+".COUNT["+t.bIndex+"]",void 0,!0);let T=t.aChannels[R];T.countCurrent[t.bIndex]=T.countInit[t.bIndex]=l,t.bIndex^=1}inDMAStatus(V,R,U){let l=this.aDMACs[V],e=l.bStatus|ChipSet.DMA_STATUS.CH0_TC;return l.bStatus&=~ChipSet.DMA_STATUS.ALL_TC,this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(R,void 0,U,"DMA"+V+".STATUS",e,!0),e}outDMACmd(V,R,U,l){this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(R,U,l,"DMA"+V+".CMD",void 0,!0),this.aDMACs[V].bCmd=U}outDMAReq(V,R,U,l){let e=this.aDMACs[V];this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(R,U,l,"DMA"+V+".REQ",void 0,!0);let t=3&U,T=(4&U)<<t+2;e.bStatus=e.bStatus&~(16<<t)|T,e.bReq=U}outDMAMask(V,R,U,l){let e=this.aDMACs[V];this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(R,U,l,"DMA"+V+".MASK",void 0,!0);let t=U&ChipSet.DMA_MASK.CHANNEL,T=e.aChannels[t];T.masked=!!(U&ChipSet.DMA_MASK.CHANNEL_SET),T.masked||this.requestDMA(e.nChannelBase+t)}outDMAMode(V,R,U,l){this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(R,U,l,"DMA"+V+".MODE",void 0,!0);let e=U&ChipSet.DMA_MODE.CHANNEL;this.aDMACs[V].aChannels[e].mode=U}outDMAResetFF(V,R,U,l){this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(R,U,l,"DMA"+V+".RESET_FF",void 0,!0),this.aDMACs[V].bIndex=0}inDMATemp(V,R,U){let l=this.aDMACs[V].bTemp;return this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(R,void 0,U,"DMA"+V+".TEMP",l,!0),l}outDMAMasterClear(V,R,U,l){this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(R,U,l,"DMA"+V+".MASTER_CLEAR",void 0,!0);let e=this.aDMACs[V];for(let V=0;V<e.aChannels.length;V++)this.initDMAChannel(e,V)}inDMAPageReg(V,R,U,l){let e=this.aDMACs[V].aChannels[R].bPage;return this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(U,void 0,l,"DMA"+V+".CHANNEL"+R+".PAGE",e,!0),e}outDMAPageReg(V,R,U,l,e){this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(U,l,e,"DMA"+V+".CHANNEL"+R+".PAGE",void 0,!0),this.aDMACs[V].aChannels[R].bPage=l}inDMAPageSpare(V,R,U){let l=this.abDMAPageSpare[V];return this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(R,void 0,U,"DMA.SPARE"+V+".PAGE",l,!0),l}outDMAPageSpare(V,R,U,l){this.messageEnabled(MESSAGE.DMA+MESSAGE.PORT)&&this.printIO(R,U,l,"DMA.SPARE"+V+".PAGE",void 0,!0),this.abDMAPageSpare[V]=U}getDMAState(V){let R=V>>2,U=3&V,l=this.aDMACs[R].aChannels[U];return[l.bPage<<16|l.addrCurrent[1]<<8|l.addrCurrent[0],l.countCurrent[1]<<8|l.countCurrent[0]]}connectDMA(V,R,U,l){let e=V>>2,t=3&V,T=this.aDMACs[e].aChannels[t];this.initDMAFunction(T,R,U,l)}requestDMA(V,R){let U=V>>2,l=3&V,e=this.aDMACs[U].aChannels[l];if(!e.component||!e.fnTransfer||!e.obj)return DEBUG&&this.printf(MESSAGE.DMA+MESSAGE.DATA,"requestDMA(%d): not connected to a component\n",V),void(R&&R(!0));R&&(e.done=R),e.masked?DEBUG&&this.printf(MESSAGE.DMA+MESSAGE.DATA,"requestDMA(%d): channel masked, request queued\n",V):this.advanceDMA(e,!0)}advanceDMA(V,R){R&&(V.count=V.countCurrent[1]<<8|V.countCurrent[0],V.type=V.mode&ChipSet.DMA_MODE.TYPE,V.fWarning=V.fError=!1,DEBUG&&DEBUGGER&&(V.cbDebug=V.count+1,V.sAddrDebug=DEBUG&&DEBUGGER?null:void 0));let U=null,l=this,e=!1,t=V.controller.nChannelBase+V.iChannel;for(;;){if(V.count>=0){let R,T=V.bPage<<16|V.addrCurrent[1]<<8|V.addrCurrent[0];DEBUG&&DEBUGGER&&null===V.sAddrDebug&&(V.sAddrDebug=StrLib.toHex(T>>4,4)+":"+StrLib.toHex(15&T,4),V.type!=ChipSet.DMA_MODE.TYPE_WRITE&&this.messageEnabled(this.messageBitsDMA(t))&&(this.printf(MESSAGE.DMA,"advanceDMA(%d) transferring %d bytes from %s\n",t,V.cbDebug,V.sAddrDebug),this.dbg.doDump(["db",V.sAddrDebug,"l"+V.cbDebug]))),V.type==ChipSet.DMA_MODE.TYPE_WRITE?(e=!0,function(R){V.fnTransfer.call(V.component,V.obj,-1,(function(T,k,F,W){T<0&&(V.fWarning||(DEBUG&&l.printf(MESSAGE.DMA,"advanceDMAWrite(%d) ran out of data, assuming 0xff\n",t),V.fWarning=!0),T=255),V.masked||V.fError||(l.bus.setByte(R,T),BACKTRACK&&F&&(!W&&F.file&&l.printf(MESSAGE.DISK,"loading %s[%#0X] at %%%0X\n",F.file.path,F.offFile,R),U=l.bus.addBackTrackObject(F,U,W),l.bus.writeBackTrackObject(R,U,W))),e=k,k&&setTimeout((function(){l.updateDMA(V)||l.advanceDMA(V)}),0)}))}(T)):V.type==ChipSet.DMA_MODE.TYPE_READ?(R=l.bus.getByte(T),V.fnTransfer.call(V.component,V.obj,R)<0&&(V.fError=!0)):V.type==ChipSet.DMA_MODE.TYPE_VERIFY?V.fnTransfer.call(V.component,V.obj,-1,(function(R,U,e,T){R<0&&(V.fWarning||(DEBUG&&l.printf(MESSAGE.DMA,"advanceDMAVerify(%d) ran out of data\n",t),V.fWarning=!0))})):(DEBUG&&this.printf(MESSAGE.DMA+MESSAGE.WARNING,"advanceDMA(%d) unsupported transfer type %#06X\n",t,V.type),V.fError=!0)}if(e||this.updateDMA(V))break}}updateDMA(V){if(!V.fError&&--V.count>=0&&(V.mode&ChipSet.DMA_MODE.DECREMENT?(V.addrCurrent[0]--,V.addrCurrent[0]<0&&(V.addrCurrent[0]=255,V.addrCurrent[1]--,V.addrCurrent[1]<0&&(V.addrCurrent[1]=255))):(V.addrCurrent[0]++,V.addrCurrent[0]>255&&(V.addrCurrent[0]=0,V.addrCurrent[1]++,V.addrCurrent[1]>255&&(V.addrCurrent[1]=0))),!V.masked))return!1;let R=V.controller,U=R.nChannelBase+V.iChannel;return R.bStatus=R.bStatus&~(16<<V.iChannel)|1<<V.iChannel,V.mode&ChipSet.DMA_MODE.AUTOINIT||(V.masked=!0,V.component=V.obj=null),DEBUG&&V.type==ChipSet.DMA_MODE.TYPE_WRITE&&V.sAddrDebug&&this.messageEnabled(this.messageBitsDMA(U))&&(this.printf(MESSAGE.DMA,"updateDMA(%d) transferred %d bytes to %s\n",U,V.cbDebug,V.sAddrDebug),this.dbg.doDump(["db",V.sAddrDebug,"l"+V.cbDebug])),V.done&&(V.done(!V.fError),V.done=null),!0}inPICLo(V,R){let U=0,l=this.aPICs[V];if(null!=l.bOCW3){switch(l.bOCW3&ChipSet.PIC_LO.OCW3_READ_CMD){case ChipSet.PIC_LO.OCW3_READ_IRR:U=l.bIRR;break;case ChipSet.PIC_LO.OCW3_READ_ISR:U=l.bISR}}return this.messageEnabled(MESSAGE.PIC+MESSAGE.PORT)&&this.printIO(l.port,void 0,R,"PIC"+V,U,!0),U}outPICLo(V,R,U){let l=this.aPICs[V];if(this.messageEnabled(MESSAGE.PIC+MESSAGE.PORT)&&this.printIO(l.port,R,U,"PIC"+V,void 0,!0),R&ChipSet.PIC_LO.ICW1)l.nICW=0,l.aICW[l.nICW++]=R,l.bIMR=0,l.bIRLow=7,l.bIRR=l.bISR=0,l.bOCW3=ChipSet.PIC_LO.OCW3|ChipSet.PIC_LO.OCW3_READ_IRR;else if(R&ChipSet.PIC_LO.OCW3)R&(ChipSet.PIC_LO.OCW3_POLL_CMD|ChipSet.PIC_LO.OCW3_SMM_CMD)&&this.printf(MESSAGE.PIC+MESSAGE.WARNING+MESSAGE.ADDR,"outPIC%d(%#04X): unsupported OCW3 %#04X\n",V,l.port,R),l.bOCW3=R;else{let U=R&ChipSet.PIC_LO.OCW2_OP_MASK;if(U&ChipSet.PIC_LO.OCW2_EOI){let e,t=0;if((U&ChipSet.PIC_LO.OCW2_EOI_SPEC)==ChipSet.PIC_LO.OCW2_EOI_SPEC)e=R&ChipSet.PIC_LO.OCW2_IR_LVL,t=1<<e;else{for(e=l.bIRLow+1;;){e&=7;let V=1<<e;if(l.bISR&V){t=V;break}if(e++==l.bIRLow)break}DEBUG&&!t&&(e=null)}let T=null==e?void 0:l.nIRQBase+e;l.bISR&t?(DEBUG&&this.dbg&&this.printf(this.messageBitsIRQ(T),"outPIC%d(%#04X): IRQ %d ending @%s stack=%s\n",V,l.port,T,this.dbg.toHexOffset(this.cpu.getIP(),this.cpu.getCS()),this.dbg.toHexOffset(this.cpu.getSP(),this.cpu.getSS())),l.bISR&=~t,this.checkIRR()):DEBUG&&(this.printf(MESSAGE.PIC+MESSAGE.WARNING+MESSAGE.ADDR,"outPIC%d(%#04X): unexpected EOI for IRQ %d\n",V,l.port,T),MAXDEBUG&&this.dbg&&this.dbg.stopCPU()),U&ChipSet.PIC_LO.OCW2_SET_ROTAUTO&&this.printf(MESSAGE.PIC+MESSAGE.WARNING+MESSAGE.ADDR,"outPIC%d(%#04X): unsupported OCW2 rotate %#04X\n",V,l.port,R)}else U==ChipSet.PIC_LO.OCW2_SET_PRI?l.bIRLow=R&ChipSet.PIC_LO.OCW2_IR_LVL:this.printf(MESSAGE.PIC+MESSAGE.WARNING+MESSAGE.ADDR,"outPIC%d(%#04X): unsupported OCW2 automatic rotate %#04X\n",V,l.port,R)}}inPICHi(V,R){let U=this.aPICs[V],l=U.bIMR;return this.messageEnabled(MESSAGE.PIC+MESSAGE.PORT)&&this.printIO(U.port+1,void 0,R,"PIC"+V,l,!0),l}outPICHi(V,R,U){let l=this.aPICs[V];this.messageEnabled(MESSAGE.PIC+MESSAGE.PORT)&&this.printIO(l.port+1,R,U,"PIC"+V,void 0,!0),l.nICW<l.aICW.length?(l.aICW[l.nICW++]=R,2==l.nICW&&l.aICW[0]&ChipSet.PIC_LO.ICW1_SNGL&&l.nICW++,3!=l.nICW||l.aICW[0]&ChipSet.PIC_LO.ICW1_ICW4||l.nICW++):(l.bIMR=R,this.cpu.delayINTR(),this.checkIRR(V||253!=R?0:6))}checkIMR(V){let R=V>>3,U=7&V;return!!(this.aPICs[R].bIMR&1<<U)}setIRR(V,R){V==ChipSet.IRQ.SLAVE&&2==this.cPICs&&(V=ChipSet.IRQ.IRQ2);let U=V>>3,l=7&V,e=this.aPICs[U],t=1<<l;e.bIRR&t||(e.bIRR|=t,this.printf(this.messageBitsIRQ(V),"set IRQ %d\n",V),e.nDelay=R||0,this.checkIRR())}clearIRR(V){let R=V>>3,U=7&V,l=this.aPICs[R],e=1<<U;l.bIRR&e&&(l.bIRR&=~e,this.printf(this.messageBitsIRQ(V),"clear IRQ %d\n",V),this.checkIRR())}checkIRR(V){let R,U=-1;this.cPICs>1&&(R=this.aPICs[1],U=~(R.bISR|R.bIMR)&R.bIRR),R=this.aPICs[0],U>=0&&(U?R.bIRR|=1<<ChipSet.IRQ.SLAVE:R.bIRR&=~(1<<ChipSet.IRQ.SLAVE)),U=~(R.bISR|R.bIMR)&R.bIRR,this.cpu.updateINTR(!!U),U&&V&&(R.nDelay=V)}getIRRVector(V){void 0===V&&(V=0);let R=-1,U=this.aPICs[V];if(U.nDelay)R=-2,U.nDelay--;else{let l=U.bIRR&(255^(U.bISR|U.bIMR)),e=U.bIRLow+1;for(;;){e&=7;let t=1<<e;if(U.bISR&t)break;if(l&t){if(R=!V&&e==ChipSet.IRQ.SLAVE&&this.aPICs.length>1?this.getIRRVector(1):U.aICW[1]+e,R>=0){U.bISR|=t,U.bIRR&=~t;let V=U.nIRQBase+e;DEBUG&&this.dbg&&this.printf(this.messageBitsIRQ(V)+MESSAGE.ADDR,"getIRRVector(): IRQ %d interrupting stack %s\n",V,this.dbg.toHexOffset(this.cpu.getSP(),this.cpu.getSS())),MAXDEBUG&&DEBUGGER&&this.acInterrupts[V]++}break}if(e++==U.bIRLow)break}}return R}setFPUInterrupt(){this.model>=ChipSet.MODEL_5170?this.setIRR(ChipSet.IRQ.FPU):this.bNMI&ChipSet.NMI.ENABLE&&X86.helpInterrupt.call(this.cpu,X86.EXCEPTION.NMI)}clearFPUInterrupt(){this.model>=ChipSet.MODEL_5170&&this.clearIRR(ChipSet.IRQ.FPU)}inTimer(V,R,U,l){let e,t=V?3:0,T=this.aTimers[t+R];return T.fStatusLatched?(e=T.bStatus,T.fStatusLatched=!1):(T.countIndex==T.countBytes&&this.resetTimerIndex(t+R),T.fCountLatched?(e=T.countLatched[T.countIndex++],T.countIndex==T.countBytes&&(T.fCountLatched=!1)):(this.updateTimer(t+R),e=T.countCurrent[T.countIndex++])),this.messageEnabled(MESSAGE.TIMER+MESSAGE.PORT)&&this.printIO(U,void 0,l,"PIT"+V+".TIMER"+R,e,!0),e}outTimer(V,R,U,l,e){this.messageEnabled(MESSAGE.TIMER+MESSAGE.PORT)&&this.printIO(U,l,e,"PIT"+V+".TIMER"+R,void 0,!0);let t=V?3:0,T=this.aTimers[t+R];if(T.countIndex==T.countBytes&&this.resetTimerIndex(t+R),T.countInit[T.countIndex++]=l,T.countIndex==T.countBytes){if((!T.fCounting||T.mode==ChipSet.PIT_CTRL.MODE0||T.mode==ChipSet.PIT_CTRL.MODE4)&&(T.fCountLatched=!1,T.countCurrent[0]=T.countStart[0]=T.countInit[0],T.countCurrent[1]=T.countStart[1]=T.countInit[1],T.nCyclesStart=this.cpu.getCycles(this.fScaleTimers),T.fCounting=!0,T.fOUT=T.mode!=ChipSet.PIT_CTRL.MODE0,V==ChipSet.PIT0.INDEX&&R==ChipSet.PIT0.TIMER0)){this.clearIRR(ChipSet.IRQ.TIMER0);let V=this.getTimerInit(ChipSet.PIT0.TIMER0)*this.nTicksDivisor|0;T.mode==ChipSet.PIT_CTRL.MODE3&&(V>>=1),this.cpu.setBurstCycles(V)}V==ChipSet.PIT0.INDEX&&R==ChipSet.PIT0.TIMER2&&this.setSpeaker()}}inTimerCtrl(V,R,U){return this.printIO(R,void 0,U,"PIT"+V+".CTRL",void 0,MESSAGE.TIMER),V?this.bPIT1Ctrl:this.bPIT0Ctrl}outTimerCtrl(V,R,U,l){this.printIO(R,U,l,"PIT"+V+".CTRL",void 0,MESSAGE.TIMER);let e=0,t=U&ChipSet.PIT_CTRL.SC;if(V?(e=3,this.bPIT1Ctrl=U):this.bPIT0Ctrl=U,t==ChipSet.PIT_CTRL.SC_BACK){if(!(U&ChipSet.PIT_CTRL.RB_STATUS))for(t=0;t<=2;t++)U&ChipSet.PIT_CTRL.RB_CTR0<<t&&this.latchTimerStatus(e+t);if(!(U&ChipSet.PIT_CTRL.RB_COUNTS))for(t=0;t<=2;t++)U&ChipSet.PIT_CTRL.RB_CTR0<<t&&this.latchTimerCount(e+t);return}t>>=ChipSet.PIT_CTRL.SC_SHIFT;let T=U&ChipSet.PIT_CTRL.BCD,k=U&ChipSet.PIT_CTRL.MODE,F=U&ChipSet.PIT_CTRL.RW;if(F==ChipSet.PIT_CTRL.RW_LATCH)this.latchTimerCount(e+t);else if(this.setTimerMode(e+t,T,k,F),V==ChipSet.PIT0.INDEX&&t==ChipSet.PIT0.TIMER0&&this.clearIRR(ChipSet.IRQ.TIMER0),V==ChipSet.PIT0.INDEX&&t==ChipSet.PIT0.TIMER2){if(255==this.aPICs[0].bIMR&&this.bPPIB==(ChipSet.PPI_B.CLK_TIMER2|ChipSet.PPI_B.ENABLE_SW2|ChipSet.PPI_B.CASS_MOTOR_OFF|ChipSet.PPI_B.CLK_KBD)){let V=this.aTimers[0];V.countStart[0]=V.countInit[0],V.countStart[1]=V.countInit[1],V.nCyclesStart=this.cpu.getCycles(this.fScaleTimers),DEBUG&&this.printf(MESSAGE.TIMER,"PIT0.TIMER0 count reset @%d cycles\n",V.nCyclesStart)}}}getTimerInit(V){let R=this.aTimers[V],U=R.countInit[1]<<8|R.countInit[0];return U||(U=1==R.countBytes?256:65536),U}getTimerStart(V){let R=this.aTimers[V],U=R.countStart[1]<<8|R.countStart[0];return U||(U=1==R.countBytes?256:65536),U}getTimerCycleLimit(V,R){let U=this.aTimers[V];if(U.fCounting){let l=(this.cpu.getCycles(this.fScaleTimers)-U.nCyclesStart)/this.nTicksDivisor|0,e=this.getTimerStart(V)-l;U.mode==ChipSet.PIT_CTRL.MODE3&&(e-=l);let t=e*this.nTicksDivisor|0;U.mode==ChipSet.PIT_CTRL.MODE3&&(t>>=1),R>t&&(R=t)}return R}latchTimerCount(V){this.updateTimer(V);let R=this.aTimers[V];R.countLatched[0]=R.countCurrent[0],R.countLatched[1]=R.countCurrent[1],R.fCountLatched=!0,this.resetTimerIndex(V)}latchTimerStatus(V){let R=this.aTimers[V];R.fStatusLatched||(this.updateTimer(V),R.bStatus=R.bcd|R.mode|R.rw|(R.countIndex<R.countBytes?ChipSet.PIT_CTRL.RB_NULL:0)|(R.fOUT?ChipSet.PIT_CTRL.RB_OUT:0),R.fStatusLatched=!0)}setTimerMode(V,R,U,l){let e=this.aTimers[V];e.rw=l,e.mode=U,e.bcd=R,e.countInit=[0,0],e.countCurrent=[0,0],e.countLatched=[0,0],e.fOUT=!1,e.fCountLatched=!1,e.fCounting=!1,e.fStatusLatched=!1,this.resetTimerIndex(V)}resetTimerIndex(V){let R=this.aTimers[V];R.countIndex=R.rw==ChipSet.PIT_CTRL.RW_MSB?1:0,R.countBytes=R.rw==ChipSet.PIT_CTRL.RW_BOTH?2:1}updateTimer(V,R){let U=this.aTimers[V];if(U.fCounting&&(V!=ChipSet.PIT0.TIMER2||this.bPPIB&ChipSet.PPI_B.CLK_TIMER2)){let l=this.cpu.getCycles(this.fScaleTimers),e=(l-U.nCyclesStart)/this.nTicksDivisor|0;e<0&&(DEBUG&&this.printf(MESSAGE.TIMER,"updateTimer(%d): negative tick count (%d)\n",V,e),U.nCyclesStart=l,e=0);let t=this.getTimerInit(V),T=!1,k=this.getTimerStart(V)-e;if(U.mode==ChipSet.PIT_CTRL.MODE0)k<=0&&(k=0),DEBUG&&this.printf(MESSAGE.TIMER,"updateTimer(%d): MODE0 timer count=%d\n"+V,k),k||(U.fOUT=!0,U.fCounting=!1,V||(T=!0,this.setIRR(ChipSet.IRQ.TIMER0),MAXDEBUG&&DEBUGGER&&this.acTimersFired[V]++));else if(U.mode==ChipSet.PIT_CTRL.MODE2)U.fOUT=1!=k,k<=0&&(k=t+k,k<=0&&(DEBUG&&!V&&this.printf(MESSAGE.TIMER,"updateTimer(%d): mode=2, underflow=%d\n",V,k),k=t),U.countStart[0]=255&k,U.countStart[1]=k>>8&255,U.nCyclesStart=l,!V&&U.fOUT&&(T=!0,this.setIRR(ChipSet.IRQ.TIMER0),MAXDEBUG&&DEBUGGER&&this.acTimersFired[V]++));else if(U.mode==ChipSet.PIT_CTRL.MODE3&&(k-=e,k<=0)){if(U.fOUT=!U.fOUT,k=t+k,k<=0&&(DEBUG&&!V&&this.printf(MESSAGE.TIMER,"updateTimer(%d): mode=3, underflow=%d\n",V,k),k=t),MAXDEBUG&&DEBUGGER&&!V){let V=0;this.acTimer0Counts.length>0&&(V=l-this.acTimer0Counts[0][1]),this.acTimer0Counts.push([k,l,V])}U.countStart[0]=255&k,U.countStart[1]=k>>8&255,U.nCyclesStart=l,!V&&U.fOUT&&(T=!0,this.setIRR(ChipSet.IRQ.TIMER0),MAXDEBUG&&DEBUGGER&&this.acTimersFired[V]++)}MAXDEBUG&&this.printf(MESSAGE.TIMER+MESSAGE.WARNING,"TIMER%d count: %d, ticks: %d, fired: %b\n",V,k,e,T),U.countCurrent[0]=255&k,U.countCurrent[1]=k>>8&255,R&&(this.nCyclesStart=0)}return U}updateAllTimers(V){for(let R=0;R<this.aTimers.length;R++)this.updateTimer(R,V);this.model>=ChipSet.MODEL_5170&&this.updateRTCTime()}outMFGTest(V,R,U){this.printIO(V,R,U,"MFG_TEST")}inPPIA(V,R){let U=this.bPPIA;if(this.bPPICtrl&ChipSet.PPI_CTRL.A_IN){if(!(this.bPPIB&ChipSet.PPI_B.CLEAR_KBD))return U=this.bKbdData,this.printIO(V,void 0,R,"PPI_A",U,MESSAGE.KBD),U;U=this.aDIPSwitches[0][1]}return this.printIO(V,void 0,R,"PPI_A",U),U}outPPIA(V,R,U){this.printIO(V,R,U,"PPI_A"),this.bPPIA=R}inPPIB(V,R){let U=this.bPPIB;return this.printIO(V,void 0,R,"PPI_B",U),U}outPPIB(V,R,U){this.printIO(V,R,U,"PPI_B"),this.updatePPIB(R)}updatePPIB(V){let R=V^this.bPPIB;R&ChipSet.PPI_B.CLK_TIMER2&&(V&ChipSet.PPI_B.CLK_TIMER2||this.updateTimer(ChipSet.PIT0.TIMER2)),this.bPPIB=V,R&ChipSet.PPI_B.SPK_TIMER2&&this.setSpeaker(V&ChipSet.PPI_B.SPK_TIMER2),this.kbd&&this.kbd.setEnabled(!(V&ChipSet.PPI_B.CLEAR_KBD),!!(V&ChipSet.PPI_B.CLK_KBD))}inPPIC(V,R){let U=0;if((0|this.model)==ChipSet.MODEL_4860?(U|=this.bNMI&ChipSet.NMI.KBD_LATCH,U|=ChipSet.PPI_C.NO_MODEM|ChipSet.PPI_C.NO_DISKETTE|ChipSet.PPI_C.NO_MEMEXP,U|=1&this.bKbdData?ChipSet.PPI_C.KBD_DATA:0,this.bKbdData>>>=1):(0|this.model)==ChipSet.MODEL_5150?this.bPPIB&ChipSet.PPI_B.ENABLE_SW2?U|=this.aDIPSwitches[1][1]&ChipSet.PPI_C.SW:U|=this.aDIPSwitches[1][1]>>4&1:this.bPPIB&ChipSet.PPI_B.ENABLE_SW_HI?U|=this.aDIPSwitches[0][1]>>4:U|=15&this.aDIPSwitches[0][1],this.bPPIB&ChipSet.PPI_B.CLK_TIMER2){this.updateTimer(ChipSet.PIT0.TIMER2).fOUT&&(this.bPPIB&ChipSet.PPI_B.SPK_TIMER2?U|=ChipSet.PPI_C.TIMER2_OUT:U|=ChipSet.PPI_C.CASS_DATA_IN)}return this.printIO(V,void 0,R,"PPI_C",U,MESSAGE.CHIPSET),U}outPPIC(V,R,U){this.printIO(V,R,U,"PPI_C"),this.bPPIC=R}inPPICtrl(V,R){let U=this.bPPICtrl;return this.printIO(V,void 0,R,"PPI_CTRL",U),U}outPPICtrl(V,R,U){this.printIO(V,R,U,"PPI_CTRL"),this.bPPICtrl=R}in8041Kbd(V,R){let U=this.bKbdData;return this.printIO(V,void 0,R,"8041_KBD",U,MESSAGE.KBD),this.b8041Status&=~ChipSet.C8042.STATUS.OUTBUFF_FULL,U}out8041Kbd(V,R,U){this.printIO(V,R,U,"8041_KBD")}in8041Ctrl(V,R){let U=this.bPPIB;return this.printIO(V,void 0,R,"8041_CTRL",U),U}out8041Ctrl(V,R,U){this.printIO(V,R,U,"8041_CTRL"),this.updatePPIB(R)}in8041Status(V,R){let U=this.b8041Status;return this.printIO(V,void 0,R,"8041_STATUS",U),U}in8042OutBuff(V,R){let U=this.b8042OutBuff;return this.printIO(V,void 0,R,"8042_OUTBUFF",U,MESSAGE.C8042),this.b8042Status&=~(ChipSet.C8042.STATUS.OUTBUFF_FULL|ChipSet.C8042.STATUS.OUTBUFF_DELAY),this.kbd&&this.kbd.checkBuffer(U),U}out8042InBuffData(V,R,U){if(this.printIO(V,R,U,"8042_INBUF.DATA",void 0,MESSAGE.C8042),this.b8042Status&ChipSet.C8042.STATUS.CMD_FLAG)switch(this.b8042InBuff){case ChipSet.C8042.CMD.WRITE_CMD:this.set8042CmdData(R);break;case ChipSet.C8042.CMD.WRITE_OUTPORT:this.set8042OutPort(R);break;default:this.set8042CmdData(this.b8042CmdData&~ChipSet.C8042.DATA.CMD.NO_CLOCK),this.kbd&&this.set8042OutBuff(this.kbd.receiveCmd(R))}this.b8042InBuff=R,this.b8042Status&=~ChipSet.C8042.STATUS.CMD_FLAG}in8042RWReg(V,R){let U=this.bPPIB&~(ChipSet.C8042.RWREG.NMI_ERROR|ChipSet.C8042.RWREG.REFRESH_BIT)|(64&this.cpu.getCycles()?ChipSet.C8042.RWREG.REFRESH_BIT:0);return this.printIO(V,void 0,R,"8042_RWREG",U,MESSAGE.C8042+MESSAGE.WARNING),U}out8042RWReg(V,R,U){this.printIO(V,R,U,"8042_RWREG",void 0,MESSAGE.C8042),this.updatePPIB(R)}in8042Status(V,R){this.printIO(V,void 0,R,"8042_STATUS",this.b8042Status,MESSAGE.C8042);let U=255&this.b8042Status;return this.b8042Status&ChipSet.C8042.STATUS.OUTBUFF_DELAY&&(this.b8042Status|=ChipSet.C8042.STATUS.OUTBUFF_FULL,this.b8042Status&=~ChipSet.C8042.STATUS.OUTBUFF_DELAY),this.b8042Status&ChipSet.C8042.STATUS.OUTBUFF_FULL||!this.kbd||this.kbd.checkBuffer(),U}out8042InBuffCmd(V,R,U){this.printIO(V,R,U,"8042_INBUFF.CMD",void 0,MESSAGE.C8042),this.b8042InBuff=R,this.b8042Status|=ChipSet.C8042.STATUS.CMD_FLAG;let l=0;switch(this.b8042InBuff>=ChipSet.C8042.CMD.PULSE_OUTPORT&&(l=15^this.b8042InBuff,this.b8042InBuff=ChipSet.C8042.CMD.PULSE_OUTPORT),this.b8042InBuff){case ChipSet.C8042.CMD.READ_CMD:this.set8042OutBuff(this.b8042CmdData);break;case ChipSet.C8042.CMD.WRITE_CMD:break;case ChipSet.C8042.CMD.DISABLE_KBD:this.set8042CmdData(this.b8042CmdData|ChipSet.C8042.DATA.CMD.NO_CLOCK),COMPILED||this.printf(MESSAGE.KBD+MESSAGE.PORT,"keyboard disabled\n");break;case ChipSet.C8042.CMD.ENABLE_KBD:this.set8042CmdData(this.b8042CmdData&~ChipSet.C8042.DATA.CMD.NO_CLOCK),COMPILED||this.printf(MESSAGE.KBD+MESSAGE.PORT,"keyboard re-enabled\n"),this.kbd&&this.kbd.checkBuffer();break;case ChipSet.C8042.CMD.SELF_TEST:this.kbd&&this.kbd.flushBuffer(),this.set8042CmdData(this.b8042CmdData|ChipSet.C8042.DATA.CMD.NO_CLOCK),COMPILED||this.printf(MESSAGE.KBD+MESSAGE.PORT,"keyboard disabled on reset\n"),this.set8042OutBuff(ChipSet.C8042.DATA.SELF_TEST.OK),this.set8042OutPort(ChipSet.C8042.OUTPORT.NO_RESET|ChipSet.C8042.OUTPORT.A20_ON);break;case ChipSet.C8042.CMD.INTF_TEST:this.set8042OutBuff(ChipSet.C8042.DATA.INTF_TEST.OK);break;case ChipSet.C8042.CMD.READ_INPORT:this.set8042OutBuff(this.b8042InPort);break;case ChipSet.C8042.CMD.READ_OUTPORT:this.set8042OutBuff(this.b8042OutPort);break;case ChipSet.C8042.CMD.WRITE_OUTPORT:break;case ChipSet.C8042.CMD.READ_TEST:this.set8042OutBuff(this.b8042CmdData&ChipSet.C8042.DATA.CMD.NO_CLOCK?0:ChipSet.C8042.TESTPORT.KBD_CLOCK);break;case ChipSet.C8042.CMD.PULSE_OUTPORT:1&l&&this.cpu.resetRegs();break;default:COMPILED||this.printf(MESSAGE.LOG,"unrecognized 8042 command: %#04X\n",this.b8042InBuff)}}set8042CmdData(V){this.b8042CmdData=V,this.b8042Status=this.b8042Status&~ChipSet.C8042.STATUS.SYS_FLAG|V&ChipSet.C8042.DATA.CMD.SYS_FLAG,this.kbd&&this.kbd.setEnabled(!!(V&ChipSet.C8042.DATA.CMD.NO_INHIBIT),!(V&ChipSet.C8042.DATA.CMD.NO_CLOCK))}set8042OutBuff(V,R){V>=0&&(this.b8042OutBuff=V,R?this.b8042Status|=ChipSet.C8042.STATUS.OUTBUFF_FULL:(this.b8042Status&=~ChipSet.C8042.STATUS.OUTBUFF_FULL,this.b8042Status|=ChipSet.C8042.STATUS.OUTBUFF_DELAY),COMPILED||this.printf(MESSAGE.KBD+MESSAGE.PORT,"chipset.set8042OutBuff(%#04X,delay=%b)\n",V,!R))}set8042OutPort(V){this.b8042OutPort=V,this.bus.setA20(!!(V&ChipSet.C8042.OUTPORT.A20_ON)),V&ChipSet.C8042.OUTPORT.NO_RESET||(COMPILED||(this.printf(MESSAGE.NONE,"unexpected 8042 output port reset: %#04X\n",V),this.dbg&&this.dbg.stopCPU()),this.cpu.resetRegs())}receiveKbdData(V){if(COMPILED||this.printf(MESSAGE.KBD+MESSAGE.PORT,"chipset.receiveKbdData(%#04X)\n",V),this.model==ChipSet.MODEL_4860)return!(this.bNMI&ChipSet.NMI.KBD_LATCH)&&(this.bNMI|=ChipSet.NMI.KBD_LATCH,this.bKbdData=V,V&&this.bNMI&ChipSet.NMI.ENABLE&&X86.helpInterrupt.call(this.cpu,X86.EXCEPTION.NMI),!0);if(this.model<ChipSet.MODEL_5170)return!!(this.bPPIB&ChipSet.PPI_B.CLK_KBD)&&(this.bKbdData=V,V&&(this.setIRR(ChipSet.IRQ.KBD,120),this.b8041Status|=ChipSet.C8042.STATUS.OUTBUFF_FULL),!0);if(V){if(!(this.b8042CmdData&ChipSet.C8042.DATA.CMD.NO_CLOCK))return this.b8042Status&(ChipSet.C8042.STATUS.OUTBUFF_FULL|ChipSet.C8042.STATUS.OUTBUFF_DELAY)?(COMPILED||this.printf(MESSAGE.KBD+MESSAGE.PORT,"chipset.receiveKbdData(%#04X): output buffer full\n",V),!1):(this.set8042OutBuff(V,!0),this.setIRR(ChipSet.IRQ.KBD,120),!0);COMPILED||this.printf(MESSAGE.KBD+MESSAGE.PORT,"chipset.receiveKbdData(%#04X): disabled\n",V)}return!1}in6300DIPSwitches(V,R,U){let l=this.aDIPSwitches[V][1];return this.printIO(R,void 0,U,"DIPSW-"+V,l,MESSAGE.CHIPSET),l}inCMOSAddr(V,R){return this.printIO(V,void 0,R,"CMOS.ADDR",this.bCMOSAddr,MESSAGE.CMOS),this.bCMOSAddr}outCMOSAddr(V,R,U){this.printIO(V,R,U,"CMOS.ADDR",void 0,MESSAGE.CMOS),this.bCMOSAddr=R,this.bNMI=this.bNMI&~ChipSet.NMI.ENABLE|(R&ChipSet.CMOS.ADDR.NMI_DISABLE?0:ChipSet.NMI.ENABLE)}inCMOSData(V,R){let U=this.bCMOSAddr&ChipSet.CMOS.ADDR.MASK,l=U<=ChipSet.CMOS.ADDR.STATUSD?this.getRTCByte(U):this.abCMOSData[U];return this.messageEnabled(MESSAGE.CMOS+MESSAGE.PORT)&&this.printIO(V,void 0,R,"CMOS.DATA["+StrLib.toHexByte(U)+"]",l,!0),null!=R&&U==ChipSet.CMOS.ADDR.STATUSC&&(this.abCMOSData[U]&=ChipSet.CMOS.STATUSC.RESERVED,l&ChipSet.CMOS.STATUSC.IRQF&&this.clearIRR(ChipSet.IRQ.RTC),l&ChipSet.CMOS.STATUSC.PF&&this.abCMOSData[ChipSet.CMOS.ADDR.STATUSB]&ChipSet.CMOS.STATUSB.PIE&&(COMPILED||this.printf(MESSAGE.RTC,"RTC periodic interrupt cleared\n"),this.setRTCCycleLimit())),l}outCMOSData(V,R,U){let l=this.bCMOSAddr&ChipSet.CMOS.ADDR.MASK;this.messageEnabled(MESSAGE.CMOS+MESSAGE.PORT)&&this.printIO(V,R,U,"CMOS.DATA["+StrLib.toHexByte(l)+"]",void 0,!0);let e=R^this.abCMOSData[l];this.abCMOSData[l]=l<=ChipSet.CMOS.ADDR.STATUSD?this.setRTCByte(l,R):R,l==ChipSet.CMOS.ADDR.STATUSB&&e&ChipSet.CMOS.STATUSB.PIE&&(R&ChipSet.CMOS.STATUSB.PIE?(COMPILED||this.printf(MESSAGE.RTC,"RTC periodic interrupts enabled\n"),this.setRTCCycleLimit()):COMPILED||this.printf(MESSAGE.RTC,"RTC periodic interrupts disabled\n"))}inNMI(V,R){let U=this.bNMI;return this.printIO(V,void 0,R,"NMI",U),this.bNMI&=~ChipSet.NMI.KBD_LATCH,U}outNMI(V,R,U){this.printIO(V,R,U,"NMI"),this.bNMI=R}outFPUClear(V,R,U){this.printIO(V,R,U,"FPU.CLEAR"),this.fpuActive&&this.fpuActive.clearBusy()}outFPUReset(V,R,U){this.printIO(V,R,U,"FPU.RESET"),this.fpuActive&&this.fpuActive.resetFPU()}intBIOSTimer(V){if(DEBUGGER&&this.messageEnabled(MESSAGE.INT)&&this.dbg.messageInt(Interrupts.TIMER,V)){let R=this,U=this.cpu.regEAX>>8,l=this.cpu.getCycles();this.cpu.addIntReturn(V,(function(V){let e,t=255&R.cpu.regEDX,T=R.cpu.regEDX>>8,k=255&R.cpu.regEDX,F=R.cpu.regEDX>>8;2==U||3==U?e=" CH(hour)="+StrLib.toHexWord(T)+" CL(min)="+StrLib.toHexByte(t)+" DH(sec)="+StrLib.toHexByte(F):4!=U&&5!=U||(e=" CX(year)="+StrLib.toHexWord(R.cpu.regECX)+" DH(month)="+StrLib.toHexByte(F)+" DL(day)="+StrLib.toHexByte(k));let W=-l+(l=R.cpu.getCycles());R.dbg.messageIntReturn(Interrupts.TIMER,V,W,e)}))}return!0}setSpeaker(V){let R;void 0!==V?(R=!!V,R!=this.fSpeakerEnabled&&(this.fSpeakerEnabled=R)):R=!!(this.fSpeakerEnabled&&this.cpu&&this.cpu.isRunning());let U=Math.round(ChipSet.TIMER_TICKS_PER_SEC/this.getTimerInit(ChipSet.PIT0.TIMER2));(U<20||U>2e4)&&(R=!1),this.contextAudio?R&&this.startAudio()?(this.oscillatorAudio.frequency.setValueAtTime(U,0),this.volumeAudio.gain.setValueAtTime(emulatorSoundEnabled?this.volumeInit:0,0),this.printf(MESSAGE.SPEAKER,"speaker on at  %dhz\n",U)):this.volumeAudio&&(this.volumeAudio.gain.setValueAtTime(0,0),this.printf(MESSAGE.SPEAKER,"speaker off at %dhz\n",U)):R&&this.fSpeakerOn!=R&&this.printf(MESSAGE.SPEAKER,"BEEP\n"),this.fSpeakerOn=R}startAudio(V){if(this.contextAudio){if(V){if(this.fUserSound)return!0;this.oscillatorAudio=null,this.fUserSound=!0}if(this.oscillatorAudio)return!0;try{if(this.oscillatorAudio=this.contextAudio.createOscillator(),"start"in this.oscillatorAudio)return this.volumeAudio=this.contextAudio.createGain(),this.oscillatorAudio.connect(this.volumeAudio),this.volumeAudio.connect(this.contextAudio.destination),this.volumeAudio.gain.setValueAtTime(0,0),this.oscillatorAudio.type="square",this.oscillatorAudio.start(0),!0}catch(V){this.printf(MESSAGE.NOTICE,"AudioContext exception: %s\n",V.message),this.contextAudio=null}}return!1}messageBitsDMA(V){let R=0;return DEBUG&&(R=MESSAGE.DATA,V==ChipSet.DMA_FDC?R+=MESSAGE.FDC:V==ChipSet.DMA_HDC&&(R+=MESSAGE.HDC)),R}messageBitsIRQ(V){let R=MESSAGE.IRQ;return V==ChipSet.IRQ.TIMER0?R|=MESSAGE.TIMER:V==ChipSet.IRQ.KBD?R|=MESSAGE.KBD:V==ChipSet.IRQ.SLAVE?R|=MESSAGE.NONE:V==ChipSet.IRQ.COM1||V==ChipSet.IRQ.COM2?R|=MESSAGE.SERIAL:V==ChipSet.IRQ.XTC?R|=MESSAGE.HDC:V==ChipSet.IRQ.FDC?R|=MESSAGE.FDC:V==ChipSet.IRQ.RTC?R|=MESSAGE.RTC:V!=ChipSet.IRQ.ATC1&&V!=ChipSet.IRQ.ATC2||(R|=MESSAGE.HDC),R}static init(){let V=Component.getElementsByClass(APPCLASS,"chipset");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new ChipSet(l);Component.bindComponentControls(e,U,APPCLASS),e.updateDIPSwitchDescriptions()}}static aPortInput={[ChipSet.PIC0.PORT+0]:function(V,R){return this.inPICLo(ChipSet.PIC0.INDEX,R)},[ChipSet.PIC0.PORT+1]:function(V,R){return this.inPICHi(ChipSet.PIC0.INDEX,R)},[ChipSet.PIT0.PORT+0]:function(V,R){return this.inTimer(ChipSet.PIT0.INDEX,ChipSet.PIT0.TIMER0,V,R)},[ChipSet.PIT0.PORT+1]:function(V,R){return this.inTimer(ChipSet.PIT0.INDEX,ChipSet.PIT0.TIMER1,V,R)},[ChipSet.PIT0.PORT+2]:function(V,R){return this.inTimer(ChipSet.PIT0.INDEX,ChipSet.PIT0.TIMER2,V,R)},[ChipSet.PIT0.PORT+3]:function(V,R){return this.inTimerCtrl(ChipSet.PIT0.INDEX,V,R)}};static aPortInput4860={[ChipSet.PPI.PORT+0]:ChipSet.prototype.inPPIA,[ChipSet.PPI.PORT+1]:ChipSet.prototype.inPPIB,[ChipSet.PPI.PORT+2]:ChipSet.prototype.inPPIC,[ChipSet.PPI.PORT+3]:ChipSet.prototype.inPPICtrl,[ChipSet.NMI.PORT]:ChipSet.prototype.inNMI};static aPortInput5150={[ChipSet.PPI.PORT+0]:ChipSet.prototype.inPPIA,[ChipSet.PPI.PORT+1]:ChipSet.prototype.inPPIB,[ChipSet.PPI.PORT+2]:ChipSet.prototype.inPPIC,[ChipSet.PPI.PORT+3]:ChipSet.prototype.inPPICtrl};static aPortInput51xx={[ChipSet.DMA0.PORT.CH0_ADDR]:function(V,R){return this.inDMAChannelAddr(ChipSet.DMA0.INDEX,0,V,R)},[ChipSet.DMA0.PORT.CH0_COUNT]:function(V,R){return this.inDMAChannelCount(ChipSet.DMA0.INDEX,0,V,R)},[ChipSet.DMA0.PORT.CH1_ADDR]:function(V,R){return this.inDMAChannelAddr(ChipSet.DMA0.INDEX,1,V,R)},[ChipSet.DMA0.PORT.CH1_COUNT]:function(V,R){return this.inDMAChannelCount(ChipSet.DMA0.INDEX,1,V,R)},[ChipSet.DMA0.PORT.CH2_ADDR]:function(V,R){return this.inDMAChannelAddr(ChipSet.DMA0.INDEX,2,V,R)},[ChipSet.DMA0.PORT.CH2_COUNT]:function(V,R){return this.inDMAChannelCount(ChipSet.DMA0.INDEX,2,V,R)},[ChipSet.DMA0.PORT.CH3_ADDR]:function(V,R){return this.inDMAChannelAddr(ChipSet.DMA0.INDEX,3,V,R)},[ChipSet.DMA0.PORT.CH3_COUNT]:function(V,R){return this.inDMAChannelCount(ChipSet.DMA0.INDEX,3,V,R)},[ChipSet.DMA0.PORT.CMD_STATUS]:function(V,R){return this.inDMAStatus(ChipSet.DMA0.INDEX,V,R)},[ChipSet.DMA0.PORT.MASTER_CLEAR]:function(V,R){return this.inDMATemp(ChipSet.DMA0.INDEX,V,R)},[ChipSet.DMA0.PORT.CH2_PAGE]:function(V,R){return this.inDMAPageReg(ChipSet.DMA0.INDEX,2,V,R)},[ChipSet.DMA0.PORT.CH3_PAGE]:function(V,R){return this.inDMAPageReg(ChipSet.DMA0.INDEX,3,V,R)},[ChipSet.DMA0.PORT.CH1_PAGE]:function(V,R){return this.inDMAPageReg(ChipSet.DMA0.INDEX,1,V,R)},[ChipSet.DMA0.PORT.CH0_PAGE]:function(V,R){return this.inDMAPageReg(ChipSet.DMA0.INDEX,0,V,R)}};static aPortInput5170={[ChipSet.C8042.PORT+0]:ChipSet.prototype.in8042OutBuff,[ChipSet.C8042.PORT+1]:ChipSet.prototype.in8042RWReg,[ChipSet.C8042.PORT+4]:ChipSet.prototype.in8042Status,112:ChipSet.prototype.inCMOSAddr,113:ChipSet.prototype.inCMOSData,128:function(V,R){return this.inDMAPageSpare(7,V,R)},132:function(V,R){return this.inDMAPageSpare(0,V,R)},133:function(V,R){return this.inDMAPageSpare(1,V,R)},134:function(V,R){return this.inDMAPageSpare(2,V,R)},136:function(V,R){return this.inDMAPageSpare(3,V,R)},[ChipSet.DMA1.PORT.CH6_PAGE]:function(V,R){return this.inDMAPageReg(ChipSet.DMA1.INDEX,2,V,R)},[ChipSet.DMA1.PORT.CH7_PAGE]:function(V,R){return this.inDMAPageReg(ChipSet.DMA1.INDEX,3,V,R)},[ChipSet.DMA1.PORT.CH5_PAGE]:function(V,R){return this.inDMAPageReg(ChipSet.DMA1.INDEX,1,V,R)},140:function(V,R){return this.inDMAPageSpare(4,V,R)},141:function(V,R){return this.inDMAPageSpare(5,V,R)},142:function(V,R){return this.inDMAPageSpare(6,V,R)},[ChipSet.DMA1.PORT.CH4_PAGE]:function(V,R){return this.inDMAPageReg(ChipSet.DMA1.INDEX,0,V,R)},[ChipSet.PIC1.PORT+0]:function(V,R){return this.inPICLo(ChipSet.PIC1.INDEX,R)},[ChipSet.PIC1.PORT+1]:function(V,R){return this.inPICHi(ChipSet.PIC1.INDEX,R)},[ChipSet.DMA1.PORT.CH4_ADDR]:function(V,R){return this.inDMAChannelAddr(ChipSet.DMA1.INDEX,0,V,R)},[ChipSet.DMA1.PORT.CH4_COUNT]:function(V,R){return this.inDMAChannelCount(ChipSet.DMA1.INDEX,0,V,R)},[ChipSet.DMA1.PORT.CH5_ADDR]:function(V,R){return this.inDMAChannelAddr(ChipSet.DMA1.INDEX,1,V,R)},[ChipSet.DMA1.PORT.CH5_COUNT]:function(V,R){return this.inDMAChannelCount(ChipSet.DMA1.INDEX,1,V,R)},[ChipSet.DMA1.PORT.CH6_ADDR]:function(V,R){return this.inDMAChannelAddr(ChipSet.DMA1.INDEX,2,V,R)},[ChipSet.DMA1.PORT.CH6_COUNT]:function(V,R){return this.inDMAChannelCount(ChipSet.DMA1.INDEX,2,V,R)},[ChipSet.DMA1.PORT.CH7_ADDR]:function(V,R){return this.inDMAChannelAddr(ChipSet.DMA1.INDEX,3,V,R)},[ChipSet.DMA1.PORT.CH7_COUNT]:function(V,R){return this.inDMAChannelCount(ChipSet.DMA1.INDEX,3,V,R)},[ChipSet.DMA1.PORT.CMD_STATUS]:function(V,R){return this.inDMAStatus(ChipSet.DMA1.INDEX,V,R)},[ChipSet.DMA1.PORT.MASTER_CLEAR]:function(V,R){return this.inDMATemp(ChipSet.DMA1.INDEX,V,R)}};static aPortInput6300={[ChipSet.C8041.PORT+0]:ChipSet.prototype.in8041Kbd,[ChipSet.C8041.PORT+1]:ChipSet.prototype.in8041Ctrl,[ChipSet.C8041.PORT+4]:ChipSet.prototype.in8041Status,102:function(V,R){return this.in6300DIPSwitches(0,V,R)},103:function(V,R){return this.in6300DIPSwitches(1,V,R)}};static aPortInputDeskPro386={[ChipSet.PIT1.PORT+0]:function(V,R){return this.inTimer(ChipSet.PIT1.INDEX,ChipSet.PIT1.TIMER3,V,R)},[ChipSet.PIT1.PORT+1]:function(V,R){return this.inTimer(ChipSet.PIT1.INDEX,ChipSet.PIT1.TIMER4,V,R)},[ChipSet.PIT1.PORT+2]:function(V,R){return this.inTimer(ChipSet.PIT1.INDEX,ChipSet.PIT1.TIMER5,V,R)},[ChipSet.PIT1.PORT+3]:function(V,R){return this.inTimerCtrl(ChipSet.PIT1.INDEX,V,R)}};static aPortOutput={[ChipSet.PIC0.PORT+0]:function(V,R,U){this.outPICLo(ChipSet.PIC0.INDEX,R,U)},[ChipSet.PIC0.PORT+1]:function(V,R,U){this.outPICHi(ChipSet.PIC0.INDEX,R,U)},[ChipSet.PIT0.PORT+0]:function(V,R,U){this.outTimer(ChipSet.PIT0.INDEX,ChipSet.PIT0.TIMER0,V,R,U)},[ChipSet.PIT0.PORT+1]:function(V,R,U){this.outTimer(ChipSet.PIT0.INDEX,ChipSet.PIT0.TIMER1,V,R,U)},[ChipSet.PIT0.PORT+2]:function(V,R,U){this.outTimer(ChipSet.PIT0.INDEX,ChipSet.PIT0.TIMER2,V,R,U)},[ChipSet.PIT0.PORT+3]:function(V,R,U){this.outTimerCtrl(ChipSet.PIT0.INDEX,V,R,U)}};static aPortOutput4860={16:ChipSet.prototype.outMFGTest,[ChipSet.PPI.PORT+0]:ChipSet.prototype.outPPIA,[ChipSet.PPI.PORT+1]:ChipSet.prototype.outPPIB,[ChipSet.PPI.PORT+2]:ChipSet.prototype.outPPIC,[ChipSet.PPI.PORT+3]:ChipSet.prototype.outPPICtrl,[ChipSet.NMI.PORT]:ChipSet.prototype.outNMI};static aPortOutput5150={[ChipSet.PPI.PORT+0]:ChipSet.prototype.outPPIA,[ChipSet.PPI.PORT+1]:ChipSet.prototype.outPPIB,[ChipSet.PPI.PORT+2]:ChipSet.prototype.outPPIC,[ChipSet.PPI.PORT+3]:ChipSet.prototype.outPPICtrl,[ChipSet.NMI.PORT]:ChipSet.prototype.outNMI};static aPortOutput51xx={[ChipSet.DMA0.PORT.CH0_ADDR]:function(V,R,U){this.outDMAChannelAddr(ChipSet.DMA0.INDEX,0,V,R,U)},[ChipSet.DMA0.PORT.CH0_COUNT]:function(V,R,U){this.outDMAChannelCount(ChipSet.DMA0.INDEX,0,V,R,U)},[ChipSet.DMA0.PORT.CH1_ADDR]:function(V,R,U){this.outDMAChannelAddr(ChipSet.DMA0.INDEX,1,V,R,U)},[ChipSet.DMA0.PORT.CH1_COUNT]:function(V,R,U){this.outDMAChannelCount(ChipSet.DMA0.INDEX,1,V,R,U)},[ChipSet.DMA0.PORT.CH2_ADDR]:function(V,R,U){this.outDMAChannelAddr(ChipSet.DMA0.INDEX,2,V,R,U)},[ChipSet.DMA0.PORT.CH2_COUNT]:function(V,R,U){this.outDMAChannelCount(ChipSet.DMA0.INDEX,2,V,R,U)},[ChipSet.DMA0.PORT.CH3_ADDR]:function(V,R,U){this.outDMAChannelAddr(ChipSet.DMA0.INDEX,3,V,R,U)},[ChipSet.DMA0.PORT.CH3_COUNT]:function(V,R,U){this.outDMAChannelCount(ChipSet.DMA0.INDEX,3,V,R,U)},[ChipSet.DMA0.PORT.CMD_STATUS]:function(V,R,U){this.outDMACmd(ChipSet.DMA0.INDEX,V,R,U)},[ChipSet.DMA0.PORT.REQUEST]:function(V,R,U){this.outDMAReq(ChipSet.DMA0.INDEX,V,R,U)},[ChipSet.DMA0.PORT.MASK]:function(V,R,U){this.outDMAMask(ChipSet.DMA0.INDEX,V,R,U)},[ChipSet.DMA0.PORT.MODE]:function(V,R,U){this.outDMAMode(ChipSet.DMA0.INDEX,V,R,U)},[ChipSet.DMA0.PORT.RESET_FF]:function(V,R,U){this.outDMAResetFF(ChipSet.DMA0.INDEX,V,R,U)},[ChipSet.DMA0.PORT.MASTER_CLEAR]:function(V,R,U){this.outDMAMasterClear(ChipSet.DMA0.INDEX,V,R,U)},[ChipSet.DMA0.PORT.CH2_PAGE]:function(V,R,U){this.outDMAPageReg(ChipSet.DMA0.INDEX,2,V,R,U)},[ChipSet.DMA0.PORT.CH3_PAGE]:function(V,R,U){this.outDMAPageReg(ChipSet.DMA0.INDEX,3,V,R,U)},[ChipSet.DMA0.PORT.CH1_PAGE]:function(V,R,U){this.outDMAPageReg(ChipSet.DMA0.INDEX,1,V,R,U)},[ChipSet.DMA0.PORT.CH0_PAGE]:function(V,R,U){this.outDMAPageReg(ChipSet.DMA0.INDEX,0,V,R,U)}};static aPortOutput5170={[ChipSet.C8042.PORT+0]:ChipSet.prototype.out8042InBuffData,[ChipSet.C8042.PORT+1]:ChipSet.prototype.out8042RWReg,[ChipSet.C8042.PORT+4]:ChipSet.prototype.out8042InBuffCmd,112:ChipSet.prototype.outCMOSAddr,113:ChipSet.prototype.outCMOSData,128:function(V,R,U){this.outDMAPageSpare(7,V,R,U)},132:function(V,R,U){this.outDMAPageSpare(0,V,R,U)},133:function(V,R,U){this.outDMAPageSpare(1,V,R,U)},134:function(V,R,U){this.outDMAPageSpare(2,V,R,U)},136:function(V,R,U){this.outDMAPageSpare(3,V,R,U)},[ChipSet.DMA1.PORT.CH6_PAGE]:function(V,R,U){this.outDMAPageReg(ChipSet.DMA1.INDEX,2,V,R,U)},[ChipSet.DMA1.PORT.CH7_PAGE]:function(V,R,U){this.outDMAPageReg(ChipSet.DMA1.INDEX,3,V,R,U)},[ChipSet.DMA1.PORT.CH5_PAGE]:function(V,R,U){this.outDMAPageReg(ChipSet.DMA1.INDEX,1,V,R,U)},140:function(V,R,U){this.outDMAPageSpare(4,V,R,U)},141:function(V,R,U){this.outDMAPageSpare(5,V,R,U)},142:function(V,R,U){this.outDMAPageSpare(6,V,R,U)},143:function(V,R,U){this.outDMAPageReg(ChipSet.DMA1.INDEX,0,V,R,U)},[ChipSet.PIC1.PORT+0]:function(V,R,U){this.outPICLo(ChipSet.PIC1.INDEX,R,U)},[ChipSet.PIC1.PORT+1]:function(V,R,U){this.outPICHi(ChipSet.PIC1.INDEX,R,U)},[ChipSet.DMA1.PORT.CH4_ADDR]:function(V,R,U){this.outDMAChannelAddr(ChipSet.DMA1.INDEX,0,V,R,U)},[ChipSet.DMA1.PORT.CH4_COUNT]:function(V,R,U){this.outDMAChannelCount(ChipSet.DMA1.INDEX,0,V,R,U)},[ChipSet.DMA1.PORT.CH5_ADDR]:function(V,R,U){this.outDMAChannelAddr(ChipSet.DMA1.INDEX,1,V,R,U)},[ChipSet.DMA1.PORT.CH5_COUNT]:function(V,R,U){this.outDMAChannelCount(ChipSet.DMA1.INDEX,1,V,R,U)},[ChipSet.DMA1.PORT.CH6_ADDR]:function(V,R,U){this.outDMAChannelAddr(ChipSet.DMA1.INDEX,2,V,R,U)},[ChipSet.DMA1.PORT.CH6_COUNT]:function(V,R,U){this.outDMAChannelCount(ChipSet.DMA1.INDEX,2,V,R,U)},[ChipSet.DMA1.PORT.CH7_ADDR]:function(V,R,U){this.outDMAChannelAddr(ChipSet.DMA1.INDEX,3,V,R,U)},[ChipSet.DMA1.PORT.CH7_COUNT]:function(V,R,U){this.outDMAChannelCount(ChipSet.DMA1.INDEX,3,V,R,U)},[ChipSet.DMA1.PORT.CMD_STATUS]:function(V,R,U){this.outDMACmd(ChipSet.DMA1.INDEX,V,R,U)},[ChipSet.DMA1.PORT.REQUEST]:function(V,R,U){this.outDMAReq(ChipSet.DMA1.INDEX,V,R,U)},[ChipSet.DMA1.PORT.MASK]:function(V,R,U){this.outDMAMask(ChipSet.DMA1.INDEX,V,R,U)},[ChipSet.DMA1.PORT.MODE]:function(V,R,U){this.outDMAMode(ChipSet.DMA1.INDEX,V,R,U)},[ChipSet.DMA1.PORT.RESET_FF]:function(V,R,U){this.outDMAResetFF(ChipSet.DMA1.INDEX,V,R,U)},[ChipSet.DMA1.PORT.MASTER_CLEAR]:function(V,R,U){this.outDMAMasterClear(ChipSet.DMA1.INDEX,V,R,U)},240:ChipSet.prototype.outFPUClear,241:ChipSet.prototype.outFPUReset};static aPortOutput6300={[ChipSet.C8041.PORT+0]:ChipSet.prototype.out8041Kbd,[ChipSet.C8041.PORT+1]:ChipSet.prototype.out8041Ctrl,[ChipSet.NMI.PORT]:ChipSet.prototype.outNMI};static aPortOutputDeskPro386={[ChipSet.PIT1.PORT+0]:function(V,R,U){this.outTimer(ChipSet.PIT1.INDEX,ChipSet.PIT1.TIMER3,V,R,U)},[ChipSet.PIT1.PORT+1]:function(V,R,U){this.outTimer(ChipSet.PIT1.INDEX,ChipSet.PIT1.TIMER4,V,R,U)},[ChipSet.PIT1.PORT+2]:function(V,R,U){this.outTimer(ChipSet.PIT1.INDEX,ChipSet.PIT1.TIMER5,V,R,U)},[ChipSet.PIT1.PORT+3]:function(V,R,U){this.outTimerCtrl(ChipSet.PIT1.INDEX,V,R,U)}}}WebLib.onInit(ChipSet.init);
class ROMx86 extends Component{static BIOS={RS232_BASE:1024,PRINTER_BASE:1032,EQUIP_FLAG:{ADDR:1040,NUM_PRINT:49152,GAME_CTRL:4096,NUM_RS232:3584,NUM_DRIVES:192,VIDEO_MODE:48,RAM_SIZE:12,IPL_DRIVE:1},MFG_TEST:1042,MEMORY_SIZE:1043,IO_RAM_SIZE:1045,MFG_ERR_FLAG:1045,COMPAQ_PREV_SC:1045,COMPAQ_KEYCLICK:1046,KB_FLAG:{ADDR:1047,INS_STATE:128,CAPS_STATE:64,NUM_STATE:32,SCROLL_STATE:16,ALT_SHIFT:8,CTL_SHIFT:4,LEFT_SHIFT:2,RIGHT_SHIFT:1},KB_FLAG_1:{ADDR:1048,INS_SHIFT:128,CAPS_SHIFT:64,NUM_SHIFT:32,SCROLL_SHIFT:16,HOLD_STATE:8},ALT_INPUT:1049,BUFFER_HEAD:1050,BUFFER_TAIL:1052,KB_BUFFER:1054,KB_BUFFER_END:1086,SEEK_STATUS:{ADDR:1086,INT_FLAG:128},MOTOR_STATUS:1087,MOTOR_COUNT:1088,DISKETTE_STATUS:{ADDR:1089,TIME_OUT:128,BAD_SEEK:64,BAD_NEC:32,BAD_CRC:16,DMA_BOUNDARY:9,BAD_DMA:8,RECORD_NOT_FND:4,WRITE_PROTECT:3,BAD_ADDR_MARK:2,BAD_CMD:1},NEC_STATUS:1090,CRT_MODE:1097,CRT_COLS:1098,CRT_LEN:1100,CRT_START:1102,CURSOR_POSN:1104,CURSOR_MODE:1120,ACTIVE_PAGE:1122,ADDR_6845:1123,CRT_MODE_SET:1125,CRT_PALLETTE:1126,EDGE_CNT:1127,CRC_REG:1129,LAST_VAL:1131,IO_ROM_INIT:1127,IO_ROM_SEG:1129,INTR_FLAG:1131,TIMER_LOW:1132,TIMER_HIGH:1134,TIMER_OFL:1136,BIOS_BREAK:1137,RESET_FLAG:{ADDR:1138,WARMBOOT:4660},DISK_STATUS1:1140,HF_NUM:1141,CONTROL_BYTE:1142,PORT_OFF:1143,PRINT_TIM_OUT:1144,RS232_TIM_OUT:1148,BUFFER_START:1152,BUFFER_END:1154,ROWS:1156,POINTS:1157,INFO:1159,INFO_3:1160,LASTRATE:1163,HF_STATUS:1164,HF_ERROR:1165,HF_INT_FLAG:1166,HF_CNTRL:1167,DSK_STATE:1168,DSK_TRK:1172,KB_FLAG_3:{ADDR:1174,LC_E1:1,LC_E0:2,R_CTL_SHIFT:4,R_ALT_SHIFT:8,GRAPH_ON:8,KBX:16,SET_NUM_LK:32,LC_AB:64,RD_ID:128},KB_FLAG_2:{ADDR:1175,KB_LEDS:7,SCROLL_LOCK:1,NUM_LOCK:2,CAPS_LOCK:4,KB_FA:16,KB_FE:32,KB_PR_LED:64,KB_ERR:128},USER_FLAG:1176,USER_FLAG_SEG:1178,RTC_LOW:1180,RTC_HIGH:1182,RTC_WAIT_FLAG:1184,NET:1185,SAVE_PTR:1192,STATUS_BYTE:1280};constructor(parmsROM){if(super("ROMx86",parmsROM,MESSAGE.MEM),this.abROM=null,this.addrROM=+parmsROM.addr,this.sizeROM=+parmsROM.size,this.addrAlias=parmsROM.alias,"string"==typeof this.addrAlias&&("["!=this.addrAlias[0]?this.addrAlias=+this.addrAlias:this.addrAlias=eval(this.addrAlias)),this.idNotify=parmsROM.notify,this.aNotifyParms=null,this.idNotify){let i=this.idNotify.indexOf("[");if(i>0){try{this.aNotifyParms=eval(this.idNotify.substr(i))}catch(V){}this.idNotify=this.idNotify.substr(0,i)}}if(this.sFileURL=this.sFilePath=parmsROM.file,this.sFileURL){let V=StrLib.getBaseName(this.sFileURL);DEBUG&&this.printf(MESSAGE.LOG,'load("%s")\n',this.sFileURL);let R=StrLib.getExtension(V);R!=DumpAPI.FORMAT.JSON&&DumpAPI.FORMAT.HEX}}initBus(V,R,U,l){if(this.cmp=V,this.bus=R,this.cpu=U,this.dbg=l,this.sFileURL){let V=this;WebLib.getResource(this.sFileURL,null,!0,(function(R,U,l){V.doneLoad(R,U,l)}),(function(R){V.printf(MESSAGE.PROGRESS,"Loading %s...\n",V.sFileURL)}))}}powerUp(V,R){return this.aSymbols&&(this.dbg&&this.dbg.addSymbols(this.id,0,this.addrROM>>>4,0,this.addrROM,this.sizeROM,this.aSymbols),delete this.aSymbols),!0}powerDown(V,R){return!0}doneLoad(sURL,sROMData,nErrorCode){if(nErrorCode)this.printf(nErrorCode<0?MESSAGE.STATUS:MESSAGE.NOTICE,"Unable to load system ROM (error %d: %s)\n",nErrorCode,sURL);else{if(sROMData=atob(sROMData),Component.addMachineResource(this.idMachine,sURL,sROMData),"["==sROMData.charAt(0)||"{"==sROMData.charAt(0))try{let rom=eval("("+sROMData+")"),width=rom.width,values=rom.values,littleEndian=!1!==rom.littleEndian;if(width&&values||(width=0,(values=rom.bytes)?width=8:(values=rom.longs||rom.data)&&(width=32)),width)if(8==width)this.abROM=values;else{let V=width>>>3;this.abROM=new Array(values.length*V);for(let R=0,U=0;R<values.length;R++){let l=values[R];if(littleEndian)for(let R=0;R<V;R++)this.abROM[U+R]=255&l,l>>>=8;else for(let R=V-1;R>=0;R--)this.abROM[U+R]=255&l,l>>>=8;U+=V}}else this.abROM=rom;if(this.aSymbols=rom.symbols,!this.abROM.length)return void Component.error("Empty ROM: "+sURL);if(1==this.abROM.length)return void Component.error(this.abROM[0])}catch(V){return void this.printf(MESSAGE.NOTICE,"ROM data error: %s\n",V.message)}else{let V=sROMData.replace(/\n/gm," ").replace(/ +$/,""),R=V.split(" ");this.abROM=new Array(R.length);for(let V=0;V<R.length;V++)this.abROM[V]=StrLib.parseInt(R[V],16)}this.copyROM()}}copyROM(){if(!this.isReady())if(this.sFilePath){if(this.abROM&&this.bus){if(this.sizeROM||(this.sizeROM=this.abROM.length),this.abROM.length!=this.sizeROM)this.setError("ROM size ("+StrLib.toHexLong(this.abROM.length)+") does not match specified size ("+StrLib.toHexLong(this.sizeROM)+")");else if(this.addROM(this.addrROM)){let V=[];"number"==typeof this.addrAlias?V.push(this.addrAlias):null!=this.addrAlias&&this.addrAlias.length&&(V=this.addrAlias);for(let R=0;R<V.length;R++)this.cloneROM(V[R]);if(this.idNotify){let V=Component.getComponentByID(this.idNotify,this.id);V?V.onROMLoad(this.abROM,this.aNotifyParms):this.printf(MESSAGE.NOTICE,"Unable to find component: %s\n",this.idNotify)}delete this.abROM}this.setReady()}}else this.setReady()}addROM(V){if(this.bus.addMemory(V,this.sizeROM,Memoryx86.TYPE.ROM)){MAXDEBUG&&this.printf(MESSAGE.LOG,"addROM(%#010x): copying %#06x bytes\n",V,this.abROM.length);let R=null;for(let U=0;U<this.abROM.length;U++)this.bus.setByteDirect(V+U,this.abROM[U]),BACKTRACK&&(R=this.bus.addBackTrackObject(this,R,U),this.bus.writeBackTrackObject(V+U,R,U));return!0}return!1}cloneROM(V){let R=this.bus.getMemoryBlocks(this.addrROM,this.sizeROM);this.bus.setMemoryBlocks(V,this.sizeROM,R)}static init(){let V=Component.getElementsByClass(APPCLASS,"rom");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new ROMx86(l);Component.bindComponentControls(e,U,APPCLASS)}}}WebLib.onInit(ROMx86.init);
class RAMx86 extends Component{constructor(V){super("RAMx86",V),this.addrRAM=+V.addr,this.sizeRAM=+V.size,this.fTestRAM=V.test&&"false"!=V.test,this.fInstalled=!!this.sizeRAM,this.sizeOverride=0,this.fAllocated=!1}setBinding(V,R,U,l){let e=R;return void 0===this.bindings[e]&&"listSizes"===R&&(this.bindings[e]=U,!0)}displayRAMSetting(){let V=this.bindings.listSizes;if(V)for(let R=1;R<V.options.length;R++)if(+V.options[R].value==this.sizeRAM){V.selectedIndex!=R&&(V.selectedIndex=R);break}}getRAMSetting(){let V=this.sizeOverride||-1,R=this.bindings.listSizes;return R&&(V>0&&(R.options[0].value=V.toString()),V=+R.options[R.selectedIndex].value),V}initBus(V,R,U,l){this.bus=R,this.cpu=U,this.dbg=l,this.chipset=V.getMachineComponent("ChipSet"),this.fTestRAM=V.getMachineBoolean("testRAM",this.fTestRAM),this.sizeOverride=+V.getMachineParm("sizeRAM")||0,this.sizeOverride<1024&&(this.sizeOverride*=1024),this.setReady()}powerUp(V,R){return!(!R&&(this.reset(),V&&this.controller&&!this.restore(V)))}powerDown(V,R){return!V||!this.controller||this.save()}reset(){if(!this.addrRAM&&!this.fInstalled&&this.chipset){let V=this.getRAMSetting();V>0?this.chipset.setDIPMemorySize(V/1024):V=1024*this.chipset.getDIPMemorySize(0==V),this.sizeRAM&&V!=this.sizeRAM&&(this.bus.removeMemory(this.addrRAM,this.sizeRAM),this.fAllocated=!1),this.sizeRAM=V}this.displayRAMSetting(),!this.fAllocated&&this.sizeRAM&&this.bus.addMemory(this.addrRAM,this.sizeRAM,Memoryx86.TYPE.RAM)&&(this.fAllocated=!0,MAXDEBUG&&!this.addrRAM&&this.fInstalled&&this.printf(MESSAGE.STATUS,"specified size overrides SW1\n"),DESKPRO386&&"ramCPQ"==this.idComponent&&(this.controller=new CompaqController(this),this.bus.addMemory(CompaqController.ADDR,4,Memoryx86.TYPE.CTRL,this.controller))),this.fAllocated?(this.addrRAM||this.fTestRAM||(MAXDEBUG&&this.printf(MESSAGE.STATUS,"ROM BIOS memory test has been disabled\n"),this.bus.setShortDirect(ROMx86.BIOS.RESET_FLAG.ADDR,ROMx86.BIOS.RESET_FLAG.WARMBOOT)),DESKPRO386&&"ramCPQ"==this.idComponent||this.chipset&&this.chipset.addCMOSMemory(this.addrRAM,this.sizeRAM)):Component.error("No RAM allocated")}save(){let V=new State(this);return this.controller&&V.set(0,this.controller.save()),V.data()}restore(V){return!this.controller||this.controller.restore(V[0])}static init(){let V=Component.getElementsByClass(APPCLASS,"ram");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new RAMx86(l);Component.bindComponentControls(e,U,APPCLASS)}}}class CompaqController extends Controller{static ADDR=-2134900736;static MAP_SRC=16646144;static MAP_DST=917504;static MAP_SIZE=131072;static MAPPINGS={UNMAPPED:1,READWRITE:2,RESERVED:65532,DEFAULT:65535};static SETTINGS={B0_PARITY:1,B1_PARITY:2,B2_PARITY:4,B3_PARITY:8,BASE_640KB:0,BASE_ERROR:16,BASE_512KB:32,BASE_256KB:48,ADDED_1MB:64,PIGGYBACK:128,SYS_4MB:256,SYS_1MB:512,SYS_NONE:768,MODA_4MB:1024,MODA_1MB:2048,MODA_NONE:3072,MODB_4MB:4096,MODB_1MB:8192,MODB_NONE:12288,MODC_4MB:16384,MODC_1MB:32768,MODC_NONE:49152,DEFAULT:2575};static RAMSETUP={SETUP:15,CACHE:64,RESERVED:65456,DEFAULT:2};constructor(V){super(),this.ram=V,this.wMappings=CompaqController.MAPPINGS.DEFAULT,this.wSettings=CompaqController.SETTINGS.DEFAULT,this.wRAMSetup=CompaqController.RAMSETUP.DEFAULT,this.aBlocksDst=null,this.buffer=[null,0],this.access=[CompaqController.readByte,CompaqController.writeByte]}save(){return[this.wMappings,this.wRAMSetup]}restore(V){return this.setByte(0,255&V[0]),this.setByte(2,255&V[1]),!0}getByte(V){let R=255;return V<2?R=1&V?this.wSettings>>8:255&this.wSettings:V<4&&(R=1&V?this.wRAMSetup>>8:255&this.wRAMSetup),R}setByte(V,R){if(V)2==V&&(this.wRAMSetup=-256&this.wRAMSetup|R);else if(R!=(255&this.wMappings)){let V=this.ram.bus;if(R&CompaqController.MAPPINGS.UNMAPPED)this.aBlocksDst&&(V.setMemoryBlocks(CompaqController.MAP_DST,CompaqController.MAP_SIZE,this.aBlocksDst),this.aBlocksDst=null);else{this.aBlocksDst||(this.aBlocksDst=V.getMemoryBlocks(CompaqController.MAP_DST,CompaqController.MAP_SIZE));let U=V.getMemoryBlocks(CompaqController.MAP_SRC,CompaqController.MAP_SIZE),l=R&CompaqController.MAPPINGS.READWRITE?Memoryx86.TYPE.RAM:Memoryx86.TYPE.ROM;V.setMemoryBlocks(CompaqController.MAP_DST,CompaqController.MAP_SIZE,U,l)}this.wMappings=-256&this.wMappings|R}}getMemoryAccess(){return this.access}getMemoryBuffer(V){return this.buffer}static readByte(V,R){let U=this.controller.getByte(V);return DEBUG&&this.controller.ram.printf(MESSAGE.MEM+MESSAGE.ADDR,"CompaqController.readByte(%#06x) returned %#04x\n",V,U),U}static writeByte(V,R,U){this.controller.setByte(V,R),DEBUG&&this.controller.ram.printf(MESSAGE.MEM+MESSAGE.ADDR,"CompaqController.writeByte(%#06x,%#04x)\n",V,R)}}WebLib.onInit(RAMx86.init);
class Keyboardx86 extends Component{static MODELS=["US83","US84","US101"];static CMD={RESET:255,RESEND:254,DEF_ON:246,DEF_OFF:245,ENABLE:244,SET_RATE:243,ECHO:238,SET_LEDS:237};static CMDRES={OVERRUN:0,LOAD_TEST:101,BAT_OK:170,ECHO:238,BREAK_PREF:240,ACK:250,BAT_FAIL:252,DIAG_FAIL:253,RESEND:254,BUFF_FULL:255};static LIMIT={MAX_SCANCODES:20};static INJECTION={NONE:0,ON_START:1,ON_INPUT:2};static SIMCODE={BS:Keys.KEYCODE.BS+Keys.KEYCODE.ONDOWN,TAB:Keys.KEYCODE.TAB+Keys.KEYCODE.ONDOWN,SHIFT:Keys.KEYCODE.SHIFT+Keys.KEYCODE.ONDOWN,RSHIFT:Keys.KEYCODE.SHIFT+Keys.KEYCODE.ONDOWN+Keys.KEYCODE.ONRIGHT,CTRL:Keys.KEYCODE.CTRL+Keys.KEYCODE.ONDOWN,ALT:Keys.KEYCODE.ALT+Keys.KEYCODE.ONDOWN,RALT:Keys.KEYCODE.ALT+Keys.KEYCODE.ONDOWN+Keys.KEYCODE.ONRIGHT,CAPS_LOCK:Keys.KEYCODE.CAPS_LOCK+Keys.KEYCODE.ONDOWN,ESC:Keys.KEYCODE.ESC+Keys.KEYCODE.ONDOWN,SPACE:Keys.KEYCODE.SPACE+Keys.KEYCODE.ONDOWN,F1:Keys.KEYCODE.F1+Keys.KEYCODE.ONDOWN,F2:Keys.KEYCODE.F2+Keys.KEYCODE.ONDOWN,F3:Keys.KEYCODE.F3+Keys.KEYCODE.ONDOWN,F4:Keys.KEYCODE.F4+Keys.KEYCODE.ONDOWN,F5:Keys.KEYCODE.F5+Keys.KEYCODE.ONDOWN,F6:Keys.KEYCODE.F6+Keys.KEYCODE.ONDOWN,F7:Keys.KEYCODE.F7+Keys.KEYCODE.ONDOWN,F8:Keys.KEYCODE.F8+Keys.KEYCODE.ONDOWN,F9:Keys.KEYCODE.F9+Keys.KEYCODE.ONDOWN,F10:Keys.KEYCODE.F10+Keys.KEYCODE.ONDOWN,F11:Keys.KEYCODE.F11+Keys.KEYCODE.ONDOWN,F12:Keys.KEYCODE.F12+Keys.KEYCODE.ONDOWN,NUM_LOCK:Keys.KEYCODE.NUM_LOCK+Keys.KEYCODE.ONDOWN,SCROLL_LOCK:Keys.KEYCODE.SCROLL_LOCK+Keys.KEYCODE.ONDOWN,PRTSC:Keys.KEYCODE.PRTSC+Keys.KEYCODE.ONDOWN,HOME:Keys.KEYCODE.HOME+Keys.KEYCODE.ONDOWN,UP:Keys.KEYCODE.UP+Keys.KEYCODE.ONDOWN,PGUP:Keys.KEYCODE.PGUP+Keys.KEYCODE.ONDOWN,LEFT:Keys.KEYCODE.LEFT+Keys.KEYCODE.ONDOWN,NUM_INS:Keys.KEYCODE.NUM_INS+Keys.KEYCODE.ONDOWN,NUM_END:Keys.KEYCODE.NUM_END+Keys.KEYCODE.ONDOWN,NUM_DOWN:Keys.KEYCODE.NUM_DOWN+Keys.KEYCODE.ONDOWN,NUM_PGDN:Keys.KEYCODE.NUM_PGDN+Keys.KEYCODE.ONDOWN,NUM_LEFT:Keys.KEYCODE.NUM_LEFT+Keys.KEYCODE.ONDOWN,NUM_CENTER:Keys.KEYCODE.NUM_CENTER+Keys.KEYCODE.ONDOWN,NUM_RIGHT:Keys.KEYCODE.NUM_RIGHT+Keys.KEYCODE.ONDOWN,NUM_HOME:Keys.KEYCODE.NUM_HOME+Keys.KEYCODE.ONDOWN,NUM_UP:Keys.KEYCODE.NUM_UP+Keys.KEYCODE.ONDOWN,NUM_PGUP:Keys.KEYCODE.NUM_PGUP+Keys.KEYCODE.ONDOWN,NUM_ADD:Keys.KEYCODE.NUM_ADD+Keys.KEYCODE.ONDOWN,NUM_SUB:Keys.KEYCODE.NUM_SUB+Keys.KEYCODE.ONDOWN,NUM_DEL:Keys.KEYCODE.NUM_DEL+Keys.KEYCODE.ONDOWN,RIGHT:Keys.KEYCODE.RIGHT+Keys.KEYCODE.ONDOWN,END:Keys.KEYCODE.END+Keys.KEYCODE.ONDOWN,DOWN:Keys.KEYCODE.DOWN+Keys.KEYCODE.ONDOWN,PGDN:Keys.KEYCODE.PGDN+Keys.KEYCODE.ONDOWN,INS:Keys.KEYCODE.INS+Keys.KEYCODE.ONDOWN,DEL:Keys.KEYCODE.DEL+Keys.KEYCODE.ONDOWN,CMD:Keys.KEYCODE.CMD+Keys.KEYCODE.ONDOWN,RCMD:Keys.KEYCODE.RCMD+Keys.KEYCODE.ONDOWN,FF_CMD:Keys.KEYCODE.FF_CMD+Keys.KEYCODE.ONDOWN,CTRL_A:Keys.ASCII.CTRL_A+Keys.KEYCODE.FAKE,CTRL_B:Keys.ASCII.CTRL_B+Keys.KEYCODE.FAKE,CTRL_C:Keys.ASCII.CTRL_C+Keys.KEYCODE.FAKE,CTRL_D:Keys.ASCII.CTRL_D+Keys.KEYCODE.FAKE,CTRL_E:Keys.ASCII.CTRL_E+Keys.KEYCODE.FAKE,CTRL_F:Keys.ASCII.CTRL_F+Keys.KEYCODE.FAKE,CTRL_G:Keys.ASCII.CTRL_G+Keys.KEYCODE.FAKE,CTRL_H:Keys.ASCII.CTRL_H+Keys.KEYCODE.FAKE,CTRL_I:Keys.ASCII.CTRL_I+Keys.KEYCODE.FAKE,CTRL_J:Keys.ASCII.CTRL_J+Keys.KEYCODE.FAKE,CTRL_K:Keys.ASCII.CTRL_K+Keys.KEYCODE.FAKE,CTRL_L:Keys.ASCII.CTRL_L+Keys.KEYCODE.FAKE,CTRL_M:Keys.ASCII.CTRL_M+Keys.KEYCODE.FAKE,CTRL_N:Keys.ASCII.CTRL_N+Keys.KEYCODE.FAKE,CTRL_O:Keys.ASCII.CTRL_O+Keys.KEYCODE.FAKE,CTRL_P:Keys.ASCII.CTRL_P+Keys.KEYCODE.FAKE,CTRL_Q:Keys.ASCII.CTRL_Q+Keys.KEYCODE.FAKE,CTRL_R:Keys.ASCII.CTRL_R+Keys.KEYCODE.FAKE,CTRL_S:Keys.ASCII.CTRL_S+Keys.KEYCODE.FAKE,CTRL_T:Keys.ASCII.CTRL_T+Keys.KEYCODE.FAKE,CTRL_U:Keys.ASCII.CTRL_U+Keys.KEYCODE.FAKE,CTRL_V:Keys.ASCII.CTRL_V+Keys.KEYCODE.FAKE,CTRL_W:Keys.ASCII.CTRL_W+Keys.KEYCODE.FAKE,CTRL_X:Keys.ASCII.CTRL_X+Keys.KEYCODE.FAKE,CTRL_Y:Keys.ASCII.CTRL_Y+Keys.KEYCODE.FAKE,CTRL_Z:Keys.ASCII.CTRL_Z+Keys.KEYCODE.FAKE,SYS_REQ:Keys.KEYCODE.ESC+Keys.KEYCODE.FAKE,CTRL_PAUSE:Keys.KEYCODE.NUM_LOCK+Keys.KEYCODE.FAKE,CTRL_BREAK:Keys.KEYCODE.SCROLL_LOCK+Keys.KEYCODE.FAKE,CTRL_ALT_DEL:Keys.KEYCODE.DEL+Keys.KEYCODE.FAKE,CTRL_ALT_INS:Keys.KEYCODE.INS+Keys.KEYCODE.FAKE,CTRL_ALT_ADD:Keys.KEYCODE.NUM_ADD+Keys.KEYCODE.FAKE,CTRL_ALT_SUB:Keys.KEYCODE.NUM_SUB+Keys.KEYCODE.FAKE,CTRL_ALT_ENTER:Keys.KEYCODE.NUM_CR+Keys.KEYCODE.FAKE,CTRL_ALT_SYS_REQ:Keys.KEYCODE.PRTSC+Keys.KEYCODE.FAKE,SHIFT_TAB:Keys.KEYCODE.TAB+Keys.KEYCODE.FAKE};static SCANCODE={ESC:1,ONE:2,TWO:3,THREE:4,FOUR:5,FIVE:6,SIX:7,SEVEN:8,EIGHT:9,NINE:10,ZERO:11,DASH:12,EQUALS:13,BS:14,TAB:15,Q:16,W:17,E:18,R:19,T:20,Y:21,U:22,I:23,O:24,P:25,LBRACK:26,RBRACK:27,ENTER:28,CTRL:29,A:30,S:31,D:32,F:33,G:34,H:35,J:36,K:37,L:38,SEMI:39,QUOTE:40,BQUOTE:41,SHIFT:42,BSLASH:43,Z:44,X:45,C:46,V:47,B:48,N:49,M:50,COMMA:51,PERIOD:52,SLASH:53,RSHIFT:54,PRTSC:55,ALT:56,SPACE:57,CAPS_LOCK:58,F1:59,F2:60,F3:61,F4:62,F5:63,F6:64,F7:65,F8:66,F9:67,F10:68,NUM_LOCK:69,SCROLL_LOCK:70,NUM_HOME:71,NUM_UP:72,NUM_PGUP:73,NUM_SUB:74,NUM_LEFT:75,NUM_CENTER:76,NUM_RIGHT:77,NUM_ADD:78,NUM_END:79,NUM_DOWN:80,NUM_PGDN:81,NUM_INS:82,NUM_DEL:83,SYS_REQ:84,PAUSE:84,F11:87,F12:88,WIN:91,RWIN:92,MENU:93,MAKE:127,BREAK:128,EXTEND1:224,EXTEND2:225};static STATE={RSHIFT:1,SHIFT:2,SHIFTS:3,RCTRL:4,CTRL:8,CTRLS:12,RALT:16,ALT:32,ALTS:48,RCMD:64,CMD:128,CMDS:192,ALL_RIGHT:85,ALL_MODIFIERS:255,INSERT:256,CAPS_LOCK:512,NUM_LOCK:1024,SCROLL_LOCK:2048,ALL_LOCKS:3584};static MODIFIERS={[Keyboardx86.SIMCODE.RSHIFT]:Keyboardx86.STATE.RSHIFT,[Keyboardx86.SIMCODE.SHIFT]:Keyboardx86.STATE.SHIFT,[Keyboardx86.SIMCODE.CTRL]:Keyboardx86.STATE.CTRL,[Keyboardx86.SIMCODE.ALT]:Keyboardx86.STATE.ALT,[Keyboardx86.SIMCODE.RALT]:Keyboardx86.STATE.ALT,[Keyboardx86.SIMCODE.CMD]:Keyboardx86.STATE.CMD,[Keyboardx86.SIMCODE.RCMD]:Keyboardx86.STATE.RCMD,[Keyboardx86.SIMCODE.FF_CMD]:Keyboardx86.STATE.CMD};static KEYSTATES={[Keyboardx86.SIMCODE.RSHIFT]:Keyboardx86.STATE.RSHIFT,[Keyboardx86.SIMCODE.SHIFT]:Keyboardx86.STATE.SHIFT,[Keyboardx86.SIMCODE.CTRL]:Keyboardx86.STATE.CTRL,[Keyboardx86.SIMCODE.ALT]:Keyboardx86.STATE.ALT,[Keyboardx86.SIMCODE.RALT]:Keyboardx86.STATE.ALT,[Keyboardx86.SIMCODE.CMD]:Keyboardx86.STATE.CMD,[Keyboardx86.SIMCODE.RCMD]:Keyboardx86.STATE.RCMD,[Keyboardx86.SIMCODE.FF_CMD]:Keyboardx86.STATE.CMD,[Keyboardx86.SIMCODE.CAPS_LOCK]:Keyboardx86.STATE.CAPS_LOCK,[Keyboardx86.SIMCODE.NUM_LOCK]:Keyboardx86.STATE.NUM_LOCK,[Keyboardx86.SIMCODE.SCROLL_LOCK]:Keyboardx86.STATE.SCROLL_LOCK};static CLICKCODES={TAB:Keyboardx86.SIMCODE.TAB,ESC:Keyboardx86.SIMCODE.ESC,F1:Keyboardx86.SIMCODE.F1,F2:Keyboardx86.SIMCODE.F2,F3:Keyboardx86.SIMCODE.F3,F4:Keyboardx86.SIMCODE.F4,F5:Keyboardx86.SIMCODE.F5,F6:Keyboardx86.SIMCODE.F6,F7:Keyboardx86.SIMCODE.F7,F8:Keyboardx86.SIMCODE.F8,F9:Keyboardx86.SIMCODE.F9,F10:Keyboardx86.SIMCODE.F10,LEFT:Keyboardx86.SIMCODE.LEFT,UP:Keyboardx86.SIMCODE.UP,RIGHT:Keyboardx86.SIMCODE.RIGHT,DOWN:Keyboardx86.SIMCODE.DOWN,NUM_HOME:Keyboardx86.SIMCODE.HOME,NUM_END:Keyboardx86.SIMCODE.END,NUM_PGUP:Keyboardx86.SIMCODE.PGUP,NUM_PGDN:Keyboardx86.SIMCODE.PGDN,ALT:Keyboardx86.SIMCODE.ALT,SYS_REQ:Keyboardx86.SIMCODE.SYS_REQ,CTRL_C:Keyboardx86.SIMCODE.CTRL_C,CTRL_PAUSE:Keyboardx86.SIMCODE.CTRL_PAUSE,CTRL_BREAK:Keyboardx86.SIMCODE.CTRL_BREAK,CTRL_ALT_DEL:Keyboardx86.SIMCODE.CTRL_ALT_DEL,CTRL_ALT_INS:Keyboardx86.SIMCODE.CTRL_ALT_INS,CTRL_ALT_ADD:Keyboardx86.SIMCODE.CTRL_ALT_ADD,CTRL_ALT_SUB:Keyboardx86.SIMCODE.CTRL_ALT_SUB,CTRL_ALT_ENTER:Keyboardx86.SIMCODE.CTRL_ALT_ENTER,CTRL_ALT_SYS_REQ:Keyboardx86.SIMCODE.CTRL_ALT_SYS_REQ,SHIFT_TAB:Keyboardx86.SIMCODE.SHIFT_TAB};static SOFTCODES={esc:Keyboardx86.SIMCODE.ESC,1:Keys.ASCII[1],2:Keys.ASCII[2],3:Keys.ASCII[3],4:Keys.ASCII[4],5:Keys.ASCII[5],6:Keys.ASCII[6],7:Keys.ASCII[7],8:Keys.ASCII[8],9:Keys.ASCII[9],0:Keys.ASCII[0],"-":Keys.ASCII["-"],"=":Keys.ASCII["="],bslash:Keys.ASCII["\\"],bs:Keyboardx86.SIMCODE.BS,tab:Keyboardx86.SIMCODE.TAB,q:Keys.ASCII.q,w:Keys.ASCII.w,e:Keys.ASCII.e,r:Keys.ASCII.r,t:Keys.ASCII.t,y:Keys.ASCII.y,u:Keys.ASCII.u,i:Keys.ASCII.i,o:Keys.ASCII.o,p:Keys.ASCII.p,"[":Keys.ASCII["["],"]":Keys.ASCII["]"],enter:Keys.KEYCODE.CR,ctrl:Keyboardx86.SIMCODE.CTRL,a:Keys.ASCII.a,s:Keys.ASCII.s,d:Keys.ASCII.d,f:Keys.ASCII.f,g:Keys.ASCII.g,h:Keys.ASCII.h,j:Keys.ASCII.j,k:Keys.ASCII.k,l:Keys.ASCII.l,";":Keys.ASCII[";"],quote:Keys.ASCII["'"],"`":Keys.ASCII["`"],shift:Keyboardx86.SIMCODE.SHIFT,"\\":Keys.ASCII["\\"],z:Keys.ASCII.z,x:Keys.ASCII.x,c:Keys.ASCII.c,v:Keys.ASCII.v,b:Keys.ASCII.b,n:Keys.ASCII.n,m:Keys.ASCII.m,",":Keys.ASCII[","],".":Keys.ASCII["."],"/":Keys.ASCII["/"],"right-shift":Keyboardx86.SIMCODE.RSHIFT,prtsc:Keyboardx86.SIMCODE.PRTSC,alt:Keyboardx86.SIMCODE.ALT,space:Keyboardx86.SIMCODE.SPACE,"caps-lock":Keyboardx86.SIMCODE.CAPS_LOCK,f10:Keyboardx86.SIMCODE.F10,f1:Keyboardx86.SIMCODE.F1,f2:Keyboardx86.SIMCODE.F2,f3:Keyboardx86.SIMCODE.F3,f4:Keyboardx86.SIMCODE.F4,f5:Keyboardx86.SIMCODE.F5,f6:Keyboardx86.SIMCODE.F6,f7:Keyboardx86.SIMCODE.F7,f8:Keyboardx86.SIMCODE.F8,f9:Keyboardx86.SIMCODE.F9,"num-lock":Keyboardx86.SIMCODE.NUM_LOCK,"scroll-lock":Keyboardx86.SIMCODE.SCROLL_LOCK,"num-home":Keyboardx86.SIMCODE.HOME,"num-up":Keyboardx86.SIMCODE.UP,"num-pgup":Keyboardx86.SIMCODE.PGUP,"num-sub":Keyboardx86.SIMCODE.NUM_SUB,"num-left":Keyboardx86.SIMCODE.LEFT,"num-center":Keyboardx86.SIMCODE.NUM_CENTER,"num-right":Keyboardx86.SIMCODE.RIGHT,"num-add":Keyboardx86.SIMCODE.NUM_ADD,"num-end":Keyboardx86.SIMCODE.END,"num-down":Keyboardx86.SIMCODE.DOWN,"num-pgdn":Keyboardx86.SIMCODE.PGDN,"num-ins":Keyboardx86.SIMCODE.INS,"num-del":Keyboardx86.SIMCODE.DEL,"sys-req":Keyboardx86.SIMCODE.SYS_REQ};static LEDSTATES={"caps-lock":Keyboardx86.STATE.CAPS_LOCK,"num-lock":Keyboardx86.STATE.NUM_LOCK,"scroll-lock":Keyboardx86.STATE.SCROLL_LOCK};static SIMCODES={[Keyboardx86.SIMCODE.ESC]:Keyboardx86.SCANCODE.ESC,[Keys.ASCII[1]]:Keyboardx86.SCANCODE.ONE,[Keys.ASCII["!"]]:Keyboardx86.SCANCODE.ONE|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII[2]]:Keyboardx86.SCANCODE.TWO,[Keys.ASCII["@"]]:Keyboardx86.SCANCODE.TWO|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII[3]]:Keyboardx86.SCANCODE.THREE,[Keys.ASCII["#"]]:Keyboardx86.SCANCODE.THREE|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII[4]]:Keyboardx86.SCANCODE.FOUR,[Keys.ASCII.$]:Keyboardx86.SCANCODE.FOUR|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII[5]]:Keyboardx86.SCANCODE.FIVE,[Keys.ASCII["%"]]:Keyboardx86.SCANCODE.FIVE|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII[6]]:Keyboardx86.SCANCODE.SIX,[Keys.ASCII["^"]]:Keyboardx86.SCANCODE.SIX|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII[7]]:Keyboardx86.SCANCODE.SEVEN,[Keys.ASCII["&"]]:Keyboardx86.SCANCODE.SEVEN|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII[8]]:Keyboardx86.SCANCODE.EIGHT,[Keys.ASCII["*"]]:Keyboardx86.SCANCODE.EIGHT|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII[9]]:Keyboardx86.SCANCODE.NINE,[Keys.ASCII["("]]:Keyboardx86.SCANCODE.NINE|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII[0]]:Keyboardx86.SCANCODE.ZERO,[Keys.ASCII[")"]]:Keyboardx86.SCANCODE.ZERO|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII["-"]]:Keyboardx86.SCANCODE.DASH,[Keys.ASCII._]:Keyboardx86.SCANCODE.DASH|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII["="]]:Keyboardx86.SCANCODE.EQUALS,[Keys.ASCII["+"]]:Keyboardx86.SCANCODE.EQUALS|Keyboardx86.SCANCODE.SHIFT<<8,[Keyboardx86.SIMCODE.BS]:Keyboardx86.SCANCODE.BS,[Keyboardx86.SIMCODE.TAB]:Keyboardx86.SCANCODE.TAB,[Keys.ASCII.q]:Keyboardx86.SCANCODE.Q,[Keys.ASCII.Q]:Keyboardx86.SCANCODE.Q|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.w]:Keyboardx86.SCANCODE.W,[Keys.ASCII.W]:Keyboardx86.SCANCODE.W|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.e]:Keyboardx86.SCANCODE.E,[Keys.ASCII.E]:Keyboardx86.SCANCODE.E|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.r]:Keyboardx86.SCANCODE.R,[Keys.ASCII.R]:Keyboardx86.SCANCODE.R|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.t]:Keyboardx86.SCANCODE.T,[Keys.ASCII.T]:Keyboardx86.SCANCODE.T|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.y]:Keyboardx86.SCANCODE.Y,[Keys.ASCII.Y]:Keyboardx86.SCANCODE.Y|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.u]:Keyboardx86.SCANCODE.U,[Keys.ASCII.U]:Keyboardx86.SCANCODE.U|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.i]:Keyboardx86.SCANCODE.I,[Keys.ASCII.I]:Keyboardx86.SCANCODE.I|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.o]:Keyboardx86.SCANCODE.O,[Keys.ASCII.O]:Keyboardx86.SCANCODE.O|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.p]:Keyboardx86.SCANCODE.P,[Keys.ASCII.P]:Keyboardx86.SCANCODE.P|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII["["]]:Keyboardx86.SCANCODE.LBRACK,[Keys.ASCII["{"]]:Keyboardx86.SCANCODE.LBRACK|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII["]"]]:Keyboardx86.SCANCODE.RBRACK,[Keys.ASCII["}"]]:Keyboardx86.SCANCODE.RBRACK|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.KEYCODE.CR]:Keyboardx86.SCANCODE.ENTER,[Keyboardx86.SIMCODE.CTRL]:Keyboardx86.SCANCODE.CTRL,[Keys.ASCII.a]:Keyboardx86.SCANCODE.A,[Keys.ASCII.A]:Keyboardx86.SCANCODE.A|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.s]:Keyboardx86.SCANCODE.S,[Keys.ASCII.S]:Keyboardx86.SCANCODE.S|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.d]:Keyboardx86.SCANCODE.D,[Keys.ASCII.D]:Keyboardx86.SCANCODE.D|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.f]:Keyboardx86.SCANCODE.F,[Keys.ASCII.F]:Keyboardx86.SCANCODE.F|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.g]:Keyboardx86.SCANCODE.G,[Keys.ASCII.G]:Keyboardx86.SCANCODE.G|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.h]:Keyboardx86.SCANCODE.H,[Keys.ASCII.H]:Keyboardx86.SCANCODE.H|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.j]:Keyboardx86.SCANCODE.J,[Keys.ASCII.J]:Keyboardx86.SCANCODE.J|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.k]:Keyboardx86.SCANCODE.K,[Keys.ASCII.K]:Keyboardx86.SCANCODE.K|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.l]:Keyboardx86.SCANCODE.L,[Keys.ASCII.L]:Keyboardx86.SCANCODE.L|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII[";"]]:Keyboardx86.SCANCODE.SEMI,[Keys.ASCII[":"]]:Keyboardx86.SCANCODE.SEMI|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII["'"]]:Keyboardx86.SCANCODE.QUOTE,[Keys.ASCII['"']]:Keyboardx86.SCANCODE.QUOTE|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII["`"]]:Keyboardx86.SCANCODE.BQUOTE,[Keys.ASCII["~"]]:Keyboardx86.SCANCODE.BQUOTE|Keyboardx86.SCANCODE.SHIFT<<8,[Keyboardx86.SIMCODE.SHIFT]:Keyboardx86.SCANCODE.SHIFT,[Keys.ASCII["\\"]]:Keyboardx86.SCANCODE.BSLASH,[Keys.ASCII["|"]]:Keyboardx86.SCANCODE.BSLASH|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.z]:Keyboardx86.SCANCODE.Z,[Keys.ASCII.Z]:Keyboardx86.SCANCODE.Z|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.x]:Keyboardx86.SCANCODE.X,[Keys.ASCII.X]:Keyboardx86.SCANCODE.X|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.c]:Keyboardx86.SCANCODE.C,[Keys.ASCII.C]:Keyboardx86.SCANCODE.C|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.v]:Keyboardx86.SCANCODE.V,[Keys.ASCII.V]:Keyboardx86.SCANCODE.V|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.b]:Keyboardx86.SCANCODE.B,[Keys.ASCII.B]:Keyboardx86.SCANCODE.B|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.n]:Keyboardx86.SCANCODE.N,[Keys.ASCII.N]:Keyboardx86.SCANCODE.N|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII.m]:Keyboardx86.SCANCODE.M,[Keys.ASCII.M]:Keyboardx86.SCANCODE.M|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII[","]]:Keyboardx86.SCANCODE.COMMA,[Keys.ASCII["<"]]:Keyboardx86.SCANCODE.COMMA|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII["."]]:Keyboardx86.SCANCODE.PERIOD,[Keys.ASCII[">"]]:Keyboardx86.SCANCODE.PERIOD|Keyboardx86.SCANCODE.SHIFT<<8,[Keys.ASCII["/"]]:Keyboardx86.SCANCODE.SLASH,[Keys.ASCII["?"]]:Keyboardx86.SCANCODE.SLASH|Keyboardx86.SCANCODE.SHIFT<<8,[Keyboardx86.SIMCODE.RSHIFT]:Keyboardx86.SCANCODE.RSHIFT,[Keyboardx86.SIMCODE.PRTSC]:Keyboardx86.SCANCODE.PRTSC,[Keyboardx86.SIMCODE.ALT]:Keyboardx86.SCANCODE.ALT,[Keyboardx86.SIMCODE.RALT]:Keyboardx86.SCANCODE.ALT,[Keyboardx86.SIMCODE.SPACE]:Keyboardx86.SCANCODE.SPACE,[Keyboardx86.SIMCODE.CAPS_LOCK]:Keyboardx86.SCANCODE.CAPS_LOCK,[Keyboardx86.SIMCODE.F1]:Keyboardx86.SCANCODE.F1,[Keyboardx86.SIMCODE.F2]:Keyboardx86.SCANCODE.F2,[Keyboardx86.SIMCODE.F3]:Keyboardx86.SCANCODE.F3,[Keyboardx86.SIMCODE.F4]:Keyboardx86.SCANCODE.F4,[Keyboardx86.SIMCODE.F5]:Keyboardx86.SCANCODE.F5,[Keyboardx86.SIMCODE.F6]:Keyboardx86.SCANCODE.F6,[Keyboardx86.SIMCODE.F7]:Keyboardx86.SCANCODE.F7,[Keyboardx86.SIMCODE.F8]:Keyboardx86.SCANCODE.F8,[Keyboardx86.SIMCODE.F9]:Keyboardx86.SCANCODE.F9,[Keyboardx86.SIMCODE.F10]:Keyboardx86.SCANCODE.F10,[Keyboardx86.SIMCODE.NUM_LOCK]:Keyboardx86.SCANCODE.NUM_LOCK,[Keyboardx86.SIMCODE.SCROLL_LOCK]:Keyboardx86.SCANCODE.SCROLL_LOCK,[Keyboardx86.SIMCODE.HOME]:Keyboardx86.SCANCODE.NUM_HOME,[Keyboardx86.SIMCODE.NUM_HOME]:Keyboardx86.SCANCODE.NUM_HOME,[Keyboardx86.SIMCODE.UP]:Keyboardx86.SCANCODE.NUM_UP,[Keyboardx86.SIMCODE.NUM_UP]:Keyboardx86.SCANCODE.NUM_UP,[Keyboardx86.SIMCODE.PGUP]:Keyboardx86.SCANCODE.NUM_PGUP,[Keyboardx86.SIMCODE.NUM_PGUP]:Keyboardx86.SCANCODE.NUM_PGUP,[Keyboardx86.SIMCODE.LEFT]:Keyboardx86.SCANCODE.NUM_LEFT,[Keyboardx86.SIMCODE.NUM_LEFT]:Keyboardx86.SCANCODE.NUM_LEFT,[Keyboardx86.SIMCODE.NUM_CENTER]:Keyboardx86.SCANCODE.NUM_CENTER,[Keyboardx86.SIMCODE.RIGHT]:Keyboardx86.SCANCODE.NUM_RIGHT,[Keyboardx86.SIMCODE.NUM_RIGHT]:Keyboardx86.SCANCODE.NUM_RIGHT,[Keyboardx86.SIMCODE.END]:Keyboardx86.SCANCODE.NUM_END,[Keyboardx86.SIMCODE.NUM_END]:Keyboardx86.SCANCODE.NUM_END,[Keyboardx86.SIMCODE.DOWN]:Keyboardx86.SCANCODE.NUM_DOWN,[Keyboardx86.SIMCODE.NUM_DOWN]:Keyboardx86.SCANCODE.NUM_DOWN,[Keyboardx86.SIMCODE.PGDN]:Keyboardx86.SCANCODE.NUM_PGDN,[Keyboardx86.SIMCODE.NUM_PGDN]:Keyboardx86.SCANCODE.NUM_PGDN,[Keyboardx86.SIMCODE.INS]:Keyboardx86.SCANCODE.NUM_INS,[Keyboardx86.SIMCODE.NUM_INS]:Keyboardx86.SCANCODE.NUM_INS,[Keyboardx86.SIMCODE.NUM_ADD]:Keyboardx86.SCANCODE.NUM_ADD,[Keyboardx86.SIMCODE.NUM_SUB]:Keyboardx86.SCANCODE.NUM_SUB,[Keyboardx86.SIMCODE.DEL]:Keyboardx86.SCANCODE.NUM_DEL,[Keyboardx86.SIMCODE.NUM_DEL]:Keyboardx86.SCANCODE.NUM_DEL,[Keyboardx86.SIMCODE.SYS_REQ]:Keyboardx86.SCANCODE.SYS_REQ,[Keyboardx86.SIMCODE.F11]:Keyboardx86.SCANCODE.F11,[Keyboardx86.SIMCODE.F12]:Keyboardx86.SCANCODE.F12,[Keyboardx86.SIMCODE.CMD]:Keyboardx86.SCANCODE.WIN,[Keyboardx86.SIMCODE.RCMD]:Keyboardx86.SCANCODE.MENU,[Keyboardx86.SIMCODE.FF_CMD]:Keyboardx86.SCANCODE.WIN,[Keyboardx86.SIMCODE.SHIFT_TAB]:Keyboardx86.SCANCODE.TAB|Keyboardx86.SCANCODE.SHIFT<<8,[Keyboardx86.SIMCODE.CTRL_A]:Keyboardx86.SCANCODE.A|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_B]:Keyboardx86.SCANCODE.B|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_C]:Keyboardx86.SCANCODE.C|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_D]:Keyboardx86.SCANCODE.D|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_E]:Keyboardx86.SCANCODE.E|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_F]:Keyboardx86.SCANCODE.F|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_G]:Keyboardx86.SCANCODE.G|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_H]:Keyboardx86.SCANCODE.H|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_I]:Keyboardx86.SCANCODE.I|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_J]:Keyboardx86.SCANCODE.J|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_K]:Keyboardx86.SCANCODE.K|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_L]:Keyboardx86.SCANCODE.L|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_M]:Keyboardx86.SCANCODE.M|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_N]:Keyboardx86.SCANCODE.N|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_O]:Keyboardx86.SCANCODE.O|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_P]:Keyboardx86.SCANCODE.P|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_Q]:Keyboardx86.SCANCODE.Q|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_R]:Keyboardx86.SCANCODE.R|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_S]:Keyboardx86.SCANCODE.S|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_T]:Keyboardx86.SCANCODE.T|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_U]:Keyboardx86.SCANCODE.U|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_V]:Keyboardx86.SCANCODE.V|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_W]:Keyboardx86.SCANCODE.W|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_X]:Keyboardx86.SCANCODE.X|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_Y]:Keyboardx86.SCANCODE.Y|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_Z]:Keyboardx86.SCANCODE.Z|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_BREAK]:Keyboardx86.SCANCODE.SCROLL_LOCK|Keyboardx86.SCANCODE.CTRL<<8,[Keyboardx86.SIMCODE.CTRL_ALT_DEL]:Keyboardx86.SCANCODE.NUM_DEL|Keyboardx86.SCANCODE.CTRL<<8|Keyboardx86.SCANCODE.ALT<<16,[Keyboardx86.SIMCODE.CTRL_ALT_INS]:Keyboardx86.SCANCODE.NUM_INS|Keyboardx86.SCANCODE.CTRL<<8|Keyboardx86.SCANCODE.ALT<<16,[Keyboardx86.SIMCODE.CTRL_ALT_ADD]:Keyboardx86.SCANCODE.NUM_ADD|Keyboardx86.SCANCODE.CTRL<<8|Keyboardx86.SCANCODE.ALT<<16,[Keyboardx86.SIMCODE.CTRL_ALT_SUB]:Keyboardx86.SCANCODE.NUM_SUB|Keyboardx86.SCANCODE.CTRL<<8|Keyboardx86.SCANCODE.ALT<<16,[Keyboardx86.SIMCODE.CTRL_ALT_ENTER]:Keyboardx86.SCANCODE.ENTER|Keyboardx86.SCANCODE.CTRL<<8|Keyboardx86.SCANCODE.ALT<<16,[Keyboardx86.SIMCODE.CTRL_ALT_SYS_REQ]:Keyboardx86.SCANCODE.SYS_REQ|Keyboardx86.SCANCODE.CTRL<<8|Keyboardx86.SCANCODE.ALT<<16};constructor(V){super("Keyboard",V,MESSAGE.KBD),this.setModel(V.model),this.fMobile=WebLib.isMobile("!iPad"),this.printf("mobile keyboard support: %b\n",this.fMobile),this.fMSWindows=WebLib.isUserAgent("Windows"),this.cSoftCodes=0,this.fSoftKeyboard=V.softKeys,this.controlSoftKeyboard=null,this.controlTextKeyboard=null,this.fHasFocus=!0,this.fDelayALT=!1,this.fEscapeDisabled=!1,this.fToggleCapsLock=!1,this.aKeysActive=[],this.msTransmit=25,this.msAutoRepeat=500,this.msNextRepeat=100,this.msAutoRelease=50,this.msInjectDefault=100,this.msInjectDelay=0,this.msDoubleClick=250,this.cKeysPressed=0,this.softCodeKeys=Object.keys(Keyboardx86.SOFTCODES);for(let V=0;V<this.softCodeKeys.length;V++)this.softCodeKeys[V].length<2&&(this.softCodeKeys.splice(V,1),V--);this.autoType=V.autoType,this.fDOSReady=!1,this.fnDOSReady=this.fnInjectReady=null,this.nInjection=Keyboardx86.INJECTION.ON_INPUT,this.fAllDown=!1,this.exports={type:this.injectKeys,wait:this.waitReady},this.setReady()}setBinding(V,R,U,l){let e,t,T=this,k=V+"-"+R,F=U;if(void 0===this.bindings[k])switch(R){case"keys":case"keyboard":try{let V=document.getElementById(this.idMachine+".soft-keyboard"+(this.fMobile?"-mobile":""));if(V||(V=U.parentElement.parentElement.nextElementSibling,e=V.className,this.fMobile!=e.indexOf("mobile")>=0&&(V=V.nextElementSibling)),V){if(this.controlSoftKeyboard=V,null!=this.fSoftKeyboard)this.enableSoftKeyboard(this.fSoftKeyboard);else{let R=getComputedStyle(V);this.fSoftKeyboard="none"!=R.display}U.onclick=function(V){T.enableSoftKeyboard(!T.fSoftKeyboard)},"ontouchstart"in window&&(V.ontouchstart=function(V){V.preventDefault()})}}catch(V){}return!0;case"screen":return"textarea"!=V||WebLib.isUserAgent("iPhone")||(this.controlTextKeyboard=F,this.controlTextKeyboard.addEventListener("copy",(function(V){T.onCopy(V)})),this.controlTextKeyboard.addEventListener("cut",(function(V){T.onCut(V)})),this.controlTextKeyboard.addEventListener("paste",(function(V){T.onPaste(V)}))),F.onkeydown=function(V){return T.onKeyActive(V,!0)},F.onkeypress=function(V){return T.onKeyPress(V)},F.onkeyup=function(V){return T.onKeyActive(V,!1)},!0;case"caps-lock":if("led"==V)return this.bindings[k]=U,U.onclick=function(V){return T.updateFocus(V),T.toggleCapsLock()},!0;case"num-lock":if("led"==V)return this.bindings[k]=U,U.onclick=function(V){return T.updateFocus(V),T.toggleNumLock()},!0;case"scroll-lock":if("led"==V)return this.bindings[k]=U,U.onclick=function(V){return T.updateFocus(V),T.toggleScrollLock()},!0;default:if(t=R.toUpperCase().replace(/-/g,"_"),void 0!==Keyboardx86.CLICKCODES[t]&&"button"==V)return this.bindings[k]=F,MAXDEBUG&&this.printf(MESSAGE.LOG,"binding click-code '%s'\n",t),F.onclick=function(V,R,U){return function(l){V.printf(MESSAGE.EVENT+MESSAGE.KEY,"%s clicked\n",R),V.updateFocus(l),V.sInjectBuffer="",V.updateShiftState(U,!0),V.addActiveKey(U,!0)}}(this,t,Keyboardx86.CLICKCODES[t]),!0;if(void 0!==Keyboardx86.SOFTCODES[R]){if(e=U.parentElement.parentElement.className,e&&this.fMobile!=e.indexOf("mobile")>=0)break;this.cSoftCodes++,this.bindings[k]=F,MAXDEBUG&&this.printf(MESSAGE.LOG,"binding soft-code '%s'\n",R);let V=0,l=0,t=Keyboardx86.KEYSTATES[Keyboardx86.SOFTCODES[R]]<=Keyboardx86.STATE.ALL_MODIFIERS,T=function(R,U,e){return function(U){let t=U.timeStamp-V;l=l&&t<R.msDoubleClick?l<<1:1,V=U.timeStamp,U.preventDefault(),R.sInjectBuffer="",R.addActiveKey(e)}}(this,0,Keyboardx86.SOFTCODES[R]),W=function(U,e,T){return function(e){if(l){let k=e.timeStamp-V;l=t&&k<U.msDoubleClick?l<<1:0,V=e.timeStamp,l<8?U.removeActiveKey(T):(MAXDEBUG&&this.printf(MESSAGE.LOG,"soft-locking '%s'\n",R),l=0)}}}(this,0,Keyboardx86.SOFTCODES[R]);return"ontouchstart"in window?(F.ontouchstart=T,F.ontouchend=W):(F.onmousedown=T,F.onmouseup=F.onmouseout=W),!0}if(l)return this.bindings[k]=U,U.onclick=function(V){return T.updateFocus(V),T.injectKeys(l)},!0}return!1}updateFocus(V){V.preventDefault(),!this.fSoftKeyboard&&this.cmp&&this.cmp.updateFocus()}findBinding(V,R,U){let l;if(this.cSoftCodes&&this.fSoftKeyboard){for(let R in Keys.SHIFTED_KEYCODES)if(V==Keys.SHIFTED_KEYCODES[R]){V=+R,R=Keys.NONASCII_KEYCODES[R],R&&(V=+R);break}V==Keyboardx86.SIMCODE.CTRL_PAUSE?V=Keyboardx86.SIMCODE.NUM_LOCK:V==Keyboardx86.SIMCODE.CTRL_BREAK?V=Keyboardx86.SIMCODE.SCROLL_LOCK:V==Keyboardx86.SIMCODE.CTRL_ALT_DEL?V=Keyboardx86.SIMCODE.DEL:V==Keyboardx86.SIMCODE.CTRL_ALT_INS?V=Keyboardx86.SIMCODE.INS:V==Keyboardx86.SIMCODE.CTRL_ALT_ADD?V=Keyboardx86.SIMCODE.NUM_ADD:V==Keyboardx86.SIMCODE.CTRL_ALT_SUB?V=Keyboardx86.SIMCODE.NUM_SUB:V==Keyboardx86.SIMCODE.CTRL_ALT_SYS_REQ&&(V=Keyboardx86.SIMCODE.SYS_REQ);for(let e in Keyboardx86.SOFTCODES)if(Keyboardx86.SOFTCODES[e]==V||Keyboardx86.SOFTCODES[e]==this.toUpperKey(V)){let V=R+"-"+e;l=this.bindings[V],l&&void 0!==U&&this.setSoftKeyState(l,U);break}}return l}initBus(V,R,U,l){this.cmp=V,this.bus=R,this.cpu=U,this.dbg=l;let e=this;this.timerInject=this.cpu.addTimer(this.id+".inject",(function(){e.injectKeys()})),this.timerTransmit=this.cpu.addTimer(this.id+".transmit",(function(){e.transmitData()})),this.chipset=V.getMachineComponent("ChipSet"),this.autoType=V.getMachineParm("autoType")||this.autoType;let t=V.getMachineParm("softKeys");t&&this.enableSoftKeyboard("false"!=t),this.video=V.getMachineComponent("Video"),U.addIntNotify(Interrupts.DOS,this.intDOS.bind(this))}start(){this.controlTextKeyboard&&(this.controlTextKeyboard.style.lineHeight="normal",this.controlTextKeyboard.focus(),this.controlTextKeyboard.select()),this.injectInit(Keyboardx86.INJECTION.ON_START)}intDOS(V){let R=this.cpu.regEAX>>8&255;return this.fDOSReady=!1,10==R&&(this.fDOSReady=!0,this.fnDOSReady?(this.fnDOSReady(),this.fnDOSReady=null):this.injectInit(Keyboardx86.INJECTION.ON_INPUT)),!0}notifyEscape(V,R){this.fEscapeDisabled=V,void 0!==R&&(this.fAllDown=R)}resetDevice(){this.printf(MESSAGE.KBD+MESSAGE.PORT,"keyboard reset\n"),this.abBuffer=[],this.setResponse(Keyboardx86.CMDRES.BAT_OK)}setModel(V){let R=0;this.model=null,"string"==typeof V&&(this.model=V.toUpperCase(),R=Keyboardx86.MODELS.indexOf(this.model),R<0&&(R=0)),(V=Keyboardx86.MODELS[R])&&(this.modelCountry=V.substr(0,2),this.modelKeys=parseInt(V.substr(2),10))}checkBuffer(V){let R=!1;V&&(V==Keyboardx86.CMDRES.ACK&&(R=!0),this.cpu&&this.cpu.setTimer(this.timerTransmit,this.msTransmit,!0)),this.transmitData(R)}flushBuffer(){this.abBuffer=[],COMPILED||this.printf("keyboard data flushed\n")}receiveCmd(V){let R=-1;switch(COMPILED||this.printf("receiveCmd(%#04X)\n",this.bCmdPending||V),this.bCmdPending||V){case Keyboardx86.CMD.RESET:R=Keyboardx86.CMDRES.ACK,this.resetDevice();break;case Keyboardx86.CMD.SET_RATE:this.bCmdPending&&(this.setRate(V),V=0),this.setResponse(Keyboardx86.CMDRES.ACK),this.bCmdPending=V;break;case Keyboardx86.CMD.SET_LEDS:this.bCmdPending&&(this.setLEDs(V),V=0),this.setResponse(Keyboardx86.CMDRES.ACK),this.bCmdPending=V;break;default:COMPILED||this.printf("receiveCmd(): unrecognized command\n")}return R}setEnabled(V,R){let U=!1;return this.fClock!==R&&(COMPILED||this.printf(MESSAGE.KBD+MESSAGE.PORT,"keyboard clock line changing to %b\n",R),this.fClock=this.fResetOnEnable=R),this.fData!==V&&(COMPILED||this.printf(MESSAGE.KBD+MESSAGE.PORT,"keyboard data line changing to %b\n",V),this.fData=V,V&&!this.fResetOnEnable&&this.transmitData(!0)),this.fData&&this.fResetOnEnable&&(this.resetDevice(),this.fResetOnEnable=!1,U=!0),U}setLEDs(V){this.bLEDs=V}setRate(V){this.bRate=V}setResponse(V){this.chipset&&(this.abBuffer.unshift(V),COMPILED||this.printf("keyboard response %#04X buffered\n",V),this.transmitData())}transmitData(V){if(this.chipset&&(V||!this.cpu.isTimerSet(this.timerTransmit))){let V=this.abBuffer.length?this.abBuffer[0]:0;this.chipset.receiveKbdData(V)&&(COMPILED||this.printf("keyboard data %#04X delivered\n",V),this.abBuffer.shift()),V&&this.cpu.setTimer(this.timerTransmit,this.msTransmit)}}powerUp(V,R){return!(!R&&(this.reset(),V&&this.restore&&!this.restore(V)))}powerDown(V,R){return!V||this.save()}reset(){if(!this.model&&this.chipset)switch(this.chipset.model){case ChipSet.MODEL_5150:case ChipSet.MODEL_5160:this.setModel(Keyboardx86.MODELS[0]);break;case ChipSet.MODEL_5170:default:this.setModel(Keyboardx86.MODELS[1])}this.initState()}save(){let V=new State(this);return V.set(0,this.saveState()),V.data()}restore(V){return this.initState(V[0])}initState(V){V?V[2]=this.cmp.sStatePath?Keyboardx86.INJECTION.ON_START:V[2]||Keyboardx86.INJECTION.NONE:V=[!1,!1,Keyboardx86.INJECTION.ON_INPUT];let R=0;return this.fClock=V[R++],this.fData=V[R++],this.nInjection=V[R++],this.sInjectBuffer=V[R++]||"",this.msInjectDelay=V[4]||this.msInjectDefault,this.bCmdPending=0,this.bitsState=this.bitsStateSim=this.bitsStateFake=0,this.abBuffer=[],!0}saveState(){let V=[],R=0;return V[R++]=this.fClock,V[R++]=this.fData,V[R++]=this.nInjection,V[R++]=this.sInjectBuffer,V[4]=this.msInjectDelay,V}enableSoftKeyboard(V){this.controlSoftKeyboard&&(V?(this.controlSoftKeyboard.style.display="block",this.controlTextKeyboard&&(this.controlTextKeyboard.readOnly=!0)):(this.controlSoftKeyboard.style.display="none",this.controlTextKeyboard&&(this.controlTextKeyboard.readOnly=!1))),this.fSoftKeyboard=V}setSoftKeyState(V,R){V.style.color=R?"#ffffff":"#000000",V.style.backgroundColor=R?"#000000":"#ffffff"}addScanCode(V){if(this.abBuffer){if(this.abBuffer.length<Keyboardx86.LIMIT.MAX_SCANCODES)return DESKPRO386&&this.chipset&&this.chipset.model==ChipSet.MODEL_COMPAQ_DESKPRO386&&(this.cpu.isProtMode()||this.bus.setByteDirect(ROMx86.BIOS.COMPAQ_KEYCLICK,0)),this.abBuffer.push(V),COMPILED||this.printf("keyboard data %#04X buffered\n",V),void this.transmitData();this.abBuffer.length==Keyboardx86.LIMIT.MAX_SCANCODES&&this.abBuffer.push(Keyboardx86.CMDRES.BUFF_FULL),this.printf("keyboard buffer overflow\n")}}injectInit(V){this.nInjection==V&&(this.nInjection=Keyboardx86.INJECTION.NONE,this.autoType&&this.injectKeys(this.autoType))}injectKeys(V,R=this.msInjectDefault){if(V){let U=this.parseKeys(V);return!!U&&(this.nInjection=Keyboardx86.INJECTION.NONE,this.sInjectBuffer=U,DEBUG&&this.printf('injectKeys("%s")\n',this.sInjectBuffer.split("\n").join("\\n")),this.msInjectDelay=R||0,this.injectKeys(),!0)}this.msInjectDelay>=1e3&&(this.msInjectDelay=this.msInjectDefault);let U=0;for(;this.sInjectBuffer.length>0&&!U;){let V=this.sInjectBuffer.charAt(0);if("$"==V){let V=this.sInjectBuffer.match(/^\$([0-9]+)\.?/);if(V){this.msInjectDelay=100*+V[1]||this.msInjectDefault,this.sInjectBuffer=this.sInjectBuffer.substr(V[0].length);break}for(let V=0;V<this.softCodeKeys.length;V++){let R=this.softCodeKeys[V];if(1==this.sInjectBuffer.indexOf(R)){U=Keyboardx86.SOFTCODES[R],this.sInjectBuffer=this.sInjectBuffer.substr(R.length+1);break}let l=0==R.indexOf("num-")?R.substr(4):"";if(l&&1==this.sInjectBuffer.indexOf(l)){U=Keyboardx86.SOFTCODES[R],this.sInjectBuffer=this.sInjectBuffer.substr(l.length+1);break}}}if(U)break;this.sInjectBuffer=this.sInjectBuffer.substr(1);let R=V.charCodeAt(0);R<=Keys.ASCII.CTRL_Z?(U=R,10==R&&(U=13),R!=Keys.ASCII.CTRL_I&&R!=Keys.ASCII.CTRL_J&&R!=Keys.ASCII.CTRL_M&&(U+=Keys.KEYCODE.FAKE)):28==R?U=Keys.ASCII.CTRL_I+Keys.KEYCODE.FAKE:29==R?U=Keys.ASCII.CTRL_J+Keys.KEYCODE.FAKE:30==R?U=Keys.ASCII.CTRL_M+Keys.KEYCODE.FAKE:31==R?U=Keys.ASCII.$:R<=127&&(U=R)}if(U){let V=void 0===Keyboardx86.MODIFIERS[U];this.addActiveKey(U,V),V&&this.clearActiveKeys(!0)}return this.sInjectBuffer.length?this.cpu.setTimer(this.timerInject,this.msInjectDelay):this.fnInjectReady&&(this.fnInjectReady(),this.fnInjectReady=null),!0}parseKeys(V){if(V){let R,U=new Date,l=/(?:^|[^$])\$([a-z0-9][a-z0-9-]+)/g;for(;R=l.exec(V);){let e="";switch(l.lastIndex&&l.lastIndex--,R[1]){case"date":e=StrLib.sprintf("%M-%02D-%04Y",U);break;case"time":e=StrLib.sprintf("%H:%02N:%02S",U);break;default:continue}V=V.replace("$"+R[1],e)}V=V.replace(/\$\$/g,"")}return V}waitReady(V,R){let U=!1;if("DOS"===R)this.fDOSReady?U=!0:this.fnDOSReady=V;else this.sInjectBuffer.length?this.fnInjectReady=V:U=!0;return U}setLED(V,R){V.style.backgroundColor=R?"#00ff00":"#000000"}updateLEDs(V){let R;for(let U in Keyboardx86.LEDSTATES){let l="led-"+U,e=Keyboardx86.LEDSTATES[U];V&&V!=e||!(R=this.bindings[l])||this.setLED(R,!!(this.bitsStateSim&e))}}toggleCapsLock(){this.addActiveKey(Keyboardx86.SIMCODE.CAPS_LOCK,!0)}toggleNumLock(){this.addActiveKey(Keyboardx86.SIMCODE.NUM_LOCK,!0)}toggleScrollLock(){this.addActiveKey(Keyboardx86.SIMCODE.SCROLL_LOCK,!0)}updateShiftState(V,R,U){let l=0;if(Keyboardx86.SIMCODES[V]){let e=2&Math.floor(V/1e3),t=Keyboardx86.KEYSTATES[V]||0;if(t){if(!e||t&Keyboardx86.STATE.ALL_RIGHT||(t>>=1),t&Keyboardx86.STATE.ALL_LOCKS){if(!1===U)return-1;U=null}null==U?U=!((R?this.bitsStateSim:this.bitsState)&t):U||R||t&Keyboardx86.STATE.ALL_MODIFIERS&&(t=Keyboardx86.STATE.ALL_MODIFIERS),R?this.bitsStateSim&Keyboardx86.STATE.ALL_MODIFIERS&&t&Keyboardx86.STATE.ALL_LOCKS||(this.bitsStateSim&=~t,U&&(this.bitsStateSim|=t),this.updateLEDs(t)):(this.bitsState&=~t,U&&(this.bitsState|=t)),l=U?1:-1}}return l}addActiveKey(V,R){let U,l;if(!(Keyboardx86.SIMCODES[V]||Keyboardx86.SIMCODES[V+=Keys.KEYCODE.ONDOWN]))return COMPILED||this.printf(MESSAGE.KBD+MESSAGE.KEY,"addActiveKey(%d,%s): unrecognized\n",V,R?"press":"down"),!1;if(!this.cpu||!this.cpu.isRunning())return!1;for(Keyboardx86.KEYSTATES[V]&&this.aKeysActive.length&&this.aKeysActive[0].nRepeat>0&&(this.aKeysActive[0].nRepeat=0),U=0;U<this.aKeysActive.length;U++)if(l=this.aKeysActive[U],l.simCode==V){if(!R||l.nRepeat>=0){U=-1;break}U>0&&(this.aKeysActive[0].nRepeat>0&&(this.aKeysActive[0].nRepeat=0),this.aKeysActive.splice(U,1));break}return COMPILED||this.printf(MESSAGE.KBD+MESSAGE.KEY,"addActiveKey(%d,%s): %s\n",V,R?"press":"down",U<0?"already active":U==this.aKeysActive.length?"adding":"updating"),!(U<0)&&(U==this.aKeysActive.length&&(l={simCode:V},this.findBinding(V,"key",!0),U++),U>0&&this.aKeysActive.splice(0,0,l),l.fDown=!0,l.nRepeat=R?-1:Keyboardx86.KEYSTATES[V]?0:1,this.updateActiveKey(l),!0)}checkActiveKey(){return this.aKeysActive.length?this.aKeysActive[0].simCode:0}isAlphaKey(V){return V>=Keys.ASCII.A&&V<=Keys.ASCII.Z||V>=Keys.ASCII.a&&V<=Keys.ASCII.z}toUpperKey(V){return V>=Keys.ASCII.a&&V<=Keys.ASCII.z&&(V-=Keys.ASCII.a-Keys.ASCII.A),V}clearActiveKeys(V){for(let R=0;R<this.aKeysActive.length;R++){let U=this.aKeysActive[R];V&&!Keyboardx86.MODIFIERS[U.simCode]||this.removeActiveKey(U.simCode)&&R--}}removeActiveKey(V,R){if(!Keyboardx86.SIMCODES[V])return COMPILED||this.printf(MESSAGE.KBD+MESSAGE.KEY,"removeActiveKey(%d): unrecognized\n",V),!1;if(!(R||this.cpu&&this.cpu.isRunning()))return!1;let U=!1;for(let l=0;l<this.aKeysActive.length;l++){let e=this.aKeysActive[l];if(e.simCode==V||e.simCode==Keys.SHIFTED_KEYCODES[V]){this.aKeysActive.splice(l,1),e.timer&&clearTimeout(e.timer),e.fDown&&!R&&this.simulateKey(e.simCode,!1),this.findBinding(V,"key",!1),U=!0;break}}return COMPILED||R||this.printf(MESSAGE.KBD+MESSAGE.KEY,"removeActiveKey(%d): %s\n",V,U?"removed":"not active"),!this.aKeysActive.length&&this.fToggleCapsLock&&(COMPILED||this.printf(MESSAGE.KBD+MESSAGE.KEY,"removeActiveKey(): inverting caps-lock now\n"),this.updateShiftState(Keyboardx86.SIMCODE.CAPS_LOCK),this.fToggleCapsLock=!1),U}updateActiveKey(V,R){if(!this.cpu||!this.cpu.isRunning())return void this.removeActiveKey(V.simCode,!0);if(COMPILED||this.printf(MESSAGE.KBD+MESSAGE.KEY,"updateActiveKey(%d,%dms): %b\n",V.simCode,R,V.fDown),R&&V.nRepeat<0&&(V.fDown=!1),!this.simulateKey(V.simCode,V.fDown)||!V.nRepeat)return void 0;let U;if(V.nRepeat<0){if(!V.fDown)return void this.removeActiveKey(V.simCode);U=this.msAutoRelease}else U=1==V.nRepeat++?this.msAutoRepeat:this.msNextRepeat;var l;V.timer&&clearTimeout(V.timer),V.timer=setTimeout((l=this,function(){l.updateActiveKey(V,U)}),U)}getSimCode(V,R){let U,l=V;return V>=Keys.ASCII.A&&V<=Keys.ASCII.Z?!(this.bitsState&(Keyboardx86.STATE.SHIFT|Keyboardx86.STATE.RSHIFT|Keyboardx86.STATE.CAPS_LOCK))==R&&(l=V+(Keys.ASCII.a-Keys.ASCII.A)):V>=Keys.ASCII.a&&V<=Keys.ASCII.z?!!(this.bitsState&(Keyboardx86.STATE.SHIFT|Keyboardx86.STATE.RSHIFT|Keyboardx86.STATE.CAPS_LOCK))==R&&(l=V-(Keys.ASCII.a-Keys.ASCII.A)):!!(this.bitsState&(Keyboardx86.STATE.SHIFT|Keyboardx86.STATE.RSHIFT))==R?(U=Keys.SHIFTED_KEYCODES[V])&&(l=U):(U=Keys.NONASCII_KEYCODES[V])&&(l=U),l}onFocusChange(V){COMPILED||this.fHasFocus==V||this.printf(MESSAGE.EVENT,"onFocusChange(%b)\n",V),this.fHasFocus=V,V||(this.bitsState&=~Keyboardx86.STATE.ALL_MODIFIERS,this.clearActiveKeys())}onKeyActive(V,R){let U=!0,l=!1,e=!1,t=V.keyCode;if(WebLib.isUserAgent("iOS")&&this.bitsState&Keyboardx86.STATE.CTRL&&t==Keys.KEYCODE.CR&&(t=Keys.ASCII.C),229==t&&V.code){let R=V.code;t=0==R.indexOf("Key")?R.charCodeAt(3):0==R.indexOf("Digit")?R.charCodeAt(5):Keys.CODEKEY[R]||0,this.printf(MESSAGE.EVENT+MESSAGE.KEY,"onKeyActive(%d): remapped using event code '%s'\n",t,R)}if(!this.cmp.notifyKbdEvent(V,R))return!1;R&&(this.cKeysPressed++,this.sInjectBuffer="",27!=t&&(this.nInjection=Keyboardx86.INJECTION.NONE)),Component.processScript(this.idMachine);let T=this.getSimCode(t,!0);if(this.fEscapeDisabled&&T==Keys.ASCII["`"]&&(t=T=Keys.KEYCODE.ESC),Keyboardx86.SIMCODES[t+Keys.KEYCODE.ONDOWN]){T+=Keys.KEYCODE.ONDOWN,V.location==Keys.LOCATION.RIGHT&&(T+=Keys.KEYCODE.ONRIGHT),this.updateShiftState(T,!1,R)?(t!=Keys.KEYCODE.CAPS_LOCK&&t!=Keys.KEYCODE.NUM_LOCK&&t!=Keys.KEYCODE.SCROLL_LOCK||this.fMSWindows||(R=l=!0),this.fDelayALT&&t==Keys.KEYCODE.ALT&&(R?(this.bitsState&Keyboardx86.STATE.CTRL||(e=!0),this.cKeysPressed=0):this.cKeysPressed||this.bitsStateSim&(Keyboardx86.STATE.ALT|Keyboardx86.STATE.RALT)||(R=l=!0)),R||t!=Keys.KEYCODE.CMD&&t!=Keys.KEYCODE.RCMD||this.clearActiveKeys()):(t==Keys.KEYCODE.BS&&(this.bitsState&(Keyboardx86.STATE.CTRL|Keyboardx86.STATE.ALT))==Keyboardx86.STATE.CTRL&&(T=Keyboardx86.SIMCODE.CTRL_BREAK),t==Keys.KEYCODE.BS&&(this.bitsState&(Keyboardx86.STATE.CTRL|Keyboardx86.STATE.ALT))==(Keyboardx86.STATE.CTRL|Keyboardx86.STATE.ALT)&&(T=Keyboardx86.SIMCODE.CTRL_ALT_DEL),U=!1)}else(this.bitsState&(Keyboardx86.STATE.CTRL|Keyboardx86.STATE.ALT))==(Keyboardx86.STATE.CTRL|Keyboardx86.STATE.ALT)&&(t==Keys.KEYCODE.PERIOD&&(T=Keyboardx86.SIMCODE.CTRL_ALT_DEL),t==Keys.KEYCODE.EQUALS?T=Keyboardx86.SIMCODE.CTRL_ALT_ADD:t==Keys.KEYCODE.DASH&&(T=Keyboardx86.SIMCODE.CTRL_ALT_SUB)),Keyboardx86.SIMCODES[T]&&this.bitsState&(Keyboardx86.STATE.CTRLS|Keyboardx86.STATE.ALTS)&&(U=!1),(!this.fAllDown&&U&&R||this.bitsState&Keyboardx86.STATE.CMDS)&&(e=!0);if(U||V.preventDefault(),this.printf(MESSAGE.EVENT+MESSAGE.KEY,"onKeyActive(%d): %b%s\n",t,R,e?",ignore":U?"":",consume"),!(e||this.fMobile&&U))if(R){if(this.fDelayALT&&this.bitsState&Keyboardx86.STATE.ALTS){let V=Keyboardx86.SIMCODE.ALT;this.printf(MESSAGE.EVENT,"onKeyActive(%d): simulating ALT down\n",V),this.addActiveKey(V)}this.addActiveKey(T,l)}else if(!this.removeActiveKey(T)){let V=this.getSimCode(t,!1);V!=T&&this.removeActiveKey(V)}return U}onKeyPress(V){let R=(V=V||window.event).which||V.keyCode;if(!this.cmp.notifyKbdEvent(V))return!1;if(this.cKeysPressed++,this.sInjectBuffer="",this.fAllDown){let V=this.checkActiveKey();V&&this.isAlphaKey(V)&&this.isAlphaKey(R)&&V!=R&&(COMPILED||this.printf(MESSAGE.EVENT+MESSAGE.KEY,"onKeyPress(%d) out of sync with %d, invert caps-lock\n",R,V),this.fToggleCapsLock=!0,R=V)}let U=!Keyboardx86.SIMCODES[R]||!!(this.bitsState&Keyboardx86.STATE.CMD);if(this.printf(MESSAGE.EVENT+MESSAGE.KEY,"onKeyPress(%d): %b\n",R,U),!U){if(this.fDelayALT&&this.bitsState&Keyboardx86.STATE.ALTS){let V=Keyboardx86.SIMCODE.ALT;this.printf(MESSAGE.EVENT,"onKeyPress(%d): simulating ALT down\n",V),this.addActiveKey(V)}this.addActiveKey(R,!0)}return U}onCopy(V){V.stopPropagation&&V.stopPropagation(),V.preventDefault&&V.preventDefault();var R=V.clipboardData||window.clipboardData;R&&this.video&&R.setData("text/plain",this.video.getTextData())}onCut(V){V.stopPropagation&&V.stopPropagation(),V.preventDefault&&V.preventDefault();var R=V.clipboardData||window.clipboardData;R&&R.setData("text/plain",this.controlTextKeyboard.value)}onPaste(V){V.stopPropagation&&V.stopPropagation(),V.preventDefault&&V.preventDefault();var R=V.clipboardData||window.clipboardData;if(R){let V=R.getData("text/plain"),U=V.slice(-1);"$"==U&&(V=V.slice(0,-1),"$"==V.slice(-1)&&(U="")),"$"!=U&&(V=V.replace(/\$/g,"$$$$")),this.injectKeys(V.replace(/\r\n/g,"\r"))}}simulateKey(V,R){let U=!1;this.updateShiftState(V,!0,R);let l=Keyboardx86.SIMCODES[V]||Keyboardx86.SIMCODES[V+Keys.KEYCODE.ONDOWN];if(void 0!==l){let e=[],t=255&l;if(t>83&&83==this.modelKeys)return!1;e.push(t|(R?0:Keyboardx86.SCANCODE.BREAK));let T=V>=Keys.ASCII.A&&V<=Keys.ASCII.Z||V>=Keys.ASCII.a&&V<=Keys.ASCII.z;for(;l>>>=8;){let V=255&l;if(t==Keyboardx86.SCANCODE.EXTEND1||t==Keyboardx86.SCANCODE.EXTEND2){e.push(t|(R?0:Keyboardx86.SCANCODE.BREAK));continue}let U=0;V==Keyboardx86.SCANCODE.SHIFT?this.bitsStateSim&(Keyboardx86.STATE.SHIFT|Keyboardx86.STATE.RSHIFT)||this.bitsStateSim&Keyboardx86.STATE.CAPS_LOCK&&T||(U|=Keyboardx86.STATE.SHIFT):V==Keyboardx86.SCANCODE.CTRL?this.bitsStateSim&(Keyboardx86.STATE.CTRL|Keyboardx86.STATE.RCTRL)||(U|=Keyboardx86.STATE.CTRL):V==Keyboardx86.SCANCODE.ALT?this.bitsStateSim&(Keyboardx86.STATE.ALT|Keyboardx86.STATE.RALT)||(U|=Keyboardx86.STATE.ALT):e.push(t|(R?0:Keyboardx86.SCANCODE.BREAK)),U&&(R?this.bitsStateFake|=U:this.bitsStateFake&U?this.bitsStateFake&=~U:U=0),U&&(R?e.unshift(V):e.push(V|Keyboardx86.SCANCODE.BREAK))}for(let V=0;V<e.length;V++)this.addScanCode(e[V]);U=!0}return COMPILED||this.printf(MESSAGE.KBD+MESSAGE.KEY,"simulateKey(%d,%b): %b\n",V,R,U),U}static init(){let V=Component.getElementsByClass(APPCLASS,"keyboard");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new Keyboardx86(l);Component.bindComponentControls(e,U,APPCLASS)}}}WebLib.onInit(Keyboardx86.init);class Card extends Controller{static MDA={CRTC:{INDX:{PORT:948,MASK:31},DATA:{PORT:949}},MODE:{PORT:952,HIRES:1,VIDEO_ENABLE:8,BLINK_ENABLE:32},STATUS:{PORT:954,HDRIVE:1,BWVIDEO:8}};static CGA={CRTC:{INDX:{PORT:980,MASK:31},DATA:{PORT:981}},MODE:{PORT:984,_80X25:1,GRAPHIC_SEL:2,BW_SEL:4,VIDEO_ENABLE:8,HIRES_BW:16,BLINK_ENABLE:32},COLOR:{PORT:985,BORDER:7,BRIGHT:8,BGND_ALT:16,COLORSET1:32},STATUS:{PORT:986,RETRACE:1,PEN_TRIGGER:2,PEN_ON:4,VRETRACE:8},CLEAR_PEN:{PORT:987},PRESET_PEN:{PORT:988}};static CRTC={HTOTAL:0,HDISP:1,HSPOS:2,HSWIDTH:3,VTOTAL:4,VTOTADJ:5,VDISP:6,VSPOS:7,ILMODE:8,MAXSCAN:9,CURSCAN:10,CURSCAN_SLMASK:31,CURSCAN_BLINKON:0,CURSCAN_BLINKOFF:32,CURSCAN_BLINKFAST:96,CURSCANB:11,STARTHI:12,STARTLO:13,CURSORHI:14,CURSORLO:15,PENHI:16,PENLO:17,TOTAL_REGS:18,EGA:{HDEND:1,HBSTART:2,HBEND:3,HRSTART:4,HREND:5,VTOTAL:6,OVERFLOW:{INDX:7,VTOTAL_BIT8:1,VDEND_BIT8:2,VRSTART_BIT8:4,VBSTART_BIT8:8,LINECOMP_BIT8:16,CURSCAN_BIT8:32,VTOTAL_BIT9:32,VDEND_BIT9:64,VRSTART_BIT9:128},PRESCAN:8,MAXSCAN:{INDX:9,SLMASK:31,VBSTART_BIT9:32,LINECOMP_BIT9:64,CONVERT400:128},CURSCAN:10,CURSCANB:11,STARTHI:12,STARTLO:13,CURSORHI:14,CURSORLO:15,VRSTART:16,VREND:{INDX:17,HSCAN:15,UNCLEAR_VRINT:16,DISABLE_VRINT:32},VDEND:18,OFFSET:19,UNDERLINE:{INDX:20,SLMASK:31,COUNT_BY_4:32,DWORD:64},VBSTART:21,VBEND:22,MODECTRL:{INDX:23,COMPAT_MODE:1,SEL_ROW_SCAN:2,SEL_HRETRACE:4,COUNT_BY_2:8,OUTPUT_CTRL:16,ADDR_WRAP:32,BYTE_MODE:64,HARD_RESET:128},LINECOMP:24,TOTAL_REGS:25}};static CRTCMASKS={[Card.CRTC.HTOTAL]:255,[Card.CRTC.HDISP]:255,[Card.CRTC.HSPOS]:255,[Card.CRTC.HSWIDTH]:15,[Card.CRTC.VTOTAL]:127,[Card.CRTC.VTOTADJ]:31,[Card.CRTC.VDISP]:127,[Card.CRTC.VSPOS]:127,[Card.CRTC.ILMODE]:3,[Card.CRTC.MAXSCAN]:31,[Card.CRTC.CURSCAN]:127,[Card.CRTC.CURSCANB]:31,[Card.CRTC.STARTHI]:63,[Card.CRTC.STARTLO]:255,[Card.CRTC.CURSORHI]:63,[Card.CRTC.CURSORLO]:255,[Card.CRTC.PENHI]:63,[Card.CRTC.PENLO]:255};static STATUS1={PORT:986,RETRACE:1,VRETRACE:8,DIAGNOSTIC:48,RESERVED:198};static ATC={PORT:960,INDX_MASK:31,INDX_PAL_ENABLE:32,PALETTE:{INDX:0,MASK:63,BLUE:1,GREEN:2,RED:4,SECBLUE:8,BRIGHT:16,SECGREEN:16,SECRED:32},PALETTE_REGS:16,MODE:{INDX:16,GRAPHICS:1,MONOEM:2,TEXT_9DOT:4,BLINK_ENABLE:8,RESERVED:16,PANCOMPAT:32,PELWIDTH:64,COLORSEL_ALL:128},OVERSCAN:{INDX:17},PLANES:{INDX:18,MASK:15,MUX:48,RESERVED:192},HPAN:{INDX:19,SHIFT_LEFT:15},COLORSEL:{INDX:20,DAC_BIT7:8,DAC_BIT6:4,DAC_BIT5:2,DAC_BIT4:1},TOTAL_REGS:20};static FEAT_CTRL={PORT_MONO:954,PORT_COLOR:986,PORT_READ:970,BITS:3};static MISC={PORT_WRITE:962,PORT_READ:972,IO_SELECT:1,ENABLE_RAM:2,CLOCK_SELECT:12,DISABLE_DRV:16,PAGE_ODD_EVEN:32,HPOLARITY:64,VPOLARITY:128};static STATUS0={PORT:962,RESERVED:15,SWSENSE:16,SWSENSE_SHIFT:4,FEAT:96,INTERRUPT:128};static VGA_ENABLE={PORT:963,ENABLED:1,RESERVED:254};static SEQ={INDX:{PORT:964,MASK:7},DATA:{PORT:965},RESET:{INDX:0,ASYNC:1,SYNC:2},CLKMODE:{INDX:1,DOTS8:1,BANDWIDTH:2,SHIFTLOAD:4,DOTCLOCK:8,SHIFT4:16,SCREEN_OFF:32,RESERVED:192},MAPMASK:{INDX:2,PL0:1,PL1:2,PL2:4,PL3:8,MAPS:15,RESERVED:240},CHARMAP:{INDX:3,SELB:3,SELA:12,SELB_HI:16,SELA_HI:32},MEMMODE:{INDX:4,ALPHA:1,EXT:2,SEQUENTIAL:4,CHAIN4:8},TOTAL_REGS:5};static DAC={MASK:{PORT:966,DEFAULT:255},STATE:{PORT:967,MODE_WRITE:0,MODE_READ:3},ADDR:{PORT_READ:967,PORT_WRITE:968},DATA:{PORT:969},TOTAL_REGS:256};static GRC={POS1_PORT:972,POS2_PORT:970,INDX:{PORT:974,MASK:15},DATA:{PORT:975},SRESET:{INDX:0},ESRESET:{INDX:1},COLORCOMP:{INDX:2},DATAROT:{INDX:3,COUNT:7,AND:8,OR:16,XOR:24,FUNC:24,MASK:31},READMAP:{INDX:4,NUM:3},MODE:{INDX:5,WRITE:{MODE0:0,MODE1:1,MODE2:2,MODE3:3,MASK:3},TEST:4,READ:{MODE0:0,MODE1:8,MASK:8},EVENODD:16,SHIFT:32,COLOR256:64},MISC:{INDX:6,GRAPHICS:1,CHAIN:2,MAPMEM:12,MAPA0128:0,MAPA064:4,MAPB032:8,MAPB832:12},COLORDC:{INDX:7},BITMASK:{INDX:8},TOTAL_REGS:9};constructor(V,R,U,l){if(super(),void 0!==R&&(!U||U.length)){this.video=V;let e=Videox86.cardSpecs[R],t=V.nMonitorType||e[5];(!U||U.length<6)&&(U=[!1,0,null,null,0,new Array(R<Videox86.CARD.EGA?Card.CRTC.TOTAL_REGS:Card.CRTC.EGA.TOTAL_REGS)]),DEBUGGER&&(this.dbg=V.dbg,this.type=e[0],this.port=e[1]),this.nCard=R,this.addrBuffer=e[2],this.sizeBuffer=e[3],this.cbMemory=l||e[4],this.cbMemory>=65536&&this.addrBuffer>=720896&&(this.sizeBuffer=Math.min(this.cbMemory>>2,32768)),this.fActive=U[0],this.regMode=U[1],this.regColor=U[2],this.regStatus=U[3],this.regCRTIndx=255&U[4],this.regCRTPrev=U[4]>>8&255,this.regCRTData=U[5],this.nCRTCRegs=Card.CRTC.TOTAL_REGS,this.asCRTCRegs=DEBUGGER?Card.CRTC.REGS:[],this.offStart=this.regCRTData[Card.CRTC.STARTLO]|this.regCRTData[Card.CRTC.STARTHI]<<8,this.rowStart=0,this.addrMaskHigh=63,R<Videox86.CARD.EGA?(this.initMemory(U[6],U[8]),this.setMemoryAccess(Card.READ.PAIRS|Card.WRITE.PAIRS)):(this.addrMaskHigh=255,this.nCRTCRegs=Card.CRTC.EGA.TOTAL_REGS,this.asCRTCRegs=DEBUGGER?Card.CRTC.EGA_REGS:[],this.initEGA(U[6],t));let T=Videox86.monitorSpecs[t]||Videox86.monitorSpecs[ChipSet.MONITOR.MONO],k=V.cpu.getBaseCyclesPerSecond();this.nCyclesHorzPeriod=k/T.nHorzPeriodsPerSec|0,this.nCyclesHorzActive=this.nCyclesHorzPeriod*T.percentHorzActive/100|0,this.nCyclesVertActive=this.nCyclesHorzPeriod*T.nHorzPeriodsPerFrame|0,this.nCyclesVertPeriod=this.nCyclesVertActive/(T.percentVertActive/100)|0,this.nCyclesVertRetrace=U[7]||0,this.nCountVertRetrace=0}}initEGA(V,R){void 0===V&&(V=[!1,0,new Array(Card.ATC.TOTAL_REGS),0,R==ChipSet.MONITOR.MONO?0:Card.MISC.IO_SELECT,0,0,new Array(Card.SEQ.TOTAL_REGS),0,0,0,new Array(Card.GRC.TOTAL_REGS),0,[this.addrBuffer,this.sizeBuffer,this.cbMemory],null,Card.READ.PAIRS|Card.WRITE.PAIRS|Card.V2,0,-1,0,-1,0,-1,0,0,0,0,Card.VGA_ENABLE.ENABLED,Card.DAC.MASK.DEFAULT,0,0,Card.DAC.STATE.MODE_WRITE,new Array(Card.DAC.TOTAL_REGS)]),this.fATCData=V[0],this.regATCIndx=V[1],this.regATCData=V[2],this.asATCRegs=DEBUGGER?Card.ATC.REGS:[],this.regStatus0=V[3],this.regMisc=V[4],this.regFeat=V[5],this.regSEQIndx=V[6],this.regSEQData=V[7],this.asSEQRegs=DEBUGGER?Card.SEQ.REGS:[],this.regGRCPos1=V[8],this.regGRCPos2=V[9],this.regGRCIndx=V[10],this.regGRCData=V[11],this.asGRCRegs=DEBUGGER?Card.GRC.REGS:[],this.latches=V[12];let U=V[13];"number"==typeof U&&(U=[this.addrBuffer,this.sizeBuffer,U]),this.addrBuffer=U[0],this.sizeBuffer=U[1],this.initMemory(V[14],this.cbMemory>>2);let l=V[15];l&&(l&Card.V2?l&=~Card.V2:l=Card.V1[65280&l]|Card.V1[255&l]),this.setMemoryAccess(l),this.nReadMapShift=V[16],this.nSeqMapMask=V[17],this.nDataRotate=V[18],this.nBitMapMask=V[19],this.nSetMapData=V[20],this.nSetMapMask=V[21],this.nSetMapBits=V[22],this.nColorCompare=V[23],this.nColorDontCare=V[24],this.offStart=V[25],this.nCard==Videox86.CARD.VGA&&(this.regVGAEnable=V[26],this.regDACMask=V[27],this.regDACAddr=V[28],this.regDACShift=V[29],this.regDACState=V[30],this.regDACData=V[31]),this.bitsDirtyBanks=0}initMemory(V,R){let U=this.cbMemory>>2;if(this.adwMemory=V,this.adwMemory&&this.adwMemory.length?(U=R||U,this.adwMemory.length<U&&(this.adwMemory=State.decompressEvenOdd(this.adwMemory,U))):(R||(R=2*U),this.adwMemory=new Array(R)),!R){let V=this.adwMemory,R=new Array(2*this.adwMemory.length);for(let U=0,l=0;U<this.adwMemory.length;U++,l+=2)R[l]=65535&V[U],R[l+1]=V[U]>>16&65535;this.adwMemory=R}}saveCard(){let V=[];return void 0!==this.nCard&&(V[0]=this.fActive,V[1]=this.regMode,V[2]=this.regColor,V[3]=this.regStatus,V[4]=this.regCRTIndx|this.regCRTPrev<<8,V[5]=this.regCRTData,V[6]=this.nCard<Videox86.CARD.EGA?State.compressEvenOdd(this.adwMemory):this.saveEGA(),V[7]=this.nCyclesVertRetrace,V[8]=this.adwMemory.length),V}saveEGA(){let V=[];return V[0]=this.fATCData,V[1]=this.regATCIndx,V[2]=this.regATCData,V[3]=this.regStatus0,V[4]=this.regMisc,V[5]=this.regFeat,V[6]=this.regSEQIndx,V[7]=this.regSEQData,V[8]=this.regGRCPos1,V[9]=this.regGRCPos2,V[10]=this.regGRCIndx,V[11]=this.regGRCData,V[12]=this.latches,V[13]=[this.addrBuffer,this.sizeBuffer,this.cbMemory],V[14]=State.compressEvenOdd(this.adwMemory),V[15]=this.nAccess|Card.V2,V[16]=this.nReadMapShift,V[17]=this.nSeqMapMask,V[18]=this.nDataRotate,V[19]=this.nBitMapMask,V[20]=this.nSetMapData,V[21]=this.nSetMapMask,V[22]=this.nSetMapBits,V[23]=this.nColorCompare,V[24]=this.nColorDontCare,V[25]=this.offStart,this.nCard==Videox86.CARD.VGA&&(V[26]=this.regVGAEnable,V[27]=this.regDACMask,V[28]=this.regDACAddr,V[29]=this.regDACShift,V[30]=this.regDACState,V[31]=this.regDACData),V}dumpRegs(V,R,U,l){if(DEBUGGER){if(!U)return void this.dbg.printf("%s: %02X\n",V,R);let e,t="",T=l?l.length:U.length;for(e=0;e<T;e++){let T=U===this.regCRTData?this.getCRTCReg(e):U[e],k=l?l[e]:V.substr(1)+StrLib.toDec(e,3);t+=StrLib.sprintf("%s[%02X]: %-12s %*X%s (%*d)\n",V,e,k,l?4:6,T,e===R?"*":" ",l?4:6,T)}this.dbg.printf("%s",t)}}dumpVideoCard(){DEBUGGER&&(this.dumpRegs("CRTC",this.regCRTIndx,this.regCRTData,this.asCRTCRegs),this.nCard>=Videox86.CARD.EGA&&(this.dumpRegs(" GRC",this.regGRCIndx,this.regGRCData,this.asGRCRegs),this.dumpRegs(" SEQ",this.regSEQIndx,this.regSEQData,this.asSEQRegs),this.dumpRegs(" ATC",this.regATCIndx,this.regATCData,this.asATCRegs),this.dumpRegs(" ATCINDX",this.regATCIndx),this.dbg.printf(" ATCDATA: %b\n",this.fATCData),this.dumpRegs("    FEAT",this.regFeat),this.dumpRegs("    MISC",this.regMisc),this.dumpRegs(" STATUS0",this.regStatus0),this.nCard==Videox86.CARD.VGA&&this.dumpRegs(" DAC",this.regDACAddr,this.regDACData)),this.dumpRegs(" STATUS1",this.regStatus),this.nCard!=Videox86.CARD.MDA&&this.nCard!=Videox86.CARD.CGA||this.dumpRegs(" MODEREG",this.regMode),this.nCard==Videox86.CARD.CGA&&this.dumpRegs("   COLOR",this.regColor),this.nCard>=Videox86.CARD.EGA&&(this.dbg.printf(" LATCHES: %0X\n",this.latches),this.dbg.printf("  ACCESS: %04X\n",this.nAccess),this.dbg.printf("  PLANE2: %02X\n",this.bitsDirtyBanks),this.dbg.printf("Use 'd video [addr]' to dump video memory\n")))}dumpVideoBuffer(V){if(DEBUGGER){if(!this.adwMemory)return void this.dbg.printf("no buffer\n");let R,U,l,e=!1,t=8,T=8,k=-1,F=this.video.nCols>>3;for(R=0;R<V.length;R++){let W=V[R];if(!R){l=StrLib.parseInt(W,16);continue}let a=W.charAt(0);switch(U=StrLib.parseInt(W.substr(1),16),a){case"l":t=U;break;case"n":U>=1&&U<=8&&(T=U,e=!0);break;case"p":U>=0&&U<=3&&(k=U);break;case"w":U<F&&(F=U);break;default:this.dbg.printf("unrecognized argument: %s\n",W)}}void 0===l?l=this.prevDump||0:l>=this.addrBuffer&&(l-=this.addrBuffer);let W="";for(R=0;R<t;R++){let V=StrLib.toHex(this.addrBuffer+l)+":";for(U=0;U<T&&l<this.adwMemory.length;U++){let R=this.adwMemory[l++];V+=" "+(k<0?StrLib.toHex(R,8):StrLib.toBin(R>>(k<<3),8))}e&&(l+=F-T),W+=V+"\n"}W&&this.dbg.print(W),this.prevDump=l}}getMemoryBuffer(V){return[this.adwMemory,V-this.addrBuffer]}getMemoryAccess(){return this.afnAccess}setMemoryAccess(V){if(null!=V&&V!=this.nAccess){let R=V&Card.READ.MASK,U=Card.FUNCS[R];U||(DEBUG&&this.dbg&&this.dbg.printf(MESSAGE.VIDEO,"Card.setMemoryAccess(%#06x): missing readByte handler",V),R&Card.READ.EVENODD&&(U=Card.FUNCS[Card.READ.EVENODD]));let l=V&Card.WRITE.MASK,e=Card.FUNCS[l];e||(DEBUG&&this.dbg&&this.dbg.printf(MESSAGE.VIDEO,"Card.setMemoryAccess(%#06x): missing writeByte handler",V),l&Card.WRITE.EVENODD&&(e=Card.FUNCS[Card.WRITE.EVENODD])),this.afnAccess||(this.afnAccess=new Array(6)),this.afnAccess[0]=U,this.afnAccess[1]=e,this.nAccess=V}}getCRTCReg(V){let R=this.regCRTData[V];if(null!=R&&this.nCard>=Videox86.CARD.EGA){let U=0,l=0,e=0;switch(V){case Card.CRTC.EGA.VTOTAL:U=Card.CRTC.EGA.OVERFLOW.VTOTAL_BIT8,this.nCard==Videox86.CARD.VGA&&(l=Card.CRTC.EGA.OVERFLOW.VTOTAL_BIT9);break;case Card.CRTC.EGA.CURSCAN:this.nCard==Videox86.CARD.EGA&&(U=Card.CRTC.EGA.OVERFLOW.CURSCAN_BIT8);break;case Card.CRTC.EGA.VRSTART:U=Card.CRTC.EGA.OVERFLOW.VRSTART_BIT8,this.nCard==Videox86.CARD.VGA&&(l=Card.CRTC.EGA.OVERFLOW.VRSTART_BIT9);break;case Card.CRTC.EGA.VDEND:U=Card.CRTC.EGA.OVERFLOW.VDEND_BIT8,this.nCard==Videox86.CARD.VGA&&(l=Card.CRTC.EGA.OVERFLOW.VDEND_BIT9);break;case Card.CRTC.EGA.VBSTART:U=Card.CRTC.EGA.OVERFLOW.VBSTART_BIT8,this.nCard==Videox86.CARD.VGA&&(e=Card.CRTC.EGA.MAXSCAN.VBSTART_BIT9);break;case Card.CRTC.EGA.LINECOMP:U=Card.CRTC.EGA.OVERFLOW.LINECOMP_BIT8,this.nCard==Videox86.CARD.VGA&&(e=Card.CRTC.EGA.MAXSCAN.LINECOMP_BIT9)}U&&(R|=this.regCRTData[Card.CRTC.EGA.OVERFLOW.INDX]&U?256:0,R|=this.regCRTData[Card.CRTC.EGA.OVERFLOW.INDX]&l?512:0,R|=this.regCRTData[Card.CRTC.EGA.MAXSCAN.INDX]&e?512:0)}return R}static readBytePairs(V,R){return V+=this.offset,this.adw[V>>1]>>>((1&V)<<3)&255}static readByteMode0(V,R){return V+=this.offset,(this.controller.latches=this.adw[V])>>this.controller.nReadMapShift&255}static readByteMode0Chain4(V,R){let U=(-4&V)+this.offset,l=(3&V)<<3;return(this.controller.latches=this.adw[U])>>l&255}static readByteMode0EvenOdd(V,R){let U=-2&(V+=this.offset),l=this.controller.latches=this.adw[U];return 255&(1&V?l>>8:l)}static readByteMode1(V,R){let U=this.controller,l=U.latches=this.adw[V+this.offset],e=U.nColorDontCare,t=U.nColorCompare&e,T=0,k=128;for(;k;)(l&e)==t&&(T|=k),t>>>=1,e>>>=1,k>>=1;return T}static writeBytePairs(V,R,U){let l=(V+=this.offset)>>1,e=(1&V)<<3,t=this.adw[l]&~(255<<e)|R<<e;this.adw[l]!=t&&(this.adw[l]=t,this.flags|=Memoryx86.FLAGS.DIRTY)}static writeByteMode0(V,R,U){let l=this.controller,e=V+this.offset,t=R|R<<8|R<<16|R<<24;t=t&l.nSetMapMask|l.nSetMapBits,t=t&l.nBitMapMask|l.latches&~l.nBitMapMask,t=t&l.nSeqMapMask|this.adw[e]&~l.nSeqMapMask;let T=this.adw[e]^t;if(T&&(this.adw[e]=t,this.flags|=Memoryx86.FLAGS.DIRTY,16711680&T)){let V=1<<(e>>13&7);l.bitsDirtyBanks&V||(l.bitsDirtyBanks|=V,DEBUG&&l.video.printf(MESSAGE.VIDEO,"writeByteMode0(%#010X): modified font bank %#04X\n",U,V))}DEBUG&&l.video.printf(MESSAGE.VIDEO+MESSAGE.MEM,"writeByteMode0(%#10X): %#04X -> %#10X\n",U,R,t)}static writeByteMode0Chain4(V,R,U){let l=this.controller,e=(-4&V)+this.offset,t=(3&V)<<3,T=R<<t&l.nSeqMapMask|this.adw[e]&~(255<<t&l.nSeqMapMask);this.adw[e]!=T&&(this.adw[e]=T,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode0Chain4(%#010X): %#04X -> %#010X\n",U,R,T)}static writeByteMode0EvenOdd(V,R,U){let l=this.controller,e=-2&(V+=this.offset),t=R|R<<8|R<<16|R<<24;t=t&l.nBitMapMask|l.latches&~l.nBitMapMask;let T=l.nSeqMapMask&(e==V?16711935:-16711936);t=t&T|this.adw[e]&~T,this.adw[e]!=t&&(this.adw[e]=t,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode0EvenOdd(%#010X): %#04X -> %#010X\n",U,R,t)}static writeByteMode0Rot(V,R,U){let l=this.controller,e=V+this.offset,t=(R=R>>l.nDataRotate|R<<8-l.nDataRotate&255)|R<<8|R<<16|R<<24;t=t&l.nSetMapMask|l.nSetMapBits,t=t&l.nBitMapMask|l.latches&~l.nBitMapMask,t=t&l.nSeqMapMask|this.adw[e]&~l.nSeqMapMask,this.adw[e]!=t&&(this.adw[e]=t,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode0Rot(%#010X): %#04X -> %#010X\n",U,R,t)}static writeByteMode0And(V,R,U){let l=this.controller,e=V+this.offset,t=(R=R>>l.nDataRotate|R<<8-l.nDataRotate&255)|R<<8|R<<16|R<<24;t=t&l.nSetMapMask|l.nSetMapBits,t&=l.latches,t=t&l.nBitMapMask|l.latches&~l.nBitMapMask,t=t&l.nSeqMapMask|this.adw[e]&~l.nSeqMapMask,this.adw[e]!=t&&(this.adw[e]=t,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode0And(%#010X): %#04X -> %#010X\n",U,R,t)}static writeByteMode0Or(V,R,U){let l=this.controller,e=V+this.offset,t=(R=R>>l.nDataRotate|R<<8-l.nDataRotate&255)|R<<8|R<<16|R<<24;t=t&l.nSetMapMask|l.nSetMapBits,t|=l.latches,t=t&l.nBitMapMask|l.latches&~l.nBitMapMask,t=t&l.nSeqMapMask|this.adw[e]&~l.nSeqMapMask,this.adw[e]!=t&&(this.adw[e]=t,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode0Or(%#010X): %#04X -> %#010X\n",U,R,t)}static writeByteMode0Xor(V,R,U){let l=this.controller,e=V+this.offset,t=(R=R>>l.nDataRotate|R<<8-l.nDataRotate&255)|R<<8|R<<16|R<<24;t=t&l.nSetMapMask|l.nSetMapBits,t^=l.latches,t=t&l.nBitMapMask|l.latches&~l.nBitMapMask,t=t&l.nSeqMapMask|this.adw[e]&~l.nSeqMapMask,this.adw[e]!=t&&(this.adw[e]=t,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode0Xor(%#010X): %#04X -> %#010X\n",U,R,t)}static writeByteMode1(V,R,U){let l=this.controller,e=V+this.offset,t=this.adw[e]&~l.nSeqMapMask|l.latches&l.nSeqMapMask;this.adw[e]!=t&&(this.adw[e]=t,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode1(%#010X): %#010X\n",U,t)}static writeByteMode1EvenOdd(V,R,U){let l=this.controller,e=-2&(V+=this.offset),t=l.nSeqMapMask&(e==V?16711935:-16711936),T=this.adw[e]&~t|l.latches&t;this.adw[e]!=T&&(this.adw[e]=T,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode1EvenOdd(%#010X): %#010X\n",U,T)}static writeByteMode2(V,R,U){let l=this.controller,e=V+this.offset,t=Videox86.aEGAByteToDW[15&R];t=t&l.nBitMapMask|l.latches&~l.nBitMapMask,t=t&l.nSeqMapMask|this.adw[e]&~l.nSeqMapMask,this.adw[e]!=t&&(this.adw[e]=t,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode2(%#010X): %#04X -> %#010X\n",U,R,t)}static writeByteMode2And(V,R,U){let l=this.controller,e=V+this.offset,t=Videox86.aEGAByteToDW[15&R];t&=l.latches,t=t&l.nBitMapMask|l.latches&~l.nBitMapMask,t=t&l.nSeqMapMask|this.adw[e]&~l.nSeqMapMask,this.adw[e]!=t&&(this.adw[e]=t,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode2And(%#010X): %#04X -> %#010X\n",U,R,t)}static writeByteMode2Or(V,R,U){let l=this.controller,e=V+this.offset,t=Videox86.aEGAByteToDW[15&R];t|=l.latches,t=t&l.nBitMapMask|l.latches&~l.nBitMapMask,t=t&l.nSeqMapMask|this.adw[e]&~l.nSeqMapMask,this.adw[e]!=t&&(this.adw[e]=t,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode2Or(%#010X): %#04X -> %#010X\n",U,R,t)}static writeByteMode2Xor(V,R,U){let l=this.controller,e=V+this.offset,t=Videox86.aEGAByteToDW[15&R];t^=l.latches,t=t&l.nBitMapMask|l.latches&~l.nBitMapMask,t=t&l.nSeqMapMask|this.adw[e]&~l.nSeqMapMask,this.adw[e]!=t&&(this.adw[e]=t,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode2Xor(%#010X): %#04X -> %#010X\n",U,R,t)}static writeByteMode3(V,R,U){let l=this.controller,e=V+this.offset,t=(R=R>>l.nDataRotate|R<<8-l.nDataRotate&255)|R<<8|R<<16|R<<24,T=t&l.nBitMapMask;t=l.nSetMapData&T|l.latches&~T,t=t&l.nSeqMapMask|this.adw[e]&~l.nSeqMapMask,this.adw[e]!=t&&(this.adw[e]=t,this.flags|=Memoryx86.FLAGS.DIRTY),DEBUG&&l.video.printf(MESSAGE.MEM+MESSAGE.VIDEO,"writeByteMode3(%#010X): %#04X -> %#010X\n",U,R,t)}static READ={MODE0:1024,MODE1:1280,PAIRS:2048,EVENODD:4096,CHAIN4:16384,MASK:65280};static WRITE={MODE0:0,MODE1:1,MODE2:2,MODE3:3,CHAIN4:4,PAIRS:8,EVENODD:16,ROT:32,AND:96,OR:160,XOR:224,MASK:255};static V1={2:Card.READ.MODE0,3:Card.READ.MODE0|Card.READ.EVENODD,16:Card.READ.MODE1,512:Card.WRITE.MODE0,1024:Card.WRITE.MODE0|Card.WRITE.ROT,1536:Card.WRITE.MODE0|Card.WRITE.AND,2560:Card.WRITE.MODE0|Card.WRITE.OR,3584:Card.WRITE.MODE0|Card.WRITE.XOR,768:Card.WRITE.MODE0|Card.WRITE.EVENODD,4096:Card.WRITE.MODE1,8192:Card.WRITE.MODE2,24576:Card.WRITE.MODE2|Card.WRITE.AND,40960:Card.WRITE.MODE2|Card.WRITE.OR,57344:Card.WRITE.MODE2|Card.WRITE.XOR};static V2=-2147483648;static FUNCS={[Card.READ.MODE0]:Card.readByteMode0,[Card.READ.MODE0|Card.READ.CHAIN4]:Card.readByteMode0Chain4,[Card.READ.MODE0|Card.READ.EVENODD]:Card.readByteMode0EvenOdd,[Card.READ.MODE1]:Card.readByteMode1,[Card.READ.PAIRS]:Card.readBytePairs,[Card.WRITE.MODE0]:Card.writeByteMode0,[Card.WRITE.MODE0|Card.WRITE.ROT]:Card.writeByteMode0Rot,[Card.WRITE.MODE0|Card.WRITE.AND]:Card.writeByteMode0And,[Card.WRITE.MODE0|Card.WRITE.OR]:Card.writeByteMode0Or,[Card.WRITE.MODE0|Card.WRITE.XOR]:Card.writeByteMode0Xor,[Card.WRITE.MODE0|Card.WRITE.CHAIN4]:Card.writeByteMode0Chain4,[Card.WRITE.MODE0|Card.WRITE.EVENODD]:Card.writeByteMode0EvenOdd,[Card.WRITE.MODE1]:Card.writeByteMode1,[Card.WRITE.MODE1|Card.WRITE.EVENODD]:Card.writeByteMode1EvenOdd,[Card.WRITE.MODE2]:Card.writeByteMode2,[Card.WRITE.MODE2|Card.WRITE.AND]:Card.writeByteMode2And,[Card.WRITE.MODE2|Card.WRITE.OR]:Card.writeByteMode2Or,[Card.WRITE.MODE2|Card.WRITE.XOR]:Card.writeByteMode2Xor,[Card.WRITE.MODE3]:Card.writeByteMode3,[Card.WRITE.PAIRS]:Card.writeBytePairs}}DEBUGGER&&(Card.CRTC.REGS=["HTOTAL","HDISP","HSPOS","HSWIDTH","VTOTAL","VTOTADJ","VDISP","VSPOS","ILMODE","MAXSCAN","CURSCAN","CURSCANB","STARTHI","STARTLO","CURSORHI","CURSORLO","PENHI","PENLO"],Card.CRTC.EGA_REGS=["HTOTAL","HDEND","HBSTART","HBEND","HRSTART","HREND","VTOTAL","OVERFLOW","PRESCAN","MAXSCAN","CURSCAN","CURSCANB","STARTHI","STARTLO","CURSORHI","CURSORLO","VRSTART","VREND","VDEND","OFFSET","UNDERLINE","VBSTART","VBEND","MODECTRL","LINECOMP"],Card.ATC.REGS=["ATC00","ATC01","ATC02","ATC03","ATC04","ATC05","ATC06","ATC07","ATC08","ATC09","ATC0A","ATC0B","ATC0C","ATC0D","ATC0E","ATC0F","ATCMODE","OVERSCAN","PLANES","HPAN","COLORSEL"],Card.SEQ.REGS=["RESET","CLKMODE","MAPMASK","CHARMAP","MEMMODE"],Card.GRC.REGS=["SRESET","ESRESET","COLORCOMP","DATAROT","READMAP","GRCMODE","GRCMISC","COLORDC","BITMASK"]);class Videox86 extends Component{static TRAPALL=!0;static CARD={MDA:1,CGA:2,EGA:4,VGA:8};static MODE={CGA_40X25_BW:0,CGA_40X25:1,CGA_80X25_BW:2,CGA_80X25:3,CGA_320X200:4,CGA_320X200_BW:5,CGA_640X200:6,MDA_80X25:7,EGA_320X200:13,EGA_640X200:14,EGA_640X350_MONO:15,EGA_640X350:16,VGA_640X480_MONO:17,VGA_640X480:18,VGA_320X200:19,VGA_320X200P:20,VGA_320X240P:21,VGA_320X400P:22,UNKNOWN:255};static UPDATES_PER_SECOND=60;static MODEL={mda:[Videox86.CARD.MDA,Videox86.MODE.MDA_80X25],cga:[Videox86.CARD.CGA,Videox86.MODE.CGA_80X25],ega:[Videox86.CARD.EGA,Videox86.MODE.CGA_80X25],vga:[Videox86.CARD.VGA,Videox86.MODE.CGA_80X25]};static monitorSpecs={[ChipSet.MONITOR.COLOR]:{nHorzPeriodsPerSec:15700,nHorzPeriodsPerFrame:200,percentHorzActive:75,percentVertActive:96},[ChipSet.MONITOR.MONO]:{nHorzPeriodsPerSec:18432,nHorzPeriodsPerFrame:350,percentHorzActive:75,percentVertActive:96},[ChipSet.MONITOR.EGACOLOR]:{nHorzPeriodsPerSec:21850,nHorzPeriodsPerFrame:350,percentHorzActive:75,percentVertActive:96},[ChipSet.MONITOR.VGACOLOR]:{nHorzPeriodsPerSec:31500,nHorzPeriodsPerFrame:400,percentHorzActive:85,percentVertActive:83}};static aEGAMonitorSwitches={6:[ChipSet.MONITOR.TV,ChipSet.MONITOR.MONO,!0],7:[ChipSet.MONITOR.COLOR,ChipSet.MONITOR.MONO,!0],8:[ChipSet.MONITOR.EGAEMULATION,ChipSet.MONITOR.MONO,!0],9:[ChipSet.MONITOR.EGACOLOR,ChipSet.MONITOR.MONO,!0],10:[ChipSet.MONITOR.MONO,ChipSet.MONITOR.TV,!0],11:[ChipSet.MONITOR.MONO,ChipSet.MONITOR.COLOR,!0],0:[ChipSet.MONITOR.TV,ChipSet.MONITOR.MONO,!1],1:[ChipSet.MONITOR.COLOR,ChipSet.MONITOR.MONO,!1],2:[ChipSet.MONITOR.EGAEMULATION,ChipSet.MONITOR.MONO,!1],3:[ChipSet.MONITOR.EGACOLOR,ChipSet.MONITOR.MONO,!1],4:[ChipSet.MONITOR.MONO,ChipSet.MONITOR.TV,!1],5:[ChipSet.MONITOR.MONO,ChipSet.MONITOR.COLOR,!1]};static aModeParms={[Videox86.MODE.CGA_40X25_BW]:[40,25,1,.5,0,Videox86.CARD.CGA],[Videox86.MODE.CGA_40X25]:[40,25,1,.5,0,Videox86.CARD.CGA],[Videox86.MODE.CGA_80X25_BW]:[80,25,1,.5,0,Videox86.CARD.CGA],[Videox86.MODE.CGA_80X25]:[80,25,1,.5,0,Videox86.CARD.CGA],[Videox86.MODE.CGA_320X200]:[320,200,8,4,192],[Videox86.MODE.CGA_320X200_BW]:[320,200,8,4,192],[Videox86.MODE.CGA_640X200]:[640,200,16,8,192],[Videox86.MODE.MDA_80X25]:[80,25,1,.5,0,Videox86.CARD.MDA],[Videox86.MODE.EGA_320X200]:[320,200,8,8],[Videox86.MODE.EGA_640X200]:[640,200,8,8],[Videox86.MODE.EGA_640X350_MONO]:[640,350,8,8],[Videox86.MODE.EGA_640X350]:[640,350,8,8],[Videox86.MODE.VGA_640X480_MONO]:[640,480,8,8],[Videox86.MODE.VGA_640X480]:[640,480,8,8],[Videox86.MODE.VGA_320X200]:[320,200,4,1],[Videox86.MODE.VGA_320X200P]:[320,200,4,4],[Videox86.MODE.VGA_320X240P]:[320,240,4,4],[Videox86.MODE.VGA_320X400P]:[320,400,4,4]};static ATTRS={FGND_BLACK:0,FGND_ULINE:1,FGND_WHITE:7,FGND_BRIGHT:8,BGND_BLACK:0,BGND_WHITE:112,BGND_BLINK:128,BGND_BRIGHT:128,FGND_BLUE:1,FGND_GREEN:2,FGND_CYAN:3,FGND_RED:4,FGND_MAGENTA:5,FGND_BROWN:6,BGND_BLUE:16,BGND_GREEN:32,BGND_CYAN:48,BGND_RED:64,BGND_MAGENTA:80,BGND_BROWN:96,DRAW_FGND:256,DRAW_CURSOR:512};static aMDAColors=[[0,0,0,255],[9,204,80,255],[9,204,80,255],[60,255,131,255],[60,255,131,255]];static aMDAColorMap=[0,1,2,2,2,2,2,2,0,3,4,4,4,4,4,4];static aCGAColors=[[0,0,0,255],[0,0,170,255],[0,170,0,255],[0,170,170,255],[170,0,0,255],[170,0,170,255],[170,85,0,255],[170,170,170,255],[85,85,85,255],[85,85,255,255],[85,255,85,255],[85,255,255,255],[255,85,85,255],[255,85,255,255],[255,255,85,255],[255,255,255,255]];static aCGAColorSet0=[Videox86.ATTRS.FGND_GREEN,Videox86.ATTRS.FGND_RED,Videox86.ATTRS.FGND_BROWN];static aCGAColorSet1=[Videox86.ATTRS.FGND_CYAN,Videox86.ATTRS.FGND_MAGENTA,Videox86.ATTRS.FGND_WHITE];static aEGAPalDef=[0,1,2,3,4,5,20,7,56,57,58,59,60,61,62,63];static aEGAByteToDW=[0,255,65280,65535,16711680,16711935,16776960,16777215,-16777216,-16776961,-16711936,-16711681,-65536,-65281,-256,-1];static aEGADWToByte={0:0,128:1,32768:2,32896:3,8388608:4,8388736:5,8421376:6,8421504:7,[-2147483648]:8,[-2147483520]:9,[-2147450880]:10,[-2147450752]:11,[-2139095040]:12,[-2139094912]:13,[-2139062272]:14,[-2139062144]:15};static cardSpecs={[Videox86.CARD.MDA]:["MDA",Card.MDA.CRTC.INDX.PORT,720896,4096,4096,ChipSet.MONITOR.MONO],[Videox86.CARD.CGA]:["CGA",Card.CGA.CRTC.INDX.PORT,753664,16384,16384,ChipSet.MONITOR.COLOR],[Videox86.CARD.EGA]:["EGA",Card.CGA.CRTC.INDX.PORT,753664,16384,65536,ChipSet.MONITOR.EGACOLOR],[Videox86.CARD.VGA]:["VGA",Card.CGA.CRTC.INDX.PORT,753664,16384,262144,ChipSet.MONITOR.VGACOLOR]};static TOUCH={NONE:0,DEFAULT:1,KEYGRID:2,MOUSE:3};static KEYGRID=[[Keyboardx86.SIMCODE.HOME,Keyboardx86.SIMCODE.UP,Keyboardx86.SIMCODE.PGUP],[Keyboardx86.SIMCODE.LEFT,Keyboardx86.SIMCODE.SPACE,Keyboardx86.SIMCODE.RIGHT],[Keyboardx86.SIMCODE.END,Keyboardx86.SIMCODE.DOWN,Keyboardx86.SIMCODE.PGDN]];constructor(V,R,U,l,e,t){super("Video",V,MESSAGE.VIDEO);let T,k,F=this;this.bindingsExternal=[],this.parmsVideo=V,this.model=V.model;let W=Videox86.MODEL[this.model]||Videox86.MODEL.mda;this.nCard=W[0];let a=V.irq;null==a&&(a=ChipSet.IRQ.VID),this.nIRQ=this.nCard>=Videox86.CARD.EGA&&a>=0&&a<=15?a:void 0,this.nCardFont=0,this.nActiveFont=this.nAlternateFont=0,this.nFontSelect=0,this.cbMemory=+V.memory||0,this.sSwitches=V.switches,this.nRandomize=V.randomize,null==this.nRandomize&&(this.nRandomize=1),this.nModeDefault=V.mode,null!=this.nModeDefault&&null!=Videox86.aModeParms[this.nModeDefault]||(this.nModeDefault=W[1]),this.nColsDefault=V.charCols,this.nRowsDefault=V.charRows,void 0!==this.nColsDefault&&void 0!==this.nRowsDefault||(this.nColsDefault=Videox86.aModeParms[this.nModeDefault][0],this.nRowsDefault=Videox86.aModeParms[this.nModeDefault][1]),this.cxScreen=V.screenWidth,this.cyScreen=V.screenHeight,this.fDoubleFont=!0,this.canvasScreen=R,this.contextScreen=U,this.inputTextArea=l,this.inputScreen=l||R||null,this.colorScreen=V.screenColor||"black",this.fOpacityReduced=!1,this.fStyleCanvasFullScreen=!1,R&&(R.style.backgroundColor=this.colorScreen,this.fStyleCanvasFullScreen=document.fullscreenEnabled||WebLib.isUserAgent("Edge/")),e&&(e.style.backgroundColor=this.colorScreen);let s=V.smoothing,Z=WebLib.getURLParm("smoothing");if(Z&&(s="true"==Z),this.fSmoothing=s,this.sSmoothing=WebLib.findProperty(this.contextScreen,"imageSmoothingEnabled"),this.sTouchScreen=V.touchScreen,this.nTouchConfig=Videox86.TOUCH.NONE,this.mouse=null,this.fAutoLock=V.autoLock,this.addrBuffer=this.sizeBuffer=0,this.aFonts=[],this.aFontDiff=[],this.aRGB=new Array(this.nCard==Videox86.CARD.VGA?256:16),this.fRGBValid=!1,this.aCellCache=[],this.nCellCache=0,this.iCellCacheValid=0,this.fShifted=!1,this.nShiftLeft=this.nShiftUp=0,this.fHasFocus=!1,this.container=e,this.container&&(T=WebLib.findProperty(e,"requestFullscreen")||WebLib.findProperty(e,"requestFullScreen"),T)){if(this.container.doFullScreen=e[T],k=WebLib.findProperty(document,"on","fullscreenchange"),k){let V=WebLib.findProperty(document,"fullscreenElement")||WebLib.findProperty(document,"fullScreenElement");document.addEventListener(k,(function(){F.notifyFullScreen(null!=document[V])}),!1)}k=WebLib.findProperty(document,"on","fullscreenerror"),k&&document.addEventListener(k,(function(){F.notifyFullScreen()}),!1)}if(this.inputScreen&&(this.inputScreen.onfocus=function(){return F.onFocusChange(!0)},this.inputScreen.onblur=function(){return F.onFocusChange(!1)},this.inputScreen.lockPointer=(T=WebLib.findProperty(this.inputScreen,"requestPointerLock"))&&this.inputScreen[T],this.inputScreen.unlockPointer=(T=WebLib.findProperty(this.inputScreen,"exitPointerLock"))&&this.inputScreen[T],this.inputScreen.lockPointer&&(k=WebLib.findProperty(document,"on","pointerlockchange"),k))){let V=WebLib.findProperty(document,"pointerLockElement");document.addEventListener(k,(function(){let R=!(!V||document[V]!==F.inputScreen);F.notifyPointerLocked(R)}),!1)}if(this.sFileURL=V.fontROM,this.sFileURL){"json"!=StrLib.getExtension(this.sFileURL)&&(this.sFileURL=WebLib.getHostOrigin()+DumpAPI.ENDPOINT+"?"+DumpAPI.QUERY.FILE+"="+this.sFileURL+"&"+DumpAPI.QUERY.FORMAT+"="+DumpAPI.FORMAT.BYTES)}if(this.aDiagContexts=[],t)for(let V=0;V<t.length;V++){let R=t[V];if("CANVAS"==R.tagName){let V=R.getContext("2d");this.aDiagContexts.push(V)}}this.imageCache={},this.canvasCache={}}initBus(V,R,U,l){let e=this;this.bus=R,this.cpu=U,this.dbg=l;let t=+V.getMachineParm("randomize");if(t>=0&&t<=1&&(this.nRandomize=t),this.colorFont=V.getMachineParm("fontColor",this.parmsVideo),this.colorFont){this.rgbFont=[255,255,255,255];let V,R=0,U=0;for("#"==this.colorFont[R]&&R++;V=this.colorFont.substr(R,2);)this.rgbFont[U++]=Number.parseInt(V,16),R+=2}this.opacityFlicker=(1-(V.getMachineParm("flicker",this.parmsVideo)||0)).toString();let T=Videox86.MODEL[this.model],k=T&&T[0];k!==Videox86.CARD.CGA&&(R.addPortInputTable(this,Videox86.aMDAPortInput),R.addPortOutputTable(this,Videox86.aMDAPortOutput)),k!==Videox86.CARD.MDA&&(R.addPortInputTable(this,Videox86.aCGAPortInput),R.addPortOutputTable(this,Videox86.aCGAPortOutput)),this.nCard>=Videox86.CARD.EGA&&(R.addPortInputTable(this,Videox86.aEGAPortInput),R.addPortOutputTable(this,Videox86.aEGAPortOutput)),this.nCard==Videox86.CARD.VGA&&(R.addPortInputTable(this,Videox86.aVGAPortInput),R.addPortOutputTable(this,Videox86.aVGAPortOutput)),DEBUGGER&&l&&l.messageDump(MESSAGE.VIDEO,(function(V){e.dumpVideo(V)})),this.kbd=V.getMachineComponent("Keyboard"),this.kbd&&this.inputScreen&&this.kbd.setBinding(this.inputTextArea?"textarea":"canvas","screen",this.inputScreen),this.panel=V.getMachineComponent("Panel",!1);for(let V=0;V<this.bindingsExternal.length;V++){let R=this.bindingsExternal[V];this.kbd&&this.kbd.setBinding(...R)||(!this.panel||this.panel.setBinding(...R))}if(this.bEGASwitches=9,this.chipset=V.getMachineComponent("ChipSet"),this.chipset&&this.sSwitches&&this.nCard==Videox86.CARD.EGA&&(this.bEGASwitches=this.chipset.parseDIPSwitches(this.sSwitches,this.bEGASwitches)),"mouse"==this.sTouchScreen?(this.mouse=V.getMachineComponent("Mouse",!1),this.mouse&&this.captureTouch(Videox86.TOUCH.MOUSE)):"keygrid"==this.sTouchScreen&&this.kbd&&this.captureTouch(Videox86.TOUCH.KEYGRID),this.nTouchConfig||this.captureTouch(Videox86.TOUCH.DEFAULT),this.sFileURL){let V="Loading "+this.sFileURL+"...";WebLib.getResource(this.sFileURL,null,!0,(function(V,R,U){e.doneLoad(V,R,U)}),(function(R){e.printf(MESSAGE.PROGRESS,"%s\n",V)}))}else;}setBinding(V,R,U,l){let e=this;if(!this.bindings[R])switch(this.bindings[R]=U,R){case"fullScreen":return this.container&&this.container.doFullScreen?U.onclick=function(){DEBUG&&e.printf("fullScreen()\n"),e.goFullScreen()}:(DEBUG&&this.printf(MESSAGE.LOG,"FullScreen API not available\n"),U.parentNode.removeChild(U)),!0;case"lockPointer":return this.sLockMessage=U.textContent,this.inputScreen&&this.inputScreen.lockPointer?U.onclick=function(){DEBUG&&e.printf("lockPointer()\n"),e.lockPointer(!0)}:(DEBUG&&this.printf(MESSAGE.LOG,"Pointer Lock API not available\n"),U.parentNode.removeChild(U)),!0;case"refresh":return U.onclick=function(){DEBUG&&e.printf("refreshScreen()\n"),e.updateScreen(!0)},!0;default:this.bindingsExternal.push([V,R,U,l]),delete this.bindings[R]}return!1}setFocus(V){if(this.inputScreen&&(this.inputScreen.focus(),V)){(document.getElementById(this.idMachine)||this.inputScreen).scrollIntoView()}}getScreen(V){return this.mouse=V,this.inputScreen}getTextArea(){return this.inputTextArea}getTextData(){let V="",R=0;if(this.nCardFont)for(let U=0;U<this.nRows;U++){let U="";for(let V=0;V<this.nColsBuffer;V++){if(V<this.nCols){let V=255&this.aCellCache[R];U+=CharSet.CP437[V]}R++}V+=U.replace(/\s*$/,"\n")}return V}goFullScreen(){let V=!1;if(this.container){if(this.container.doFullScreen){let R="100%",U="auto";if(screen&&screen.width&&screen.height){let V=screen.width/screen.height,U=this.cxScreen/this.cyScreen;V>U&&(R=Math.round(U/V*100)+"%")}this.fStyleCanvasFullScreen?(this.canvasScreen.style.width=R,this.canvasScreen.style.height=U,this.canvasScreen.style.display="block",this.canvasScreen.style.margin="auto"):(this.container.style.width=R,this.container.style.height=U),this.container.style.backgroundColor=this.colorScreen,this.container.doFullScreen(),V=!0}this.setFocus()}return V}notifyFullScreen(V){!V&&this.container&&(this.fStyleCanvasFullScreen?this.canvasScreen.style.width=this.canvasScreen.style.height="":this.container.style.width=this.container.style.height=""),DEBUG&&this.printf("notifyFullScreen(%b)\n",V),this.kbd&&this.kbd.notifyEscape(1==V)}async lockPointer(V){let R=!1;if(V){try{await this.inputScreen.lockPointer(),this.mouse.notifyPointerLocked(!0)}catch(V){}R=!0}else try{await this.inputScreen.unlockPointer(),this.mouse.notifyPointerLocked(!1)}catch(V){}return this.setFocus(),R}notifyPointerActive(V){return!!this.fAutoLock&&this.lockPointer(V)}notifyPointerLocked(V){this.mouse&&(this.mouse.notifyPointerLocked(V),this.kbd&&this.kbd.notifyEscape(V));let R=this.bindings.lockPointer;R&&(R.textContent=V?"Press Esc to Unlock Pointer":this.sLockMessage)}captureTouch(V){let R=this.inputScreen;if(R){let U=this;if(!this.nTouchConfig){this.nTouchConfig=V;let l=!1;if(V!=Videox86.TOUCH.MOUSE)try{let V=Object.defineProperty({},"passive",{get:function(){l=!0}});window.addEventListener("testPassive",null,V),window.removeEventListener("testPassive",null,V)}catch(V){}if(R.addEventListener("touchstart",(function(V){U.onTouchStart(V)}),!!l&&{passive:!0}),V==Videox86.TOUCH.DEFAULT)return;R.addEventListener("touchmove",(function(V){U.onTouchMove(V)}),!l||{passive:!0}),R.addEventListener("touchend",(function(V){U.onTouchEnd(V)}),!1),MAXDEBUG&&(R.addEventListener("mousedown",(function(V){U.onTouchStart(V)}),!1),R.addEventListener("mousemove",(function(V){U.onTouchMove(V)}),!0),R.addEventListener("mouseup",(function(V){U.onTouchEnd(V)}),!1)),this.xTouch=this.yTouch=this.timeTouch=-1,this.fTouchDefault=!1,this.hLongTouch=null,this.fLongTouch=!1,this.onLongTouch=function(){U.startLongTouch()}}}}onFocusChange(V){this.fHasFocus=V,this.kbd&&this.kbd.onFocusChange(V)}onTouchStart(V){DEBUG&&this.printf("onTouchStart()\n"),this.chipset.startAudio(V),this.nTouchConfig!=Videox86.TOUCH.DEFAULT&&this.processTouchEvent(V,!0)}onTouchMove(V){DEBUG&&this.printf("onTouchMove()\n"),this.processTouchEvent(V)}onTouchEnd(V){DEBUG&&this.printf("onTouchEnd()\n"),this.processTouchEvent(V,!1)}processTouchEvent(V,R){let U,l,e=0,t=0,T=this.canvasScreen;do{isNaN(T.offsetLeft)||(e+=T.offsetLeft,t+=T.offsetTop)}while(T=T.offsetParent);let k=this.cxScreen/this.canvasScreen.offsetWidth,F=this.cyScreen/this.canvasScreen.offsetHeight;if(V.targetTouches&&V.targetTouches.length?(U=V.targetTouches[0].pageX,l=V.targetTouches[0].pageY):(U=V.pageX,l=V.pageY),U=(U-e)*k,l=(l-t)*F,this.nTouchConfig==Videox86.TOUCH.KEYGRID){if(R){let V=U/(this.cxScreen/3)|0,R=l/(this.cyScreen/3)|0;this.kbd.addActiveKey(Videox86.KEYGRID[R][V],!0)}}else if(this.mouse){let e=this.fTouchDefault,t=V.timeStamp-this.timeTouch;if(!0===R?(this.fTouchDefault=t>500,this.timeTouch=V.timeStamp,this.hLongTouch=setTimeout(this.onLongTouch,500)):null!=this.hLongTouch&&(clearTimeout(this.hLongTouch),this.hLongTouch=null),void 0===R&&(this.fTouchDefault=!1),DEBUG&&this.printf("processTouchEvent(%s,%dms,%b)\n",R?"touchStart":!1===R?"touchEnd":"touchMove",t,e),e||V.preventDefault(),!1===R){if(this.endLongTouch())return;if(t<200)return this.mouse.clickMouse(Mouse.BUTTON.LEFT,!0),void this.mouse.clickMouse(Mouse.BUTTON.LEFT,!1)}(R||this.xTouch<0||this.yTouch<0)&&(this.xTouch=U,this.yTouch=l);let T=Math.round(U-this.xTouch),k=Math.round(l-this.yTouch);this.xTouch=U,this.yTouch=l,this.mouse.moveMouse(T,k,this.xTouch,this.yTouch)}}startLongTouch(){this.fLongTouch=!0,this.mouse.clickMouse(Mouse.BUTTON.LEFT,!0)}endLongTouch(){return!!this.fLongTouch&&(this.mouse.clickMouse(Mouse.BUTTON.LEFT,!1),this.fLongTouch=!1,!0)}powerUp(V,R){if(!R){if(V&&this.restore){if(!this.restore(V))return!1}else this.reset();if(null==this.timerRetrace){this.msUpdateNormal=1e3/Videox86.UPDATES_PER_SECOND|0,this.msUpdateInterval=this.msUpdateNormal,this.msUpdatePrev=this.cmsUpdate=0;let V=this;this.timerRetrace=this.cpu.addTimer(this.id,(function(){let R=V.cardActive;if(R.nCountVertRetrace++,R.nCard===Videox86.CARD.VGA&&R.regSEQData[Card.SEQ.CLKMODE.INDX]&Card.SEQ.CLKMODE.SCREEN_OFF&&1&R.nCountVertRetrace)return;R.nCyclesVertRetrace=V.cpu.getCycles(),DEBUG&&V.printf(MESSAGE.VIDEO+MESSAGE.TIMER,"vertical retrace timer fired (%d cycles)\n",R.nCyclesVertRetrace),V.nIRQ&&(R.regCRTData[Card.CRTC.EGA.VREND.INDX]&Card.CRTC.EGA.VREND.DISABLE_VRINT||V.chipset&&V.chipset.setIRR(V.nIRQ));let U=Date.now(),l=U-V.msUpdatePrev-V.msUpdateInterval;if(l>=0){if(V.updateScreen()){let R=Date.now()-U;V.cUpdates%120==1?(V.cUpdates=1,V.cmsUpdate=R):(V.cmsUpdate+=R,R=V.cmsUpdate/V.cUpdates),R>=V.msUpdateInterval/4?V.msUpdateInterval=2*V.msUpdateNormal:R<V.msUpdateNormal/4&&(V.msUpdateInterval=V.msUpdateNormal)}V.msUpdatePrev=U-(l>=V.msUpdateInterval?0:l)}else DEBUG&&V.printf(MESSAGE.VIDEO+MESSAGE.TIMER,"skipping update (%dms too soon)\n",-l);V.latchStartAddress()}),-this.cardActive.nCyclesVertPeriod)}}return!0}powerDown(V,R){return!V||this.save()}reset(){let V,R=ChipSet.MONITOR.NONE;switch(this.chipset&&(R=this.chipset.getDIPVideoMonitor()),Videox86.MODEL[this.model]||(this.nCard=R==ChipSet.MONITOR.MONO?Videox86.CARD.MDA:Videox86.CARD.CGA),this.nModeDefault=Videox86.MODE.CGA_80X25,this.nCard){case Videox86.CARD.VGA:R=ChipSet.MONITOR.VGACOLOR;break;case Videox86.CARD.EGA:if(V=Videox86.aEGAMonitorSwitches[this.bEGASwitches],V&&(R=V[0]),!R){R=ChipSet.MONITOR.EGACOLOR;break}if(R!=ChipSet.MONITOR.MONO)break;case Videox86.CARD.MDA:R=ChipSet.MONITOR.MONO,this.nModeDefault=Videox86.MODE.MDA_80X25;break;case Videox86.CARD.CGA:default:R=ChipSet.MONITOR.COLOR}if(this.nMonitorType!==R&&(this.nMonitorType=R),this.cardActive=null,this.cardMono=this.cardMDA=new Card(this,Videox86.CARD.MDA),this.cardColor=this.cardCGA=new Card(this,Videox86.CARD.CGA),this.nCard<Videox86.CARD.EGA?this.cardEGA=new Card:(this.cardEGA=new Card(this,this.nCard,null,this.cbMemory),this.enableEGA()),this.nMode=null,this.setMode(this.nModeDefault),this.cardActive.addrBuffer&&this.nRandomize){let V=this.cardActive.addrBuffer+this.cbScreen;for(let R=this.cardActive.addrBuffer;R<V;R+=2){let V,U,l=65536*Math.random()|0;this.nMonitorType==ChipSet.MONITOR.EGACOLOR||this.nMonitorType==ChipSet.MONITOR.VGACOLOR?(V=R>>1&255,U=l>>8&~Videox86.ATTRS.BGND_BLINK,U>>4==(15&U)&&(U^=15)):(V=255&l,U=(256&l?Videox86.ATTRS.FGND_WHITE|Videox86.ATTRS.BGND_BLACK:Videox86.ATTRS.FGND_BLACK|Videox86.ATTRS.BGND_WHITE)|Videox86.ATTRS.FGND_BRIGHT&l>>8),this.bus.setShortDirect(R,V|U<<8)}this.updateScreen(!0)}}enableEGA(){this.cardEGA.regMisc&Card.MISC.IO_SELECT?(this.cardMono=this.cardMDA,this.cardColor=this.cardEGA):(this.cardMono=this.cardEGA,this.cardColor=this.cardCGA)}save(){let V=new State(this);return V.set(0,this.cardMDA.saveCard()),V.set(1,this.cardCGA.saveCard()),V.set(2,[this.nMonitorType,this.nModeDefault,this.nMode]),V.set(3,this.cardEGA.saveCard()),V.data()}restore(V){let R=V[2];return this.nMonitorType=R[0],this.nModeDefault=R[1],this.nMode=R[2],this.cardActive=null,this.cardMono=this.cardMDA=new Card(this,Videox86.CARD.MDA,V[0]),this.cardColor=this.cardCGA=new Card(this,Videox86.CARD.CGA,V[1]),this.cardEGA=new Card(this,this.nCard,V[3],this.cbMemory),this.cardEGA.fActive&&this.enableEGA(),!!this.checkMode()&&(this.checkCursor(),!0)}doneLoad(sURL,sFontData,nErrorCode){if(nErrorCode)this.printf(nErrorCode<0?MESSAGE.STATUS:MESSAGE.NOTICE,"Unable to load font ROM (error %d: %s)\n",nErrorCode,sURL);else{Component.addMachineResource(this.idMachine,sURL,sFontData);try{let abFontData=eval("("+sFontData+")"),ab=abFontData.bytes||8==abFontData.width&&abFontData.values||abFontData;if(!ab||!ab.length)return void Component.error("Unsupported font ROM: "+sURL);if(1==ab.length)return void Component.error(ab[0]);if(8192==ab.length)this.setFontData(ab,[6144,0]);else{if(2048!=ab.length)return void this.printf(MESSAGE.NOTICE,"Unrecognized font data length (%d)\n",ab.length);this.setFontData(ab,[0])}}catch(V){return void this.printf(MESSAGE.NOTICE,"Font ROM data error: %s\n",V.message)}this.setReady()}}onROMLoad(V,R){this.nCard==Videox86.CARD.EGA?(DEBUG&&this.printf("onROMLoad(): EGA fonts loaded\n"),this.setFontData(V,R||[12640,8752],8)):this.nCard==Videox86.CARD.VGA&&(DEBUG&&this.printf("onROMLoad(): VGA fonts loaded\n"),this.setFontData(V,R||[14221,16269,20154],8)),this.setReady()}setFontData(V,R,U){this.abFontData=V,this.aFontOffsets=R,this.cxFontChar=U}getCardColors(V){if(1==V)return this.aRGB[0]=Videox86.aCGAColors[Videox86.ATTRS.FGND_BLACK],this.aRGB[1]=this.getFontColor(Videox86.aCGAColors,Videox86.ATTRS.FGND_WHITE),this.aRGB;if(2==V){let V=this.cardActive.regColor;if(this.cardActive===this.cardEGA){let R=this.cardEGA.regATCData[0];V=R&Card.CGA.COLOR.BORDER,R&Card.ATC.PALETTE.BRIGHT&&(V|=Card.CGA.COLOR.BRIGHT),3==(15&this.cardEGA.regATCData[1])&&(V|=Card.CGA.COLOR.COLORSET1)}this.aRGB[0]=this.getFontColor(Videox86.aCGAColors,V&(Card.CGA.COLOR.BORDER|Card.CGA.COLOR.BRIGHT));let R=V&Card.CGA.COLOR.COLORSET1?Videox86.aCGAColorSet1:Videox86.aCGAColorSet0;for(let V=0;V<R.length;V++)this.aRGB[V+1]=this.getFontColor(Videox86.aCGAColors,R[V]);return this.aRGB}if(this.cardColor===this.cardCGA){for(let V=0;V<Videox86.aCGAColors.length;V++)this.aRGB[V]=this.getFontColor(Videox86.aCGAColors,V);return this.aRGB}if(this.fRGBValid&&V&&!this.aRGB[16]&&(this.fRGBValid=!1),!this.fRGBValid){let R,U,l,e,t,T,k,F=this.cardEGA,W=F.regDACData;if(8==V)for(U=0;U<256;U++)l=W[U]||0,t=l<<2&252,T=l>>4&252,k=l>>10&252,this.aRGB[U]=[t,T,k,255];else{let V=W&&null!=W[255];for(R=null!=F.regATCData[15]?F.regATCData:Videox86.aEGAPalDef,U=0;U<16;U++)e=R[U]&Card.ATC.PALETTE.MASK,V?(e|=(F.regATCData[Card.ATC.COLORSEL.INDX]&(Card.ATC.COLORSEL.DAC_BIT7|Card.ATC.COLORSEL.DAC_BIT6))<<4,F.regATCData[Card.ATC.MODE.INDX]&Card.ATC.MODE.COLORSEL_ALL&&(e&=-49,e|=(F.regATCData[Card.ATC.COLORSEL.INDX]&(Card.ATC.COLORSEL.DAC_BIT5|Card.ATC.COLORSEL.DAC_BIT4))<<4),l=W[e],t=l<<2&252,T=l>>4&252,k=l>>10&252):(t=(4&e?170:0)|(32&e?85:0),T=(2&e?170:0)|(16&e?85:0),k=(1&e?170:0)|(8&e?85:0)),this.aRGB[U]=[t,T,k,255]}this.fRGBValid=!0}return this.aRGB}getFontColor(V,R){if(!this.colorFont)return V[R];let U=V.length>>1;if(!(R=R+1-U))return this.rgbFont;let l,e,t=[0,0,0,255],T=255,k=0;for(l=0;l<3;l++)T>this.rgbFont[l]&&(T=this.rgbFont[l]),k<this.rgbFont[l]&&(k=this.rgbFont[l]);for(e=R<0?k/(U-1):(256-k)/U,l=0;l<3;l++)t[l]=this.rgbFont[l]+e*R|0,t[l]<0&&(t[l]=0),t[l]>255&&(t[l]=255);return t}getIntenseColor(V){let R,U=V.slice(),l=0;for(R=0;R<3;R++)l<V[R]&&(l=V[R]);for(R=0;R<3;R++)U[R]+=255-l;return U}getSelectedFonts(){let V=this.cardEGA.regSEQData[Card.SEQ.CHARMAP.INDX];return this.nCard<Videox86.CARD.VGA&&(V&=Card.SEQ.CHARMAP.SELA|Card.SEQ.CHARMAP.SELB),this.cardEGA.regSEQData[Card.SEQ.MEMMODE.INDX]&Card.SEQ.MEMMODE.EXT||(V&=~(Card.SEQ.CHARMAP.SELA|Card.SEQ.CHARMAP.SELB)),V&Card.SEQ.CHARMAP.SELB|(V&Card.SEQ.CHARMAP.SELB_HI)>>2|((V&Card.SEQ.CHARMAP.SELA)>>2|(V&Card.SEQ.CHARMAP.SELA_HI)>>3)<<8}buildFont(V=!1){let R=!1;if(this.nActiveFont=this.nAlternateFont=this.nCardFont,globals.browser&&this.nCardFont){let U,l,e,t,T,k,F,W,a=0,s=this.abFontData;switch(this.nCardFont==Videox86.CARD.MDA||this.nMonitorType==ChipSet.MONITOR.MONO?(this.colorFont?(U=Videox86.aMDAColors.slice(),U[1]=U[2]=this.rgbFont,U[3]=U[4]=this.getIntenseColor(this.rgbFont)):U=Videox86.aMDAColors,l=Videox86.aMDAColorMap):U=this.getCardColors(),this.nCardFont){case Videox86.CARD.MDA:null!=this.aFontOffsets[1]&&this.createFont(this.nCardFont,this.cxFontChar||9,14,this.aFontOffsets[1],this.cxFontChar?0:2048,s,!1,U,l)&&(R=!0);break;case Videox86.CARD.CGA:null!=this.aFontOffsets[0]&&this.createFont(this.nCardFont,this.cxFontChar||8,8,this.aFontOffsets[0],0,s,!1,U,l)&&(R=!0);break;case Videox86.CARD.VGA:a+=4;case Videox86.CARD.EGA:if(a+=4,e=this.cxFontChar||8,t=14,T=this.aFontOffsets[1],this.aFontOffsets[2]&&(t=16,T=this.aFontOffsets[2]),k=0,F=this.cardEGA.regSEQData[Card.SEQ.CLKMODE.INDX]&Card.SEQ.CLKMODE.DOTS8?8:9,W=this.cardEGA.regCRTData[Card.CRTC.MAXSCAN]&Card.CRTCMASKS[Card.CRTC.MAXSCAN],W++&&(e=F,t=W,T=0,s=null,(k=this.cardEGA.bitsDirtyBanks)&&(DEBUG&&this.printf("buildFont(%b): dirty font data detected (%#04X)\n",V,k),this.cardEGA.bitsDirtyBanks=0),this.nFontSelect=this.getSelectedFonts(),this.nActiveFont=this.nCardFont+(255&this.nFontSelect),this.nAlternateFont=this.nCardFont+(this.nFontSelect>>8)),null!=T)for(let V=0,F=-1;V<16;V+=8){let W=this.nFontSelect>>V&255;if(W==F)continue;F=W;let a=(W<<1)-(W<4?0:7);s||(T=8192*a);let Z=!!(k&1<<a);if(this.createFont(this.nCardFont+W,e,t,T,0,s,Z,U,l)){if(R=!0,s||!W)continue;for(let V=0;V<W;V++)this.createFontDiff(W,V,t)}}}V||(this.iCellCursor=-1,this.cBlinks=-1,this.cBlinkVisible=0),DEBUG&&R&&this.printf("buildFont(%b): font changes detected\n",V)}return R}createFont(V,R,U,l,e,t,T,k,F){let W=!1,a=this.aFonts[V],s=k.length<16?k.length:16;a&&s==a.aRGBColors.length||(a={cxChar:R,cyChar:U,cxCell:0,cyCell:0,aCSSColors:new Array(s),aRGBColors:k.slice(0,s),aColorMap:F,aCanvas:new Array(s)});let Z=this.fDoubleFont?1:0,S=R<<Z,h=U<<Z,E=!1;a.cxCell==S&&a.cyCell==h||(a.cxChar=R,a.cyChar=U,a.cxCell=S,a.cyCell=h,E=!0);for(let F=0;F<s;F++){let s=k[F],S=E||T;if(!S){let V=a.aCSSColors[F]?a.aRGBColors[F]:[];S=s[0]!==V[0]||s[1]!==V[1]||s[2]!==V[2]}if(S){if(!this.createFontColor(a,F,s,Z,l,e,R,U,t)){DEBUG&&this.printf("createFont(%d): no font data found\n",V),a=null;break}DEBUG&&(W||this.printf("createFont(%d): creating %s font (%d,%d)\n",V,Videox86.cardSpecs[this.nCardFont][0],R,U),this.printf("createFontColor(%d): [%s]\n",F,s)),W=!0}}if((W||a!=this.aFonts[V])&&this.aDiagContexts.length){let R=this.aDiagContexts[V-this.nCardFont];if(R){let V=R.canvas;if(a){let U=V.width/s|0,l=V.height;V.width,V.height;for(let e=0;e<s;e++){let t=a.aCanvas[e];R.fillStyle=a.aCSSColors[(e+9)%s],R.fillRect(e*U,0,U,l);let T=V.height/t.height,k=t.width*T|0;k>U&&(k=U);let F=t.height;R.drawImage(t,0,0,k,F,e*U,0,U,l)}}else R.fillStyle="black",R.fillRect(0,0,V.width,V.height)}}return this.aFonts[V]=a,W}createFontColor(V,R,U,l,e,t,T,k,F){let W,a,s,Z=32,S=this.cardActive&&this.cardActive.adwMemory;if(F)Z=k<8||!t?k:8;else{for(W=0;W<256;W++){let V=e+W*Z;for(a=0;a<k;a++){if(S[V+a]>>16&255)break}if(a<k)break}if(256==W)return!1}let h=[0,0,0,0],E=V.aCanvas[R];E&&E.width==V.cxCell<<4&&E.height==V.cyCell<<4||(E=document.createElement("canvas"),E.width=V.cxCell<<4,E.height=V.cyCell<<4);let i=E.getContext("2d"),N=i.createImageData(V.cxCell,V.cyCell);for(W=0;W<256;W++){let E=e+W*Z;for(a=0;a<k;a++){let e=V.aColorMap&&1&R&&a==k-2,i=a<Z?E+a:t+W*Z+a-Z,r=F?F[i]:S[i]>>16&255;for(let V=0;V<=l;V++)for(s=0;s<T;s++){let R=s<<l,t=(a<<l)+V,T=(e?1:r&128>>(s>=8&&W>=192&&W<=223?7:s))?U:h;this.setPixel(N,R,t,T),l&&this.setPixel(N,R+1,t,T)}}i.putImageData(N,s=(15&W)*V.cxCell,a=(W>>4)*V.cyCell)}return V.aCSSColors[R]=StrLib.sprintf("#%02X%02X%02X",U[0],U[1],U[2]),V.aRGBColors[R]=U,V.aCanvas[R]=E,!0}createFontDiff(V,R,U,l=32){let e=(V*(V-1)>>1)+R,t=this.cardEGA.adwMemory,T=this.aFontDiff[e]||new Array(256),k=8192*((V<<1)-(V<4?0:7)),F=8192*((R<<1)-(R<4?0:7));for(let V=0;V<256;V++){T[V]=0;let R=k+V*l,e=F+V*l;for(let l=0;l<U;l++)if((t[R++]>>16&255)!=(t[e++]>>16&255)){T[V]=-1;break}}this.aFontDiff[e]=T}getFontDiff(V,R){let U=[];if(V!=R){let l;V<R&&(l=V,V=R,R=l),l=(V*(V-1)>>1)+R,U=this.aFontDiff[l]}return U}checkBlink(){return this.cBlinkVisible>0||this.iCellCursor>=0?(this.cBlinks<0&&(this.cBlinks=0),!0):(this.cBlinks=-1,!1)}checkCursor(){if(!this.nCardFont)return!1;let V=this.cardActive;for(let R=Card.CRTC.CURSCAN;R<=Card.CRTC.CURSORLO;R++)if(null==V.regCRTData[R])return!1;let R=V.regCRTData[Card.CRTC.CURSCAN],U=R&Card.CRTC.CURSCAN_SLMASK,l=V.regCRTData[Card.CRTC.CURSCANB]&Card.CRTCMASKS[Card.CRTC.CURSCANB],e=V.regCRTData[Card.CRTC.MAXSCAN]&Card.CRTCMASKS[Card.CRTC.MAXSCAN],t=U,T=l;U>e&&(R|=Card.CRTC.CURSCAN_BLINKOFF);let k=0;this.nCard!=Videox86.CARD.EGA?(l<U?(k=l+1,l=e,this.nCard==Videox86.CARD.VGA&&(R|=Card.CRTC.CURSCAN_BLINKOFF,k=0)):l>e&&(U=0,l=e),l++):U==l%16?l=U+1:l<U?(k=l,l=e+1):l>e&&(U=0,l=e+1);let F=l-U;if(R&Card.CRTC.CURSCAN_BLINKOFF||F<=0)return this.removeCursor(),!1;let W=V.regCRTData[Card.CRTC.CURSORLO]|(V.regCRTData[Card.CRTC.CURSORHI]&V.addrMaskHigh)<<8;W-=V.regCRTData[Card.CRTC.STARTLO]|(V.regCRTData[Card.CRTC.STARTHI]&V.addrMaskHigh)<<8;let a=Math.trunc(W/this.nColsLogical)*this.nColsBuffer+W%this.nColsLogical;if(this.iCellCursor!=a){if(DEBUG){let V=this.iCellCursor/this.nCols|0,R=this.iCellCursor%this.nCols,U=a/this.nCols|0,l=a%this.nCols;this.printf("checkCursor(): cursor moved from %d,%d to %d,%d\n",V,R,U,l)}this.iCellCursor=a,this.cBlinkVisible=-1}return this.yCursor===U&&this.cyCursor===F&&this.cyCursorWrap===k||(DEBUG&&this.printf("checkCursor(): cursor shape changed from %d,%d to %d,%d (%#04X-%#04X)\n",this.yCursor,this.cyCursor,U,F,t,T),this.yCursor=U,this.cyCursor=F,this.cyCursorWrap=k,this.iCellCacheValid&&this.iCellCursor>=0&&this.iCellCursor<this.aCellCache.length&&(this.aCellCache[this.iCellCursor]=-1,this.iCellCacheValid=1)),this.cyCursorCell=e+1,this.cyCursor>this.cyCursorCell&&(this.cyCursor=this.cyCursorCell),this.checkBlink(),!0}removeCursor(){if(this.iCellCursor>=0){if(void 0!==this.aCellCache&&this.iCellCursor<this.aCellCache.length){let V=Videox86.ATTRS.DRAW_CURSOR<<8,R=this.aCellCache[this.iCellCursor];if(R&V){R&=~V;let U=this.iCellCursor%this.nColsBuffer,l=this.iCellCursor/this.nColsBuffer|0;this.nActiveFont&&this.aFonts[this.nActiveFont]&&(this.contextBuffer&&this.updateChar(U,l,R,this.contextBuffer),this.updateChar(U,l,R)),DEBUG&&this.printf("removeCursor(): removed from %d,%d\n",l,U),this.aCellCache[this.iCellCursor]=R}}this.iCellCursor=-1}}getCardAccess(){let V=this.cardActive,R=Card.READ.PAIRS|Card.WRITE.PAIRS;if(V.nCard>=Videox86.CARD.EGA){this.fColor256=!1;let U=V.regGRCData[Card.GRC.MODE.INDX];if(null!=U){let l=Card.READ.MODE0,e=Card.WRITE.MODE0,t=U&Card.GRC.MODE.WRITE.MASK,T=V.regGRCData[Card.GRC.DATAROT.INDX]&Card.GRC.DATAROT.MASK;switch(t){case Card.GRC.MODE.WRITE.MODE0:if(T){switch(e=Card.WRITE.MODE0|Card.WRITE.ROT,T&Card.GRC.DATAROT.FUNC){case Card.GRC.DATAROT.AND:e=Card.WRITE.MODE0|Card.WRITE.AND;break;case Card.GRC.DATAROT.OR:e=Card.WRITE.MODE0|Card.WRITE.OR;break;case Card.GRC.DATAROT.XOR:e=Card.WRITE.MODE0|Card.WRITE.XOR}V.nDataRotate=T&Card.GRC.DATAROT.COUNT}break;case Card.GRC.MODE.WRITE.MODE1:e=Card.WRITE.MODE1;break;case Card.GRC.MODE.WRITE.MODE2:switch(T&Card.GRC.DATAROT.FUNC){default:e=Card.WRITE.MODE2;break;case Card.GRC.DATAROT.AND:e=Card.WRITE.MODE2|Card.WRITE.AND;break;case Card.GRC.DATAROT.OR:e=Card.WRITE.MODE2|Card.WRITE.OR;break;case Card.GRC.DATAROT.XOR:e=Card.WRITE.MODE2|Card.WRITE.XOR}break;case Card.GRC.MODE.WRITE.MODE3:this.nCard==Videox86.CARD.VGA&&(e=Card.WRITE.MODE3,V.nDataRotate=T&Card.GRC.DATAROT.COUNT);break;default:DEBUG&&this.printf("getCardAccess(): invalid GRC mode (%#04X)\n",U)}U&Card.GRC.MODE.READ.MODE1&&(l=Card.READ.MODE1);let k=V.regSEQData[Card.SEQ.MEMMODE.INDX];null!=k&&(k&Card.SEQ.MEMMODE.SEQUENTIAL||(l|=Card.READ.EVENODD,e|=Card.WRITE.EVENODD),U&Card.GRC.MODE.COLOR256&&(k&Card.SEQ.MEMMODE.CHAIN4&&(l|=Card.READ.CHAIN4,e|=Card.WRITE.CHAIN4),this.fColor256=!0)),R=l|e}}return R}setCardAccess(V){let R=this.cardActive;return!(!R||V==R.nAccess)&&(DEBUG&&this.printf("setCardAccess(%#06X)\n",V),R.setMemoryAccess(V),this.bus.setMemoryAccess(R.addrBuffer,R.sizeBuffer,R.getMemoryAccess(),!0),!0)}setDimensions(){this.nCardFont=this.nActiveFont=this.nAlternateFont=0,this.nCols=this.nColsDefault,this.nRows=this.nRowsDefault,this.nPointsPerCell=Videox86.aModeParms[Videox86.MODE.MDA_80X25][2],this.nPointsPerByte=Videox86.aModeParms[Videox86.MODE.MDA_80X25][3],this.cxScreenCell=this.cyScreenCell=1,this.fOverBuffer=!1;let V=0,R=1,U=1,l=Videox86.aModeParms[this.nMode];if(l&&(this.nCols=l[0],this.nRows=l[1],this.nPointsPerCell=l[2],this.nPointsPerByte=l[3],V=l[4],this.nCardFont=l[5],this.nCardFont)){"vdu"==this.model?this.nCardFont=Videox86.CARD.MDA:this.nCard>this.nCardFont&&(this.nCardFont=this.nCard),this.buildFont();let V=this.aFonts[this.nActiveFont];if(V&&(R=V.cxCell,U=V.cyCell,this.nCard>=Videox86.CARD.EGA)){let R=this.cardEGA.getCRTCReg(Card.CRTC.EGA.VDEND);if(R++){let U=R/V.cyChar|0;U&&(this.nRows=U)}this.fOverBuffer=!0}this.cxScreenCell=this.cxScreen/this.nCols|0,this.cyScreenCell=this.cyScreen/this.nRows|0}if(this.nColsBuffer=this.nColsLogical=this.nCols,this.nRowsBuffer=this.nRows,this.fOverBuffer&&(this.nColsBuffer++,this.nRowsBuffer++),this.nCells=this.nColsBuffer*this.nRowsBuffer|0,this.nCellCache=this.nCells/this.nPointsPerCell|0,this.cbScreen=this.nCells/this.nPointsPerByte|0,this.cbSplit=0,void 0!==V&&(this.cbScreen=this.cbScreen+V|0,this.cbSplit=this.cbScreen+V>>1),this.cxBuffer=this.nColsBuffer*R,this.cyBuffer=this.nRowsBuffer*U,!this.contextScreen)return;this.sSmoothing&&(this.contextScreen[this.sSmoothing]=null==this.fSmoothing?!!this.nCardFont:this.fSmoothing),this.imageCache[this.cxBuffer]&&this.imageCache[this.cxBuffer][this.cyBuffer]?(this.imageBuffer=this.imageCache[this.cxBuffer][this.cyBuffer],this.canvasBuffer=this.canvasCache[this.cxBuffer][this.cyBuffer]):(this.imageBuffer=this.contextScreen.createImageData(this.cxBuffer,this.cyBuffer),this.canvasBuffer=document.createElement("canvas"),this.canvasBuffer.width=this.cxBuffer,this.canvasBuffer.height=this.cyBuffer,this.imageCache[this.cxBuffer]||(this.imageCache[this.cxBuffer]={}),this.imageCache[this.cxBuffer][this.cyBuffer]=this.imageBuffer,this.canvasCache[this.cxBuffer]||(this.canvasCache[this.cxBuffer]={}),this.canvasCache[this.cxBuffer][this.cyBuffer]=this.canvasBuffer),this.contextBuffer=this.canvasBuffer.getContext("2d"),this.xScreenOffset=this.yScreenOffset=0,this.cxScreenOffset=this.cxScreen,this.cyScreenOffset=this.cyScreen;let e=this.cxScreen-this.nCols*this.cxScreenCell,t=this.cyScreen-this.nRows*this.cyScreenCell;e>0&&(this.xScreenOffset=e>>1,this.cxScreenOffset-=e),t>0&&(this.yScreenOffset=t>>1,this.cyScreenOffset-=t),(e||t)&&(this.contextScreen.fillStyle=this.canvasScreen.style.backgroundColor,this.contextScreen.fillRect(0,0,this.cxScreen,this.cyScreen))}checkMode(V){let R=!1,U=this.nMode,l=this.cardActive;if(l)if(l.nCard==Videox86.CARD.MDA)U=Videox86.MODE.MDA_80X25;else if(l.nCard>=Videox86.CARD.EGA){U=null;let V=l.cbMemory>>2,e=V>32768?32768:V,t=l.regGRCData[Card.GRC.MISC.INDX];if(null!=t){let T=l.regCRTData[Card.CRTC.EGA.MAXSCAN.INDX];switch(t&Card.GRC.MISC.MAPMEM){case Card.GRC.MISC.MAPA0128:l.addrBuffer=655360,l.sizeBuffer=V,U=(T&Card.CRTC.EGA.MAXSCAN.SLMASK)<=1?Videox86.MODE.UNKNOWN:this.nMonitorType==ChipSet.MONITOR.MONO?Videox86.MODE.CGA_80X25_BW:Videox86.MODE.CGA_80X25;break;case Card.GRC.MISC.MAPA064:l.addrBuffer=655360,l.sizeBuffer=V,U=this.nMonitorType==ChipSet.MONITOR.MONO?Videox86.MODE.EGA_640X350_MONO:Videox86.MODE.EGA_640X350;break;case Card.GRC.MISC.MAPB032:l.addrBuffer=720896,l.sizeBuffer=e,U=Videox86.MODE.MDA_80X25;break;case Card.GRC.MISC.MAPB832:l.addrBuffer=753664,l.sizeBuffer=e,U=this.nMonitorType==ChipSet.MONITOR.MONO?Videox86.MODE.CGA_80X25_BW:Videox86.MODE.CGA_80X25}let k=(l.regGRCData[Card.GRC.MODE.INDX]&(Card.GRC.MODE.COLOR256|Card.GRC.MODE.EVENODD))==(Card.GRC.MODE.COLOR256|Card.GRC.MODE.EVENODD);l.addrBuffer==this.addrBuffer&&l.sizeBuffer==this.sizeBuffer||(R=!0);let F=l.getCRTCReg(Card.CRTC.EGA.VTOTAL),W=l.regCRTData[Card.CRTC.EGA.MODECTRL.INDX],a=l.regSEQData[Card.SEQ.CLKMODE.INDX]&Card.SEQ.CLKMODE.DOTCLOCK;U!=Videox86.MODE.UNKNOWN&&(t&Card.GRC.MISC.GRAPHICS?655360==l.addrBuffer||k||W&Card.CRTC.EGA.MODECTRL.COMPAT_MODE?(l.regGRCData[Card.GRC.MODE.INDX]&Card.GRC.MODE.COLOR256?U=T&Card.CRTC.EGA.MAXSCAN.SLMASK?l.regCRTData[Card.CRTC.EGA.VDEND]<=143?l.regSEQData[Card.SEQ.MEMMODE.INDX]&Card.SEQ.MEMMODE.CHAIN4?Videox86.MODE.VGA_320X200:Videox86.MODE.VGA_320X200P:Videox86.MODE.VGA_320X240P:Videox86.MODE.VGA_320X400P:T&Card.CRTC.EGA.MAXSCAN.CONVERT400||F<350?U=a?Videox86.MODE.EGA_320X200:Videox86.MODE.EGA_640X200:F>=480&&(U=this.nMonitorType==ChipSet.MONITOR.MONO?Videox86.MODE.VGA_640X480_MONO:Videox86.MODE.VGA_640X480),DEBUG&&this.printf("checkMode(%#04X): nCRTCVertTotal=%d\n",U,F)):U=a?7-U:Videox86.MODE.CGA_640X200:U-=a?2:0)}}else l.regMode&Card.CGA.MODE.VIDEO_ENABLE?(l.regMode&Card.CGA.MODE.GRAPHIC_SEL?(U=l.regMode&Card.CGA.MODE.HIRES_BW?Videox86.MODE.CGA_640X200:Videox86.MODE.CGA_320X200_BW,l.regMode&Card.CGA.MODE.BW_SEL||(U-=1)):(U=l.regMode&Card.CGA.MODE._80X25?Videox86.MODE.CGA_80X25:Videox86.MODE.CGA_40X25,l.regMode&Card.CGA.MODE.BW_SEL&&(U-=1)),this.fOpacityReduced&&(this.canvasScreen.style.opacity="1",this.fOpacityReduced=!1)):!this.fOpacityReduced&&+this.opacityFlicker<1&&(this.fOpacityReduced=!0,this.canvasScreen.style.opacity=this.opacityFlicker,this.cpu.yieldCPU());else this.nMode=null,null==U&&(U=this.nModeDefault);return!!this.setMode(U,V,R)&&(this.setCardAccess(this.getCardAccess()),!0)}setMode(V,R,U){let l=null!=V&&(V!=this.nMode||R);if(l||U){DEBUG&&this.printf("setMode(%#04X,%b)\n",V,R),this.cUpdates=0,this.nMode=V,this.fRGBValid=!1;let U=this.cardActive||(V==Videox86.MODE.MDA_80X25?this.cardMono:this.cardColor);if(U!=this.cardActive||U.addrBuffer!=this.addrBuffer||U.sizeBuffer!=this.sizeBuffer){if(this.removeCursor(),this.addrBuffer){if(DEBUG&&this.printf("setMode(%#04X): removing %#010X bytes from %#010X\n",V,this.sizeBuffer,this.addrBuffer),!this.bus.removeMemory(this.addrBuffer,this.sizeBuffer))return!1;this.cardActive&&(this.cardActive.fActive=!1)}if(this.cardActive=U,U.fActive=!0,this.addrBuffer=U.addrBuffer,this.sizeBuffer=U.sizeBuffer,DEBUG&&this.printf("setMode(%#04X): adding %#010X bytes to %#010X\n",V,this.sizeBuffer,this.addrBuffer),!this.bus.addMemory(U.addrBuffer,U.sizeBuffer,Memoryx86.TYPE.VIDEO,U))return!1;if(U.nCard<Videox86.CARD.EGA){let V=this.addrBuffer,R=this.bus.getMemoryBlocks(V,this.sizeBuffer);for(;(V+=this.sizeBuffer)<U.addrBuffer+32768;)this.bus.setMemoryBlocks(V,this.sizeBuffer,R)}}this.setDimensions(),this.invalidateCellCache(),l&&this.updateScreen()}return!0}setPixel(V,R,U,l){let e=(R+U*V.width)*l.length;V.data[e]=l[0],V.data[e+1]=l[1],V.data[e+2]=l[2],V.data[e+3]=l[3]}initCellCache(){this.cBlinkVisible=-1,this.iCellCacheValid=0;let V=this.nCellCache;return void 0!==this.aCellCache&&this.aCellCache.length==V||(this.aCellCache=new Array(V)),V}invalidateCellCache(V,R,U){if(this.iCellCacheValid){if(!1===V){if(void 0!==R){if(R==U)return 0;let V=this.aCellCache,l=0,e=this.getFontDiff(255&R,255&U),t=this.getFontDiff(R>>8,U>>8);for(let R=0;R<V.length;R++){let U=V[R];if(U>=0){let T=2048&U?t:e;(V[R]|=T[255&U])<0&&(this.iCellCacheValid=1,l++)}}return l}return this.iCellCacheValid=1,0}this.fRGBValid=!1}return this.initCellCache()}updateChar(V,R,U,l){let e,t,T=255&U,k=U>>8,F=this.aFonts[this.nActiveFont];8&k&&this.nActiveFont!=this.nAlternateFont&&(F=this.aFonts[this.nAlternateFont],k&=-9);let W=15&k,a=k>>4&15;if(F.aColorMap){!(7&k)&&112&k&&(W|=7);let V=247&k;112==V||240==V?W=0:a=0,W=F.aColorMap[W],a=F.aColorMap[a]}if(l?(e=V*F.cxCell,t=R*F.cyCell,l.fillStyle=F.aCSSColors[a],l.fillRect(e,t,F.cxCell,F.cyCell)):(e=V*this.cxScreenCell+this.xScreenOffset,t=R*this.cyScreenCell+this.yScreenOffset,this.contextScreen.fillStyle=F.aCSSColors[a],this.contextScreen.fillRect(e,t,this.cxScreenCell,this.cyScreenCell)),MAXDEBUG&&this.printf(MESSAGE.VIDEO+MESSAGE.BUFFER,"updateCharBgnd(%d,%d,%d): filled %d,%d\n",V,R,T,e,t),k&Videox86.ATTRS.DRAW_FGND){let U=(15&T)*F.cxCell,k=(T>>4)*F.cyCell;MAXDEBUG&&this.printf(MESSAGE.VIDEO+MESSAGE.BUFFER,"updateCharFgnd(%d,%d,%d): draw from %d,%d (%d,%d) to %d,%d\n",V,R,T,U,k,F.cxCell,F.cyCell,e,t),l?l.drawImage(F.aCanvas[W],U,k,F.cxCell,F.cyCell,e,t,F.cxCell,F.cyCell):this.contextScreen.drawImage(F.aCanvas[W],U,k,F.cxCell,F.cyCell,e,t,this.cxScreenCell,this.cyScreenCell)}k&Videox86.ATTRS.DRAW_CURSOR&&(this.cyCursorWrap&&this.drawCursor(0,this.cyCursorWrap,e,t,W,F,l),this.drawCursor(this.yCursor,this.cyCursor,e,t,W,F,l))}drawCursor(V,R,U,l,e,t,T){T?(this.cyCursorCell&&this.cyCursorCell!==t.cyCell&&(V=Math.round(V*t.cyCell/this.cyCursorCell),R=Math.round(R*t.cyCell/this.cyCursorCell)),T.fillStyle=t.aCSSColors[e],T.fillRect(U,l+V,t.cxCell,R)):(this.cyCursorCell&&this.cyCursorCell!==this.cyScreenCell&&(V=Math.round(V*this.cyScreenCell/this.cyCursorCell),R=Math.round(R*this.cyScreenCell/this.cyCursorCell)),this.contextScreen.fillStyle=t.aCSSColors[e],this.contextScreen.fillRect(U,l+V,this.cxScreenCell,R))}latchStartAddress(){let V=this.cardActive,R=V.regCRTData[Card.CRTC.STARTLO];R|=(V.regCRTData[Card.CRTC.STARTHI]&V.addrMaskHigh)<<8,V.offStart!==R&&(V.offStart=R,this.invalidateCellCache(!1));let U=V==this.cardEGA?V.regCRTData[Card.CRTC.EGA.PRESCAN]&Card.CRTC.EGA.MAXSCAN.SLMASK:0;V.rowStart!==U&&(V.rowStart=U,this.nShiftUp=0,this.fOverBuffer&&(this.fShifted=!0,this.nShiftUp=U&Card.CRTC.EGA.MAXSCAN.SLMASK))}updateScreen(V=!1){if(!this.canvasScreen)return!1;if(!this.flags.powered)return!1;let R=this.cardActive;if(!R)return!1;let U=!1;if(R!==this.cardEGA?R.regMode&Card.CGA.MODE.VIDEO_ENABLE&&(U=!0):R.regATCIndx&Card.ATC.INDX_PAL_ENABLE&&(U=!0),!U&&!V)return!1;if(V)this.initCellCache();else if(void 0===this.aCellCache)return!1;let l=!1;V||++this.cUpdates%10||!(this.cBlinks>=0)||(this.cBlinks++,l=!0);let e=0,t=this.nCells,T=this.addrBuffer,k=T,F=k+this.sizeBuffer;this.nMode>=Videox86.MODE.VGA_320X200&&(T=k=655360,F=k+65536);let W=this.cbScreen;if(this.nColsLogical=this.nCols,this.nCard<Videox86.CARD.EGA)k+=R.offStart<<(this.nCardFont?1:0);else{let V=0,U=0,l=this.cardEGA.regSEQData[Card.SEQ.MEMMODE.INDX]&(Card.SEQ.MEMMODE.ALPHA|Card.SEQ.MEMMODE.SEQUENTIAL);l==Card.SEQ.MEMMODE.ALPHA?(V=U=1,this.nPointsPerByte=.5):l==(Card.SEQ.MEMMODE.ALPHA|Card.SEQ.MEMMODE.SEQUENTIAL)&&(U=1,this.nPointsPerByte=1),k+=R.offStart<<V,R.regCRTData[Card.CRTC.EGA.OFFSET]&&R.regCRTData[Card.CRTC.EGA.OFFSET]<<1!=R.regCRTData[Card.CRTC.EGA.HDEND]+1&&(this.nColsLogical=R.regCRTData[Card.CRTC.EGA.OFFSET]<<(U||(R.regCRTData[Card.CRTC.EGA.UNDERLINE.INDX]&Card.CRTC.EGA.UNDERLINE.DWORD?3:4)),W=(this.nColsLogical*(this.nRowsBuffer-1)+this.nColsBuffer)/this.nPointsPerByte|0,this.nRowsBuffer>this.nRows&&k+W>F&&(W=(this.nColsLogical*(this.nRows-1)+this.nColsBuffer)/this.nPointsPerByte|0))}let a=0,s=0;if(k+W>F)s=W,k>=F?(a=T+(k-F),W=0):(a=T,W=F-k,s-=W);else if(this.nCard>=Videox86.CARD.EGA){let V=R.getCRTCReg(Card.CRTC.EGA.VDEND)-R.getCRTCReg(Card.CRTC.EGA.LINECOMP);if(V>0){let R=this.aFonts[this.nActiveFont];R&&(V=V/R.cyChar|0),V>0&&(s=(this.nColsLogical*(V-1)+this.nColsBuffer)/this.nPointsPerByte|0,W-=this.nColsLogical*V/this.nPointsPerByte|0,a=T)}}let Z=this.cBlinkVisible,S=this.updateScreenCells(T,k,W,e,t,V,l);if(s){e+=S;let R=this.cBlinkVisible;Z<0&&(this.cBlinkVisible=-1),S+=this.updateScreenCells(T,a,s,e,t,V,l),this.cBlinkVisible+=R,this.bus.cleanMemory(a,s,!0)}return this.bus.cleanMemory(k,W,!0),S&&(this.iCellCacheValid=2),!0}updateScreenCells(V,R,U,l,e,t,T){let k=U*this.nPointsPerByte;k=Math.trunc(k/this.nColsLogical)*this.nColsBuffer+k%this.nColsLogical,k>e&&(k=e);let F=R+U;if(!t&&2==this.iCellCacheValid&&this.bus.cleanMemory(R,U))if(!T&&this.cBlinkVisible>=0){if(!this.fShifted)return k;l=e}else if(!this.cBlinkVisible){let V=this.iCellCursor-l;if(V<0){if(!this.fShifted)return k;l=e}else{let U=V/this.nColsBuffer|0,t=V%this.nColsBuffer;R+=U*this.nColsLogical+t<<1,e=(l+=V)+1}}return this.nActiveFont?this.updateScreenText(V,R,F,l,e):k=this.cbSplit?this.updateScreenGraphicsCGA(R,F):this.fColor256?this.updateScreenGraphicsVGA(V,R,F):this.updateScreenGraphicsEGA(V,R,F),this.fShifted=!1,k}updateScreenText(V,R,U,l,e){let t=this.aFonts[this.nActiveFont];if(!t)return 0;let T=this.cardActive,k=0,F=0,W=0,a=Videox86.ATTRS.DRAW_FGND<<8,s=1048575,Z=T.adwMemory,S=1/this.nPointsPerByte|0,h=T.nAccess&Card.WRITE.PAIRS?1:0,E=T.regMode&Card.MDA.MODE.BLINK_ENABLE;this.nCard>=Videox86.CARD.EGA&&(E=T.regATCData[Card.ATC.MODE.INDX]&Card.ATC.MODE.BLINK_ENABLE),E&&(W=Videox86.ATTRS.BGND_BLINK<<8,s&=~W,2&this.cBlinks||(s&=~a)),this.cBlinkVisible=0;let i=l%this.nColsBuffer,N=l/this.nColsBuffer|0,r=this.nColsLogical-this.nColsBuffer<<S-1;for(;R<U&&l<e;){let U=65535&Z[R-V>>>h];if(U|=a,U&W&&(this.cBlinkVisible++,U&=s),l==this.iCellCursor&&(U|=1&this.cBlinks?Videox86.ATTRS.DRAW_CURSOR<<8:0),this.iCellCacheValid&&U===this.aCellCache[l]||(this.updateChar(i,N,U,this.contextBuffer),this.aCellCache[l]=U,F++),k++,l++,R+=S,++i>=this.nColsBuffer){if(i=0,++N>=this.nRowsBuffer)break;R+=r}}if(this.contextBuffer&&(F||this.fShifted)){let V=0,R=0,U=this.cxBuffer,l=this.cyBuffer;if(this.fOverBuffer){let e=this.nShiftLeft,T=this.nShiftUp;this.fDoubleFont&&(e<<=1,T<<=1),V+=e,R+=T,U-=t.cxCell,l-=t.cyCell}this.contextScreen.drawImage(this.canvasBuffer,V,R,U,l,this.xScreenOffset,this.yScreenOffset,this.cxScreenOffset,this.cyScreenOffset)}return this.checkBlink(),k}updateScreenGraphicsCGA(V,R){let U=R-V>>1,l=0,e=this.nPointsPerCell,t=V,T=16==e?65536:196608,k=16==e?1:2,F=this.getCardColors(k),W=0,a=0,s=this.nCols,Z=0,S=this.nRows,h=0;for(this.cBlinkVisible=0;t<R;){let R=this.bus.getShortDirect(t);if(this.iCellCacheValid&&R===this.aCellCache[l])W+=e;else{this.aCellCache[l]=R;let V=R>>8|(255&R)<<8,U=T,t=16;W<s&&(s=W);for(let R=0;R<e;R++){let R=(V&(U>>=k))>>(t-=k);this.setPixel(this.imageBuffer,W++,a,F[R])}W>Z&&(Z=W),a<S&&(S=a),a>=h&&(h=a+1)}if(t+=2,l++,W>=this.nCols){if(W=0,a+=2,a>this.nRows)break;a==this.nRows&&(a=1,t=V+this.cbSplit)}}if(s<this.nCols){let V=Z-s,R=h-S;this.contextBuffer.putImageData(this.imageBuffer,0,0,s,S,V,R),this.contextScreen.drawImage(this.canvasBuffer,0,0,this.nCols,this.nRows,0,0,this.cxScreen,this.cyScreen)}return U}updateScreenGraphicsEGA(V,R,U){let l=0,e=U-R,t=this.getCardColors(),T=this.cardActive.adwMemory,k=0,F=0,W=this.nCols,a=0,s=this.nRows,Z=0,S=this.cardActive.regATCData[Card.ATC.HPAN.INDX]&Card.ATC.HPAN.SHIFT_LEFT,h=this.nColsLogical>this.nCols?this.nColsLogical-this.nCols-S>>3:0;for(this.cBlinkVisible=0;R<U;){let U,E=T[R++-V],i=8;if(S&&8e3!==e?k?(U=this.nCols-k,i>U&&(i=U)):(E<<=S,i-=S,this.iCellCacheValid=0):(this.iCellCacheValid&&E===this.aCellCache[l]?(k+=i,i=0):this.aCellCache[l]=E,l++),i){for(k<W&&(W=k),U=0;U<i;U++){let V=2155905152&E,R=Videox86.aEGADWToByte[V]||0;this.setPixel(this.imageBuffer,k++,F,t[R]),E<<=1}k>a&&(a=k),F<s&&(s=F),F>=Z&&(Z=F+1)}if(k>=this.nCols){if(k=0,++F>=this.nRows)break;R+=h}}if(S&&(e=0),W<this.nCols){let V=a-W,R=Z-s;this.contextBuffer.putImageData(this.imageBuffer,0,0,W,s,V,R),this.contextScreen.drawImage(this.canvasBuffer,0,0,this.nCols,this.nRows,0,0,this.cxScreen,this.cyScreen)}return e}updateScreenGraphicsVGA(V,R,U){let l=0,e=U-R,t=R,T=this.getCardColors(8),k=this.cardActive.adwMemory,F=0,W=0,a=this.nCols,s=0,Z=this.nRows,S=0,h=this.cardActive.regSEQData[Card.SEQ.MEMMODE.INDX]&Card.SEQ.MEMMODE.CHAIN4?4:1,E=this.cardActive.regATCData[Card.ATC.HPAN.INDX]&Card.ATC.HPAN.SHIFT_LEFT,i=this.nColsLogical>this.nCols?this.nColsLogical-this.nCols-E>>3:0;for(this.cBlinkVisible=0;t<U;){let R,U=k[t-V],e=4;if(E||(this.iCellCacheValid&&U===this.aCellCache[l]?(F+=e,e=0):this.aCellCache[l]=U,l++),e){for(F<a&&(a=F),R=0;R<e;R++)this.setPixel(this.imageBuffer,F++,W,T[255&U]),U>>>=8;F>s&&(s=F),W<Z&&(Z=W),W>=S&&(S=W+1)}if(t+=h,F>=this.nCols){if(F=0,++W>=this.nRows)break;t+=i}}if(E&&(e=0),a<this.nCols){let V=s-a,R=S-Z;this.contextBuffer.putImageData(this.imageBuffer,0,0,a,Z,V,R),this.contextScreen.drawImage(this.canvasBuffer,0,0,this.nCols,this.nRows,0,0,this.cxScreen,this.cyScreen)}return e}getRetraceBits(V){let R=0,U=this.cpu.getCycles(),l=U-V.nCyclesVertRetrace;if(V.nCard===Videox86.CARD.VGA&&V.regSEQData[Card.SEQ.CLKMODE.INDX]&Card.SEQ.CLKMODE.SCREEN_OFF&&(l>>>=1),l<0&&(V.nCyclesVertRetrace=U,l=0),l-=V.nCyclesVertPeriod-V.nCyclesVertActive,l<0)R|=Card.CGA.STATUS.VRETRACE|Card.CGA.STATUS.RETRACE;else{l%V.nCyclesHorzPeriod>V.nCyclesHorzActive&&(R|=Card.CGA.STATUS.RETRACE)}return R}inMDAIndx(V,R){return this.inCRTCIndx(this.cardMono,V,R)}outMDAIndx(V,R,U){this.outCRTCIndx(this.cardMono,V,R,U)}inMDAData(V,R){return this.inCRTCData(this.cardMono,V,R)}outMDAData(V,R,U){this.outCRTCData(this.cardMono,V,R,U)}inMDAMode(V,R){return this.inCardMode(this.cardMono,R)}outMDAMode(V,R,U){this.outCardMode(this.cardMono,R,U)}inMDAStatus(V,R){return this.inCardStatus(this.cardMono,R)}outFeat(V,R,U){this.cardEGA.regFeat=this.cardEGA.regFeat&~Card.FEAT_CTRL.BITS|R&Card.FEAT_CTRL.BITS,this.printIO(V,R,U,"FEAT")}inATCIndx(V,R){let U=this.cardEGA.regATCIndx;return R&&!this.messageEnabled()||this.printIO(Card.ATC.PORT,void 0,R,"ATC.INDX",U,!0),U}inATCData(V,R){let U=this.cardEGA.regATCData[this.cardEGA.regATCIndx&Card.ATC.INDX_MASK];return R&&!this.messageEnabled()||this.printIO(Card.ATC.PORT,void 0,R,"ATC."+this.cardEGA.asATCRegs[this.cardEGA.regATCIndx&Card.ATC.INDX_MASK],U,!0),U}outATC(V,R,U){let l=this.cardEGA,e=l.regATCIndx&Card.ATC.INDX_PAL_ENABLE;if(l.fATCData){l.fATCData=!1;let t=l.regATCIndx&Card.ATC.INDX_MASK;if(t>=Card.ATC.PALETTE_REGS||!e){let e=l.regATCData[t]!==R;(Videox86.TRAPALL||e)&&(U&&!this.messageEnabled()||this.printIO(V,R,U,"ATC."+l.asATCRegs[t],void 0,!0)),e&&(l.regATCData[t]=R,t==Card.ATC.HPAN.INDX?this.fOverBuffer&&(this.fShifted=!0,this.nShiftLeft=R&Card.ATC.HPAN.SHIFT_LEFT):t!=Card.ATC.OVERSCAN.INDX&&this.invalidateCellCache(!0))}}else l.regATCIndx=R,this.printIO(V,R,U,"ATC.INDX"),l.fATCData=!0,R&Card.ATC.INDX_PAL_ENABLE&&!e&&this.buildFont(!0)&&this.updateScreen(!0)}inStatus0(V,R){let U=0;if(this.nCard==Videox86.CARD.EGA){let V=3-((this.cardEGA.regMisc&Card.MISC.CLOCK_SELECT)>>2);U=(this.bEGASwitches&1<<V)<<Card.STATUS0.SWSENSE_SHIFT-V}else{let V=this.cardEGA.regDACData[0];45!=(63&V)&&2880!=(4032&V)&&184320!=(258048&V)&&(U|=Card.STATUS0.SWSENSE)}let l=this.cardEGA.regStatus0&~Card.STATUS0.SWSENSE|U;return this.cardEGA.regStatus0=l,this.printIO(Card.STATUS0.PORT,void 0,R,"STATUS0",l),l}outMisc(V,R,U){this.cardEGA.regMisc=R,this.enableEGA(),this.printIO(Card.MISC.PORT_WRITE,R,U,"MISC")}inVGAEnable(V,R){let U=this.cardEGA.regVGAEnable;return this.printIO(Card.VGA_ENABLE.PORT,void 0,R,"VGA_ENABLE",U),U}outVGAEnable(V,R,U){this.cardEGA.regVGAEnable=R,this.printIO(Card.VGA_ENABLE.PORT,R,U,"VGA_ENABLE")}inSEQIndx(V,R){let U=this.cardEGA.regSEQIndx;return this.printIO(Card.SEQ.INDX.PORT,void 0,R,"SEQ.INDX",U),U}outSEQIndx(V,R,U){this.cardEGA.regSEQIndx=R,this.printIO(Card.SEQ.INDX.PORT,R,U,"SEQ.INDX")}inSEQData(V,R){let U=this.cardEGA.regSEQData[this.cardEGA.regSEQIndx];return R&&!this.messageEnabled()||this.printIO(Card.SEQ.DATA.PORT,void 0,R,"SEQ."+this.cardEGA.asSEQRegs[this.cardEGA.regSEQIndx],U,!0),U}outSEQData(V,R,U){let l;switch((Videox86.TRAPALL||this.cardEGA.regSEQData[this.cardEGA.regSEQIndx]!==R)&&(U&&!this.messageEnabled()||this.printIO(Card.SEQ.DATA.PORT,R,U,"SEQ."+this.cardEGA.asSEQRegs[this.cardEGA.regSEQIndx],void 0,!0),this.cardEGA.regSEQData[this.cardEGA.regSEQIndx]=R),this.cardEGA.regSEQIndx){case Card.SEQ.MAPMASK.INDX:this.cardEGA.nSeqMapMask=Videox86.aEGAByteToDW[R&Card.SEQ.MAPMASK.MAPS];break;case Card.SEQ.CHARMAP.INDX:if(l=this.getSelectedFonts(),l!=this.nFontSelect){DEBUG&&((255&l)==l>>8?this.messageEnabled(MESSAGE.VIDEO+MESSAGE.PORT)&&this.printf("outSEQData(%#04X): font selection changing from %#06X to %#06X\n",R,this.nFontSelect,l):(this.printf("outSEQData(%#04X): low font (%#04X) differs from high font (%#04X)\n",R,255&l,l>>8),this.cpu.stopCPU()));let V=this.nFontSelect;this.buildFont(!0),this.invalidateCellCache(!1,l,V)}break;case Card.SEQ.MEMMODE.INDX:this.setCardAccess(this.getCardAccess())}}inDACMask(V,R){let U=this.cardEGA.regDACMask;return R&&!this.messageEnabled()||this.printIO(Card.DAC.MASK.PORT,void 0,R,"DAC.MASK",U,!0),U}outDACMask(V,R,U){(Videox86.TRAPALL||this.cardEGA.regDACMask!==R)&&(U&&!this.messageEnabled()||this.printIO(Card.DAC.MASK.PORT,R,U,"DAC.MASK",void 0,!0),this.cardEGA.regDACMask=R)}inDACState(V,R){let U=this.cardEGA.regDACState;return R&&!this.messageEnabled()||this.printIO(Card.DAC.STATE.PORT,void 0,R,"DAC.STATE",U,!0),U}outDACRead(V,R,U){U&&!this.messageEnabled()||this.printIO(Card.DAC.ADDR.PORT_READ,R,U,"DAC.READ",void 0,!0),this.cardEGA.regDACAddr=R,this.cardEGA.regDACState=Card.DAC.STATE.MODE_READ,this.cardEGA.regDACShift=0}outDACWrite(V,R,U){U&&!this.messageEnabled()||this.printIO(Card.DAC.ADDR.PORT_WRITE,R,U,"DAC.WRITE",void 0,!0),this.cardEGA.regDACAddr=R,this.cardEGA.regDACState=Card.DAC.STATE.MODE_WRITE,this.cardEGA.regDACShift=0}inDACData(V,R){let U=this.cardEGA.regDACData[this.cardEGA.regDACAddr]>>this.cardEGA.regDACShift&63;return R&&!this.messageEnabled()||this.printIO(Card.DAC.DATA.PORT,void 0,R,"DAC.DATA["+StrLib.toHexByte(this.cardEGA.regDACAddr)+"]["+StrLib.toHexByte(this.cardEGA.regDACShift)+"]",U,!0),this.cardEGA.regDACShift+=6,this.cardEGA.regDACShift>12&&(this.cardEGA.regDACShift=0,this.cardEGA.regDACAddr=this.cardEGA.regDACAddr+1&Card.DAC.TOTAL_REGS-1),U}outDACData(V,R,U){let l=this.cardEGA.regDACData[this.cardEGA.regDACAddr];U&&!this.messageEnabled()||this.printIO(Card.DAC.DATA.PORT,R,U,"DAC.DATA["+StrLib.toHexByte(this.cardEGA.regDACAddr)+"]["+StrLib.toHexByte(this.cardEGA.regDACShift)+"]",void 0,!0);let e=l&~(63<<this.cardEGA.regDACShift)|(63&R)<<this.cardEGA.regDACShift;l!==e&&(this.cardEGA.regDACData[this.cardEGA.regDACAddr]=e,this.invalidateCellCache(!0)),this.cardEGA.regDACShift+=6,this.cardEGA.regDACShift>12&&(this.cardEGA.regDACShift=0,this.cardEGA.regDACAddr=this.cardEGA.regDACAddr+1&Card.DAC.TOTAL_REGS-1)}inVGAFeat(V,R){let U=this.cardEGA.regFeat;return this.printIO(Card.FEAT_CTRL.PORT_READ,void 0,R,"FEAT",U),U}outGRCPos2(V,R,U){this.cardEGA.regGRCPos2=R,this.printIO(Card.GRC.POS2_PORT,R,U,"GRC2")}inVGAMisc(V,R){let U=this.cardEGA.regMisc;return this.printIO(Card.MISC.PORT_READ,void 0,R,"MISC",U),U}outGRCPos1(V,R,U){this.cardEGA.regGRCPos1=R,this.printIO(Card.GRC.POS1_PORT,R,U,"GRC1")}inGRCIndx(V,R){let U=this.cardEGA.regGRCIndx;return this.printIO(Card.GRC.INDX.PORT,void 0,R,"GRC.INDX",U),U}outGRCIndx(V,R,U){this.cardEGA.regGRCIndx=R,this.printIO(Card.GRC.INDX.PORT,R,U,"GRC.INDX")}inGRCData(V,R){let U=this.cardEGA.regGRCData[this.cardEGA.regGRCIndx];return R&&!this.messageEnabled()||this.printIO(Card.GRC.DATA.PORT,void 0,R,"GRC."+this.cardEGA.asGRCRegs[this.cardEGA.regGRCIndx],U),U}outGRCData(V,R,U){switch((Videox86.TRAPALL||this.cardEGA.regGRCData[this.cardEGA.regGRCIndx]!==R)&&(U&&!this.messageEnabled()||this.printIO(Card.GRC.DATA.PORT,R,U,"GRC."+this.cardEGA.asGRCRegs[this.cardEGA.regGRCIndx]),this.cardEGA.regGRCData[this.cardEGA.regGRCIndx]=R),this.cardEGA.regGRCIndx){case Card.GRC.SRESET.INDX:this.cardEGA.nSetMapData=Videox86.aEGAByteToDW[15&R],this.cardEGA.nSetMapBits=this.cardEGA.nSetMapData&~this.cardEGA.nSetMapMask;break;case Card.GRC.ESRESET.INDX:this.cardEGA.nSetMapMask=~Videox86.aEGAByteToDW[15&R],this.cardEGA.nSetMapBits=this.cardEGA.nSetMapData&~this.cardEGA.nSetMapMask;break;case Card.GRC.COLORCOMP.INDX:this.cardEGA.nColorCompare=-2139062144&Videox86.aEGAByteToDW[15&R];break;case Card.GRC.DATAROT.INDX:case Card.GRC.MODE.INDX:this.setCardAccess(this.getCardAccess());break;case Card.GRC.READMAP.INDX:this.cardEGA.nReadMapShift=(R&Card.GRC.READMAP.NUM)<<3;break;case Card.GRC.MISC.INDX:this.checkMode();break;case Card.GRC.COLORDC.INDX:this.cardEGA.nColorDontCare=-2139062144&Videox86.aEGAByteToDW[15&R];break;case Card.GRC.BITMASK.INDX:this.cardEGA.nBitMapMask=R|R<<8|R<<16|R<<24}}inCGAIndx(V,R){return this.inCRTCIndx(this.cardColor,V,R)}outCGAIndx(V,R,U){this.outCRTCIndx(this.cardColor,V,R,U)}inCGAData(V,R){return this.inCRTCData(this.cardColor,V,R)}outCGAData(V,R,U){this.outCRTCData(this.cardColor,V,R,U)}inCGAMode(V,R){return this.inCardMode(this.cardColor,R)}outCGAMode(V,R,U){this.outCardMode(this.cardColor,R,U)}inCGAColor(V,R){let U=this.cardColor.regColor;return R&&!this.messageEnabled()||this.printIO(V,void 0,R,this.cardColor.type+".COLOR",U),U}outCGAColor(V,R,U){U&&!this.messageEnabled()||this.printIO(V,R,U,this.cardColor.type+".COLOR"),this.cardColor.regColor!==R&&(this.cardColor.regColor=R,this.invalidateCellCache(!0))}inCGAStatus(V,R){return this.inCardStatus(this.cardColor,R)}inCRTCIndx(V,R,U){let l;return V.fActive&&(l=V.regCRTIndx),this.printIO(R,void 0,U,"CRTC.INDX",l),l}outCRTCIndx(V,R,U,l){V.regCRTPrev=V.regCRTIndx,V.regCRTIndx=U&Card.CGA.CRTC.INDX.MASK,this.printIO(R,U,l,"CRTC.INDX")}inCRTCData(V,R,U){let l;return(V.fActive||"vdu"==V.video.model)&&V.regCRTIndx<V.nCRTCRegs&&(l=V.regCRTData[V.regCRTIndx]),U&&!this.messageEnabled()||this.printIO(R,void 0,U,"CRTC."+V.asCRTCRegs[V.regCRTIndx],l,!0),l}outCRTCData(V,R,U,l){if(V.regCRTIndx<V.nCRTCRegs){if(V.regCRTIndx==Card.CRTC.CURSCAN||V.regCRTIndx==Card.CRTC.CURSCANB){let R=U&Card.CRTCMASKS[Card.CRTC.MAXSCAN],l=V.regCRTData[Card.CRTC.MAXSCAN]&Card.CRTCMASKS[Card.CRTC.MAXSCAN];if(R>l&&(R=V.regCRTData[1^V.regCRTIndx]&Card.CRTCMASKS[Card.CRTC.MAXSCAN],R>l))return void(DEBUG&&this.printf("outCRTCData(%#04X): ignoring write to CRTC[%#04X] since %#04X > %#04X\n",U,V.regCRTIndx,R,l))}let e=V.regCRTData[V.regCRTIndx]!==U;(e||Videox86.TRAPALL)&&(l&&!this.messageEnabled()||this.printIO(R,U,l,"CRTC."+V.asCRTCRegs[V.regCRTIndx]),V.regCRTData[V.regCRTIndx]=U),V==this.cardEGA&&(V.regCRTIndx==Card.CRTC.EGA.VREND.INDX?this.nIRQ&&(U&Card.CRTC.EGA.VREND.UNCLEAR_VRINT||this.chipset&&this.chipset.clearIRR(this.nIRQ)):e&&V.regCRTIndx==Card.CRTC.EGA.LINECOMP&&this.invalidateCellCache(!1)),e&&((V.regCRTIndx==Card.CRTC.MAXSCAN&&V.regCRTPrev!=Card.CRTC.MAXSCAN-1||V.regCRTIndx==Card.CRTC.EGA.VDEND&&223==U)&&this.checkMode(!0),this.checkCursor())}else DEBUG&&this.printf("outCRTCData(%#04X): ignoring unexpected write to CRTC[%#04X]\n",U,V.regCRTIndx)}inCardMode(V,R){let U=V.regMode;return this.printIO(V.port+4,void 0,R,"MODE",U),U}outCardMode(V,R,U){this.printIO(V.port+4,R,U,"MODE"),(V.regMode^R)&Card.MDA.MODE.BLINK_ENABLE&&(V.video.iCellCacheValid=0),V.regMode=R,this.checkMode()}inCardStatus(V,R){let U=this.getRetraceBits(V);return V===this.cardEGA?(U|=V.regStatus&Card.STATUS1.DIAGNOSTIC^Card.STATUS1.DIAGNOSTIC,V.fATCData=!1):U|=240,V.regStatus=U,MAXDEBUG&&this.printIO(V.port+6,void 0,R,V===this.cardEGA?"STATUS1":"STATUS",U),U}dumpVideo(V){if(DEBUGGER){let R=this.dbg;if(!this.cardActive)return void R.printf("no active video card\n");if(V[0])return void this.cardActive.dumpVideoBuffer(V);R.printf("    MODE: %#04X\n",this.nMode),R.printf("  BUFFER: %#010X\n",this.cardActive.addrBuffer),this.cardActive.dumpVideoCard()}}static init(){let V=Component.getElementsByClass(APPCLASS,"video");for(let R=0;R<V.length;R++){let U,l,e=V[R],t=Component.getComponentParms(e),T=Component.getElementsByClass("pcjs-canvas","",e);T&&T.length?U=T[0]:globals.browser&&(U=document.createElement("canvas"),U&&e.appendChild(U)),U&&U.getContext?l=U.getContext("2d"):e.innerHTML="<br>Missing &lt;canvas&gt; support. Please try a newer web browser.";let k,F=+(WebLib.getURLParm("aspect")||t.aspect);F&&F>=.3&&F<=3.33&&(WebLib.addPageEvent("resize",function(V,R,U){return function(){R.style.height=(V.clientWidth/U|0)+"px"}}(e,U,F)),globals.window.onresize());let W=Component.getElementsByClass("pcjs-overlay","",e);if(W&&W.length?k=W[0]:globals.browser&&(k=document.createElement("textarea"),k.setAttribute("class","pcjs-overlay"),e.appendChild(k)),k){k.setAttribute("autocapitalize","off"),k.setAttribute("autocorrect","off"),k.setAttribute("spellcheck","false");let V=function(){k.style.fontSize=(.01875*k.clientWidth|0)+"px"};V(),WebLib.addPageEvent("resize",V)}let a,s=Component.getElementsByClass(APPCLASS+"-video-diagnostic");e.style&&(a=e);let Z=new Videox86(t,U,l,k,a,s);Component.bindComponentControls(Z,e,APPCLASS)}}static aMDAPortInput={944:Videox86.prototype.inMDAIndx,945:Videox86.prototype.inMDAData,946:Videox86.prototype.inMDAIndx,947:Videox86.prototype.inMDAData,948:Videox86.prototype.inMDAIndx,949:Videox86.prototype.inMDAData,950:Videox86.prototype.inMDAIndx,951:Videox86.prototype.inMDAData,952:Videox86.prototype.inMDAMode,954:Videox86.prototype.inMDAStatus};static aMDAPortOutput={944:Videox86.prototype.outMDAIndx,945:Videox86.prototype.outMDAData,946:Videox86.prototype.outMDAIndx,947:Videox86.prototype.outMDAData,948:Videox86.prototype.outMDAIndx,949:Videox86.prototype.outMDAData,950:Videox86.prototype.outMDAIndx,951:Videox86.prototype.outMDAData,952:Videox86.prototype.outMDAMode};static aCGAPortInput={980:Videox86.prototype.inCGAIndx,981:Videox86.prototype.inCGAData,984:Videox86.prototype.inCGAMode,985:Videox86.prototype.inCGAColor,986:Videox86.prototype.inCGAStatus};static aCGAPortOutput={980:Videox86.prototype.outCGAIndx,981:Videox86.prototype.outCGAData,984:Videox86.prototype.outCGAMode,985:Videox86.prototype.outCGAColor};static aEGAPortInput={960:Videox86.prototype.inATCIndx,961:Videox86.prototype.inATCData,962:Videox86.prototype.inStatus0,964:Videox86.prototype.inSEQIndx,965:Videox86.prototype.inSEQData,974:Videox86.prototype.inGRCIndx,975:Videox86.prototype.inGRCData};static aEGAPortOutput={954:Videox86.prototype.outFeat,960:Videox86.prototype.outATC,961:Videox86.prototype.outATC,962:Videox86.prototype.outMisc,964:Videox86.prototype.outSEQIndx,965:Videox86.prototype.outSEQData,970:Videox86.prototype.outGRCPos2,972:Videox86.prototype.outGRCPos1,974:Videox86.prototype.outGRCIndx,975:Videox86.prototype.outGRCData,986:Videox86.prototype.outFeat};static aVGAPortInput={963:Videox86.prototype.inVGAEnable,966:Videox86.prototype.inDACMask,967:Videox86.prototype.inDACState,969:Videox86.prototype.inDACData,970:Videox86.prototype.inVGAFeat,972:Videox86.prototype.inVGAMisc};static aVGAPortOutput={963:Videox86.prototype.outVGAEnable,966:Videox86.prototype.outDACMask,967:Videox86.prototype.outDACRead,968:Videox86.prototype.outDACWrite,969:Videox86.prototype.outDACData}}WebLib.onInit(Videox86.init);
class ParallelPort extends Component{static DATA={REG:0};static STATUS={REG:1,ALWAYS_SET:7,NERR:8,SELECT:16,PAPER:32,NACK:64,NBUSY:128};static CONTROL={REG:2,NSTROBE:1,NAUTOFEED:2,INIT:4,NSELECT:8,IRQ_ENABLE:16,ALWAYS_SET:224};static{ParallelPort.aPortInput={0:ParallelPort.prototype.inData,1:ParallelPort.prototype.inStatus,2:ParallelPort.prototype.inControl},ParallelPort.aPortOutput={0:ParallelPort.prototype.outData,2:ParallelPort.prototype.outControl}}constructor(V){switch(super("ParallelPort",V,MESSAGE.PARALLEL),this.iAdapter=V.adapter,this.iAdapter){case 1:this.portBase=956,this.nIRQ=ChipSet.IRQ.LPT1;break;case 2:this.portBase=888,this.nIRQ=ChipSet.IRQ.LPT1;break;case 3:this.portBase=632,this.nIRQ=ChipSet.IRQ.LPT2;break;default:return void Component.warning("Unrecognized parallel adapter #"+this.iAdapter)}this.consoleBuffer=null,this.controlBuffer=null;let R=V.binding;"console"==R?this.consoleBuffer="":Component.bindExternalControl(this,R)}setBinding(V,R,U,l){return(!V||"textarea"==V)&&(this.bindings[R]=this.controlBuffer=U,!0)}initBus(V,R,U,l){this.bus=R,this.cpu=U,this.dbg=l,this.chipset=V.getMachineComponent("ChipSet"),R.addPortInputTable(this,ParallelPort.aPortInput,this.portBase),R.addPortOutputTable(this,ParallelPort.aPortOutput,this.portBase),this.setReady()}powerUp(V,R){if(!R)if(V&&this.restore){if(!this.restore(V))return!1}else this.reset();return!0}powerDown(V,R){return!V||this.save()}reset(){this.initState()}save(){let V=new State(this);return V.set(0,this.saveRegisters()),V.data()}restore(V){return this.initState(V[0])}initState(V){let R=0;return void 0===V&&(V=[0,ParallelPort.STATUS.NERR|ParallelPort.STATUS.ALWAYS_SET,ParallelPort.CONTROL.ALWAYS_SET]),this.bData=V[R++],this.bStatus=V[R++],this.bControl=V[2],!0}saveRegisters(){let V=0,R=[];return R[V++]=this.bData,R[V++]=this.bStatus,R[2]=this.bControl,R}inData(V,R){let U=this.bData;return this.printIO(V,void 0,R,"DATA",U),U}inStatus(V,R){let U=this.bStatus;return this.bStatus|=ParallelPort.STATUS.NACK|ParallelPort.STATUS.NBUSY,this.printIO(V,void 0,R,"STAT",U),this.updateIRR(),U}inControl(V,R){let U=this.bControl;return this.printIO(V,void 0,R,"CTRL",U),U}outData(V,R,U){let l=this;this.printIO(V,R,U,"DATA"),this.bData=R,this.cpu.nonCPU((function(){return!!l.transmitByte(R)&&(l.bStatus|=ParallelPort.STATUS.NERR,l.bStatus&=~(ParallelPort.STATUS.NACK|ParallelPort.STATUS.NBUSY),!0)})),this.updateIRR()}outControl(V,R,U){this.printIO(V,R,U,"CTRL"),this.bControl=R|ParallelPort.CONTROL.ALWAYS_SET,this.updateIRR()}updateIRR(){this.chipset&&this.nIRQ&&(this.bControl&ParallelPort.CONTROL.IRQ_ENABLE&&!(this.bStatus&ParallelPort.STATUS.NACK)?this.chipset.setIRR(this.nIRQ):this.chipset.clearIRR(this.nIRQ))}transmitByte(V){let R=!1;return this.printf("transmitByte(%#04x)\n",V),this.controlBuffer?(13==V||(8==V?this.controlBuffer.value=this.controlBuffer.value.slice(0,-1):(V>=128&&(V<160?V-=128:V=V<224?42:32),this.controlBuffer.value+=StrLib.toASCIICode(V),this.controlBuffer.scrollTop=this.controlBuffer.scrollHeight)),R=!0):null!=this.consoleBuffer&&((10==V||this.consoleBuffer.length>=1024)&&(this.print(this.consoleBuffer),this.consoleBuffer=""),10!=V&&(this.consoleBuffer+=String.fromCharCode(V)),R=!0),R}static init(){let V=Component.getElementsByClass(APPCLASS,"parallel");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new ParallelPort(l);Component.bindComponentControls(e,U,APPCLASS)}}}WebLib.onInit(ParallelPort.init);
class SerialPort extends Component{static DLL={REG:0};static THR={REG:0};static DL_DEFAULT=384;static RBR={REG:0};static IER={REG:1,RBR_AVAIL:1,THR_EMPTY:2,LSR_DELTA:4,MSR_DELTA:8,UNUSED:240};static DLM={REG:1};static IIR={REG:2,NO_INT:1,INT_LSR:6,INT_RBR:4,INT_THR:2,INT_MSR:0,INT_BITS:6,UNUSED:248};static LCR={REG:3,DATA_5BITS:0,DATA_6BITS:1,DATA_7BITS:2,DATA_8BITS:3,STOP_BITS:4,PARITY_BIT:8,PARITY_EVEN:16,PARITY_STICK:32,BREAK:64,DLAB:128};static MCR={REG:4,DTR:1,RTS:2,OUT1:4,OUT2:8,LOOPBACK:16,UNUSED:224};static LSR={REG:5,DR:1,OE:2,PE:4,FE:8,BI:16,THRE:32,TSRE:64,UNUSED:128};static MSR={REG:6,DCTS:1,DDSR:2,TERI:4,DRLSD:8,CTS:16,DSR:32,RI:64,RLSD:128};static SCR={REG:7};static{SerialPort.aPortInput={0:SerialPort.prototype.inRBR,1:SerialPort.prototype.inIER,2:SerialPort.prototype.inIIR,3:SerialPort.prototype.inLCR,4:SerialPort.prototype.inMCR,5:SerialPort.prototype.inLSR,6:SerialPort.prototype.inMSR},SerialPort.aPortOutput={0:SerialPort.prototype.outTHR,1:SerialPort.prototype.outIER,3:SerialPort.prototype.outLCR,4:SerialPort.prototype.outMCR}}constructor(V){switch(super("SerialPort",V,MESSAGE.SERIAL),this.iAdapter=+V.adapter,this.iAdapter){case 1:this.portBase=1016,this.nIRQ=ChipSet.IRQ.COM1;break;case 2:this.portBase=760,this.nIRQ=ChipSet.IRQ.COM2;break;default:if("test"!=this.idComponent)return void Component.warning("Unrecognized serial adapter #"+this.iAdapter)}this.consoleBuffer=null,this.controlBuffer=null,this.tabSize=+V.tabSize||0,this.charBOL=+V.charBOL||0,this.charPrev=0,this.iLogicalCol=0,this.bMSRInit=SerialPort.MSR.CTS|SerialPort.MSR.DSR,this.fNullModem=!0;let R=V.binding;"console"==R?this.consoleBuffer="":Component.bindExternalControl(this,R),this.sDataReceived="",this.connection=this.sendData=this.updateStatus=null,this.fAutoFlow=!1,this.exports={bind:this.bindConnection,connect:this.initConnection,receiveData:this.receiveData,receiveStatus:this.receiveStatus}}bindConnection(V,R,U=!1){return!this.connection&&(this.connection=V,this.sendData=R,this.fAutoFlow=U,!0)}bindMouse(V,R,U){let l=null;return V!=this.idComponent||this.connection||(this.connection=R,this.updateStatus=U,this.fNullModem=!1,l=this),l}setBinding(V,R,U,l){if(!V||"textarea"==V){let V=this;return this.bindings[R]=this.controlBuffer=U,this.controlBuffer.onkeydown=function(R){let U=(R=R||window.event).keyCode;return(8===U||R.ctrlKey&&U>=65&&U<=90)&&(R.preventDefault&&R.preventDefault(),U>64&&(U-=64),V.receiveData(U)),!0},this.controlBuffer.onkeypress=function(R){let U=(R=R||window.event).which||R.keyCode;return V.receiveData(U),R.preventDefault&&R.preventDefault(),!0},this.controlBuffer.removeAttribute("readonly"),!0}return!1}initBus(V,R,U,l){if(this.cmp=V,this.iAdapter){this.bus=R,this.cpu=U,this.dbg=l;let e=this;this.timerReceiveNext=this.cpu.addTimer(this.id+".receive",(function(){e.receiveData()})),this.timerTransmitNext=this.cpu.addTimer(this.id+".transmit",(function(){e.transmitData()})),this.chipset=V.getMachineComponent("ChipSet"),R.addPortInputTable(this,SerialPort.aPortInput,this.portBase),R.addPortOutputTable(this,SerialPort.aPortOutput,this.portBase)}this.setReady()}initConnection(V){if(!this.connection){let R=this.cmp.getMachineParm("connection");if(R){let U=R.split("->");if(2==U.length){let R=StrLib.trim(U[0]);if(R!=this.idComponent)return;let l=StrLib.trim(U[1]);if(this.connection=Component.getComponentByID(l,!1),this.connection){let U=this.connection.exports;if(U){let e=U.connect;if(e&&e.call(this.connection,this.fNullModem),this.sendData=U.receiveData,this.sendData)return this.fNullModem=V,this.updateStatus=U.receiveStatus,void this.printf(MESSAGE.STATUS,"Connected %s.%s to %s\n",this.idMachine,R,l)}}}this.printf(MESSAGE.STATUS,"Unable to establish connection: %s\n",R)}}}powerUp(V,R){if(!R)if(this.initConnection(this.fNullModem),V&&this.restore){if(!this.restore(V))return!1}else this.reset();return!0}powerDown(V,R){return!V||this.save()}reset(){this.initState()}save(){let V=new State(this);return V.set(0,this.saveRegisters()),V.data()}restore(V){return this.initState(V[0])}initState(V){let R=0;return void 0===V&&(V=[0,0,SerialPort.DL_DEFAULT,0,SerialPort.IIR.NO_INT,0,0,SerialPort.LSR.THRE|SerialPort.LSR.TSRE,this.bMSRInit,[]]),this.bRBR=V[R++],this.bTHR=V[R++],this.wDL=V[R++],this.bIER=V[R++],this.bIIR=V[R++],this.bLCR=V[R++],this.bMCR=V[R++],this.bLSR=V[R++],this.bMSR=V[R++],this.abReceive=V[9],!0}saveRegisters(){let V=0,R=[];return R[V++]=this.bRBR,R[V++]=this.bTHR,R[V++]=this.wDL,R[V++]=this.bIER,R[V++]=this.bIIR,R[V++]=this.bLCR,R[V++]=this.bMCR,R[V++]=this.bLSR,R[V++]=this.bMSR,R[9]=this.abReceive,R}getBaudTimeout(){return 1e3/(1843200/((this.wDL||1)<<7))|0}receiveData(V,R){if(R&&(this.abReceive=[]),null!=V)if("number"==typeof V)this.abReceive.push(V);else if("string"==typeof V)for(let R=0;R<V.length;R++)this.abReceive.push(V.charCodeAt(R));else this.abReceive=this.abReceive.concat(V);return this.advanceRBR(),!0}receiveStatus(V){let R=this.bMSR;this.bMSR&=~(SerialPort.MSR.CTS|SerialPort.MSR.DSR),V&RS232.CTS.MASK&&(this.bMSR|=SerialPort.MSR.CTS|SerialPort.MSR.DCTS),V&RS232.DSR.MASK&&(this.bMSR|=SerialPort.MSR.DSR|SerialPort.MSR.DDSR),R!=this.bMSR&&this.updateIIR()}advanceRBR(){this.abReceive.length>0&&!(this.bLSR&SerialPort.LSR.DR)&&(!this.fAutoFlow||this.bMCR&SerialPort.MCR.RTS)&&(this.bRBR=this.abReceive.shift(),this.bLSR|=SerialPort.LSR.DR,this.abReceive.length&&this.cpu&&this.cpu.setTimer(this.timerReceiveNext,this.getBaudTimeout())),this.updateIIR()}inRBR(V,R){let U=this.bLCR&SerialPort.LCR.DLAB?255&this.wDL:this.bRBR;return this.printIO(V,void 0,R,this.bLCR&SerialPort.LCR.DLAB?"DLL":"RBR",U),this.bLSR&=~SerialPort.LSR.DR,this.advanceRBR(),U}inIER(V,R){let U=this.bLCR&SerialPort.LCR.DLAB?this.wDL>>8:this.bIER;return this.printIO(V,void 0,R,this.bLCR&SerialPort.LCR.DLAB?"DLM":"IER",U),U}inIIR(V,R){let U=this.bIIR;return U==SerialPort.IIR.INT_THR&&(this.bIIR=SerialPort.IIR.NO_INT),this.printIO(V,void 0,R,"IIR",U),U}inLCR(V,R){let U=this.bLCR;return this.printIO(V,void 0,R,"LCR",U),U}inMCR(V,R){let U=this.bMCR;return this.printIO(V,void 0,R,"MCR",U),U}inLSR(V,R){let U=this.bLSR;return this.printIO(V,void 0,R,"LSR",U),U}inMSR(V,R){let U=this.bMSR;return this.bMSR&=~(SerialPort.MSR.DCTS|SerialPort.MSR.DDSR),this.printIO(V,void 0,R,"MSR",U),U}outTHR(V,R,U){let l=this;this.printIO(V,R,U,this.bLCR&SerialPort.LCR.DLAB?"DLL":"THR"),this.bLCR&SerialPort.LCR.DLAB?this.wDL=-256&this.wDL|R:(this.bTHR=R,this.bLSR&=~(SerialPort.LSR.THRE|SerialPort.LSR.TSRE),this.cpu.nonCPU((function(){return l.transmitByte(R)})),this.cpu.setTimer(this.timerTransmitNext,this.getBaudTimeout()),this.updateIIR())}outIER(V,R,U){this.printIO(V,R,U,this.bLCR&SerialPort.LCR.DLAB?"DLM":"IER"),this.bLCR&SerialPort.LCR.DLAB?this.wDL=255&this.wDL|R<<8:this.bIER=R}outLCR(V,R,U){this.printIO(V,R,U,"LCR"),this.bLCR=R}outMCR(V,R,U){let l=R^this.bMCR;if(this.printIO(V,R,U,"MCR"),this.bMCR=R,l&(SerialPort.MCR.DTR|SerialPort.MCR.RTS)){if(this.updateStatus){let V=0;this.fNullModem?(V|=R&SerialPort.MCR.RTS?RS232.CTS.MASK:0,V|=R&SerialPort.MCR.DTR?RS232.DSR.MASK|RS232.CD.MASK:0):(V|=R&SerialPort.MCR.RTS?RS232.RTS.MASK:0,V|=R&SerialPort.MCR.DTR?RS232.DTR.MASK:0),this.updateStatus.call(this.connection,V)}this.advanceRBR()}}updateIIR(){let V=-1;this.bLSR&SerialPort.LSR.DR&&this.bIER&SerialPort.IER.RBR_AVAIL?V=SerialPort.IIR.INT_RBR:this.bLSR&SerialPort.LSR.THRE&&this.bIER&SerialPort.IER.THR_EMPTY?V=SerialPort.IIR.INT_THR:this.bMSR&(SerialPort.MSR.DCTS|SerialPort.MSR.DDSR)&&this.bIER&SerialPort.IER.MSR_DELTA&&(V=SerialPort.IIR.INT_MSR),V>=0?(this.bIIR&=~(SerialPort.IIR.NO_INT|SerialPort.IIR.INT_BITS),this.bIIR|=V,this.chipset&&this.nIRQ&&this.chipset.setIRR(this.nIRQ,100)):(this.bIIR=SerialPort.IIR.NO_INT,this.chipset&&this.nIRQ&&this.chipset.clearIRR(this.nIRQ))}transmitByte(V){let R=!1;if(this.printf("transmitByte(%#04x)\n",V),this.sendData&&this.sendData.call(this.connection,V)&&(R=!0),this.controlBuffer){if(13==V)this.iLogicalCol=0;else if(8==V)this.controlBuffer.value=this.controlBuffer.value.slice(0,-1),this.iLogicalCol>0&&this.iLogicalCol--;else{let R=StrLib.toASCIICode(V),U=R.length;if(V<32&&1==U&&(U=0),9==V){let V=this.tabSize||8;U=V-this.iLogicalCol%V,this.tabSize&&(R=StrLib.pad("",-U))}!this.iLogicalCol&&U&&(10!=this.charPrev&&(R="\n"+R),this.charBOL&&(R=String.fromCharCode(this.charBOL)+R)),this.controlBuffer.value+=R,this.controlBuffer.scrollTop=this.controlBuffer.scrollHeight,this.iLogicalCol+=U}this.charPrev=V,R=!0}else null!=this.consoleBuffer&&((10==V||this.consoleBuffer.length>=1024)&&(this.print(this.consoleBuffer),this.consoleBuffer=""),10!=V&&(this.consoleBuffer+=String.fromCharCode(V)),R=!0);return R}transmitData(){this.bLSR|=SerialPort.LSR.THRE|SerialPort.LSR.TSRE,this.updateIIR()}static init(){let V=Component.getElementsByClass(APPCLASS,"serial");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new SerialPort(l);Component.bindComponentControls(e,U,APPCLASS)}}}WebLib.onInit(SerialPort.init);
class TestController extends Component{constructor(V){super("TestController",V),this.tests=null;let R=!1;if(this.urlTests=V.tests,this.consoleBuffer="",this.controlBuffer=null,this.sendData=null,this.deliverData=this.deliverInput=this.deliverTests=null,this.sBinding=V.binding,this.sBinding){if(this.serialPort=Component.getComponentByID(this.sBinding,this.id),this.serialPort){let V=this.serialPort.exports;if(V){let U=V.bind;U&&U.call(this.serialPort,this,this.receiveData,!0)&&(this.sendData=V.receiveData.bind(this.serialPort),this.urlTests&&(this.loadTests(this.urlTests),R=!0))}}this.sendData||Component.warning(this.id+": binding '"+this.sBinding+"' unavailable")}R||this.setReady()}loadTests(V){let R=this,U="Loading "+V+"...";WebLib.getResource(V,null,!0,(function(V,U,l){R.doneLoad(V,U,l)}),(function(V){R.printf(MESSAGE.PROGRESS,"%s\n",U)}))}doneLoad(V,R,U){if(U)this.printf(U<0?MESSAGE.STATUS:MESSAGE.NOTICE,"Unable to load tests (error %d: %s)\n",U,V);else try{this.tests=JSON.parse(R),this.deliverTests&&(this.deliverTests(this.tests),this.tests=null),Component.addMachineResource(this.idMachine,V,R)}catch(V){this.printf(MESSAGE.NOTICE,"Test parsing error: %s\n",V.message)}this.setReady()}bindMonitor(V,R,U,l){this.deliverData=R.bind(V),this.deliverInput=U.bind(V),this.deliverTests=l.bind(V),this.tests&&this.deliverTests&&(this.deliverTests(this.tests),this.tests=null)}setBinding(V,R,U,l){let e=this;if("textarea"==V&&!this.controlBuffer){if(this.bindings[R]=U,this.controlBuffer=U,this.consoleBuffer=null,U.onkeydown=function(V){let R=(V=V||window.event).keyCode;return(8===R||V.ctrlKey&&R>=65&&R<=90)&&(V.preventDefault&&V.preventDefault(),R>64&&(R-=64),e.deliverInput&&e.deliverInput(R)),!0},U.onkeypress=function(V){let R=(V=V||window.event).which||V.keyCode;return e.deliverInput&&e.deliverInput(R),V.preventDefault&&V.preventDefault(),!0},U.removeAttribute("readonly"),this.sendData){(new TestMonitor).bindController(this,this.sendData,this.sendOutput,this.printf,this.sBinding)}return!0}return!1}sendOutput(V){if("number"==typeof V)this.printf("%c",V);else if("string"==typeof V)this.printf("%s",V);else for(let R=0;R<V.length;R++)this.printf("[0x%02x]",V[R])}printf(V,...R){let U=StrLib.sprintf(V.toString(),...R);if(null!=this.controlBuffer&&"\r"!=U&&("\b"==U||"\b \b"==U?this.controlBuffer.value=this.controlBuffer.value.slice(0,-1):this.controlBuffer.value+=U,!DEBUG&&this.controlBuffer.value.length>8192&&(this.controlBuffer.value=this.controlBuffer.value.substr(this.controlBuffer.value.length-4096)),this.controlBuffer.scrollTop=this.controlBuffer.scrollHeight),null!=this.consoleBuffer){let V=U.lastIndexOf("\n");V>=0&&(console.log(this.consoleBuffer+U.substr(0,V)),this.consoleBuffer="",U=U.substr(V+1)),this.consoleBuffer+=U}}receiveData(V){if("number"==typeof V)this.deliverData(V);else if("string"==typeof V)for(let R=0;R<V.length;R++)this.deliverData(V.charCodeAt(R));else for(let R=0;R<V.length;R++)this.deliverData(V[R])}static init(){let V=Component.getElementsByClass(APPCLASS,"testctl");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new TestController(l);Component.bindComponentControls(e,U,APPCLASS)}}}WebLib.onInit(TestController.init);
class TestMonitor{constructor(){DEBUG&&console.log("TestMonitor()"),this.aOperations=[],this.idTimeout=0,this.fnRemoveOperation=this.removeOperation.bind(this),this.fWaitPending=!1}bindController(V,R,U,l,e){this.sendData=R.bind(V),this.sendOutput=U.bind(V),this.printf=l.bind(V),V.bindMonitor(this,this.receiveData,this.receiveInput,this.receiveTests),this.printf("%s TestMonitor v%s\n",APPNAME,APPVERSION),this.printf("Use Ctrl-T to toggle terminal mode%s\n",e?" ("+e.toUpperCase()+")":""),this.setMode(TestMonitor.MODE.TERMINAL)}addCommand(V){if(!V)return!0;let R,U,l=this.tests[this.category].commands,e=V.split(" "),t=e[0],T=!1;if(l[t]&&(T=!0,t=l[t]),"string"==typeof t){if(R=t,this.addForLoop(R))return!0}else R=t.op,U=t.mode;if(R){let l="";if(R=R.replace(/([$%])([0-9]+)/g,(function(R,U,t,T,k){let F=+t,W="";return F>=e.length?(W=U+t,l="missing value for "+W):W=F?"$"==U?e[F]:StrLib.sprintf("%x",e[F]):V,W})),l)this.printf("%s\n",l);else{let l=R.indexOf("(");if(t=l>0?R.substr(0,l):"",TestMonitor.COMMANDS.indexOf(t)>=0){T||(R=V),T=!0;let e=R.lastIndexOf(")");e>0&&(U=R.substr(l+1,e-l-1),R=t)}else TestMonitor.COMMANDS.indexOf(R)>=0&&(T=!0,U=e[1]);if(T)return DEBUG&&console.log("TestMonitor.addCommand("+V+"): op '"+R+"'"),this.addOperation(R,U),!0;this.printf("unrecognized command: %s\n",V)}}else this.printf("missing operation for command: %s\n",e[0]);return!1}addForLoop(V){let R=!1,U=V.match(/^\s*for\s+([a-z]+)\s*=\s*([0-9]+)\s+to\s+([0-9]+)\s*{\s*([\s\S]*?)\s*}\s*$/i);if(U){R=!0;let V=U[1],l=+U[2],e=+U[3],t=U[4].split(";");for(let U=l;U<=e&&R;U++)for(let l=0;l<t.length;l++){let e=t[l].trim();if(e&&(e=e.replace(new RegExp("\\$"+V,"g"),U.toString()),!this.addCommand(e))){R=!1;break}}}return R}addOperation(V,R){this.aOperations.push(R?[V,R]:V),this.nextOperation()}flushOperations(){this.idTimeout&&(clearTimeout(this.idTimeout),this.idTimeout=0),this.aOperations=[],this.fWaitPending=!1}nextOperation(V){return this.fWaitPending=!1,this.aOperations.length?(this.idTimeout||(this.idTimeout=setTimeout(this.fnRemoveOperation,V||0)),!0):(this.printf("done\n"),!1)}removeOperation(){this.idTimeout=0;let V=this.aOperations.shift();if(V){let R;if("string"!=typeof V&&(R=V[1],V=V[0]),V==TestMonitor.COMMAND.PRINTF){let V="nothing to print",U=[];if(R){let l=R.match(/^\s*(["'])([\s\S]*?)\1\s*,?\s*([\s\S]*)$/);l&&(V=l[2],U=l[3].split(","))}this.printf(V,...U)}else{if(V==TestMonitor.COMMAND.WAIT)return R?void this.nextOperation(+R):(this.printf("press a key to continue..."),void(this.fWaitPending=!0));if(this.sendData(V),R)return this.flushOperations(),void this.setMode(R)}this.nextOperation()}}setMode(V,R){if(V!=this.mode){switch(V){case TestMonitor.MODE.TERMINAL:this.category=null;break;case TestMonitor.MODE.PROMPT:this.aCategories=[],this.aPrompts=[],this.cchPromptLongest=0;for(let V in this.tests){let R=this.tests[V][TestMonitor.MODE.PROMPT];if(R){"string"==typeof R&&(R=[R]);for(let U=0;U<R.length;U++)this.aCategories.push(V),this.aPrompts.push(R[U]),this.cchPromptLongest<R[U].length&&(this.cchPromptLongest=R[U].length)}}this.promptActive=this.promptBuffer="",this.category=null;break;case TestMonitor.MODE.COMMAND:R&&(this.category=R),this.commandBuffer="";break;default:return void this.printf("unrecognized mode: %s\n",V)}this.mode=V,this.printf("mode: %s\n",this.category||this.mode)}}receiveTests(V){DEBUG&&console.log("TestMonitor.receiveTests("+JSON.stringify(V)+")"),this.tests=V,this.setMode(TestMonitor.MODE.PROMPT)}receiveData(V){if(this.mode==TestMonitor.MODE.PROMPT){this.promptBuffer.length>=this.cchPromptLongest&&(this.promptBuffer=this.promptBuffer.slice(-(this.cchPromptLongest-1))),10==V&&(this.promptBuffer=""),this.promptBuffer+=String.fromCharCode(V),DEBUG&&console.log("TestMonitor.receiveData("+V+"): checking prompts for '"+this.promptBuffer+"'");let R=this.aPrompts.indexOf(this.promptBuffer);R>=0&&this.setMode(TestMonitor.MODE.COMMAND,this.aCategories[R])}else this.mode==TestMonitor.MODE.TERMINAL?this.sendOutput(V):DEBUG&&console.log("TestMonitor.receiveData("+V+"): ignored while mode is '"+this.mode+"'")}receiveInput(V){if(DEBUG&&console.log("TestMonitor.receiveInput("+V+")"),V!=Keys.ASCII.CTRL_T){if(this.mode==TestMonitor.MODE.TERMINAL||this.mode==TestMonitor.MODE.PROMPT)this.sendData(V);else if(this.mode==TestMonitor.MODE.COMMAND){if(this.fWaitPending)return this.sendOutput(Keys.KEYCODE.LF),void this.nextOperation();V==Keys.KEYCODE.CR?(this.sendOutput(Keys.KEYCODE.LF),this.flushOperations(),this.addCommand(this.commandBuffer.replace(/\\n/g,"\n")),this.commandBuffer=""):V==Keys.ASCII.CTRL_H||V==Keys.ASCII.DEL?this.commandBuffer.length&&(this.commandBuffer=this.commandBuffer.slice(0,-1),this.sendOutput("\b \b")):V>=32&&V<127&&(this.commandBuffer+=String.fromCharCode(V),this.sendOutput(V))}}else this.setMode(this.mode==TestMonitor.MODE.TERMINAL?this.category?TestMonitor.MODE.COMMAND:TestMonitor.MODE.PROMPT:TestMonitor.MODE.TERMINAL)}}TestMonitor.MODE={TERMINAL:"terminal",PROMPT:"prompt",COMMAND:"command"},TestMonitor.COMMAND={PRINTF:"printf",WAIT:"wait"},TestMonitor.COMMANDS=[TestMonitor.COMMAND.PRINTF,TestMonitor.COMMAND.WAIT];
class Mouse extends Component{static INTERFACE={BUS:"bus",INPORT:"inport",SERIAL:"serial"};static BUTTON={LEFT:0,RIGHT:2};static BUS={DATA:{PORT:572},TPPI:{PORT:573},CTRL:{PORT:574},CPPI:{PORT:575}};static INPORT={ADDR:{PORT:572,STATUS:0,X:1,Y:2,ISTAT:5,ICTRL:6,MODE:7},DATA:{PORT:573,STATUS:{B3:1,B2:2,B1:4,DB3:8,DB2:16,DB1:32,MOVE:64,PACKET:128},MODE:{HOLD:32}},ID:{PORT:574,CHIP:222},TEST:{PORT:575}};static SERIAL={ID:77};constructor(V){super("Mouse",V,MESSAGE.MOUSE),this.iAdapter=V.adapter||0,this.idDevice=V.serial||V.binding,this.sType=V.type||(this.idDevice?Mouse.INTERFACE.SERIAL:Mouse.INTERFACE.BUS),this.typeDevice=this.sType==Mouse.INTERFACE.SERIAL?"SerialPort":null,this.componentDevice=null,this.scale=V.scaleMouse,this.setActive(!1),this.fActive=this.fCaptured=this.fLocked=!1,this.aVideo=[],this.aScreens=[]}initBus(V,R,U,l){this.cmp=V,this.bus=R,this.cpu=U,this.dbg=l,this.scale=V.getMachineParm("scaleMouse")||this.scale;for(let R=null;R=V.getMachineComponent("Video",R);)this.aVideo.push(R);this.sType==Mouse.INTERFACE.BUS&&(R.addPortInputTable(this,Mouse.aBusInput,Mouse.BUS.DATA.PORT),R.addPortOutputTable(this,Mouse.aBusOutput,Mouse.BUS.DATA.PORT)),this.setReady()}isActive(){return this.fActive&&!!this.cpu&&this.cpu.isRunning()}setActive(V){this.fActive=V}powerUp(V,R){if(!R){if(V&&this.restore){if(!this.restore(V))return!1}else this.reset();if(this.typeDevice&&!this.componentDevice){let V=null;for(;(V=this.cmp.getMachineComponent(this.typeDevice,V))&&(!V.bindMouse||(this.componentDevice=V.bindMouse(this.idDevice,this,this.receiveStatus),!this.componentDevice)););if(this.componentDevice){this.aScreens=[];for(let V=0;V<this.aVideo.length;V++){let R=this.aVideo[V].getScreen(this);R&&this.aScreens.push(R)}}else Component.warning(this.id+": "+this.typeDevice+" "+this.idDevice+" unavailable")}this.fActive?this.captureAll():this.releaseAll()}return!0}powerDown(V,R){return!V||this.save()}reset(){this.initState()}save(){let V=new State(this);return V.set(0,this.saveState()),V.data()}restore(V){return this.initState(V[0])}initState(V){let R=0;return void 0===V&&(V=[!1,-1,-1,0,0,!1,!1,0]),this.setActive(V[R++]),this.xMouse=V[R++],this.yMouse=V[R++],this.xDelta=V[R++],this.yDelta=V[R++],this.fButton1=V[R++],this.fButton2=V[R++],this.pins=V[7],this.pins&(SerialPort.MCR.DTR|SerialPort.MCR.RTS)&&(this.pins=(this.pins&SerialPort.MCR.DTR?RS232.DTR.MASK:0)|(this.pins&SerialPort.MCR.RTS?RS232.RTS.MASK:0)),!0}saveState(){let V=0,R=[];return R[V++]=this.fActive,R[V++]=this.xMouse,R[V++]=this.yMouse,R[V++]=this.xDelta,R[V++]=this.yDelta,R[V++]=this.fButton1,R[V++]=this.fButton2,R[7]=this.pins,R}notifyPointerLocked(V){this.fLocked=V}captureAll(){if(!this.fCaptured)for(let V=0;V<this.aScreens.length;V++)this.captureMouse(this.aScreens[V])&&(this.fCaptured=!0)}releaseAll(){if(this.fCaptured)for(let V=0;V<this.aScreens.length;V++)this.releaseMouse(this.aScreens[V])&&(this.fCaptured=!1)}captureMouse(V){if(V){let R=this;return V.addEventListener("mousemove",(function(V){R.processMouseEvent(V)}),!1),V.addEventListener("mousedown",(function(V){R.processMouseEvent(V,!0)}),!1),V.addEventListener("mouseup",(function(V){R.processMouseEvent(V,!1)}),!1),V.style.cursor="none",!0}return!1}releaseMouse(V){return V&&(V.style.cursor="auto"),!1}processMouseEvent(V,R){if(void 0!==R)!1===this.fLocked&&(this.aVideo.length&&this.aVideo[0].notifyPointerActive(!0)||(this.fLocked=null)),this.clickMouse(V.button,R);else{let R,U;(this.xMouse<0||this.yMouse<0)&&(this.xMouse=V.screenX,this.yMouse=V.screenY),this.fLocked?(R=V.movementX||V.mozMovementX||V.webkitMovementX||0,U=V.movementY||V.mozMovementY||V.webkitMovementY||0):(R=V.screenX-this.xMouse,U=V.screenY-this.yMouse),this.xMouse=V.screenX,this.yMouse=V.screenY,this.moveMouse(R,U,this.xMouse,this.yMouse)}}clickMouse(V,R){if(this.isActive()){let U=DEBUGGER?"mouse button"+V+" "+(R?"dn":"up"):null;switch(V){case Mouse.BUTTON.LEFT:if(this.fButton1!=R)return this.fButton1=R,void this.sendPacket(U);break;case Mouse.BUTTON.RIGHT:if(this.fButton2!=R)return this.fButton2=R,void this.sendPacket(U)}this.printf("%s: ignored\n",U)}}moveMouse(V,R,U,l){if(this.isActive()){let e=Math.round(Math.abs(V)*this.scale)*Math.sign(V)||Math.sign(V),t=Math.round(Math.abs(R)*this.scale)*Math.sign(R)||Math.sign(R);(e||t)&&(this.printf(MESSAGE.MOUSE,"moveMouse(%s,%s)\n",e,t),this.xDelta=e,this.yDelta=t,this.sendPacket(null,U,l))}}sendPacket(V,R,U){let l=64|(this.fButton1?32:0)|(this.fButton2?16:0)|(192&this.yDelta)>>4|(192&this.xDelta)>>6,e=63&this.xDelta,t=63&this.yDelta;this.printf(MESSAGE.SERIAL+MESSAGE.ADDR,"%s%sserial packet [%#04x,%#04x,%#04x]\n",V?V+": ":"",void 0!==U?"mouse ("+R+","+U+"): ":"",l,e,t),this.componentDevice.receiveData([l,e,t]),this.xDelta=this.yDelta=0}receiveStatus(V){let R=(V&(RS232.DTR.MASK|RS232.RTS.MASK))==(RS232.DTR.MASK|RS232.RTS.MASK);if(R){if(!this.fActive){let V=!1;this.pins&RS232.RTS.MASK||(this.reset(),this.printf("serial mouse reset\n"),V=!0),this.pins&RS232.DTR.MASK||(this.printf("serial mouse ID requested\n"),V=!0),V&&(this.componentDevice.receiveData([Mouse.SERIAL.ID,Mouse.SERIAL.ID],!0),this.printf("serial mouse ID sent\n")),this.captureAll(),this.setActive(R)}}else this.fActive&&(this.printf("serial mouse inactive\n"),this.releaseAll(),this.setActive(R));this.pins=V}inBusData(V,R){return this.printIO(V,void 0,R,"DATA",0),0}inBusTPPI(V,R){return this.printIO(V,void 0,R,"TPPI",0),0}inBusCtrl(V,R){return this.printIO(V,void 0,R,"CTRL",0),0}inBusCPPI(V,R){return this.printIO(V,void 0,R,"CPPI",0),0}outBusData(V,R,U){this.printIO(V,R,U,"DATA")}outBusTPPI(V,R,U){this.printIO(V,R,U,"TPPI")}outBusCtrl(V,R,U){this.printIO(V,R,U,"CTRL")}outBusCPPI(V,R,U){this.printIO(V,R,U,"CPPI")}static init(){let V=Component.getElementsByClass(APPCLASS,"mouse");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new Mouse(l);Component.bindComponentControls(e,U,APPCLASS)}}}Mouse.aBusInput={0:Mouse.prototype.inBusData,1:Mouse.prototype.inBusTPPI,2:Mouse.prototype.inBusCtrl,3:Mouse.prototype.inBusCPPI},Mouse.aBusOutput={0:Mouse.prototype.outBusData,1:Mouse.prototype.outBusTPPI,2:Mouse.prototype.outBusCtrl,3:Mouse.prototype.outBusCPPI},WebLib.onInit(Mouse.init);class Disk extends Component{static SECTOR={CYLINDER:"c",HEAD:"h",ID:"s",LENGTH:"l",DATA:"d",FILE_INDEX:"f",FILE_OFFSET:"o",PATTERN:"pattern",DATA_CRC:"dataCRC",DATA_ERROR:"dataError",DATA_MARK:"dataMark",HEAD_CRC:"headCRC",HEAD_ERROR:"headError"};static REMOTE_WRITE_DELAY=2e3;static nDisks=0;constructor(V,R,U){super("Disk",{id:V.idMachine+".disk"+StrLib.toHex(++Disk.nDisks,4)},MESSAGE.DISK),this.controller=V,this.print=V.print,this.cmp=V.cmp,this.dbg=V.dbg,this.drive=R,this.sDiskName=R.name,this.fRemovable=R.fRemovable,this.fOnDemand=this.fRemote=!1,this.create(U,R.nCylinders,R.nHeads,R.nSectors,R.cbSector),this.aDirtySectors=[],this.aDirtyTimestamps=[],this.timerWrite=null,this.msTimerWrite=0,this.fWriteInProgress=!1,this.aModules={},this.setReady()}initBus(V,R,U,l){this.dbg=l}isRemote(){return this.fOnDemand}powerUp(V,R){return R||this.fOnDemand&&!this.fRemote&&(this.setReady(!1),this.load(this.sDiskName,this.sDiskPath,null,this.donePowerUp,this)),!0}donePowerUp(V,R,U,l){this.setReady(!0)}powerDown(V,R){if(this.fRemote){let U,l=0;if(this.fWriteInProgress&&!Component.confirmUser("Disk writes are still in progress, shut down anyway?"))return!1;for(;U=this.findDirtySectors(!1);)if(l=U[0]){this.printf(MESSAGE.NOTICE,'Unable to save "%s" (error %d)\n',this.sDiskName,l);break}R&&this.disconnectRemoteDisk(),!l&&V&&this.printf(MESSAGE.NOTICE,'"%s" saved\n',this.sDiskName)}return!0}create(V,R,U,l,e){if(this.mode=V,this.nCylinders=R,this.nHeads=U,this.nSectors=l,this.cbSector=e,this.diskData=[],this.mode!=DiskAPI.MODE.PRELOAD){this.printf(MESSAGE.DISK,'blank disk for "%s": %d cylinders, %d head(s)\n',this.sDiskName,this.nCylinders,this.nHeads);let V=new Array(this.nCylinders);for(let R=0;R<V.length;R++){let U=new Array(this.nHeads);for(let V=0;V<U.length;V++){let l=new Array(this.nSectors);for(let U=1;U<=l.length;U++)l[U-1]=this.initSector(null,R,V,U,this.cbSector,this.mode==DiskAPI.MODE.LOCAL?0:null);U[V]=l}V[R]=U}this.diskData=V}this.dwChecksum=null}load(V,R,U,l,e){let t=R;if(this.printf(MESSAGE.DISK,'load("%s","%s")\n',V,R),this.fnNotify)return this.printf(MESSAGE.DISK,'too many load requests for "%s" (%s)\n',V,R),!0;this.sDiskName=V,this.sDiskPath=R,this.sDiskFile=StrLib.getBaseName(R),this.sFormat="json";let T=this;if(this.fnNotify=l,this.controllerNotify=e||this.controller,U){let V=new FileReader;return"application/json"==U.type?(V.onload=function(){T.doneLoad(t,V.result,0)},V.onerror=function(){T.buildDisk(null,!1,V.error.message)},V.readAsText(U)):(V.onload=function(){T.buildDisk(V.result,!0)},V.onerror=function(){T.buildDisk(null,!1,V.error.message)},V.readAsArrayBuffer(U)),!0}if(R.indexOf(DumpAPI.ENDPOINT)<0){let V=StrLib.getExtension(R);V!=DumpAPI.FORMAT.JSON&&V!=DumpAPI.FORMAT.JSON_GZ&&(this.mode==DiskAPI.MODE.DEMANDRW||this.mode==DiskAPI.MODE.DEMANDRO?(t=this.connectRemoteDisk(R),this.fOnDemand=!0):this.sFormat="arraybuffer")}let k="Loading "+t+"...";return!!WebLib.getResource(t,this.sFormat,!0,(function(V,R,U){T.doneLoad(V,R,U)}),(function(V){T.printf(MESSAGE.PROGRESS,"%s\n",k)}))}buildDisk(V,R,U){let l,e=0,t=null;V&&(e=V.byteLength,t=new DataView(V,0,e));let T=0;if(t&&1397375824==t.getUint32(409,!0)&&(T=t.getUint16(414,!0)),T)this.nCylinders=T,this.nHeads=t.getUint8(416),this.nSectors=t.getUint8(428),this.cbSector=512;else{let V=DiskAPI.GEOMETRIES[e];V&&(V[0]<=this.nCylinders&&V[1]<=this.nHeads?(this.nCylinders=V[0],this.nHeads=V[1],this.nSectors=V[2],this.cbSector=V[3]||512):this.nCylinders=0)}if(t&&this.nCylinders){let V=0,U=this.cbSector>>2,e=0,T=0;this.diskData=new Array(this.nCylinders);for(let l=0;l<this.diskData.length;l++){let k=this.diskData[l]=new Array(this.nHeads);for(let F=0;F<k.length;F++){let W=k[F]=new Array(this.nSectors);for(let k=0;k<W.length;k++){let a=this.initSector(null,l,F,k+1,this.cbSector,e),s=a[Disk.SECTOR.DATA];for(let R=0;R<U;R++,V+=4){T=T+(s[R]=t.getInt32(V,!0))&-1}R&&(a.cModify=U),W[k]=a}}}this.dwChecksum=T,l=this}else this.printf(MESSAGE.NOTICE,"%s\n",U||"Unrecognized disk format ("+e+" bytes)");this.fnNotify&&(this.fnNotify.call(this.controller,this.drive,l,this.sDiskName,this.sDiskPath),this.fnNotify=null)}doneLoad(sURL,imageData,nErrorCode){let disk=null;this.fWriteProtected=!1;let idMessage=nErrorCode<0&&this.cmp&&!this.cmp.flags.powered?MESSAGE.STATUS:MESSAGE.NOTICE;if(this.fOnDemand)nErrorCode?this.printf(idMessage,'Unable to connect to disk "%s" (error %d: %s)\n',this.sDiskPath,nErrorCode,imageData):(disk=this,this.printf(MESSAGE.DISK,'doneLoad("%s")\n',this.sDiskPath),this.fRemote=!0);else if(nErrorCode)this.printf(idMessage,'Unable to load disk "%s" (error %d: %s)\n',this.sDiskName,nErrorCode,sURL);else{if(this.printf(MESSAGE.DISK,'doneLoad("%s")\n',this.sDiskPath),"string"!=typeof imageData)return void this.buildDisk(imageData);try{let sBaseName=StrLib.getBaseName(this.sDiskFile,!0).toLowerCase(),diskData,fileTable,imageInfo;if(sBaseName.indexOf("-readonly")>0)this.fWriteProtected=!0;else{let V=imageData.indexOf("\n");if(V>0&&V<1024){let R=imageData.substring(0,V);R.indexOf("write-protected")>0&&(this.fWriteProtected=!0)}}if("<"==imageData.substr(0,1))diskData=["Missing disk image: "+this.sDiskName];else if("{"==imageData[0]){let V=JSON.parse(imageData);diskData=V.diskData,fileTable=V.fileTable,imageInfo=V.imageInfo}else diskData=imageData.indexOf("0x")<0&&'["'!=imageData.substr(0,2)?JSON.parse(imageData.replace(/([a-z]+):/gm,'"$1":').replace(/\/\/[^\n]*/gm,"")):eval("("+imageData+")");if(diskData.length)if(1==diskData.length)Component.error(diskData[0]);else{if(DEBUG&&this.messageEnabled(MESSAGE.DISK+MESSAGE.DATA)){let V=diskData.length+" track"+(diskData.length>1?"s":""),R=diskData[0].length,U=R+" head"+(R>1?"s":""),l=diskData[0][0].length,e=l+" sector"+(l>1?"s":"")+"/track";this.printf("%s, %s, %s\n",V,U,e)}this.nCylinders=diskData.length,this.nHeads=diskData[0].length,this.nSectors=diskData[0][0].length;let V=diskData[0][0][0];this.cbSector=V&&(V[Disk.SECTOR.LENGTH]||V.length)||512;let R=0;for(let U=0;U<this.nCylinders;U++)for(let l=0;l<this.nHeads;l++)for(let e=0;e<this.nSectors;e++){if(V=diskData[U][l][e],!V)continue;let t=V[Disk.SECTOR.ID];null==t&&(t=V.sector,V[Disk.SECTOR.ID]=t,delete V.sector);let T=V[Disk.SECTOR.LENGTH];null==T&&(T=V.length||512,V[Disk.SECTOR.LENGTH]=T,delete V.length);let k=V.pattern;null==k?k=0:delete V.pattern;let F=V[Disk.SECTOR.DATA];if(null==F)if(F=V.data,null!=F)V[Disk.SECTOR.DATA]=F,delete V.data;else{let R=V.bytes;if(void 0!==R&&R.length){for(let V=R.length;V<T;V++)R[V]=k;this.fill(V,R,0)}else V[Disk.SECTOR.DATA]=F=[],R&&(k=k|k<<8|k<<16|k<<24);delete V.bytes}else F.length<T>>2&&(k=F[F.length-1],F.length&&F.length--);this.initSector(V,U,l,t,this.cbSector,k);for(let V=0;V<F.length;V++)R=R+F[V]&-1}this.diskData=diskData,this.dwChecksum=R,this.imageInfo=imageInfo,(BACKTRACK||SYMBOLS)&&this.buildFileTable(fileTable),disk=this}else Component.error("Empty disk image: "+this.sDiskName)}catch(V){Component.error("Disk image error ("+sURL+"): "+V.message),imageData=null}imageData&&Component.addMachineResource(this.controller.idMachine,sURL,imageData)}this.fnNotify&&(this.fnNotify.call(this.controllerNotify,this.drive,disk,this.sDiskName,this.sDiskPath,nErrorCode),this.fnNotify=null)}buildFileTable(V){if((BACKTRACK||SYMBOLS)&&V){let R=this.diskData;this.aFileTable=[];for(let U=0;U<R.length;U++)for(let l=0;l<R[U].length;l++)for(let e=0;e<R[U][l].length;e++){let t=R[U][l][e];if(t){let R=t[Disk.SECTOR.FILE_INDEX];if(null!=R){let U=this.aFileTable[R];if(!U){let l=V[R];U=new FileInfo(this,l.path,StrLib.getBaseName(l.path),+l.attr,l.size||0,l.module),this.aFileTable[R]=U}t.file=U,t.offFile=t[Disk.SECTOR.FILE_OFFSET]}delete t[Disk.SECTOR.FILE_INDEX],delete t[Disk.SECTOR.FILE_OFFSET]}}}}getFileInfo(V){return V.file?V.file.path+"["+StrLib.toHex(V.offFile,0,!0)+"]":"unknown"}addModuleInfo(V){if(SYMBOLS&&V&&V.file){let R=V.file.module;R&&(this.aModules[R.name]=R)}}getModuleInfo(V,R){let U=null;if(SYMBOLS){let l=this.aModules[V];if(l){let V=l.segments&&l.segments[R];if(V){U={};for(let R in V.ordinals){let l=V.ordinals[R];U[l.s]=l.o}}}}return U}getSymbolInfo(V){let R=[];if(SYMBOLS&&this.aFileTable){let U=V.toUpperCase();for(let V=0;V<this.aFileTable.length;V++){let l=this.aFileTable[V];if(l&&l.module)for(let V in l.module.segments){let e=l.module.segments[V];for(let t in e.ordinals){let T=e.ordinals[t];T.s&&T.s.indexOf(U)>=0&&R.push([T.s,l.name,+V,T.o,e.offEnd-e.offStart])}}}}return R}getSector(V){let R=this.nHeads*this.nSectors,U=V/R|0;if(U<this.nCylinders){let l=V%R,e=l/this.nSectors|0,t=l%this.nSectors+1;return this.seek(U,e,t)}return null}getSectorData(V,R,U){let l=0,e=0;for(;U--;){let U=this.read(V,R++);if(U<0)break;l|=U<<e,e+=8}return l}initSector(V,R,U,l,e,t){return V?(V[Disk.SECTOR.CYLINDER]=R,V[Disk.SECTOR.HEAD]=U):V={[Disk.SECTOR.CYLINDER]:R,[Disk.SECTOR.HEAD]:U,[Disk.SECTOR.ID]:l,[Disk.SECTOR.LENGTH]:e,[Disk.SECTOR.DATA]:[]},V[Disk.SECTOR.PATTERN]=t,V.iModify=V.cModify=0,V.fDirty=!1,V}connectRemoteDisk(V){let R=DiskAPI.QUERY.ACTION+"="+DiskAPI.ACTION.OPEN;return R+="&"+DiskAPI.QUERY.VOLUME+"="+V,R+="&"+DiskAPI.QUERY.MODE+"="+this.mode,R+="&"+DiskAPI.QUERY.CHS+"="+this.nCylinders+":"+this.nHeads+":"+this.nSectors+":"+this.cbSector,R+="&"+DiskAPI.QUERY.MACHINE+"="+this.controller.getMachineID(),R+="&"+DiskAPI.QUERY.USER+"="+this.controller.getUserID(),WebLib.getHostOrigin()+DiskAPI.ENDPOINT+"?"+R}readRemoteSectors(V,R,U,l,e,t){if(this.printf(MESSAGE.DEBUG,"readRemoteSectors(CHS=%d:%d:%d,N=%d)\n",V,R,U,l),this.fRemote){let T=DiskAPI.QUERY.ACTION+"="+DiskAPI.ACTION.READ;T+="&"+DiskAPI.QUERY.VOLUME+"="+this.sDiskPath,T+="&"+DiskAPI.QUERY.CHS+"="+this.nCylinders+":"+this.nHeads+":"+this.nSectors+":"+this.cbSector,T+="&"+DiskAPI.QUERY.ADDR+"="+V+":"+R+":"+U+":"+l,T+="&"+DiskAPI.QUERY.MACHINE+"="+this.controller.getMachineID(),T+="&"+DiskAPI.QUERY.USER+"="+this.controller.getUserID();let k=this,F=WebLib.getHostOrigin()+DiskAPI.ENDPOINT+"?"+T;WebLib.getResource(F,null,e,(function(T,F,W){k.doneReadRemoteSectors(T,F,W,[V,R,U,l,e,t])}))}else t&&t(-1,!1)}doneReadRemoteSectors(V,R,U,l){let e=!1,t=l[0],T=l[1],k=l[2],F=l[3];if(U)this.printf(MESSAGE.DEBUG,"doneReadRemoteSectors(CHS=%d:%d:%d,N=%d) returned error %d\n",t,T,k,F,U);else{let V=JSON.parse(R),U=0;for(;F--;){let R=this.seek(t,T,k,null,!0);if(!R){this.printf(MESSAGE.DEBUG,"doneReadRemoteSectors(): seek(CHS=%d:%d:%d) failed\n",t,T,k);break}this.fill(R,V,U),U+=R[Disk.SECTOR.LENGTH],k++}e=l[4]}let W=l[5];W&&W(U,e)}writeRemoteSectors(V,R,U,l,e,t){if(this.printf(MESSAGE.DEBUG,"writeRemoteSectors(CHS=%d:%d:%d,N=%d)\n",V,R,U,l),this.fRemote){let T={};this.fWriteInProgress=!0,T[DiskAPI.QUERY.ACTION]=DiskAPI.ACTION.WRITE,T[DiskAPI.QUERY.VOLUME]=this.sDiskPath,T[DiskAPI.QUERY.CHS]=this.nCylinders+":"+this.nHeads+":"+this.nSectors+":"+this.cbSector,T[DiskAPI.QUERY.ADDR]=V+":"+R+":"+U+":"+l,T[DiskAPI.QUERY.MACHINE]=this.controller.getMachineID(),T[DiskAPI.QUERY.USER]=this.controller.getUserID(),T[DiskAPI.QUERY.DATA]=JSON.stringify(e);let k=this,F=WebLib.getHostOrigin()+DiskAPI.ENDPOINT;WebLib.getResource(F,T,t,(function(e,T,F){k.doneWriteRemoteSectors(e,T,F,[V,R,U,l,t])}))}return!1}doneWriteRemoteSectors(V,R,U,l){let e=l[0],t=l[1],T=l[2],k=l[3],F=l[4];if(this.fWriteInProgress=!1,e>=0&&e<this.diskData.length&&t>=0&&t<this.diskData[e].length)for(let V=T-1;k-- >0&&V>=0&&V<this.diskData[e][t].length;V++){let R=this.diskData[e][t][V];U?(this.printf(MESSAGE.DEBUG,"doneWriteRemoteSectors(CHS=%d:%d:%d) returned error %d\n",e,t,R[Disk.SECTOR.ID],U),this.queueDirtySector(R,!1)):R.fDirty||(R.iModify=R.cModify=0)}F&&this.updateWriteTimer()}disconnectRemoteDisk(){if(this.fRemote){let V=DiskAPI.QUERY.ACTION+"="+DiskAPI.ACTION.CLOSE;V+="&"+DiskAPI.QUERY.VOLUME+"="+this.sDiskPath,V+="&"+DiskAPI.QUERY.MACHINE+"="+this.controller.getMachineID(),V+="&"+DiskAPI.QUERY.USER+"="+this.controller.getUserID();let R=WebLib.getHostOrigin()+DiskAPI.ENDPOINT+"?"+V;WebLib.getResource(R,null,!0),this.fRemote=!1}}queueDirtySector(V,R){V.fDirty=!0;let U=this.aDirtySectors.indexOf(V);return U>=0&&(this.aDirtySectors.splice(U,1),this.aDirtyTimestamps.splice(U,1)),this.aDirtySectors.push(V),this.aDirtyTimestamps.push(Component.getTime()),this.printf(MESSAGE.DEBUG,"queueDirtySector(CHS=%d:%d:%d): %d dirty\n",V[Disk.SECTOR.CYLINDER],V[Disk.SECTOR.HEAD],V[Disk.SECTOR.ID],this.aDirtySectors.length),R&&this.updateWriteTimer()}updateWriteTimer(){if(this.aDirtySectors.length){let V=this.aDirtyTimestamps[0]+Disk.REMOTE_WRITE_DELAY;if(this.timerWrite&&this.msTimerWrite<V&&(clearTimeout(this.timerWrite),this.timerWrite=null),!this.timerWrite){let R=this,U=Component.getTime(),l=V-U;l<0&&(l=0),l>Disk.REMOTE_WRITE_DELAY&&(l=Disk.REMOTE_WRITE_DELAY),this.timerWrite=setTimeout((function(){R.findDirtySectors(!0)}),l),this.msTimerWrite=U+l}}else this.timerWrite&&(clearTimeout(this.timerWrite),this.timerWrite=null);return null!==this.timerWrite}findDirtySectors(V){V&&(this.timerWrite=null);let R=this.aDirtySectors[0];if(R){let U=R[Disk.SECTOR.CYLINDER],l=R[Disk.SECTOR.HEAD],e=R[Disk.SECTOR.ID],t=0,T=[];for(let V=e-1;V<this.diskData[U][l].length;V++){let R=this.diskData[U][l][V];if(!R.fDirty)break;let e=this.aDirtySectors.indexOf(R);this.printf(MESSAGE.DEBUG,"findDirtySectors(CHS=%d:%d:%d)\n",U,l,R[Disk.SECTOR.ID]),this.aDirtySectors.splice(e,1),this.aDirtyTimestamps.splice(e,1),T=T.concat(this.toBytes(R)),R.fDirty=!1,t++}let k=this.writeRemoteSectors(U,l,e,t,T,V);return V||k}return!1}info(){return this.diskData.length?[this.diskData.length,this.diskData[0].length,this.diskData[0][0].length,this.diskData[0][0][0][Disk.SECTOR.LENGTH]]:[0,0,0,0]}seek(V,R,U,l,e,t){let T=null,k=this.drive,F=this.diskData[V];if(F){let W,a=F[R];if(!a&&k.bFormatting&&R<2){for(a=new Array(k.bSectorEnd),W=0;W<a.length;W++)a[W]=this.initSector(null,V,R,W+1,k.nBytes,0);R<k.nHeads&&(F[R]=a,this.nHeads=R+1)}if(a){for(W=0;W<a.length;W++)if(a[W]&&a[W][Disk.SECTOR.ID]==U){if(T=a[W],l&&l==T){let V,R=W;for(;++R>=a.length&&(R=0),V=a[R],V&&V!=T;)if(V[Disk.SECTOR.ID]==U){T=V,W=R;break}}if(null===T[Disk.SECTOR.PATTERN]){if(!e){let l=1;for(;++W<a.length;)null===a[W][Disk.SECTOR.PATTERN]&&l++;return this.readRemoteSectors(V,R,U,l,null!=t,(function(V,R){V&&(T=null),t&&t(T,R)})),t?null:T}T[Disk.SECTOR.PATTERN]=0}break}!T&&k.bFormatting&&9==k.bSector&&(T=a[W]=this.initSector(null,V,R,k.bSector,k.nBytes,0),this.nSectors<k.bSector&&(this.nSectors=k.bSector))}}return t&&t(T,!1),this.addModuleInfo(T),T}fill(V,R,U){let l=V[Disk.SECTOR.LENGTH]>>2,e=new Array(l);for(let V=0;V<l;V++)e[V]=R[U]|R[U+1]<<8|R[U+2]<<16|R[U+3]<<24,U+=4;V[Disk.SECTOR.DATA]=e}toBytes(V){let R=V[Disk.SECTOR.LENGTH],U=new Array(R),l=0,e=R>>2,t=V[Disk.SECTOR.DATA],T=V[Disk.SECTOR.PATTERN];for(let V=0;V<e;V++){let R=V<t.length?t[V]:T;U[l++]=255&R,U[l++]=R>>8&255,U[l++]=R>>16&255,U[l++]=R>>24&255}return U}read(V,R,U){let l=-1;if(V&&(!DEBUG||R||U||this.printf(MESSAGE.DISK+MESSAGE.ADDR,'read("%s",CHS=%d:%d:%d): %s\n',this.sDiskFile,V[Disk.SECTOR.CYLINDER],V[Disk.SECTOR.HEAD],V[Disk.SECTOR.ID],this.getFileInfo(V)),R<V[Disk.SECTOR.LENGTH])){let U=V[Disk.SECTOR.DATA],e=R>>2;l=(e<U.length?U[e]:V[Disk.SECTOR.PATTERN])>>((3&R)<<3)&255}return l}write(V,R,U){if(this.fWriteProtected)return!1;if(DEBUG&&!R&&this.printf(MESSAGE.DISK+MESSAGE.ADDR,'write("%s",CHS=%d:%d:%d)\n',this.sDiskFile,V[Disk.SECTOR.CYLINDER],V[Disk.SECTOR.HEAD],V[Disk.SECTOR.ID]),R<V[Disk.SECTOR.LENGTH]){if(U!=this.read(V,R,!0)){let l=V[Disk.SECTOR.DATA],e=V[Disk.SECTOR.PATTERN],t=R>>2,T=(3&R)<<3;for(let V=l.length;V<=t;V++)l[V]=e;V.cModify?t<V.iModify?(V.cModify+=V.iModify-t,V.iModify=t):t>=V.iModify+V.cModify&&(V.cModify+=t-(V.iModify+V.cModify)+1):(V.iModify=t,V.cModify=1),l[t]=l[t]&~(255<<T)|U<<T,this.fRemote&&this.queueDirtySector(V,!0)}return!0}return null}encodeAsBase64(){let V,R="",U=0;for(;V=this.getSector(U++);)for(let U=0,l=V[Disk.SECTOR.LENGTH];U<l;U++)R+=String.fromCharCode(this.getSectorData(V,U,1));return btoa(R)}encodeAsBinary(){let V,R=[],U=0;for(;V=this.getSector(U++);)for(let U=0,l=V[Disk.SECTOR.LENGTH];U<l;U++)R.push(this.getSectorData(V,U,1));return new Uint8Array(R)}save(){let V=0,R=[];if(R[V++]=[this.sDiskPath,this.dwChecksum,this.nCylinders,this.nHeads,this.nSectors,this.cbSector],!this.fRemote&&!this.fWriteProtected){let U=this.diskData;for(let l=0;l<U.length;l++)for(let e=0;e<U[l].length;e++)for(let t=0;t<U[l][e].length;t++){let T=U[l][e][t];if(T&&T.cModify){let U=[],k=0,F=T.iModify,W=T.iModify+T.cModify;for(;F<W;)U[k++]=T[Disk.SECTOR.DATA][F++];R[V++]=[l,e,t,T.iModify,U]}}}return this.printf(MESSAGE.DEBUG,'save("%s"): saved %d change(s)\n',this.sDiskName,R.length-1),R}restore(V){let R=0,U="unsupported restore format";if(V&&V.length>0){let l=0,e=V[l++];for(e&&e.length>=2&&(!this.diskData.length&&e.length>=6?this.create(DiskAPI.MODE.LOCAL,e[2],e[3],e[4],e[5]):null!=e[0]&&null!=e[1]&&null!=this.dwChecksum&&e[1]!=this.dwChecksum&&(U="original checksum ("+e[1]+") differs from current checksum ("+this.dwChecksum+")",R=-2)),this.diskData.length||(R=-1);l<V.length&&R>=0;){let e=0,t=V[l++],T=t[e++],k=t[e++],F=t[e++];if(T>=this.diskData.length||k>=this.diskData[T].length||F>=this.diskData[T][k].length){U="sector (CHS="+T+":"+k+":"+F+") out of range ("+R+" changes applied)",R=-1;break}if(this.fWriteProtected){U="unable to modify write-protected disk",R=-1;break}let W=t[e++],a=t[e++],s=W+a.length,Z=this.diskData[T][k][F];if(!Z)continue;let S=Z[Disk.SECTOR.DATA].length;for(;S<W;)Z[Disk.SECTOR.DATA][S++]=Z[Disk.SECTOR.PATTERN];let h=0;for(Z.iModify=W,Z.cModify=a.length;W<s;)Z[Disk.SECTOR.DATA][W++]=a[h++];R++}}return R<0?(DEBUG||-2!=R)&&this.printf(MESSAGE.NOTICE,'Unable to restore disk "%s": %s\n',this.sDiskName,U):(this.printf(MESSAGE.DEBUG,'restore("%s"): restored %d change(s)\n',this.sDiskName,R),(BACKTRACK||SYMBOLS)&&this.buildFileTable()),R}convertToJSON(V){let R,U,l=0;for(;U=this.getSector(l++);)this.deflateSector(U);return R=JSON.stringify(this.diskData,(function(V,R){if("file"!=V)return R})),R=R.replace(/,"length":512/g,"").replace(/,"data":\[]/g,""),R=R.replace(/"(c|h|s|l|d|sector|length|data|pattern)":/g,"$1:"),R=R.replace(/,"[^"]*":([0-9]+|true|false)/g,""),R=R.replace(/(c|h|s|l|d|sector|length|data|pattern):/g,'"$1":'),V&&(R=R.replace(/([\]}]),/g,"$1,\n")),R}deflateSector(V){let R=V[Disk.SECTOR.DATA],U=R.length;if(U<<2==V[Disk.SECTOR.LENGTH]){let l=U-1,e=R[l],t=0;for(;l--&&R[l]===e;)t++;t++&&(R.length=U-t,V[Disk.SECTOR.PATTERN]=e)}}dumpSector(V,R,U){let l="";if(DEBUG&&V){null!=R&&(l+="sector "+R+(U?" for "+U:"")+":");let e="",t="",T=V[Disk.SECTOR.LENGTH],k=V[Disk.SECTOR.DATA].length,F=0;for(let R=0;R<T;R++){if(R%16==0&&(l&&(l+=e+" "+t+"\n"),l+=StrLib.toHex(R,4)+": ",e=t=""),R%4==0){let U=R>>2;F=U<k?V[Disk.SECTOR.DATA][U]:V[Disk.SECTOR.PATTERN]}let U=255&F;F>>>=8,e+=StrLib.toHex(U,2)+(R%16==7?"-":" "),t+=U>=32&&U<128?String.fromCharCode(U):"."}e&&(l+=e+" "+t)}return l}}class FileInfo{constructor(V,R,U,l,e,t){this.disk=V,this.path=R,this.name=U,this.attr=l,this.size=e,this.module=t}getSymbol(V,R){let U=null;if(this.module){let l=this.module.segments;for(let e in l){let t=l[e];if(V>=t.offStart&&V<=t.offEnd){let l,e=V-=t.offStart;for(let T in t.ordinals){let k=t.ordinals[T],F=V-k.o;if(!F){U=this.module.name+"!"+k.s;break}R&&F>0&&F<e&&(l=k,e=F)}!U&&l&&(U=this.module.name+"!"+l[1]+"+"+StrLib.toHex(e,0,!0));break}}}return U||this.name+"+"+StrLib.toHex(V,0,!0)}}
class FDC extends Component{static DEFAULT_DRIVE_NAME="Floppy Drive";static TERMS={C:"C",D:"D",H:"H",R:"R",N:"N",DS:"DS",SC:"SC",DTL:"DTL",EOT:"EOT",GPL:"GPL",HLT:"HLT",NCN:"NCN",PCN:"PCN",SRT:"SRT",ST0:"ST0",ST1:"ST1",ST2:"ST2",ST3:"ST3"};static REG_OUTPUT={PORT:1010,DS:3,DS0:0,DS1:1,DS2:2,DS3:3,ENABLE:4,INT_ENABLE:8,MOTOR_D0:16,MOTOR_D1:32,MOTOR_D2:64,MOTOR_D3:128};static REG_STATUS={PORT:1012,BUSY_A:1,BUSY_B:2,BUSY_C:4,BUSY_D:8,BUSY:16,NON_DMA:32,READ_DATA:64,RQM:128};static REG_DATA={PORT:1013,CMD:{READ_TRACK:2,SPECIFY:3,SENSE_DRIVE:4,WRITE_DATA:5,READ_DATA:6,RECALIBRATE:7,SENSE_INT:8,WRITE_DEL_DATA:9,READ_ID:10,READ_DEL_DATA:12,FORMAT_TRACK:13,SEEK:15,SCAN_EQUAL:17,SCAN_LO_EQUAL:25,SCAN_HI_EQUAL:29,MASK:31,SK:32,MF:64,MT:128},RES:{NONE:0,NOT_READY:8,EQUIP_CHECK:16,SEEK_END:32,INCOMPLETE:64,RESET:192,INVALID:128,ST0:255,NO_ID_MARK:256,NOT_WRITABLE:512,NO_DATA:1024,DMA_OVERRUN:4096,CRC_ERROR:8192,END_OF_CYL:32768,ST1:65280,NO_DATA_MARK:65536,BAD_CYL:131072,SCAN_FAILED:262144,SCAN_EQUAL:524288,WRONG_CYL:1048576,DATA_FIELD:2097152,STRL_MARK:4194304,ST2:16711680,DRIVE:50331648,HEAD:67108864,TWOSIDE:134217728,TRACK0:268435456,READY:536870912,WRITEPROT:1073741824,FAULT:-2147483648,ST3:-16777216}};static REG_INPUT={PORT:1015,DS0:1,DS1:2,HS0:4,HS1:8,HS2:16,HS3:32,WRITE_GATE:64,DISK_CHANGE:128};static REG_CONTROL={PORT:1015,RATE500K:0,RATE300K:2,RATE250K:1,RATEUNUSED:3};static CMDS={READ_TRACK:"READ TRACK",SPECIFY:"SPECIFY",SENSE_DRIVE:"SENSE DRIVE",WRITE_DATA:"WRITE DATA",READ_DATA:"READ DATA",RECALIBRATE:"RECALIBRATE",SENSE_INT:"SENSE INTERRUPT",READ_ID:"READ ID",FORMAT:"FORMAT",SEEK:"SEEK"};static aCmdInfo={2:{cbReq:9,cbRes:7,name:FDC.CMDS.READ_TRACK},3:{cbReq:3,cbRes:0,name:FDC.CMDS.SPECIFY},4:{cbReq:2,cbRes:1,name:FDC.CMDS.SENSE_DRIVE},5:{cbReq:9,cbRes:7,name:FDC.CMDS.WRITE_DATA},6:{cbReq:9,cbRes:7,name:FDC.CMDS.READ_DATA},7:{cbReq:2,cbRes:0,name:FDC.CMDS.RECALIBRATE},8:{cbReq:1,cbRes:2,name:FDC.CMDS.SENSE_INT},10:{cbReq:2,cbRes:7,name:FDC.CMDS.READ_ID},13:{cbReq:6,cbRes:7,name:FDC.CMDS.FORMAT},15:{cbReq:3,cbRes:0,name:FDC.CMDS.SEEK}};static{FDC.aPortInput={1009:FDC.prototype.inFDCDiagnostic,1012:FDC.prototype.inFDCStatus,1013:FDC.prototype.inFDCData,1015:FDC.prototype.inFDCInput},FDC.aPortOutput={1010:FDC.prototype.outFDCOutput,1013:FDC.prototype.outFDCData,1015:FDC.prototype.outFDCControl}}constructor(V){super("FDC",V,MESSAGE.FDC),this.dmaRead=FDC.prototype.doDMARead,this.dmaWrite=FDC.prototype.doDMAWrite,this.dmaFormat=FDC.prototype.doDMAFormat,this.aDriveTypes=null,this.aDiskettes=V.diskettes,this.sDisketteServer=V.server||"",this.fBootable=!1!==V.boot,this.sDriveTypes=V.drives,this.configMount=this.parseMount(V.autoMount),this.sortBy=V.sortBy||"name","none"==this.sortBy&&(this.sortBy=null),this.aDiskHistory=[],this.fLocalDisks=!WebLib.isMobile()&&"FileReader"in globals.window,this.driveActive=null,this.externalDrives={},this.externalActive=null,this.fAutoScroll=!1,this.exports={loadDisk:this.loadSelectedDisk,wait:this.waitDrives}}setBinding(V,R,U,l){let e=this,t=U,T=U;switch(R){case"listDisks":return this.bindings[R]=T,T.onchange=function(V){e.updateSelectedDiskette()},!0;case"descDisk":case"listDrives":return this.bindings[R]=T,T.onchange=function(V){let R=StrLib.parseInt(T.value,10);null!=R&&e.displayDiskette(R,!0)},!0;case"loadDisk":return this.bindings[R]=U,U.onclick=function(V){if(e.externalActive){let V=e.externalDrives[e.externalActive];V.controller.loadSelectedDisk(V.drive.iDrive,V.controlDisks)}else e.loadSelectedDisk()},!0;case"saveDisk":return this.fLocalDisks?(this.bindings[R]=U,U.onclick=function(V){let R=e.bindings.listDrives;if(R&&R.options&&e.aDrives){let V=StrLib.parseInt(R.value,10)||0,U=e.aDrives[V];if(U){let V=U.disk;if(V){DEBUG&&e.printf("saving diskette %s...\n",V.sDiskPath);let R=WebLib.downloadFile(V.encodeAsBinary(),"octet-stream",!0,V.sDiskFile.replace(".json",".img"));Component.alertUser(R)}else e.printf(MESSAGE.NOTICE,"No diskette loaded in drive\n")}else e.printf(MESSAGE.NOTICE,"No diskette drive selected\n")}},!0):(DEBUG&&this.printf(MESSAGE.LOG,"Local disk support not available"),U.parentNode.style.display="none",!1);case"mountDisk":return this.fLocalDisks?(this.bindings[R]=t,t.onchange=function(){let V=t.children[0],R=V.children[0].files;V.children[1].disabled=!R.length},t.onsubmit=function(V){let R=V.currentTarget[1].files[0];if(R){let V=R.name,U=StrLib.getBaseName(V,!0);e.loadSelectedDrive(U,V,R)}return!1},!0):(DEBUG&&this.printf(MESSAGE.LOG,"Local disk support not available\n"),t.parentNode.removeChild(t),!1)}return!1}initBus(cmp,bus,cpu,dbg){this.bus=bus,this.cpu=cpu,this.dbg=dbg,this.cmp=cmp;let aDriveTypes=cmp.getMachineParm("floppyDrives");if(aDriveTypes&&("string"==typeof aDriveTypes?this.sDriveTypes=aDriveTypes:(this.aDriveTypes=aDriveTypes,this.sDriveTypes="")),this.sDriveTypes)try{this.aDriveTypes=eval("("+this.sDriveTypes+")"),this.sDriveTypes=""}catch(V){Component.error("FDC drive configuration error: "+V.message+" ("+this.sDriveTypes+")")}if(this.chipset=cmp.getMachineComponent("ChipSet"),this.configMount=this.parseMount(this.cmp.getMachineParm("autoMount"),this.configMount),this.panel=cmp.getMachineComponent("Panel",!1),this.initController(),bus.addPortInputTable(this,FDC.aPortInput),bus.addPortOutputTable(this,FDC.aPortOutput),this.aDiskettes=this.cmp.getMachineParm("diskettes")||this.aDiskettes,this.aDiskettes&&"string"==typeof this.aDiskettes){let V=this,R=WebLib.getHostName(),U=V.getDriveLimits(),l=V.aDiskettes.split(","),e=0,t=0;for(let V=0;V<l.length;V++)"localhost"!=R&&l[V].indexOf("private")>=0&&l.splice(V--,1);V.aDiskettes=[];for(let T=0;T<l.length;T++){let k=l[T],F="Loading "+k+"...";WebLib.getResource(k,"json",!0,(function(T,k,F){let W=T.indexOf("private")>=0;if(k&&!F)try{JSONLib.parseDiskettes(V.aDiskettes,JSON.parse(k),"/pcx86",V.sDisketteServer,R,U),t++}catch(R){W&&"<"==k[0]||V.printf(MESSAGE.WARNING,"Unable to parse %s: %s\n",T,R.message)}else W||V.printf(MESSAGE.WARNING,"Unable to open %s (%d)\n",T,F);++e==l.length&&V.addDiskettes(!t)}),(function(R){V.printf(MESSAGE.PROGRESS,"%s\n",F)}))}}else this.addDiskettes()}setLED(V){this.panel&&this.panel.setLED("fdcState",V)}parseMount(config,configMerge){if(config){if("string"==typeof config)try{config=eval("("+config+")")}catch(V){Component.error("FDC auto-mount error: "+V.message+" ("+config+")"),config={}}}else config={};if(configMerge)for(let V in configMerge)config[V]||(config[V]=configMerge[V]);for(let V in config){let R=config[V];"string"==typeof R&&(config[V]={name:R})}return config}powerUp(V,R){if(!R){if(V){if(!this.restore(V))return!1}else this.reset(!0),this.cmp.fReload&&(this.unloadAllDrives(!0),this.autoMount(!0));this.resetDriveList()}return!0}powerDown(V,R){return!V||this.save()}reset(V){this.initController(),V||this.resetDriveList()}addDrive(V,R,U){this.externalDrives[V.name]={drive:V,controller:R,controlDisks:U}}resetDriveList(){let V;if(V=this.bindings.listDrives){for(;V.firstChild;)V.removeChild(V.firstChild);let R=0;for(V.value="";R<this.nDrives;){let U=document.createElement("option");U.value=R.toString(),U.text=String.fromCharCode(65+R)+":",V.appendChild(U),U=document.createElement("option"),U.value=R.toString(),U.text=String.fromCharCode(65+R)+"*",U.title="write-protected",V.appendChild(U),R++}for(let U in this.externalDrives){let l=document.createElement("option");l.value=R.toString(),l.text=U,V.appendChild(l),R++}this.nDrives>0&&(V.value="0",this.displayDiskette(0,!1))}}save(){let V=new State(this);return V.set(0,this.saveController()),V.data()}restore(V){return this.initController(V[0])}initController(V){let R,U=0,l=!0;V||(V=[0,0,FDC.REG_STATUS.RQM,new Array(9),0,0,0,[]]),this.iDrive=V[U++],U++,this.regStatus=V[U++],this.regDataArray=V[U++],this.regDataIndex=V[U++],this.regDataTotal=V[U++],this.regOutput=V[U++];let e=V[U++],t=V[U++];for(null!=t&&(this.aDiskHistory=t),this.nDrives=this.aDriveTypes?this.aDriveTypes.length:this.chipset?this.chipset.getDIPFloppyDrives():4,void 0===this.aDrives&&(this.aDrives=new Array(4)),R=0;R<this.aDrives.length;R++){let V=!1,U=this.aDrives[R];if(void 0===U){switch(V=!0,U=this.aDrives[R]={},this.chipset?this.chipset.getDIPFloppyDriveSize(R):0){case 160:case 180:U.nHeads=1;case 320:case 360:default:U.nCylinders=40,U.nSectors=9;break;case 720:U.nCylinders=80,U.nSectors=9;break;case 1200:U.nCylinders=80,U.nSectors=15;break;case 1440:U.nCylinders=80,U.nSectors=18}}this.initDrive(U,R,this.aDriveTypes?this.aDriveTypes[R]:null,e[R],V)||(l=!1)}return this.regInput=V[U++]||0,this.regControl=V[10]||FDC.REG_CONTROL.RATE500K,this.printf("FDC initialized for %d drive(s)\n",this.aDrives.length),l}saveController(){let V=0,R=[];return R[V++]=this.iDrive,R[V++]=0,R[V++]=this.regStatus,R[V++]=this.regDataArray,R[V++]=this.regDataIndex,R[V++]=this.regDataTotal,R[V++]=this.regOutput,R[V++]=this.saveDrives(),R[V++]=this.saveDeltas(),R[V++]=this.regInput,R[10]=this.regControl,R}initDrive(V,R,U,l,e){let t=0,T=!0;V.iDrive=R,V.fBusy=V.fLocal=!1,V.fnCallReady=null;let k=U&&U.heads;V.fBootable=U&&U.boot,null==V.fBootable&&(V.fBootable=this.fBootable),e&&(V.fWritable=!0,k&&this.printf(MESSAGE.STATUS,"drive %d configured with %d head%s\n",R,k,k>1?"s":""),V.fBootable||this.printf(MESSAGE.STATUS,"drive %d configured as non-bootable\n",R)),void 0===l&&(l=[FDC.REG_DATA.RES.RESET,!0,0,k||2,0]),"boolean"==typeof l[1]&&(l[1]=[FDC.DEFAULT_DRIVE_NAME,V.nCylinders||40,V.nHeads||l[3],V.nSectors||9,V.cbSector||512,l[1],V.nDiskCylinders,V.nDiskHeads,V.nDiskSectors]),V.resCode=l[t++];let F=l[t++];V.name=F[0],V.nCylinders=F[1],V.nHeads=F[2],V.nSectors=F[3],V.cbSector=F[4],V.fRemovable=F[5],(V.nDiskCylinders=F[6])?(V.nDiskHeads=F[7],V.nDiskSectors=F[8]):(V.nDiskCylinders=V.nCylinders,V.nDiskHeads=V.nHeads,V.nDiskSectors=V.nSectors),V.bHead=l[t++],V.bCylinderSeek=l[t++],V.bCylinder=l[t++],V.bCylinderSeek>=100?V.bCylinderSeek-=100:V.bCylinderSeek-=V.bCylinder,V.bSector=l[t++],V.bSectorEnd=l[t++],V.nBytes=l[t++],V.iByte=l[t++],V.sector=null,V.sectorPrev=null,V.disk||(V.sDiskPath="");let W=l[t++];if(102==W&&(W=!1),"boolean"==typeof W){let U=W,e=l[t++],T=l[t++];null!=l[t]&&(V.fWritable=l[t]),U?this.mountDrive(R,e,T):this.loadDrive(R,e,T,!0)?V.disk&&(T?this.addDiskHistory(e,T,V.disk):MAXDEBUG&&Component.warning("Disk '"+(V.disk.sDiskName||e)+"' not recorded properly in drive "+R)):this.setReady(!1)}else void 0!==W&&V.disk&&V.disk.restore(W)<0&&(T=!1);return T&&V.disk&&void 0!==V.iByte&&(V.sector=V.disk.seek(V.bCylinder,V.bHead,V.bSector)),T}getDriveLimits(){let V=[0,0];for(let R=0;R<this.aDrives.length;R++){let R=this.aDrives[0];(V[0]>R.nHeads||!V[0])&&(V[0]=R.nHeads),(V[1]>R.nCylinders||!V[1])&&(V[1]=R.nCylinders)}return V}saveDrives(){let V=0,R=[];for(let U=0;U<this.aDrives.length;U++)R[V++]=this.saveDrive(this.aDrives[U]);return R}saveDrive(V){let R=0,U=[];return U[R++]=V.resCode,U[R++]=[V.name,V.nCylinders,V.nHeads,V.nSectors,V.cbSector,V.fRemovable,V.nDiskCylinders,V.nDiskHeads,V.nDiskSectors],U[R++]=V.bHead,U[R++]=V.bCylinderSeek+100,U[R++]=V.bCylinder,U[R++]=V.bSector,U[R++]=V.bSectorEnd,U[R++]=V.nBytes,U[R++]=V.iByte,U[R++]=V.fLocal,U[R++]=V.sDiskName,U[R++]=V.sDiskPath,U[12]=V.fWritable,DEBUG&&!V.sDiskPath&&V.disk&&V.disk.sDiskPath&&Component.warning("Disk '"+V.disk.sDiskName+"' not saved properly in drive "+V.iDrive),U}saveDeltas(){for(let V=0;V<this.aDrives.length;V++){let R=this.aDrives[V];R.disk&&this.updateDiskHistory(R.sDiskName,R.sDiskPath,R.disk)}return this.aDiskHistory}copyDrive(V){let R,U=this.aDrives[V];if(void 0!==U){R={};for(let V in U)R[V]=U[V]}return R}seekDrive(V,R,U){if(V.disk){let l=V.disk.info(),e=l[0],t=l[1],T=l[2],k=t*T;if(R+U<=e*k)return V.bCylinder=Math.floor(R/k),R%=k,V.bHead=Math.floor(R/T),V.bSector=R%T+1,V.nBytes=U*l[3],V.resCode=FDC.REG_DATA.RES.NONE,!0}return!1}autoMount(V){V||(this.cAutoMount=0);for(let R in this.configMount){let U=this.configMount[R],l=U.path||this.findDisketteByName(U.name);if(l){let e=R.charCodeAt(0)-65;if(e>=0&&e<this.aDrives.length){let R=U.name||this.findDisketteByPath(l)||StrLib.getBaseName(l,!0);!this.loadDrive(e,R,l,!0)&&V&&this.setReady(!1);continue}this.printf(MESSAGE.NOTICE,"Incorrect auto-mount settings for drive %s (%s)\n",R,JSON.stringify(U))}}return!!this.cAutoMount}loadSelectedDisk(...V){let R=this.bindings.listDisks;if(R){let U=R.options[R.selectedIndex].text,l=R.value;return this.fAutoScroll="scroll"==V[0],this.loadSelectedDrive(U,l)}return!1}loadSelectedDrive(V,R,U){let l,e=this.bindings.listDrives;if(e&&!isNaN(l=StrLib.parseInt(e.value,10))&&l>=0&&l<this.aDrives.length){if(!R)return this.unloadDrive(l),!0;if("?"==R)return this.printf(MESSAGE.NOTICE,'Use "Choose File" and "Mount" to select and load a local disk\n'),!1;if("??"==R){if(R="",globals.window.prompt&&(R=globals.window.prompt("Enter the URL of a remote disk image.","")||""),!R)return!1;V=StrLib.getBaseName(R),this.printf(MESSAGE.DEBUG,'Attempting to load %s as "%s"\n',R,V)}for(;this.loadDrive(l,V,R,!1,U)<0;){if(!("localhost"==WebLib.getHostName()||globals.window.confirm&&globals.window.confirm("Click OK to reload the original disk and discard any changes.")))return this.printf(MESSAGE.DEBUG,"load cancelled\n"),!1;this.removeDiskHistory(V,R),this.unloadDrive(l,!1,!0)}return!0}return this.printf(MESSAGE.NOTICE,"Unable to load the selected drive\n"),!1}mountDrive(V,R,U){let l=this.aDrives[V];this.unloadDrive(V,!0,!0),l.fLocal=!0;let e=new Disk(this,l,DiskAPI.MODE.PRELOAD);this.doneLoadDrive(l,e,R,U,!0)}loadDrive(V,R,U,l,e,t){let T=-1,k=(V,R,U,l,e)=>{this.doneLoadDrive(V,R,U,l),t&&t(R,e)},F=this.aDrives[V];if(F){if(U&&(U=WebLib.redirectResource(U),F.sDiskPath.toUpperCase()!=U.toUpperCase())){if(T=1,this.unloadDrive(V,l,!0),F.fBusy)return this.printf(MESSAGE.NOTICE,"Drive %d busy\n",V),0;return F.fBusy=!0,l&&(F.fAutoMount=!0,this.cAutoMount++,this.printf('loading diskette "%s"\n',R)),F.fLocal=!!e,new Disk(this,F,DiskAPI.MODE.PRELOAD).load(R,U,e,k)||(T=0),T}}else T=Errors.DOS.INVALID_DRIVE;return t&&t(F&&F.disk,T),T}doneLoadDrive(V,R,U,l,e){let t;V.fBusy=!1,R&&(t=R.info(),(R&&t[0]>V.nCylinders||t[1]>V.nHeads)&&(this.printf(MESSAGE.NOTICE,'Diskette "%s" too large for drive %s\n',U,String.fromCharCode(65+V.iDrive)),R=null)),R?(V.disk=R,V.sDiskName=U,V.sDiskPath=l,this.findDisketteByPath(l)||this.addDiskette(U,l),this.addDiskHistory(U,l,R),t=R.info(),this.regInput|=FDC.REG_INPUT.DISK_CHANGE,V.fnCallReady||this.printf(MESSAGE.STATUS,'Mounted "%s" (format %s) in drive %s\n',U,R.imageInfo&&R.imageInfo.format||"unknown",String.fromCharCode(65+V.iDrive)),V.nDiskCylinders=t[0],V.nDiskHeads=t[1],V.nDiskSectors=t[2],this.cmp&&this.cmp.updateFocus(this.fAutoScroll)):V.fLocal=!1,V.fAutoMount&&(V.fAutoMount=!1,--this.cAutoMount||this.setReady()),this.displayDiskette(V.iDrive),V.fnCallReady&&(V.fnCallReady(),V.fnCallReady=null),this.fAutoScroll=!1}addDiskette(V,R,U){let l=this.bindings.listDisks;if(l&&l.options){for(let V=0;V<l.options.length;V++)if(l.options[V].value==R)return;let e=document.createElement("option");e.text=V,e.value=R,U&&l.childNodes[0]?l.insertBefore(e,l.childNodes[0]):l.appendChild(e)}}addDiskettes(V){if(this.aDiskettes)for(let V=0;V<this.aDiskettes.length;V++){let R=this.aDiskettes[V];this.addDiskette(R.name,R.path)}if(this.sortBy){let V,R=[],U=this,l=this.bindings.listDisks;if(l){for(V=0;V<l.options.length;V++)R.push(l.options[V]);for(R.sort((function(V,R){return"path"!=U.sortBy?V.text.localeCompare(R.text):V.value.localeCompare(R.value)})),V=0;V<R.length;V++)try{l.options[V]=R[V]}catch(V){break}}}this.addDiskette("None","",!0),this.fLocalDisks&&this.addDiskette("Local Disk","?"),this.addDiskette("Remote Disk","??"),!V&&this.autoMount()||this.setReady()}findDisketteByPath(V){let R=this.bindings.listDisks;if(R){if(R.options)for(let U=0;U<R.options.length;U++){let l=R.options[U];if(l.value==V)return l.text}}else if(this.aDiskettes)for(let R=0;R<this.aDiskettes.length;R++){let U=this.aDiskettes[R];if(U.path==V)return U.name}return null}findDisketteByName(V){if(V&&"None"!=V){let R=this.bindings.listDisks;if(R){if(R.options)for(let U=0;U<R.options.length;U++){let l=R.options[U];if(l.text==V)return l.value}}else if(this.aDiskettes)for(let R=0;R<this.aDiskettes.length;R++){let U=this.aDiskettes[R];if(U.name==V)return U.path}this.printf(MESSAGE.NOTICE,'Unable to find diskette "%s"\n',V)}return""}getDiskList(V){let R,U,l,e=this.bindings.listDrives;if(e&&e.options){let t=e.options[e.selectedIndex];if(t){let e=t.textContent;U=this.bindings.listDisks,this.externalDrives[e]?(this.externalActive||(l=this.externalDrives[e].controlDisks,this.externalActive=e),R=this.externalDrives[e].drive):(this.externalActive&&(l=U,U=this.externalDrives[this.externalActive].controlDisks,this.externalActive=null),R=this.aDrives[V])}}if(U&&l){let V=l.nextSibling,R=l.parentNode;V===U?R.insertBefore(U,l):(U.parentNode.insertBefore(l,U),V?R.insertBefore(U,V):R.appendChild(U)),l.style.width=U.scrollWidth+"px",U.style.display="none",l.style.display="inline-block",U=l}return R?this.driveActive=R:U=void 0,U}displayDiskette(V,R){let U=this.getDiskList(V);if(U){let l,e=this.driveActive,t=this.bindings.listDrives,T=StrLib.parseInt(t.value,10),k=e.fLocal?"?":e.sDiskPath;if(!isNaN(T)&&T==V){for(l=0;l<U.options.length;l++)if(U.options[l].value==k){U.selectedIndex!=l&&(U.selectedIndex=l);break}l==U.options.length&&(U.selectedIndex=0)}if(!1===R){for(l=0;l<t.options.length;l++)if(+t.options[l].value==e.iDrive){t.selectedIndex!=l&&(t.selectedIndex=l),!1===e.fWritable&&t.selectedIndex++;break}}else!0===R&&void 0!==e.fWritable&&t.selectedIndex>=0&&e.fWritable!=!(1&t.selectedIndex)&&(e.fWritable=!e.fWritable,e.fWritable||this.printf(MESSAGE.NOTICE,"Any diskette loaded in this drive will now be write-protected."))}}updateSelectedDiskette(){let control=this.bindings.listDisks,controlDesc=this.bindings.descDisk,controlOption=control.options[control.selectedIndex];if(controlDesc&&controlOption){let dataValue={},sValue=controlOption.getAttribute("data-value");if(sValue)try{dataValue=eval("("+sValue+")")}catch(V){Component.error(this.type+" option error: "+V.message)}let sHTML=dataValue.desc;void 0===sHTML&&(sHTML="");let sHRef=dataValue.href;void 0!==sHRef&&(sHTML='<a href="'+sHRef+'" target="_blank">'+sHTML+"</a>"),controlDesc.innerHTML=sHTML}}waitDrives(V){for(let R=0;R<this.aDrives.length;R++){let U=this.aDrives[R];if(U&&U.fBusy)return U.fnCallReady||(U.fnCallReady=V),!1}return!0}unloadDrive(V,R,U){let l=this.aDrives[V];return!!l.disk&&(this.updateDiskHistory(l.sDiskName,l.sDiskPath,l.disk),l.sDiskName="",l.sDiskPath="",l.disk=null,l.fLocal=!1,this.regInput|=FDC.REG_INPUT.DISK_CHANGE,U||this.printf(MESSAGE.STATUS,"Drive %s unloaded\n",String.fromCharCode(65+V)),R||U||this.displayDiskette(V),!0)}unloadAllDrives(V){V&&(this.aDiskHistory=[]);for(let V=0;V<this.aDrives.length;V++)this.unloadDrive(V,!0)}addDiskHistory(V,R,U){let l;for(l=0;l<this.aDiskHistory.length;l++)if(this.aDiskHistory[l][1]==R){let R=U.restore(this.aDiskHistory[l][2]);return void(DEBUG&&this.printf("disk '%s' restored from history (%d changes)\n",V,R))}DEBUG&&this.printf("disk '%s' added to history (nothing to restore)\n",V),this.aDiskHistory[l]=[V,R,[]]}removeDiskHistory(V,R){let U;for(U=0;U<this.aDiskHistory.length;U++)if(this.aDiskHistory[U][1]==R)return this.aDiskHistory.splice(U,1),void(DEBUG&&this.printf("disk '%s' removed from history\n",V));DEBUG&&this.printf("unable to remove disk '%s' from history (%s)\n",V,R)}updateDiskHistory(V,R,U){let l;for(l=0;l<this.aDiskHistory.length;l++)if(this.aDiskHistory[l][1]==R)return this.aDiskHistory[l][2]=U.save(),void(DEBUG&&this.printf("disk '%s' updated in history\n",V));DEBUG&&this.printf("unable to update disk '%s' in history (%s)\n",V,R)}outFDCOutput(V,R,U){this.printIO(V,R,U,"OUTPUT"),R&FDC.REG_OUTPUT.ENABLE?this.regOutput&FDC.REG_OUTPUT.ENABLE||(this.regOutput=R,this.requestInterrupt()):this.initController(),this.regOutput=R}inFDCDiagnostic(V,R){return this.printIO(V,void 0,R,"DIAG",80),80}inFDCStatus(V,R){return this.printIO(V,void 0,R,"STATUS",this.regStatus),this.regStatus}inFDCData(V,R){let U=0;return this.regDataIndex<this.regDataTotal&&(U=this.regDataArray[this.regDataIndex]),this.regOutput&FDC.REG_OUTPUT.INT_ENABLE&&this.chipset&&this.chipset.clearIRR(ChipSet.IRQ.FDC),this.messageEnabled()&&this.printIO(V,void 0,R,"DATA["+this.regDataIndex+"]",U),++this.regDataIndex>=this.regDataTotal&&(this.regStatus&=~(FDC.REG_STATUS.READ_DATA|FDC.REG_STATUS.BUSY),this.regDataIndex=this.regDataTotal=0),U}outFDCData(V,R,U){this.messageEnabled()&&this.printIO(V,R,U,"DATA["+this.regDataTotal+"]"),this.regDataTotal<this.regDataArray.length&&(this.regDataArray[this.regDataTotal++]=R);let l=this.regDataArray[0],e=l&FDC.REG_DATA.CMD.MASK;void 0===FDC.aCmdInfo[e]?(this.printf("unsupported FDC command: %02x\n",l),MAXDEBUG&&this.dbg.stopCPU()):this.regDataTotal>=FDC.aCmdInfo[e].cbReq&&this.doCmd()}inFDCInput(V,R){let U=this.regInput;return this.regInput&=~FDC.REG_INPUT.DISK_CHANGE,this.printIO(V,void 0,R,"INPUT",U),U}outFDCControl(V,R,U){this.printIO(V,R,U,"CONTROL"),this.regControl=R}doCmd(){let V=!1;this.regDataIndex=0;let R,U,l,e,t,T,k,F,W=this.popCmd(),a=W&FDC.REG_DATA.CMD.MASK;switch(a){case FDC.REG_DATA.CMD.SPECIFY:this.popSRT(),this.popHLT(),this.beginResult();break;case FDC.REG_DATA.CMD.SENSE_DRIVE:U=this.popCmd(FDC.TERMS.DS),l=U>>2&1,this.iDrive=3&U,R=this.aDrives[this.iDrive],this.beginResult(),this.pushST3(R);break;case FDC.REG_DATA.CMD.WRITE_DATA:F=Panel.STATE.WRITE;case FDC.REG_DATA.CMD.READ_DATA:case FDC.REG_DATA.CMD.READ_TRACK:F||(F=Panel.STATE.READ),U=this.popCmd(FDC.TERMS.DS),l=U>>2&1,this.iDrive=3&U,R=this.aDrives[this.iDrive],R.bHead=l,e=R.bCylinder=this.popCmd(FDC.TERMS.C),t=this.popCmd(FDC.TERMS.H),T=R.bSector=this.popCmd(FDC.TERMS.R),k=this.popCmd(FDC.TERMS.N),R.nBytes=128<<k,R.bSectorEnd=this.popCmd(FDC.TERMS.EOT),this.popCmd(FDC.TERMS.GPL),this.popCmd(FDC.TERMS.DTL),this.setLED(F),R.disk&&R.disk.nSectors>=15&&this.regControl!=FDC.REG_CONTROL.RATE500K?(R.resCode=FDC.REG_DATA.RES.INCOMPLETE|FDC.REG_DATA.RES.NO_DATA,V=!0):V=a!=FDC.REG_DATA.CMD.WRITE_DATA?this.doRead(R):this.doWrite(R),this.pushResults(R,W,l,e,t,T,k);break;case FDC.REG_DATA.CMD.RECALIBRATE:U=this.popCmd(FDC.TERMS.DS),this.iDrive=3&U,R=this.aDrives[this.iDrive],R.bCylinder=R.bCylinderSeek=0,R.resCode=FDC.REG_DATA.RES.SEEK_END|FDC.REG_DATA.RES.TRACK0,this.beginResult(),V=!0;break;case FDC.REG_DATA.CMD.SENSE_INT:R=this.aDrives[this.iDrive],R.bHead=0,this.beginResult(),this.pushST0(R),this.pushResult(R.bCylinder,FDC.TERMS.PCN),this.iDrive=this.iDrive+1&3;break;case FDC.REG_DATA.CMD.READ_ID:U=this.popCmd(FDC.TERMS.DS),l=U>>2&1,this.iDrive=3&U,R=this.aDrives[this.iDrive],e=R.bCylinder,t=R.bHead=l,T=R.bSector=1,k=0,R.resCode=FDC.REG_DATA.RES.NONE,R.disk&&(R.sector=R.disk.seek(R.bCylinder,R.bHead,R.bSector))?k=R.sector.length>>8:R.resCode=FDC.REG_DATA.RES.NOT_READY|FDC.REG_DATA.RES.INCOMPLETE,this.pushResults(R,W,l,e,t,T,k),V=!0;break;case FDC.REG_DATA.CMD.FORMAT_TRACK:U=this.popCmd(FDC.TERMS.DS),l=U>>2&1,this.iDrive=3&U,R=this.aDrives[this.iDrive],e=R.bCylinder,t=R.bHead=l,T=1,k=this.popCmd(FDC.TERMS.N),R.nBytes=128<<k,R.bSectorEnd=this.popCmd(FDC.TERMS.SC),this.popCmd(FDC.TERMS.GPL),R.bFiller=this.popCmd(FDC.TERMS.D),this.doFormat(R),this.pushResults(R,W,l,e,t,T,k),V=!0;break;case FDC.REG_DATA.CMD.SEEK:U=this.popCmd(FDC.TERMS.DS),l=U>>2&1,this.iDrive=3&U,R=this.aDrives[this.iDrive],R.bHead=l,e=this.popCmd(FDC.TERMS.NCN),R.bCylinder+=e-R.bCylinderSeek,R.bCylinder<0&&(R.bCylinder=0),R.bCylinder>=R.nCylinders&&(R.bCylinder=R.nCylinders-1),R.bCylinderSeek=e,R.resCode=FDC.REG_DATA.RES.SEEK_END,R.bCylinder||(R.resCode|=FDC.REG_DATA.RES.TRACK0),this.beginResult(),V=!0;break;default:this.printf("unsupported FDC operation: %02x\n",W),MAXDEBUG&&this.dbg.stopCPU()}this.regDataTotal>0&&(this.regStatus|=FDC.REG_STATUS.READ_DATA|FDC.REG_STATUS.BUSY),(!R||R.resCode&FDC.REG_DATA.RES.NOT_READY&&this.chipset.model<ChipSet.MODEL_COMPAQ_DESKPRO386)&&(V=!1),V&&this.requestInterrupt(a==FDC.REG_DATA.CMD.READ_ID?16:0)}pushResults(V,R,U,l,e,t,T){this.beginResult(),this.pushST0(V),this.pushST1(V),this.pushST2(V);let k=0;l==V.bCylinder&&e==V.bHead||(k=t=1),R&FDC.REG_DATA.CMD.MT&&(e^=k,U||(k=0),t=V.bSector,V.disk&&V.disk.diskData&&V.disk.diskData[l]&&V.disk.diskData[l][e]&&V.disk.diskData[l][e][t-1]&&(t=V.disk.diskData[l][e][t-1][Disk.SECTOR.ID])),l+=k,this.pushResult(l,FDC.TERMS.C),this.pushResult(e,FDC.TERMS.H),this.pushResult(t,FDC.TERMS.R),this.pushResult(T,FDC.TERMS.N)}popCmd(V){let R=this.regDataArray[this.regDataIndex];if(DEBUG){let U=R&FDC.REG_DATA.CMD.MASK;V||this.regDataIndex||!FDC.aCmdInfo[U]||(V=FDC.aCmdInfo[U].name),this.printf(MESSAGE.PORT+MESSAGE.FDC,"%s.popCmd(%s): %#04x\n",this.idComponent,V||this.regDataIndex,R)}return this.regDataIndex++,R}popHLT(){this.popCmd(FDC.TERMS.HLT)}popSRT(){this.popCmd(FDC.TERMS.SRT)}requestInterrupt(V){this.regOutput&FDC.REG_OUTPUT.INT_ENABLE&&this.chipset&&this.chipset.setIRR(ChipSet.IRQ.FDC,V)}beginResult(){this.setLED(),this.regDataIndex=this.regDataTotal=0}pushResult(V,R){DEBUG&&this.printf(MESSAGE.PORT+MESSAGE.FDC,"%s.pushResult(%s): %#04x\n",this.idComponent,R||this.regDataTotal,V),this.regDataArray[this.regDataTotal++]=V}pushST0(V){this.pushResult(V.iDrive|V.bHead<<2|V.resCode&FDC.REG_DATA.RES.ST0,FDC.TERMS.ST0)}pushST1(V){this.pushResult((V.resCode&FDC.REG_DATA.RES.ST1)>>>8,FDC.TERMS.ST1)}pushST2(V){this.pushResult((V.resCode&FDC.REG_DATA.RES.ST2)>>>16,FDC.TERMS.ST2)}pushST3(V){this.pushResult((V.resCode&FDC.REG_DATA.RES.ST3)>>>24,FDC.TERMS.ST3)}doDMARead(V,R,U){void 0===R||R<0?this.readData(V,U):(DEBUG&&this.printf("%s.doDMARead(): invalid DMA acknowledgement\n",this.idComponent),U(-1,!1))}doDMAWrite(V,R){return void 0!==R&&R>=0?this.writeData(V,R):(DEBUG&&this.printf("%s.doDMAWrite(): invalid DMA acknowledgement\n",this.idComponent),-1)}doDMAFormat(V,R){return void 0!==R&&R>=0?this.writeFormat(V,R):(DEBUG&&this.printf("%s.doDMAFormat(): invalid DMA acknowledgement\n",this.idComponent),-1)}doRead(V){if(V.resCode=FDC.REG_DATA.RES.NOT_READY|FDC.REG_DATA.RES.INCOMPLETE,V.disk){if(this.messageEnabled()){let R=this.chipset.getDMAState(ChipSet.DMA_FDC);this.printf("%s.doRead(drive=%d,CHS=%d:%d:%d,LBA=%d,addr=%#X,len=%#X)\n",this.idComponent,V.iDrive,V.bCylinder,V.bHead,V.bSector,V.bCylinder*(V.disk.nHeads*V.disk.nSectors)+V.bHead*V.disk.nSectors+V.bSector-1,R[0],R[1]+1)}if(V.bHead>V.nHeads-1)return V.resCode=FDC.REG_DATA.RES.NO_DATA|FDC.REG_DATA.RES.INCOMPLETE,!0;if(V.sector=null,V.resCode=FDC.REG_DATA.RES.NONE,this.chipset){if(!V.bCylinder&&!V.bHead&&1==V.bSector&&!V.fBootable&&31744==this.chipset.getDMAState(ChipSet.DMA_FDC)[0])return!1;this.chipset.connectDMA(ChipSet.DMA_FDC,this,"dmaRead",V),this.chipset.requestDMA(ChipSet.DMA_FDC)}}return!0}doWrite(V){if(V.resCode=FDC.REG_DATA.RES.NOT_READY|FDC.REG_DATA.RES.INCOMPLETE,V.disk){if(this.messageEnabled()){let R=this.chipset.getDMAState(ChipSet.DMA_FDC);this.printf("%s.doWrite(drive=%d,CHS=%d:%d:%d,LBA=%d,addr=%#X,len=%#X)\n",this.idComponent,V.iDrive,V.bCylinder,V.bHead,V.bSector,V.bCylinder*(V.disk.nHeads*V.disk.nSectors)+V.bHead*V.disk.nSectors+V.bSector-1,R[0],R[1]+1)}if(V.bHead>V.nHeads-1)return V.resCode=FDC.REG_DATA.RES.NO_DATA|FDC.REG_DATA.RES.INCOMPLETE,!0;if(!V.fWritable||V.disk.fWriteProtected)return V.resCode=FDC.REG_DATA.RES.NOT_WRITABLE|FDC.REG_DATA.RES.INCOMPLETE,!0;V.sector=null,V.resCode=FDC.REG_DATA.RES.NONE,this.chipset&&(this.chipset.connectDMA(ChipSet.DMA_FDC,this,"dmaWrite",V),this.chipset.requestDMA(ChipSet.DMA_FDC))}return!0}doFormat(V){V.resCode=FDC.REG_DATA.RES.NOT_READY|FDC.REG_DATA.RES.INCOMPLETE,V.disk&&(V.sector=null,V.resCode=FDC.REG_DATA.RES.NONE,this.chipset&&(V.cbFormat=0,V.abFormat=new Array(4),V.bFormatting=!0,V.cSectorsFormatted=0,this.chipset.connectDMA(ChipSet.DMA_FDC,this,"dmaFormat",V),this.chipset.requestDMA(ChipSet.DMA_FDC),V.bFormatting=!1))}readData(V,R){let U=-1,l=null,e=0;if((!V.resCode||V.resCode==(FDC.REG_DATA.RES.CRC_ERROR|FDC.REG_DATA.RES.INCOMPLETE))&&V.disk)for(;;){if(V.sector&&(e=V.iByte,(U=V.disk.read(V.sector,V.iByte++))>=0)){l=V.sector;break}if(V.sector=V.disk.seek(V.bCylinder,V.bHead,V.bSector,V.sectorPrev),!V.sector){V.resCode=FDC.REG_DATA.RES.NO_DATA|FDC.REG_DATA.RES.INCOMPLETE;break}V.sectorPrev=V.sector,V.sector.dataError&&(V.resCode=FDC.REG_DATA.RES.CRC_ERROR|FDC.REG_DATA.RES.INCOMPLETE),V.iByte=0,this.advanceSector(V)}R(U,!1,l,e)}writeData(V,R){if(V.resCode||!V.disk)return-1;for(;;){if(V.sector){if(V.sector.dataError&&V.iByte>=V.sector.dataError)break;if(V.disk.write(V.sector,V.iByte++,R))break}if(V.sector=V.disk.seek(V.bCylinder,V.bHead,V.bSector,V.sectorPrev),!V.sector){V.resCode=FDC.REG_DATA.RES.CRC_ERROR|FDC.REG_DATA.RES.INCOMPLETE,R=-1;break}V.sectorPrev=V.sector,V.iByte=0,this.advanceSector(V)}return R}advanceSector(V){V.bSector++;V.bSector>=V.nDiskSectors+1&&(V.bSector=1,V.bHead++,V.bHead>=V.nDiskHeads&&(V.bHead=0,V.bCylinder++))}writeFormat(V,R){if(V.resCode)return-1;if(V.abFormat[V.cbFormat++]=R,V.cbFormat==V.abFormat.length){V.bCylinder=V.abFormat[0],V.bHead=V.abFormat[1],V.bSector=V.abFormat[2],V.nBytes=128<<V.abFormat[3],V.cbFormat=0,this.messageEnabled()&&this.printf("%s.writeFormat(drive=%d,CHS=%d:%d:%d,len=%d)\n",this.idComponent,V.iDrive,V.bCylinder,V.bHead,V.bSector,V.nBytes);for(let R=0;R<V.nBytes;R++)if(this.writeData(V,V.bFiller)<0)return-1;V.cSectorsFormatted++}return V.cSectorsFormatted>=V.bSectorEnd&&(R=-1),R}static init(){let V=Component.getElementsByClass(APPCLASS,"fdc");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new FDC(l);Component.bindComponentControls(e,U,APPCLASS)}}}WebLib.onInit(FDC.init);class HDC extends Component{static DEFAULT_DRIVE_NAME="Hard Drive";static ATC={DATA:{PORT1:496,PORT2:368},DIAG:{PORT1:497,PORT2:369,NO_ERROR:1,CTRL_ERROR:2,SEC_ERROR:3,ECC_ERROR:4,PROC_ERROR:5},ERROR:{PORT1:497,PORT2:369,NONE:0,NO_DAM:1,NO_TRK0:2,CMD_ABORT:4,NO_CHS:16,ECC_ERR:64,BAD_BLOCK:128},WPREC:{PORT1:497,PORT2:369},SECCNT:{PORT1:498,PORT2:370,PACKET_CD:1,PACKET_IO:2},SECNUM:{PORT1:499,PORT2:371},CYLLO:{PORT1:500,PORT2:372},CYLHI:{PORT1:501,PORT2:373,MASK:3},DRVHD:{PORT1:502,PORT2:374,HEAD_MASK:15,DRIVE_MASK:16,SET_MASK:224,SET_BITS:160},STATUS:{PORT1:503,PORT2:375,ERROR:1,INDEX:2,CORRECTED:4,DATA_REQ:8,SEEK_OK:16,WFAULT:32,READY:64,BUSY:128},COMMAND:{PORT1:503,PORT2:375,NO_RETRY:1,WITH_ECC:2,STEP_RATE:15,RESTORE:16,READ_DATA:32,WRITE_DATA:48,READ_VERF:64,FORMAT_TRK:80,SEEK:112,DIAGNOSE:144,SETPARMS:145,RESET:8,PACKET:160,IDPACKET:161,IDDEVICE:236},FDR:{PORT1:1014,PORT2:886,INT_DISABLE:2,RESET:4,HS3:8,RESERVED:241},IDENTIFY:{CONFIG:{OFFSET:0,ATA_RESERVED:1,HARD_SECTORED:2,SOFT_SECTORED:4,NOT_MFM:8,HDSW_15MS:16,SPINDLE_OPT:32,FIXED:64,REMOVABLE:128,RATE_5MBIT:256,RATE_10MBIT:512,RATE_FASTER:1024,ROT_TOLERANCE:2048,STROBE_OPT:4096,TRACK_OPT:8192,FMT_TOLERANCE:16384,NM_RESERVED:32768},CYLS:2,CONFIG2:4,HEADS:6,TRACK_BYTES:8,SECBYTES:10,SECTORS:12,SERIAL_NUMBER:20,BUFFER_TYPE:40,BUFFER_SIZE:42,ECC_BYTES:44,FIRMWARE_REV:46,MODEL_NUMBER:54,MAX_MULTISEC:94,DWORD_IO:96,CAPABILITY:99,PIO_TIMING:103,DMA_TIMING:105,NEXT5_VALID:106,CUR_CYLS:108,CUR_HEADS:110,CUR_SECTORS:112,CUR_CAPACITY:114,MULTISECT:118,MULTISECT_VALID:119,LBA_CAPACITY:120,DMA_SINGLE:124,DMA_SINGLE_ACTIVE:125,DMA_MULTI:126,DMA_MULTI_ACTIVE:127},PACKET:{COMMAND:{TEST_UNIT:0,REQ_SENSE:3,INQUIRY:18,READ:40,SEEK:43,READ_TOC:67,PLAY_AUDIO:69,MODE_SENSE:90},PAGECODE:{RW_ERRREC:1,CD_STATUS:42},ADR:{NONE:0,CUR_POS:1,MEDIA_CAT_NO:2,ISRC:3},CONTROL:{DATA_TRACK:4}}};static XTC={DATA:{PORT:800,STATUS:{OK:0,ERROR:2,UNIT:32},CMD:{TEST_READY:0,RECALIBRATE:1,REQ_SENSE:3,FORMAT_DRIVE:4,READ_VERF:5,FORMAT_TRK:6,FORMAT_BAD:7,READ_DATA:8,WRITE_DATA:10,SEEK:11,INIT_DRIVE:12,READ_ECC_BURST:13,READ_BUFFER:14,WRITE_BUFFER:15,RAM_DIAGNOSTIC:224,DRV_DIAGNOSTIC:227,CTL_DIAGNOSTIC:228,READ_LONG:229,WRITE_LONG:230},ERR:{NONE:0,NO_INDEX:1,SEEK_INCOMPLETE:2,WRITE_FAULT:3,NOT_READY:4,NO_TRACK:6,STILL_SEEKING:8,ECC_ID_ERROR:16,ECC_DATA_ERROR:17,NO_ADDR_MARK:18,NO_SECTOR:20,BAD_SEEK:21,ECC_CORRECTABLE:24,BAD_TRACK:25,BAD_CMD:32,BAD_DISK_ADDR:33,RAM:48,CHECKSUM:49,POLYNOMIAL:50,MASK:63},SENSE:{ADDR_VALID:128}},STATUS:{PORT:801,NONE:0,REQ:1,IOMODE:2,BUS:4,BUSY:8,INTERRUPT:32}};static aATACommands={8:"Device Reset",16:"Restore (Recalibrate)",32:"Read",48:"Write",64:"Read Verify",80:"Format Track",112:"Seek",144:"Diagnose",145:"Set Parameters",160:"Packet Request",161:"Identify Packet Device",236:"Identify Device"};static aATAPICommands={[HDC.ATC.PACKET.COMMAND.TEST_UNIT]:"Test Unit Ready",[HDC.ATC.PACKET.COMMAND.REQ_SENSE]:"Request Sense",[HDC.ATC.PACKET.COMMAND.INQUIRY]:"Inquiry",[HDC.ATC.PACKET.COMMAND.READ]:"Read",[HDC.ATC.PACKET.COMMAND.SEEK]:"Seek",[HDC.ATC.PACKET.COMMAND.READ_TOC]:"Read TOC",[HDC.ATC.PACKET.COMMAND.PLAY_AUDIO]:"Play Audio",[HDC.ATC.PACKET.COMMAND.MODE_SENSE]:"Mode Sense"};static aXTACommands={0:"Test Drive Ready",1:"Recalibrate",3:"Request Sense Status",4:"Format Drive",5:"Read Verify",6:"Format Track",7:"Format Bad Track",8:"Read",10:"Write",11:"Seek",12:"Initialize Drive Characteristics",13:"Read ECC Burst Error Length",14:"Read Data from Sector Buffer",15:"Write Data to Sector Buffer",224:"RAM Diagnostic",227:"Drive Diagnostic",228:"Controller Diagnostic",229:"Read Long",230:"Write Long"};static{HDC.aXTCPortInput={800:HDC.prototype.inXTCData,801:HDC.prototype.inXTCStatus,802:HDC.prototype.inXTCConfig},HDC.aATCPortInputPrimary={496:HDC.prototype.inATCData,497:HDC.prototype.inATCError,498:HDC.prototype.inATCSecCnt,499:HDC.prototype.inATCSecNum,500:HDC.prototype.inATCCylLo,501:HDC.prototype.inATCCylHi,502:HDC.prototype.inATCDrvHd,503:HDC.prototype.inATCStatus},HDC.aATCPortInputSecondary={368:HDC.prototype.inATCData,369:HDC.prototype.inATCError,370:HDC.prototype.inATCSecCnt,371:HDC.prototype.inATCSecNum,372:HDC.prototype.inATCCylLo,373:HDC.prototype.inATCCylHi,374:HDC.prototype.inATCDrvHd,375:HDC.prototype.inATCStatus},HDC.aXTCPortOutput={800:HDC.prototype.outXTCData,801:HDC.prototype.outXTCReset,802:HDC.prototype.outXTCPulse,803:HDC.prototype.outXTCPattern,807:HDC.prototype.outXTCNoise,811:HDC.prototype.outXTCNoise,815:HDC.prototype.outXTCNoise},HDC.aATCPortOutputPrimary={496:HDC.prototype.outATCData,497:HDC.prototype.outATCWPreC,498:HDC.prototype.outATCSecCnt,499:HDC.prototype.outATCSecNum,500:HDC.prototype.outATCCylLo,501:HDC.prototype.outATCCylHi,502:HDC.prototype.outATCDrvHd,503:HDC.prototype.outATCCommand,1014:HDC.prototype.outATCFDR},HDC.aATCPortOutputSecondary={368:HDC.prototype.outATCData,369:HDC.prototype.outATCWPreC,370:HDC.prototype.outATCSecCnt,371:HDC.prototype.outATCSecNum,372:HDC.prototype.outATCCylLo,373:HDC.prototype.outATCCylHi,374:HDC.prototype.outATCDrvHd,375:HDC.prototype.outATCCommand,886:HDC.prototype.outATCFDR}}constructor(V){super("HDC",V,MESSAGE.HDC),this.dmaRead=HDC.prototype.doDMARead,this.dmaWrite=HDC.prototype.doDMAWrite,this.dmaWriteBuffer=HDC.prototype.doDMAWriteBuffer,this.dmaWriteFormat=HDC.prototype.doDMAWriteFormat,this.aDriveConfigs=[],this.driveConfigs=V.drives,this.fATC=this.fATAPI=!1,this.sType=(V.type||"XT").toUpperCase(),this.sType.indexOf("XT")<0&&(this.fATC=!0,this.fATAPI=this.sType.indexOf("ATAPI")>=0),this.nInterface=this.fATAPI?1:0;let R=this.sType.slice(-1);"1"==R?this.nInterface=0:"2"==R&&(this.nInterface=1),this.fLocalDisks=!WebLib.isMobile()&&"FileReader"in globals.window}setBinding(V,R,U,l){let e=this;switch(R){case"listDisks":this.bindings[R]=U;break;case"saveHD0":case"saveHD1":return this.fLocalDisks?(this.bindings[R]=U,U.onclick=(t=+R.slice(-1),function(V){let R=e.aDrives&&e.aDrives[t];if(R&&R.disk){let V=R.disk,U=V.sDiskFile||V.sDiskName,l=U.lastIndexOf(".");l>=0&&(U=U.substr(0,l)),U+=".img",DEBUG&&e.printf("saving disk %s...\n",U);let t=WebLib.downloadFile(V.encodeAsBinary(),"octet-stream",!0,U);Component.alertUser(t)}else e.printf(MESSAGE.NOTICE,"Hard drive %d is not available.\n",t)}),!0):(DEBUG&&this.printf(MESSAGE.LOG,"Local disk support not available\n"),U.parentNode.style.display="none",!1)}var t;return!1}initBus(cmp,bus,cpu,dbg){this.bus=bus,this.cpu=cpu,this.dbg=dbg,this.cmp=cmp;let driveConfigs=cmp.getMachineParm(this.nInterface?"cdromDrives":"drives")||this.driveConfigs;if(Array.isArray(driveConfigs))this.aDriveConfigs=driveConfigs;else if("string"==typeof driveConfigs)try{this.aDriveConfigs=eval("("+driveConfigs+")")}catch(V){Component.error("HDC drive configuration error: "+V.message+" ("+driveConfigs+")")}if(this.chipset=cmp.getMachineComponent("ChipSet"),this.iDriveCtrl=0,this.iDriveTypeDefault=3,this.fATC?(this.nInterface?(bus.addPortInputTable(this,HDC.aATCPortInputSecondary),bus.addPortOutputTable(this,HDC.aATCPortOutputSecondary),bus.addPortInputWidth(HDC.ATC.DATA.PORT2,2),bus.addPortOutputWidth(HDC.ATC.DATA.PORT2,2)):(bus.addPortInputTable(this,HDC.aATCPortInputPrimary),bus.addPortOutputTable(this,HDC.aATCPortOutputPrimary),bus.addPortInputWidth(HDC.ATC.DATA.PORT1,2),bus.addPortOutputWidth(HDC.ATC.DATA.PORT1,2)),this.iDriveCtrl++,this.chipset&&this.chipset.model==ChipSet.MODEL_COMPAQ_DESKPRO386&&this.iDriveCtrl++,this.iDriveTypeDefault=2):(bus.addPortInputTable(this,HDC.aXTCPortInput),bus.addPortOutputTable(this,HDC.aXTCPortOutput)),cpu.addIntNotify(Interrupts.DISK,this.intBIOSDisk.bind(this)),cpu.addIntNotify(Interrupts.ALT_DISK,this.intBIOSDiskette.bind(this)),this.reset(),this.fdc=cmp.getMachineComponent("FDC"),this.fdc&&this.fATAPI&&this.bindings.listDisks)for(let V=0;V<this.aDrives.length;V++){let R=this.aDrives[V];R.type||this.fdc.addDrive(R,this,this.bindings.listDisks)}this.autoMount()||this.setReady()}powerUp(V,R){if(!R)if(V){if(!this.restore(V))return!1}else this.initController(),this.cmp.fReload&&this.autoMount(!0);return!0}powerDown(V,R){return!V||this.save()}getMachineID(){return this.cmp?this.cmp.getMachineID():""}getUserID(){return this.cmp?this.cmp.getUserID():""}reset(){this.initController(null,!0)}save(){let V=new State(this);return V.set(0,this.saveController()),V.data()}restore(V){return this.initController(V[0])}initController(V,R){let U=0,l=!0;if(this.iDrive=-1,this.fATC){if(null==V&&(V=[0,0,0,0,0,0,0,HDC.ATC.STATUS.READY,0,[0,-1]]),this.regError=V[U++],this.regWPreC=V[U++],this.regSecCnt=V[U++],this.regSecNum=V[U++],this.regCylLo=V[U++],this.regCylHi=V[U++],this.regDrvHd=V[U++],this.regStatus=V[U++],this.regCommand=V[U++],this.regFDR=V[U++],"object"==typeof this.regFDR){let V=this.regFDR;this.regFDR=V[0],this.iDrive=V[1]}}else{null==V&&(V=[0,HDC.XTC.STATUS.NONE,new Array(14),0,0]),this.regConfig=V[U++],this.regStatus=V[U++],this.regDataArray=V[U++],this.regDataIndex=V[U++],this.regDataTotal=V[U++],this.regReset=V[U++],this.regPulse=V[U++],this.regPattern=V[U++];let R=V[U++];void 0!==R?this.iDriveAllowFail=R:void 0===this.iDriveAllowFail&&(this.iDriveAllowFail=-1)}void 0===this.aDrives&&(this.aDrives=new Array(this.aDriveConfigs.length));let e=V[U];void 0===e&&(e=[]);for(let V=0;V<this.aDrives.length;V++){void 0===this.aDrives[V]&&(this.aDrives[V]={});let U=this.aDrives[V],t=this.aDriveConfigs[V];this.initDrive(V,U,t,e[V],R)||(l=!1),null!=this.regConfig&&V<=1&&(this.regConfig|=(3&U.type)<<(1-V<<1))}return this.iDrive>=0&&(this.drive=this.aDrives[this.iDrive]),R&&this.printf("HDC initialized for %d drive(s)\n",this.aDrives.length),l}saveController(){let V=0,R=[];return this.fATC?(R[V++]=this.regError,R[V++]=this.regWPreC,R[V++]=this.regSecCnt,R[V++]=this.regSecNum,R[V++]=this.regCylLo,R[V++]=this.regCylHi,R[V++]=this.regDrvHd,R[V++]=this.regStatus,R[V++]=this.regCommand,R[V++]=[this.regFDR,this.iDrive]):(R[V++]=this.regConfig,R[V++]=this.regStatus,R[V++]=this.regDataArray,R[V++]=this.regDataIndex,R[V++]=this.regDataTotal,R[V++]=this.regReset,R[V++]=this.regPulse,R[V++]=this.regPattern,R[V++]=this.iDriveAllowFail),R[V]=this.saveDrives(),R}initBuffer(V,R=V.nBytes){(!V.buffer||V.buffer.length<R)&&(V.buffer=new Array(R)),V.buffer.fill(0,0,R),V.iByte=0}initDrive(V,R,U,l,e){let t=0,T=!0;void 0===l&&(l=[HDC.XTC.DATA.ERR.NONE,0,!1,new Array(8)]),R.iDrive=V,R.errorCode=l[t++],R.senseCode=l[t++],R.fRemovable=l[t++],R.abDriveParms=l[t++],R.buffer=l[t++],R.bHead=l[t++],R.nHeads=l[t++],R.wCylinder=l[t++],R.bSector=l[t++],R.bSectorEnd=l[t++],R.nBytes=l[t++],R.bSectorBias=this.fATC?0:1,R.name=U.name,void 0===R.name&&(R.name=HDC.DEFAULT_DRIVE_NAME),R.path=R.sDiskPath=U.path,R.mode=U.mode||(R.path?DiskAPI.MODE.PRELOAD:DiskAPI.MODE.LOCAL),R.mode!=DiskAPI.MODE.DEMANDRO&&R.mode!=DiskAPI.MODE.DEMANDRW||this.getUserID()||(R.mode=DiskAPI.MODE.LOCAL),R.type=U.type,void 0!==R.type&&void 0!==DRIVE_TYPES[this.iDriveCtrl][R.type]||(R.type=this.iDriveTypeDefault);let k=DRIVE_TYPES[this.iDriveCtrl][R.type];if(R.nSectors=k[2]||17,R.cbSector=R.cbTransfer=k[3]||512,e&&this.chipset&&this.chipset.setCMOSDriveType(2*this.nInterface+V,R.type),void 0===R.disk&&(R.disk=null,this.printf(MESSAGE.STATUS,'Type %d "%s" is fixed disk %d\n',R.type,R.name,V)),this.verifyDrive(R),R.iByte=l[t++],R.sector=null,R.useBuffer=!1,R.chunksCached=[],R.chunksMRU=[],R.disk){let V=l[12];void 0!==V&&R.disk.restore(V)<0&&(T=!1),T&&void 0!==R.iByte&&(R.sector=R.disk.seek(R.wCylinder,R.bHead,R.bSector+R.bSectorBias))}return T}saveDrives(){let V=0,R=[];for(let U=0;U<this.aDrives.length;U++)R[V++]=this.saveDrive(this.aDrives[U]);return R}saveDrive(V){let R=0,U=[];return U[R++]=V.errorCode,U[R++]=V.senseCode,U[R++]=V.fRemovable,U[R++]=V.abDriveParms,U[R++]=V.buffer,U[R++]=V.bHead,U[R++]=V.nHeads,U[R++]=V.wCylinder,U[R++]=V.bSector,U[R++]=V.bSectorEnd,U[R++]=V.nBytes,U[R++]=V.iByte,U[12]=V.disk?V.disk.save():null,U}copyDrive(V){let R,U=this.aDrives[V];if(void 0!==U){R={};for(let V in U)R[V]=U[V]}return R}verifyDrive(V,R){if(V){let U=0,l=0;if(null==R&&(U=V.abDriveParms[2],U?l=V.abDriveParms[0]<<8|V.abDriveParms[1]:R=V.type),null==R||U||(U=DRIVE_TYPES[this.iDriveCtrl][R][1],l=DRIVE_TYPES[this.iDriveCtrl][R][0]),U){let R=DRIVE_TYPES[this.iDriveCtrl][V.type];R&&l!=R[0]&&U!=R[1]&&this.printf(MESSAGE.NOTICE,"Warning: drive parameters (%d,%d) do not match drive type %d (%d,%d)\n",l,U,V.type,R[0],R[1]),(!V.nCylinders||this.sType.indexOf("PCJS")<0)&&(V.nCylinders=l,V.nHeads=U),null==V.disk&&(V.disk=new Disk(this,V,V.mode))}}}seekDrive(V,R,U){if(V.disk){let l=V.disk.info(),e=l[0];if(e){let t=l[1],T=l[2],k=t*T;if(R+U<=e*k)return V.wCylinder=Math.floor(R/k),R%=k,V.bHead=Math.floor(R/T),V.bSector=R%T,V.nBytes=U*l[3],V.errorCode=HDC.XTC.DATA.ERR.NONE,!0}}return!1}autoMount(V){V||(this.cAutoMount=0);for(let R=0;R<this.aDrives.length;R++){let U=this.aDrives[R];if(U.name&&U.sDiskPath){if(V&&U.disk&&U.disk.isRemote()||this.fATAPI)continue;!this.loadDisk(R,U.name,U.sDiskPath,!0)&&V&&this.setReady(!1)}else V&&void 0!==U.type&&(U.disk=null,this.verifyDrive(U,U.type))}return!!this.cAutoMount}loadDisk(V,R,U,l){let e=this.aDrives[V];if(e.fBusy)return this.printf(MESSAGE.NOTICE,"Drive %d busy\n",V),!0;e.fBusy=!0,l&&(e.fAutoMount=!0,this.cAutoMount++,this.printf('loading "%s"\n',R));let t=e.disk||new Disk(this,e,e.mode);return U=WebLib.redirectResource(U),t.load(R,U,null,this.doneLoadDisk),!1}loadSelectedDisk(V,R){let U=this.aDrives[V];U.sDiskPath=R.options[R.selectedIndex].value,U.chunksCached=[],U.chunksMRU=[]}doneLoadDisk(V,R,U,l){if(V.fBusy=!1,V.disk=R){this.printf(V.fAutoMount?MESSAGE.STATUS:MESSAGE.NOTICE,'Mounted disk "%s" in drive %s\n',U,String.fromCharCode(67+V.iDrive));let l=R.info();l[0]==V.nCylinders&&l[1]==V.nHeads&&l[2]==V.nSectors&&l[3]==V.cbSector||(0==this.sType.indexOf("PCJS")?(V.nCylinders=l[0],V.nHeads=l[1],V.nSectors=l[2],V.cbSector=l[3]):this.printf(MESSAGE.NOTICE,"Warning: disk geometry (%d:%d:%d) does not match %s drive type %d (%d:%d:%d)\n",l[0],l[1],l[2],DRIVE_CTRLS[this.iDriveCtrl],V.type,V.nCylinders,V.nHeads,V.nSectors))}V.fAutoMount&&(V.fAutoMount=!1,--this.cAutoMount||this.setReady())}inXTCData(V,R){let U=0;return this.regDataIndex<this.regDataTotal&&(U=this.regDataArray[this.regDataIndex]),this.chipset&&this.chipset.clearIRR(ChipSet.IRQ.XTC),this.regStatus&=~HDC.XTC.STATUS.INTERRUPT,this.printIO(V,void 0,R,"DATA["+this.regDataIndex+"]",U),++this.regDataIndex>=this.regDataTotal&&(this.regDataIndex=this.regDataTotal=0,this.regStatus&=~(HDC.XTC.STATUS.IOMODE|HDC.XTC.STATUS.BUS|HDC.XTC.STATUS.BUSY)),U}outXTCData(V,R,U){this.printIO(V,R,U,"DATA["+this.regDataTotal+"]"),this.regDataTotal<this.regDataArray.length&&(this.regDataArray[this.regDataTotal++]=R);let l=this.regDataArray[0]!=HDC.XTC.DATA.CMD.INIT_DRIVE?6:this.regDataArray.length;6==this.regDataTotal&&(this.regStatus&=~HDC.XTC.STATUS.REQ),this.regDataTotal>=l&&(this.regStatus|=HDC.XTC.STATUS.IOMODE,this.regStatus&=~HDC.XTC.STATUS.REQ,this.doXTC())}inXTCStatus(V,R){let U=this.regStatus;return this.printIO(V,void 0,R,"STATUS",U),this.regDataIndex<this.regDataTotal&&(this.regStatus|=HDC.XTC.STATUS.REQ),U}outXTCReset(V,R,U){this.printIO(V,R,U,"RESET"),this.regReset=R,this.chipset&&this.chipset.clearIRR(ChipSet.IRQ.XTC),this.initController()}inXTCConfig(V,R){return this.printIO(V,void 0,R,"CONFIG",this.regConfig),this.regConfig}outXTCPulse(V,R,U){this.printIO(V,R,U,"PULSE"),this.regPulse=R,this.regStatus=HDC.XTC.STATUS.REQ|HDC.XTC.STATUS.BUS|HDC.XTC.STATUS.BUSY}outXTCPattern(V,R,U){this.printIO(V,R,U,"PATTERN"),this.regPattern=R}outXTCNoise(V,R,U){this.printIO(V,R,U,"NOISE")}inATCByte(V,R){let U=-1,l=this.drive;if(l){let e=this;if(U=this.readData(l,(function(R,U,l,t){if(BACKTRACK&&l){!t&&l.file&&e.printf(MESSAGE.DISK+MESSAGE.PORT+MESSAGE.ADDR,"loading %s[%d] via port %#06x\n",l.file.path,l.offFile,V);let R=e.bus.addBackTrackObject(l,null,t);e.cpu.backTrack.btiIO=e.bus.getBackTrackIndex(R,t)}})),(1==l.iByte||l.iByte==l.cbTransfer)&&(this.messageEnabled(MESSAGE.PORT+MESSAGE.HDC)&&this.printIO(V,void 0,R,"DATA["+l.iByte+"]",U),l.iByte>1)){if(this.messageEnabled(MESSAGE.DATA+MESSAGE.HDC)){let V=l.disk.dumpSector(l.sector);V&&this.print(V)}l.nBytes-=l.cbTransfer,this.regSecCnt=this.regSecCnt-1&255,l.nBytes>=l.cbTransfer?(e.regStatus=HDC.ATC.STATUS.BUSY,this.readData(l,(function(V,R){V>=0?(e.setATCIRR(),e.chipset&&e.chipset.model==ChipSet.MODEL_COMPAQ_DESKPRO386&&(e.regStatus=0),e.regStatus|=HDC.ATC.STATUS.READY|HDC.ATC.STATUS.SEEK_OK|HDC.ATC.STATUS.DATA_REQ):(e.regStatus=HDC.ATC.STATUS.ERROR,e.regError=HDC.ATC.ERROR.NO_CHS,DEBUG&&e.printf("%s.inATCByte(): read failed\n",this.idComponent))}),!1)):(this.regStatus=HDC.ATC.STATUS.READY,l.useBuffer?(this.regSecCnt=HDC.ATC.SECCNT.PACKET_IO|HDC.ATC.SECCNT.PACKET_CD,this.setATCIRR()):this.regStatus|=HDC.ATC.STATUS.SEEK_OK)}}return U}inATCData(V,R){return this.inATCByte(V,R)|this.inATCByte(V,R)<<8}outATCByte(V,R,U){let l=this.drive;if(l)if(l.nBytes>=l.cbTransfer){if(this.writeData(l,R)<0)this.regStatus=HDC.ATC.STATUS.ERROR,this.regError=HDC.ATC.ERROR.NO_CHS,DEBUG&&this.printf("%s.outATCByte(%#04x): write failed\n",this.idComponent,R);else if((1==l.iByte||l.iByte==l.cbTransfer)&&(this.messageEnabled(MESSAGE.PORT+MESSAGE.HDC)&&this.printIO(V,R,U,"DATA["+l.iByte+"]"),l.iByte>1)){if(this.messageEnabled(MESSAGE.DATA+MESSAGE.HDC)){let V=l.disk.dumpSector(l.sector);V&&this.print(V)}if(l.nBytes-=l.cbTransfer,this.regSecCnt=this.regSecCnt-1&255,this.regStatus=HDC.ATC.STATUS.READY|HDC.ATC.STATUS.SEEK_OK,l.nBytes>=l.cbTransfer)this.regStatus|=HDC.ATC.STATUS.DATA_REQ;else if(l.useBuffer)return void this.processPacket(l);this.setATCIRR(!0)}}else DEBUG&&this.printf("%s.outATCByte(%#04x): write exceeds count (%d)\n",this.idComponent,R,this.drive.nBytes);else DEBUG&&this.printf("%s.outATCByte(%#04x): write without command\n",this.idComponent,R)}outATCData(V,R,U){this.outATCByte(V,255&R,U),this.outATCByte(V,R>>8&255,U)}inATCError(V,R){let U=this.regError;return this.printIO(V,void 0,R,"ERROR",U),U}outATCWPreC(V,R,U){this.printIO(V,R,U,"WPREC"),this.regWPreC=R}inATCSecCnt(V,R){let U=this.regSecCnt;return this.printIO(V,void 0,R,"SECCNT",U),U}outATCSecCnt(V,R,U){this.printIO(V,R,U,"SECCNT"),this.regSecCnt=R}inATCSecNum(V,R){let U=this.regSecNum;return this.printIO(V,void 0,R,"SECNUM",U),U}outATCSecNum(V,R,U){this.printIO(V,R,U,"SECNUM"),this.regSecNum=R}inATCCylLo(V,R){let U=this.regCylLo;return this.printIO(V,void 0,R,"CYLLO",U),U}outATCCylLo(V,R,U){this.printIO(V,R,U,"CYLLO"),this.regCylLo=R}inATCCylHi(V,R){let U=this.regCylHi;return this.printIO(V,void 0,R,"CYLHI",U),U}outATCCylHi(V,R,U){this.printIO(V,R,U,"CYLHI"),this.regCylHi=R}inATCDrvHd(V,R){let U=this.regDrvHd;return this.printIO(V,void 0,R,"DRVHD",U),U}outATCDrvHd(V,R,U){this.printIO(V,R,U,"DRVHD"),this.regDrvHd=R;let l=this.regDrvHd&HDC.ATC.DRVHD.DRIVE_MASK?1:0;this.aDrives[l]?this.regStatus|=HDC.ATC.STATUS.READY|HDC.ATC.STATUS.SEEK_OK:this.regStatus&=~HDC.ATC.STATUS.READY}inATCStatus(V,R){let U=this.regStatus;return this.printIO(V,void 0,R,"STATUS",U),this.regStatus&HDC.ATC.STATUS.READY&&(this.regStatus&=~HDC.ATC.STATUS.BUSY),U}outATCCommand(V,R,U){this.printIO(V,R,U,"COMMAND"),this.regCommand=R,this.chipset&&this.chipset.clearIRR(ChipSet.IRQ.ATC1+this.nInterface),this.doATC()}outATCFDR(V,R,U){this.printIO(V,R,U,"FDR"),this.regFDR&HDC.ATC.FDR.RESET&&!(R&HDC.ATC.FDR.RESET)&&(this.regError=HDC.ATC.DIAG.NO_ERROR),this.regFDR=R}doATC(){let V=this,R=!1,U=!1,l=this.regCommand,e=l&~HDC.ATC.COMMAND.STEP_RATE;e==HDC.ATC.COMMAND.RESTORE||e==HDC.ATC.COMMAND.SEEK?l=e:e==HDC.ATC.COMMAND.READ_DATA||e==HDC.ATC.COMMAND.WRITE_DATA?l&=~(HDC.ATC.COMMAND.NO_RETRY|HDC.ATC.COMMAND.WITH_ECC):e==HDC.ATC.COMMAND.READ_VERF&&(l&=~HDC.ATC.COMMAND.NO_RETRY);let t=this.regDrvHd&HDC.ATC.DRVHD.DRIVE_MASK?1:0,T=this.regDrvHd&HDC.ATC.DRVHD.HEAD_MASK,k=this.regCylLo|(this.regCylHi&HDC.ATC.CYLHI.MASK)<<8,F=this.regSecNum,W=this.regSecCnt||256;this.iDrive=-1,this.drive=null,this.regError=HDC.ATC.ERROR.NONE,this.regStatus=HDC.ATC.STATUS.READY|HDC.ATC.STATUS.SEEK_OK;let a=this.aDrives[t];if(this.printf(MESSAGE.HDC+MESSAGE.PORT+MESSAGE.ADDR,"%s.doATC(%d,%#04x): %s%s\n",this.idComponent,2*this.nInterface+t,l,HDC.aATACommands[l],a?"":" (drive "+t+" not present)"),a){switch(this.iDrive=t,this.drive=a,a.wCylinder=k,a.bHead=T,a.bSector=F,a.nBytes=W*(a.cbTransfer=a.cbSector),a.sector=null,a.iByte=0,a.errorCode=0,a.useBuffer=!1,l){case HDC.ATC.COMMAND.RESET:this.processReset(a)&&(U=!0);break;case HDC.ATC.COMMAND.RESTORE:R=U=!0;break;case HDC.ATC.COMMAND.IDPACKET:case HDC.ATC.COMMAND.IDDEVICE:if(!this.processIdentify(a,l))break;case HDC.ATC.COMMAND.READ_DATA:a.useBuffer||this.printf(MESSAGE.HDC+MESSAGE.PORT,"%s.doATCRead(%d,%d:%d:%d,%d)\n",this.idComponent,t,a.wCylinder,a.bHead,a.bSector,W),this.regStatus=HDC.ATC.STATUS.BUSY,this.readData(a,(function(R,U){R>=0&&V.chipset?(V.setATCIRR(),V.regStatus=HDC.ATC.STATUS.READY|HDC.ATC.STATUS.SEEK_OK|HDC.ATC.STATUS.DATA_REQ):(V.regStatus=HDC.ATC.STATUS.ERROR,V.regError=HDC.ATC.ERROR.NO_CHS)}),!1),U=!0;break;case HDC.ATC.COMMAND.PACKET:this.initBuffer(a),a.useBuffer=!0,a.nBytes=a.cbTransfer=12,this.regSecCnt=HDC.ATC.SECCNT.PACKET_CD;case HDC.ATC.COMMAND.WRITE_DATA:a.useBuffer||this.printf(MESSAGE.HDC+MESSAGE.PORT,"%s.doATCWrite(%d,%d:%d:%d,%d)\n",this.idComponent,t,a.wCylinder,a.bHead,a.bSector,W),this.regStatus=HDC.ATC.STATUS.DATA_REQ,U=!0;break;case HDC.ATC.COMMAND.READ_VERF:case HDC.ATC.COMMAND.SEEK:R=U=!0;break;case HDC.ATC.COMMAND.DIAGNOSE:this.regError=HDC.ATC.DIAG.NO_ERROR,R=U=!0;break;case HDC.ATC.COMMAND.SETPARMS:a.nHeads=T+1,a.nSectors=W,R=U=!0}U?R&&this.setATCIRR():(this.regStatus=HDC.ATC.STATUS.ERROR,this.regError=HDC.ATC.ERROR.CMD_ABORT,this.messageEnabled()&&(this.printf("%s.doATC(%#04x): unsupported operation\n",this.idComponent,this.regCommand),MAXDEBUG&&this.dbg.stopCPU()))}}setATCIRR(V){this.chipset&&(this.regFDR&HDC.ATC.FDR.INT_DISABLE?DEBUG&&this.printf(MESSAGE.PIC+MESSAGE.HDC,"%s.setATCIRR(): disabled\n",this.idComponent):(this.chipset.setIRR(ChipSet.IRQ.ATC1+this.nInterface,120),DEBUG&&this.printf(MESSAGE.PIC+MESSAGE.HDC,"%s.setATCIRR(): enabled\n",this.idComponent)))}doXTC(){let V=this;this.regDataIndex=0;let R,U,l,e=this.popCmd(),t=e,T=this.popCmd(),k=32&T,F=k>>5,W=31&T,a=this.popCmd(),s=this.popCmd(),Z=a<<2&768|s,S=63&a,h=this.popCmd(),E=this.popCmd(),i=this.aDrives[F];switch(i&&(i.wCylinder=Z,i.bHead=W,i.bSector=S,i.nBytes=h*i.cbSector),e){case HDC.XTC.DATA.CMD.REQ_SENSE:this.beginResult(i?i.errorCode:HDC.XTC.DATA.ERR.NOT_READY),this.pushResult(T),this.pushResult(a),this.pushResult(s),this.pushResult(HDC.XTC.DATA.STATUS.OK|k),e=-1;break;case HDC.XTC.DATA.CMD.INIT_DRIVE:for(l=0;(R=this.popCmd())>=0;)i&&l<i.abDriveParms.length&&(i.abDriveParms[l++]=R);i&&this.verifyDrive(i),U=HDC.XTC.DATA.STATUS.OK,i||this.iDriveAllowFail!=F||(this.iDriveAllowFail=-1,DEBUG&&this.printf(MESSAGE.HDC+MESSAGE.PORT,"%s.doXTC(): fake failure triggered\n",this.idComponent),U=HDC.XTC.DATA.STATUS.ERROR),this.beginResult(U|k),e=-1;break;case HDC.XTC.DATA.CMD.RAM_DIAGNOSTIC:case HDC.XTC.DATA.CMD.CTL_DIAGNOSTIC:this.beginResult(HDC.XTC.DATA.STATUS.OK|k),e=-1}if(e>=0)switch(void 0===i?e=-1:(i.errorCode=HDC.XTC.DATA.ERR.NONE,i.senseCode=0),e){case HDC.XTC.DATA.CMD.TEST_READY:this.beginResult(HDC.XTC.DATA.STATUS.OK|k);break;case HDC.XTC.DATA.CMD.RECALIBRATE:i.bControl=E,DEBUG&&this.printf(MESSAGE.HDC+MESSAGE.PORT,"%s.doXTC(): drive %d control byte: %#04x\n",this.idComponent,F,E),this.beginResult(HDC.XTC.DATA.STATUS.OK|k);break;case HDC.XTC.DATA.CMD.READ_VERF:this.beginResult(HDC.XTC.DATA.STATUS.OK|k);break;case HDC.XTC.DATA.CMD.READ_DATA:this.doRead(i,(function(R){V.beginResult(R|k)}));break;case HDC.XTC.DATA.CMD.WRITE_DATA:this.doWrite(i,(function(R){V.beginResult(R|k)}));break;case HDC.XTC.DATA.CMD.WRITE_BUFFER:this.doWriteBuffer(i,(function(R){V.beginResult(R|k)}));break;default:this.beginResult(HDC.XTC.DATA.STATUS.ERROR|k),this.messageEnabled()&&(this.printf("%s.doXTC(%#04x): %d\n",this.idComponent,t,e<0?"invalid drive ("+F+")":"unsupported operation"),MAXDEBUG&&e>=0&&this.dbg.stopCPU())}}popCmd(){let V=-1,R=this.regDataIndex;return R<this.regDataTotal&&(V=this.regDataArray[this.regDataIndex++],this.printf((R>0?MESSAGE.PORT:0)+MESSAGE.HDC,"%s.popCmd(%d): %#04x%s\n",this.idComponent,R,V,!R&&HDC.aXTACommands[V]?" ("+HDC.aXTACommands[V]+")":"")),V}beginResult(V){this.regDataIndex=this.regDataTotal=0,void 0!==V&&this.pushResult(V),this.chipset&&this.chipset.setIRR(ChipSet.IRQ.XTC),this.regStatus|=HDC.XTC.STATUS.INTERRUPT}pushResult(V){DEBUG&&this.printf((this.regDataTotal>0?MESSAGE.PORT:0)+MESSAGE.HDC,"%s.pushResult(%d): %#04x\n",this.idComponent,this.regDataTotal,V),this.regDataArray[this.regDataTotal++]=V}doDMARead(V,R,U){void 0===R||R<0?this.readData(V,U):(DEBUG&&this.printf(MESSAGE.HDC+MESSAGE.PORT,"%s.doDMARead(): invalid DMA acknowledgement\n",this.idComponent),U(-1,!1))}doDMAWrite(V,R){return void 0!==R&&R>=0?this.writeData(V,R):(DEBUG&&this.printf(MESSAGE.HDC+MESSAGE.PORT,"%s.doDMAWrite(): invalid DMA acknowledgement\n",this.idComponent),-1)}doDMAWriteBuffer(V,R){return void 0!==R&&R>=0?this.writeBuffer(V,R):(DEBUG&&this.printf(MESSAGE.HDC+MESSAGE.PORT,"%s.doDMAWriteBuffer(): invalid DMA acknowledgement\n",this.idComponent),-1)}doDMAWriteFormat(V,R){return void 0!==R&&R>=0?this.writeFormat(V,R):(DEBUG&&this.printf(MESSAGE.HDC+MESSAGE.PORT,"%s.doDMAWriteFormat(): invalid DMA acknowledgement\n",this.idComponent),-1)}doRead(V,R){if(V.errorCode=HDC.XTC.DATA.ERR.NOT_READY,this.printf(MESSAGE.HDC+MESSAGE.PORT,"%s.doRead(%d,%d:%d:%d,%d)\n",this.idComponent,V.iDrive,V.wCylinder,V.bHead,V.bSector,V.nBytes/V.cbSector|0),V.disk&&(V.sector=null,this.chipset))return V.errorCode=HDC.XTC.DATA.ERR.NONE,this.chipset.connectDMA(ChipSet.DMA_HDC,this,"dmaRead",V),void this.chipset.requestDMA(ChipSet.DMA_HDC,(function(U){U||V.errorCode==HDC.XTC.DATA.ERR.NONE&&(V.errorCode=HDC.XTC.DATA.ERR.NOT_READY),R(V.errorCode?HDC.XTC.DATA.STATUS.ERROR:HDC.XTC.DATA.STATUS.OK)}));R(V.errorCode?HDC.XTC.DATA.STATUS.ERROR:HDC.XTC.DATA.STATUS.OK)}doWrite(V,R){if(V.errorCode=HDC.XTC.DATA.ERR.NOT_READY,this.printf(MESSAGE.HDC+MESSAGE.PORT,"%s.doWrite(%d,%d:%d:%d,%d)\n",this.idComponent,V.iDrive,V.wCylinder,V.bHead,V.bSector,V.nBytes/V.cbSector|0),V.disk&&(V.sector=null,this.chipset))return V.errorCode=HDC.XTC.DATA.ERR.NONE,this.chipset.connectDMA(ChipSet.DMA_HDC,this,"dmaWrite",V),void this.chipset.requestDMA(ChipSet.DMA_HDC,(function(U){U||(V.errorCode==HDC.XTC.DATA.ERR.NONE&&(V.errorCode=HDC.XTC.DATA.ERR.NOT_READY),V.errorCode==HDC.XTC.DATA.ERR.NO_SECTOR&&(V.errorCode=HDC.XTC.DATA.ERR.NONE)),R(V.errorCode?HDC.XTC.DATA.STATUS.ERROR:HDC.XTC.DATA.STATUS.OK)}));R(V.errorCode?HDC.XTC.DATA.STATUS.ERROR:HDC.XTC.DATA.STATUS.OK)}doWriteBuffer(V,R){if(V.errorCode=HDC.XTC.DATA.ERR.NOT_READY,DEBUG&&this.printf(MESSAGE.HDC+MESSAGE.PORT,"%s.doWriteBuffer()\n",this.idComponent),this.initBuffer(V),this.chipset)return V.errorCode=HDC.XTC.DATA.ERR.NONE,this.chipset.connectDMA(ChipSet.DMA_HDC,this,"dmaWriteBuffer",V),void this.chipset.requestDMA(ChipSet.DMA_HDC,(function(U){U||V.errorCode==HDC.XTC.DATA.ERR.NONE&&(V.errorCode=HDC.XTC.DATA.ERR.NOT_READY),R(V.errorCode?HDC.XTC.DATA.STATUS.ERROR:HDC.XTC.DATA.STATUS.OK)}));R(V.errorCode?HDC.XTC.DATA.STATUS.ERROR:HDC.XTC.DATA.STATUS.OK)}readData(V,R,U){let l=-1,e=null,t=0;if(V.errorCode)return R&&R(l,!1,e,t),l;let T=!1!==U?1:0;if(V.useBuffer)return V.iByte<V.buffer.length&&(l=V.buffer[V.iByte],V.iByte+=T,R&&R(l,!1,e,t)),l;if(V.sector&&(t=V.iByte,l=V.disk.read(V.sector,V.iByte),V.iByte+=T,l>=0))return e=V.sector,R&&R(l,!1,e,t),l;if(R){let U=this;if(V.disk)return V.disk.seek(V.wCylinder,V.bHead,V.bSector+V.bSectorBias,null,!1,(function(k,F){(V.sector=k)?(e=k,t=V.iByte=0,U.advanceSector(V),l=V.disk.read(V.sector,V.iByte),V.iByte+=T):V.errorCode=HDC.XTC.DATA.ERR.NO_SECTOR,R(l,F,e,t)})),l;V.errorCode=HDC.XTC.DATA.ERR.NO_SECTOR,R(l,!1,e,t)}return l}writeData(V,R){if(V.errorCode)return-1;for(;;){if(V.useBuffer)return V.iByte<V.buffer.length?(V.buffer[V.iByte++]=R,R):-1;if(V.sector&&V.disk.write(V.sector,V.iByte++,R))break;if(V.disk&&V.disk.seek(V.wCylinder,V.bHead,V.bSector+V.bSectorBias,null,!0,(function(R,U){V.sector=R})),!V.sector){V.errorCode=HDC.XTC.DATA.ERR.NO_SECTOR,R=-1;break}V.iByte=0,this.advanceSector(V)}return R}advanceSector(V){V.bSector++;let R=1-V.bSectorBias;V.bSector>=V.nSectors+R&&(V.bSector=R,V.bHead++,V.bHead>=V.nHeads&&(V.bHead=0,V.wCylinder++),this.regDrvHd=this.regDrvHd&~HDC.ATC.DRVHD.HEAD_MASK|V.bHead&HDC.ATC.DRVHD.HEAD_MASK)}writeBuffer(V,R){return V.iByte<V.buffer.length?V.buffer[V.iByte++]=R:(V.errorCode=HDC.XTC.DATA.ERR.NO_SECTOR,R=-1),R}writeFormat(V,R){if(V.errorCode)return-1;if(V.abFormat[V.cbFormat++]=R,V.cbFormat==V.abFormat.length){V.wCylinder=V.abFormat[0],V.bHead=V.abFormat[1],V.bSector=V.abFormat[2],V.nBytes=128<<V.abFormat[3],V.cbFormat=0,this.printf(MESSAGE.HDC+MESSAGE.PORT,"%s.writeFormat(%d:%d:%d:%d)\n",this.idComponent,V.wCylinder,V.bHead,V.bSector,V.nBytes);for(let R=0;R<V.nBytes;R++)if(this.writeData(V,V.bFiller)<0)return-1;V.cSectorsFormatted++}return V.cSectorsFormatted>=V.bSectorEnd&&(R=-1),R}processIdentify(V,R){if(this.fATAPI){if(V.type&&R==HDC.ATC.COMMAND.IDPACKET)return!1;if(!V.type&&R==HDC.ATC.COMMAND.IDDEVICE)return this.processReset(V),!1;this.initBuffer(V);let U=function(R,U){V.buffer[R]=255&U},l=function(V,R){U(V,R),U(V+1,R>>8)},e=function(V,R,l){R||(R="");for(let e=0;e<l;e++)U(V+(1^e),e<R.length?R.charCodeAt(e):32)};return l(HDC.ATC.IDENTIFY.CONFIG.OFFSET,V.type?HDC.ATC.IDENTIFY.CONFIG.FIXED:34176),V.type&&(l(HDC.ATC.IDENTIFY.CYLS,V.nCylinders),l(HDC.ATC.IDENTIFY.HEADS,V.nHeads),l(HDC.ATC.IDENTIFY.SECBYTES,V.cbSector),l(HDC.ATC.IDENTIFY.SECTORS,V.nSectors)),e(HDC.ATC.IDENTIFY.SERIAL_NUMBER,"PCJS-20190528",20),l(HDC.ATC.IDENTIFY.BUFFER_TYPE,3),l(HDC.ATC.IDENTIFY.BUFFER_SIZE,512),e(HDC.ATC.IDENTIFY.FIRMWARE_REV,"0.1",8),e(HDC.ATC.IDENTIFY.MODEL_NUMBER,"PCJS CD-ROM",40),V.type||U(HDC.ATC.IDENTIFY.CAPABILITY,11),V.useBuffer=!0,MAXDEBUG&&this.dbg.stopCPU(),!0}return!1}processPacket(V){let R,U,l,e,t,T,k,F,W,a,s,Z,S,h,E=this,i=V.buffer.length,N=0,r=function(R,U,l){return V.buffer[R]>>U&(1<<l)-1},M=function(R){return 255&V.buffer[R]},J=function(V){return M(V)<<8|M(V+1)},d=function(V){return J(V)<<16|J(V+2)},p=function(V){let R=J(V);return R>i&&(R=i),R},G=function(R,U){R<i&&(V.buffer[R]=255&U)},b=function(V,R,U){for(;U--;)G(V++,R)},D=function(V,R,U){R||(R="");for(let l=0;l<U;l++)G(V+l,l<R.length?R.charCodeAt(l):32)},o=function(V,R){G(V,R>>8),G(V+1,R)},n=function(R,U=0){U?E.regStatus=HDC.ATC.STATUS.ERROR:R?(V.iByte=0,V.nBytes=V.cbTransfer=i,E.regCylLo=255&i,E.regCylHi=i>>8&255,E.regStatus=E.regStatus&~HDC.ATC.STATUS.BUSY|HDC.ATC.STATUS.DATA_REQ,E.regSecCnt=HDC.ATC.SECCNT.PACKET_IO):(E.regStatus=HDC.ATC.STATUS.READY,E.regSecCnt=HDC.ATC.SECCNT.PACKET_IO|HDC.ATC.SECCNT.PACKET_CD),E.setATCIRR(!0)},c=function(R,U,l,e,t){let T=V.chunksCached[U];if(R);else{if(!T)return!1;R=T}let k=-1;T?(k=V.chunksMRU.indexOf(U),k>0&&V.chunksMRU.splice(k,1)):V.chunksCached[U]=R,V.chunksMRU.length>=128&&V.chunksMRU.pop(),k&&V.chunksMRU.unshift(U);let F=new Uint8Array(R);for(;l<F.byteLength&&e--;)G(t++,F[l++]);return--S||n(!0),!0},O=function(R,U,l,e){S++,c(null,R,U,l,e)||WebLib.getResource(StrLib.sprintf("%s/x%05d",V.sDiskPath,R),"arraybuffer",!0,(function(V,t,T){!t||T?(h++,--S||n(!1,T)):c(t,R,U,l,e)}))};switch(T=M(0),this.printf(MESSAGE.HDC,"%s.packet(%#04x): %s (drive %d)\n",this.idComponent,T,HDC.aATAPICommands[T],V.iDrive),T){case HDC.ATC.PACKET.COMMAND.TEST_UNIT:T=0;break;case HDC.ATC.PACKET.COMMAND.REQ_SENSE:i=0;break;case HDC.ATC.PACKET.COMMAND.INQUIRY:i=p(3),G(0,5),G(1,128),G(2,0),G(3,33),G(4,31),b(5,0,3),D(8,"PCJS.ORG",8),D(16,V.name,16),D(32,"1.0",4);break;case HDC.ATC.PACKET.COMMAND.READ:for(U=d(2),l=J(7),k=U<<11,i=l<<11,this.initBuffer(V,i),S=1,h=0,F=k>>>15,W=32767&k,s=i,Z=0;s>0;)a=32768-W,a>s&&(a=s),O(F,W,a,Z),Z+=a,s-=a,W=0,F++;--S||n(!0),T=-1;break;case HDC.ATC.PACKET.COMMAND.SEEK:U=d(2),T=0;break;case HDC.ATC.PACKET.COMMAND.READ_TOC:if(i=p(7),R=r(2,0,4),0===R)o(0,10),G(2,1),G(3,1),G(4,0),G(5,20),G(6,1),G(7,0),o(x=8,(m=0)>>16),o(x+2,m);else this.printf(MESSAGE.HDC,"%s.packet(%#04x): unsupported format %d\n",this.idComponent,T,R),MAXDEBUG&&this.dbg.stopCPU(),T=-1;break;case HDC.ATC.PACKET.COMMAND.PLAY_AUDIO:T=0;break;case HDC.ATC.PACKET.COMMAND.MODE_SENSE:switch(i=p(7),e=r(2,0,6),t=r(2,6,2),e){case HDC.ATC.PACKET.PAGECODE.RW_ERRREC:b(0,0,i),o(0,i-2),G(2,1),N=8,G(N,e),G(N+1,i-8-2);break;case HDC.ATC.PACKET.PAGECODE.CD_STATUS:b(0,0,i),o(0,i-2),N=8,G(N,e),G(N+1,i-8-2),G(N+2,8),G(N+4,113),G(N+6,41),o(N+8,5632),o(N+10,2),o(N+12,128),o(N+14,5632);break;default:this.printf(MESSAGE.HDC,"%s.packet(%#04x): unsupported page code %d\n",this.idComponent,T,e),MAXDEBUG&&this.dbg.stopCPU(),T=-1}break;default:MAXDEBUG&&this.dbg.stopCPU(),T=-1}var x,m;T>=0&&n(T>0,0)}processReset(V){return!!this.fATAPI&&(this.regSecCnt=1,this.regSecNum=1,V.type?this.regCylLo=this.regCylHi=0:(this.regCylLo=20,this.regCylHi=235),this.regDrvHd=0,MAXDEBUG&&this.dbg.stopCPU(),!0)}intBIOSDisk(V){let R=this.cpu.regEAX>>8,U=255&this.cpu.regEDX;return!R&&U>128&&(this.iDriveAllowFail=U-128),!0}intBIOSDiskette(V){return!(!(this.cpu.regEAX>>8)&&this.chipset&&this.chipset.checkIMR(ChipSet.IRQ.FDC))||(DEBUG&&this.printf("%s.intBIOSDiskette(): skipping useless INT 0x40 diskette reset\n",this.idComponent),!1)}static init(){let V=Component.getElementsByClass(APPCLASS,"hdc");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new HDC(l);Component.bindComponentControls(e,U,APPCLASS)}}}WebLib.onInit(HDC.init);class DbgLib extends Component{constructor(V,R,U){super(V,R,U),DEBUGGER&&(this.nBase=+R.base||16,this.nBits=32,this.achGroup=["{","}"],this.achAddress=["[","]"],this.nCycles=0,this.cOpcodes=this.cOpcodesStart=0,this.fAssemble=!1,this.iPrevCmd=-1,this.aPrevCmds=[],this.aVariables={},this.afnNotify=[])}getRegIndex(V,R){return-1}getRegValue(V){}parseAddrReference(V,R){return V.replace("["+R+"]","unimplemented")}getNextCommand(){let V;return this.iPrevCmd>0?V=this.aPrevCmds[--this.iPrevCmd]:(V="",this.iPrevCmd=-1),V}getPrevCommand(){let V=null;return this.iPrevCmd<this.aPrevCmds.length-1&&(V=this.aPrevCmds[++this.iPrevCmd]),V}parseCommand(V,R,U){R&&(V?(this.iPrevCmd<0&&this.aPrevCmds.length&&(this.iPrevCmd=0),(this.iPrevCmd<0||V!=this.aPrevCmds[this.iPrevCmd])&&(this.aPrevCmds.splice(0,0,V),this.iPrevCmd=0),this.iPrevCmd--):V=this.fAssemble?"end":this.aPrevCmds[this.iPrevCmd+1]);let l=[];if(V){V=V.replace(/""/g,"'");let R=0,e=null;U=U||";";for(let t=0;t<=V.length;t++){let T=V.charAt(t);'"'==T||"'"==T?e?T==e&&(e=null):e=T:(T!=U||e)&&T||(l.push(StrLib.trim(V.substring(R,t))),R=t+1)}}return l}evalAND(V,R){return this.nBits<=32?V&R:(V=this.truncate(V,0,!0),R=this.truncate(R,0,!0),((V/DbgLib.TWO_POW32|0)&(R/DbgLib.TWO_POW32|0))*DbgLib.TWO_POW32+((V&R)>>>0))}evalIOR(V,R){return this.nBits<=32?V|R:(V=this.truncate(V,0,!0),R=this.truncate(R,0,!0),(V/DbgLib.TWO_POW32|0|R/DbgLib.TWO_POW32|0)*DbgLib.TWO_POW32+((V|R)>>>0))}evalXOR(V,R){return this.nBits<=32?V^R:(V=this.truncate(V,0,!0),R=this.truncate(R,0,!0),((V/DbgLib.TWO_POW32|0)^(R/DbgLib.TWO_POW32|0))*DbgLib.TWO_POW32+((V^R)>>>0))}evalMUL(V,R){return V*R}truncate(V,R,U){let l,e=V;return R=R||this.nBits,U?32==R?e=V>>>0:R<32?e=V&(1<<R)-1:(l=Math.pow(2,R),(V<0||V>=l)&&(e=V%l,e<0&&(e+=l))):R<=32?e=V<<32-R>>32-R:(l=Math.pow(2,R-1),V>=l?(e=V%l,1&(V/l|0)&&(e-=l)):V<-l&&(e=V%l,1&((-V-1)/l|0)?e&&(e+=l):e||(e-=l))),V!=e&&(MAXDEBUG&&this.printf("warning: value %d truncated to %d\n",V,e),V=e),V}evalOps(V,R,U=-1){for(;U--&&R.length;){let U,l=R.pop();if(V.length<2)return!1;let e=V.pop(),t=V.pop();switch(l){case"*":U=this.evalMUL(t,e);break;case"/":if(!e)return!1;U=Math.trunc(t/e);break;case"^/":if(!e)return!1;U=t%e;break;case"+":U=t+e;break;case"-":U=t-e;break;case"<<":U=t<<e;break;case">>":U=t>>e;break;case">>>":U=t>>>e;break;case"<":U=t<e?1:0;break;case"<=":U=t<=e?1:0;break;case">":U=t>e?1:0;break;case">=":U=t>=e?1:0;break;case"==":U=t==e?1:0;break;case"!=":U=t!=e?1:0;break;case"&":U=this.evalAND(t,e);break;case"!":case"|":U=this.evalIOR(t,e);break;case"^!":U=this.evalXOR(t,e);break;case"&&":U=t&&e?1:0;break;case"||":U=t||e?1:0;break;case",,":U=this.truncate(t,18,!0)*Math.pow(2,18)+this.truncate(e,18,!0);break;case"^_":U=t,"^_"==l&&(e=35-(255&e)),e&&(U=this.truncate(U,0,!0),e>0?U*=Math.pow(2,e):U=Math.trunc(U/Math.pow(2,-e)));break;default:return!1}V.push(this.truncate(U))}return!0}parseArray(V,R,U,l,e){let t,T,k,F=!1,W=0,a=[],s=[],Z=this.nBase;for(this.nBase=l;R<U;){let t;if(T=V[R++].trim(),k=R<U?V[R++]:"",T)t=this.parseValue(T,void 0,e,W);else{if("{"!=k){if(" "==k)continue;if("^B"==k){this.nBase=2;continue}if("^O"==k){this.nBase=8;continue}if("^D"==k){this.nBase=10;continue}if(!(-1073741824&W)){if("+"==k)continue;if("-"==k){W=W<<2|1;continue}if("~"==k||"^-"==k){W=W<<2|2;continue}if("^L"==k){W=W<<2|3;continue}}F=!0;break}{let l=1,F=R;for(;R<U;)if(T=V[R++].trim(),k=R<V.length?V[R++]:"","{"==k)l++;else if("}"==k&&! --l)break;t=this.parseArray(V,F,R-1,this.nBase,e),null!=t&&W&&(t=this.parseUnary(t,W)),T=R<U?V[R++].trim():"",k=R<U?V[R++]:""}}if(void 0===t){if(!e){F=!0,e=[];break}e.push(T),t=0}if(a.push(this.truncate(t))," "==k){if(!(R<V.length-1)||V[R]){F=!0;break}R++,k=V[R++]}if(!k)break;let Z="<"==this.achGroup[0]?DbgLib.aDECOpPrecedence:DbgLib.aBinOpPrecedence;if(!Z[k]){F=!0;break}s.length&&Z[k]<=Z[s[s.length-1]]&&this.evalOps(a,s,1),s.push(k),this.nBase="^_"==k?10:l,W=0}return!F&&this.evalOps(a,s)&&1==a.length||(F=!0),F?e||this.printf("parse error (%s)\n",T||k):t=a.pop(),this.nBase=Z,t}parseASCII(V,R,U,l){let e;for(;(e=V.indexOf(R))>=0;){let t=0,T=e+1,k=l;for(;T<V.length;){let e=V[T++];if(e==R){k=-1;break}if(!k)break;k--;let F=e.charCodeAt(0);7==U?F&=127:F=F-32&63,t=this.truncate(t*Math.pow(2,U)+F,U*l,!0)}if(k>=0)return void this.printf("parse error (%s%s%s)\n",R,V,R);V=V.substr(0,e)+this.toStrBase(t,-1)+V.substr(T)}return V}parseExpression(V,R){let U,l=!1===R,e=Array.isArray(R)?R:void 0;if(V){if("{"!=this.achGroup[0]&&(V=V.split(this.achGroup[0]).join("{").split(this.achGroup[1]).join("}")),!(V=this.parseASCII(V,'"',7,5)))return U;if(!(V=this.parseASCII(V,"'",6,6)))return U;let R=/({|}|\|\||&&|\||\^!|\^B|\^O|\^D|\^L|\^-|~|\^_|&|!=|!|==|>=|>>>|>>|>|<=|<<|<|-|\+|\^\/|\/|\*|,,| )/;16!=this.nBase&&(V=V.replace(/(^|[^A-Z0-9$%.])([0-9]+)B/,"$1$2^_").replace(/\s+/g," "));let t=V.split(R);U=this.parseArray(t,0,t.length,this.nBase,e),void 0!==U&&l&&this.printValue(null,U)}return U}parseReference(V){let R,U=this.achGroup[0],l=this.achGroup[1],e="("==U||"{"==U||"["==U?"\\":"",t="["==U?"\\":"",T=new RegExp(e+U+"([^"+t+U+t+l+"]+)"+e+l);for(;R=V.match(T);){let e=this.parseExpression(R[1]);if(void 0===e)return;let t=U+R[1]+l,T=null!=e?this.toStrBase(e):"undefined";V=V.replace(t,T)}if(this.achAddress.length)for(U=this.achAddress[0],l=this.achAddress[1],e="("==U||"{"==U||"["==U?"\\":"",t="["==U?"\\":"",T=new RegExp(e+U+"([^"+t+U+t+l+"]+)"+e+l);R=V.match(T);)V=this.parseAddrReference(V,R[1]);return this.parseSysVars(V)}parseSysVars(V){let R;for(;R=V.match(/\$([a-z]+)/i);){let U=null;if("ops"===R[1].toLowerCase())U=this.cOpcodes-this.cOpcodesStart;if(null==U)break;V=V.replace(R[0],U.toString())}return V}parseUnary(V,R){for(;R;){let U;switch(3&R){case 1:V=-this.truncate(V);break;case 2:V=this.evalXOR(V,-1);break;case 3:for(U=35;U>=0&&!this.evalAND(V,Math.pow(2,U));)U--;V=35-U}R>>>=2}return V}parseValue(V,R,U,l=0){let e,t=Array.isArray(U)?U:void 0;if(null!=V){let T=this.getRegIndex(V);if(T>=0)e=this.getRegValue(T);else if(e=this.getVariable(V),null!=e){let l=this.getVariableFixup(V);if(l)if(t)t.push(l);else{let t=this.parseExpression(l,U);void 0!==t?e+=t:(U||this.printf("undefined %s: %s (%s)\n",R||"value",V,l),e=void 0)}}else e=StrLib.parseInt(V,V.length>1||this.nBase>10?this.nBase:10);null!=e?e=this.truncate(this.parseUnary(e,l)):U||this.printf("invalid %s: %s\n",R||"value",V)}else U||this.printf("missing %s\n",R||"value");return e}printValue(V,R){let U,l=!1;return void 0!==R&&(l=!0,U=8==this.nBase?this.toStrBase(R,this.nBits,8,1)+"  "+R+".":this.toStrBase(R,this.nBits,16,1)+"  "+this.toStrBase(R,this.nBits,8,1)+"  "+this.toStrBase(R,this.nBits,2,this.nBits<=32?8:6)+"  "+R+".",R>=32&&R<127&&(U+=" '"+String.fromCharCode(R)+"'")),V=null!=V?V+": ":"",this.printf("%s%s\n",V,U),l}resetVariables(){let V=this.aVariables;return this.aVariables={},V}restoreVariables(V){this.aVariables=V}printVariable(V){let R=0;if(this.aVariables){if(V)return this.printValue(V,this.aVariables[V]&&this.aVariables[V].value);let U=Object.keys(this.aVariables);U.sort();for(let V=0;V<U.length;V++)this.printValue(U[V],this.aVariables[U[V]].value),R++}return R>0}delVariable(V){delete this.aVariables[V]}getVariable(V){return this.aVariables[V]?this.aVariables[V].value:(V=V.substr(0,6),this.aVariables[V]&&this.aVariables[V].value)}getVariableFixup(V){return this.aVariables[V]&&this.aVariables[V].sUndefined}isVariable(V){return void 0!==this.aVariables[V]}setVariable(V,R,U){this.aVariables[V]={value:R,sUndefined:U}}toStrBase(V,R=0,U=0,l=0){let e;switch(U||this.nBase){case 2:e=StrLib.toBin(V,R>0?R:0,l);break;case 8:e=StrLib.toOct(V,R>0?(R+2)/3|0:0,!!l);break;case 10:e=StrLib.toDec(V,R>0?Math.ceil(.3*R):0);break;default:e=StrLib.toHex(V,R>0?R+3>>2:0,!!l)}return R<0?StrLib.stripLeadingZeros(e):e}onEvent(V){this.afnNotify.push(V)}notifyEvent(V,R){for(let U=0;U<this.afnNotify.length;U++)this.afnNotify[U](V,R)}}DEBUGGER&&(DbgLib.aBinOpPrecedence={"||":5,"&&":6,"!":7,"|":7,"^!":8,"&":9,"!=":10,"==":10,">=":11,">":11,"<=":11,"<":11,">>>":12,">>":12,"<<":12,"-":13,"+":13,"^/":14,"/":14,"*":14,"^_":19,"{":20,"}":20},DbgLib.aDECOpPrecedence={",,":1,"||":5,"&&":6,"!=":10,"==":10,">=":11,">":11,"<=":11,"<":11,">>>":12,">>":12,"<<":12,"-":13,"+":13,"^/":14,"/":14,"*":14,"!":15,"|":15,"^!":15,"&":15,"^_":19,"{":20,"}":20},DbgLib.TWO_POW32=Math.pow(2,32)),DbgLib.EVENTS={EXIT:0,ENTER:1,READY:2};class Debuggerx86 extends DbgLib{constructor(V){if(super("Debugger",V,-1),DEBUGGER){this.cchReg=4,this.cchAddr=5,this.maskAddr=1048575,this.dbgAddrNextCode=this.newAddr(0,0),this.dbgAddrNextData=this.newAddr(0,0),this.dbgAddrAssemble=this.newAddr(0,0),this.aSymbolTable=[],this.aBreakExec=this.aBreakRead=this.aBreakWrite=[],this.clearBreakpoints(),this.nBreakIns=0,this.aVectorBP=[],this.vectorHalt=!0,this.vectorSkip=-1,this.vectorTrace=-1,this.historyInit(),this.afnDumpers={},this.messageInit(V.messages),this.sCommandsInit=V.commands;let R=this;void 0===globals.window[APPCLASS]&&(globals.window[APPCLASS]=function(V){return R.doCommands(V)})}}initBus(V,R,U,l){this.bus=R,this.cpu=U,this.cmp=V,this.fdc=V.getMachineComponent("FDC",!1),this.hdc=V.getMachineComponent("HDC",!1),this.mouse=V.getMachineComponent("Mouse",!1);let e=V.getMachineParm("messages");e&&this.messageInit(e),this.sCommandsInit=V.getMachineParm("commands")||this.sCommandsInit,this.messageEnabled(MESSAGE.CHIPSET)?this.chipset=V.getMachineComponent("ChipSet"):this.messageEnabled(MESSAGE.VIDEO)&&(this.video=V.getMachineComponent("Video")),this.cchAddr=R.getWidth()>>2,this.maskAddr=R.nBusLimit,this.segDebugger=new Segx86(this.cpu,Segx86.ID.DBG,"DBG"),this.aaOpDescs=Debuggerx86.aaOpDescs,this.cpu.model>=X86.MODEL_80186&&(this.aaOpDescs=Debuggerx86.aaOpDescs.slice(),this.aaOpDescs[15]=Debuggerx86.aOpDescUndefined,this.cpu.model>=X86.MODEL_80286&&(this.aaOpDescs[15]=Debuggerx86.aOpDesc0F,I386&&this.cpu.model>=X86.MODEL_80386&&(this.cchReg=8))),this.messageDump(MESSAGE.BUS,(function(V){l.dumpBus(V)})),this.messageDump(MESSAGE.DESC,(function(V){l.dumpSel(V)})),this.messageDump(MESSAGE.DOS,(function(V){l.dumpDOS(V)})),this.messageDump(MESSAGE.MEM,(function(V){l.dumpMem(V)})),this.messageDump(MESSAGE.TSS,(function(V){l.dumpTSS(V)}));let t=V.getMachineBoolean("symbols");(DEBUG&&!1!==t||t)&&((Interrupts.WINDBG.ENABLED||Interrupts.WINDBGRM.ENABLED)&&(this.fWinDbg=null,this.cTrapFaults=0,this.fIgnoreNextCheckFault=!1,this.cpu.addIntNotify(Interrupts.WINCB.VECTOR,this.intWindowsCallBack.bind(this)),this.cpu.addIntNotify(Interrupts.WINDBG.VECTOR,this.intWindowsDebugger.bind(this))),Interrupts.WINDBGRM.ENABLED&&(this.fWinDbgRM=null,this.cpu.addIntNotify(Interrupts.WINDBGRM.VECTOR,this.intWindowsDebuggerRM.bind(this)))),this.setReady()}addSegmentInfo(V,R,U,l,e){let t=this.getSZ(V),T=this.getSegment(U),k=T?T.limit+1:0,F=(l?"_CODE":"_DATA")+StrLib.toHex(R,2);e&&this.printf(MESSAGE.DEBUG,"%s %s(%04X)=#%04X len %0X\n",t,l?"code":"data",R,U,k);let W=this.findModuleInfo(t,R);W[t+F]=0,this.addSymbols(t,R,U,0,null,k,W)}removeSegmentInfo(V,R){let U=this.removeSymbols(null,V);R&&(U?this.printf(MESSAGE.DEBUG,"%s #%04X removed\n",U,V):this.printf(MESSAGE.DEBUG,"unable to remove module for segment #%04X\n",V))}addSectionInfo(V,R,U){let l=this.getShort(V,2),e=this.getShort(V,2),t=this.getLong(V,4),T=this.getLong(V,4),k=this.newAddr(this.getLong(V,4),this.getShort(V,2)),F=this.newAddr(this.getLong(V,4),this.getShort(V,2)),W=this.getSZ(F).toUpperCase(),a=this.getSZ(k).toUpperCase();W==a?W="":W+="!";let s=(R?"_CODE":"_DATA")+StrLib.toHex(l,2);U&&this.printf(MESSAGE.DEBUG,"%s%s %s(%04X)=%04X:%0X len %0X\n",W,a,R?"code":"data",l,e,t,T);let Z=this.findModuleInfo(a,l);Z[a+s]=t,this.addSymbols(a,l,e,t,null,T,Z)}removeSectionInfo(V,R,U){let l=this.getSZ(R).toUpperCase(),e=this.removeSymbols(l,V);U&&(e?this.printf(MESSAGE.DEBUG,"%s %04X removed\n",l,V):this.printf(MESSAGE.DEBUG,"unable to remove %s for section %04X\n",l,V))}intWindowsCallBack(V){let R=this.cpu;if(null!=this.fWinDbg&&2752554==R.regEAX){let V=65535&R.regEDX,U=65535&R.regESI,l=this.newAddr(R.getSP()+12,R.getSS());if(this.getLong(l)===Interrupts.WINDBG.LOADSEG32)this.addSectionInfo(this.newAddr(R.regEBX,V),!U,this.fWinDbg)}return!0}intWindowsDebugger(V){let R,U=this.cpu,l=65535&U.regEAX,e=65535&U.regEBX,t=65535&U.regECX,T=65535&U.regEDX,k=65535&U.regESI,F=65535&U.regEDI,W=U.segES.sel;if(null==this.fWinDbg)return l==Interrupts.WINDBG.IS_LOADED&&U.addIntReturn(V,(a=this,function(V){(65535&U.regEAX)!=Interrupts.WINDBG.LOADED?(U.regEAX=-65536&U.regEAX|Interrupts.WINDBG.LOADED,a.printf(MESSAGE.DEBUG,"INT 41 handling enabled\n"),a.fWinDbg=!0):(a.printf(MESSAGE.DEBUG,"INT 41 monitoring enabled\n"),a.fWinDbg=!1)})),!0;var a;switch(l){case Interrupts.WINDBG.ISCHAR:case Interrupts.WINDBG.FORCEDGO16:break;case Interrupts.WINDBG.IS_LOADED:this.fWinDbg&&(U.regEAX=-65536&U.regEAX|Interrupts.WINDBG.LOADED,this.printf(MESSAGE.DEBUG,"INT 41 handling enabled\n"));break;case Interrupts.WINDBG.LOADSEG:this.addSegmentInfo(this.newAddr(F,W),e+1,t,!(1&k),this.fWinDbg);break;case Interrupts.WINDBG.FREESEG:this.removeSegmentInfo(e,this.fWinDbg);break;case Interrupts.WINDBG.KRNLVARS:case Interrupts.WINDBG.RELSEG:case Interrupts.WINDBG.EXITCALL:case Interrupts.WINDBG.LOADDLL:case Interrupts.WINDBG.DELMODULE:case Interrupts.WINDBG.UNKNOWN66:case Interrupts.WINDBG.UNKNOWN67:case Interrupts.WINDBG.LOADHIGH:case Interrupts.WINDBG.REGDOTCMD:case Interrupts.WINDBG.CONDBP:break;case Interrupts.WINDBG.CHECKFAULT:this.fWinDbg&&(U.regEAX=-65536&U.regEAX|(this.fIgnoreNextCheckFault?0:1),this.printf(MESSAGE.DEBUG,"INT 41 CHECKFAULT: fault=%04X type=%04X trap=%b\n",e,t,!this.fIgnoreNextCheckFault));break;case Interrupts.WINDBG.TRAPFAULT:this.fWinDbg&&(R=this.newAddr(U.regEDX,t),this.cTrapFaults++?(this.printf("TRAPFAULT failed\n"),this.findBreakpoint(this.aBreakExec,R,!0,!0,!0),this.cTrapFaults=0,this.stopCPU()):(this.printf("INT 41 TRAPFAULT: fault=%04X error=%08X addr=%s\n",e,U.regESI,this.toHexAddr(R)),this.addBreakpoint(this.aBreakExec,R,!0),this.historyInit(!0)));break;case Interrupts.WINDBG.GETSYMBOL:this.fWinDbg&&(U.regEAX=-65536&U.regEAX|1);break;case Interrupts.WINDBG.LOADSEG32:this.addSectionInfo(this.newAddr(U.regEBX,T),!k,this.fWinDbg);break;case Interrupts.WINDBG.FREESEG32:this.removeSectionInfo(e,this.newAddr(U.regEDI,T),this.fWinDbg);break;case Interrupts.WINDBG.FORCEDBP:break;default:this.fWinDbg&&this.printf(MESSAGE.DEBUG,"INT 41: AX=%04X (unhandled)\n",l)}return this.fIgnoreNextCheckFault=!1,!this.fWinDbg}intWindowsDebuggerRM(V){let R=this.cpu,U=255&R.regEAX,l=R.regEAX>>8&255,e=65535&R.regEBX,t=65535&R.regECX,T=65535&R.regEDX,k=65535&R.regEDI,F=R.segES.sel;if(null==this.fWinDbgRM){if(l==Interrupts.WINDBGRM.IS_LOADED){if(609437257==R.getLong(10+(R.segCS.sel<<4)))return this.printf(MESSAGE.DEBUG,"ignoring INT 68 from IFSHLP.SYS\n"),!0;if(1111835735==R.getLong(130+(R.segCS.sel<<4))||1111835735==R.getLong(95+(R.segCS.sel<<4)))return this.printf(MESSAGE.DEBUG,"ignoring INT 68 from WDEB386.EXE\n"),!0;R.addIntReturn(V,(W=this,function(V){(65535&R.regEAX)!=Interrupts.WINDBGRM.LOADED?(R.regEAX=-65536&R.regEAX|Interrupts.WINDBGRM.LOADED,W.printf(MESSAGE.DEBUG,"INT 68 handling enabled\n"),W.fWinDbg=W.fWinDbgRM=!0):(W.printf(MESSAGE.DEBUG,"INT 68 monitoring enabled\n"),W.fWinDbgRM=!1)}))}return!0}var W;switch(l){case Interrupts.WINDBGRM.IS_LOADED:this.fWinDbgRM&&(R.regEAX=-65536&R.regEAX|Interrupts.WINDBGRM.LOADED);break;case Interrupts.WINDBGRM.PREP_PMODE:if(this.fWinDbgRM){let V=R.segCS.addCallBreak(this.callWindowsDebuggerPMInit.bind(this));V&&(R.regEDI=V[0],R.setES(V[1]))}break;case Interrupts.WINDBGRM.FREESEG:this.removeSegmentInfo(e,this.fWinDbg);break;case Interrupts.WINDBGRM.REMOVESEGS:break;case Interrupts.WINDBGRM.LOADSEG:32==U?this.addSegmentInfo(this.newAddr(k,F),0,t,!0,this.fWinDbgRM):U<128?this.addSegmentInfo(this.newAddr(k,F),e+1,64&U?T:t,!(1&U),this.fWinDbgRM):this.addSectionInfo(this.newAddr(k,F),!(1&U),this.fWinDbgRM),this.fWinDbgRM&&(R.regEAX=-256&R.regEAX|1);break;default:this.fWinDbgRM&&this.printf(MESSAGE.DEBUG,"INT 68: AH=%02X (unhandled)\n",l)}return!this.fWinDbgRM}callWindowsDebuggerPMInit(){let V=this.cpu,R=255&V.regEAX;return MAXDEBUG&&this.printf("INT 68 callback: AL=%02X\n",R),5==R&&(V.regECX=V.regESI=0,V.regEAX=-256&V.regEAX|1),!1}setBinding(V,R,U,l){let e=this;switch(R){case"debugInput":return this.bindings[R]=U,this.controlDebug=U,U.onkeydown=function(V){let R;if(V.keyCode==Keys.KEYCODE.CR)R=e.controlDebug.value,e.controlDebug.value="",e.doCommands(R,!0);else if(V.keyCode==Keys.KEYCODE.ESC)e.controlDebug.value=R="";else if(V.keyCode==Keys.KEYCODE.UP?R=e.getPrevCommand():V.keyCode==Keys.KEYCODE.DOWN&&(R=e.getNextCommand()),null!=R){let V=R.length;e.controlDebug.value=R,e.controlDebug.setSelectionRange(V,V)}null!=R&&V.preventDefault&&V.preventDefault()},!0;case"debugEnter":return this.bindings[R]=U,WebLib.onClickRepeat(U,500,100,(function(V){if(e.controlDebug){let V=e.controlDebug.value;return e.controlDebug.value="",e.doCommands(V,!0),!0}return DEBUG&&e.printf(MESSAGE.LOG,"no debugger input buffer\n"),!1})),!0;case"step":return this.bindings[R]=U,WebLib.onClickRepeat(U,500,100,(function(V){let R=!1;return e.isBusy(!0)||(e.setBusy(!0),R=e.stepCPU(V?1:0),e.setBusy(!1)),R})),!0}return!1}updateFocus(){this.controlDebug&&this.controlDebug.focus()}getCPUMode(){return!(!(this.cpu&&this.cpu.regCR0&X86.CR0.MSW.PE)||this.cpu.regPS&X86.PS.VM)}getAddressType(){return this.getCPUMode()?Debuggerx86.ADDRTYPE.PROT:Debuggerx86.ADDRTYPE.REAL}getSegment(V,R){let U=this.getAddressType();if(R||(R=U),R==U){if(V===this.cpu.getCS())return this.cpu.segCS;if(V===this.cpu.getDS())return this.cpu.segDS;if(V===this.cpu.getES())return this.cpu.segES;if(V===this.cpu.getSS())return this.cpu.segSS;if(I386&&this.cpu.model>=X86.MODEL_80386){if(V===this.cpu.getFS())return this.cpu.segFS;if(V===this.cpu.getGS())return this.cpu.segGS}if(this.nSuppressBreaks&&R==Debuggerx86.ADDRTYPE.PROT||!this.segDebugger)return null}let l=this.segDebugger;return R!=Debuggerx86.ADDRTYPE.PROT?(l.loadReal(V),l.limit=65535,l.offMax=65536):l.probeDesc(V),l}getAddr(V,R,U){let l=V&&V.addr;if(null==l&&(l=X86.ADDR_INVALID,V)){let e=this.getSegment(V.sel,V.type);e&&(l=R?e.checkWriteDebugger(V.off||0,U||1):e.checkReadDebugger(V.off||0,U||1),V.addr=l)}return l}getByte(V,R){let U=255,l=this.getAddr(V,!1,1);return l!==X86.ADDR_INVALID&&(U=0|this.cpu.probeAddr(l,1,V.type==Debuggerx86.ADDRTYPE.PHYSICAL),R&&this.incAddr(V,R)),U}getWord(V,R){return V.fData32?this.getLong(V,R?4:0):this.getShort(V,R?2:0)}getShort(V,R){let U=65535,l=this.getAddr(V,!1,2);return l!==X86.ADDR_INVALID&&(U=0|this.cpu.probeAddr(l,2,V.type==Debuggerx86.ADDRTYPE.PHYSICAL),R&&this.incAddr(V,R)),U}getLong(V,R){let U=-1,l=this.getAddr(V,!1,4);return l!==X86.ADDR_INVALID&&(U=0|this.cpu.probeAddr(l,4,V.type==Debuggerx86.ADDRTYPE.PHYSICAL),R&&this.incAddr(V,R)),U}setByte(V,R,U,l){let e=this.getAddr(V,!0,1);e!==X86.ADDR_INVALID&&(V.type!=Debuggerx86.ADDRTYPE.PHYSICAL?this.cpu.setByte(e,R):this.bus.setByteDirect(e,R),U&&this.incAddr(V,U),l||this.cpu.updateCPU(!0))}setShort(V,R,U,l){let e=this.getAddr(V,!0,2);e!==X86.ADDR_INVALID&&(V.type!=Debuggerx86.ADDRTYPE.PHYSICAL?this.cpu.setShort(e,R):this.bus.setShortDirect(e,R),U&&this.incAddr(V,U),l||this.cpu.updateCPU(!0))}newAddr(V,R,U,l,e,t){return this.setAddr({},V,R,U,l,e,t)}getAddrPrefix(V){let R;switch(V.type){case Debuggerx86.ADDRTYPE.REAL:case Debuggerx86.ADDRTYPE.V86:R="&";break;case Debuggerx86.ADDRTYPE.PROT:R="#";break;case Debuggerx86.ADDRTYPE.LINEAR:R="%";break;case Debuggerx86.ADDRTYPE.PHYSICAL:R="%%";break;default:R=V.sel?"":"%"}return R}setAddr(V,R,U,l,e,t,T){return V.off=R||0,V.sel=U,V.addr=l,V.type=e||this.getAddressType(),V.fData32=null!=t?t:!(!this.cpu||4!=this.cpu.segCS.sizeData),V.fAddr32=null!=T?T:!(!this.cpu||4!=this.cpu.segCS.sizeAddr),V.fTempBreak=!1,V}packAddr(V){return[V.off,V.sel,V.addr,V.fTempBreak,V.fData32,V.fAddr32,0]}unpackAddr(V){return{off:V[0],sel:V[1],addr:V[2],fTempBreak:V[3],fData32:V[4],fAddr32:V[5]}}checkLimit(V,R){if(null!=V.sel){let U=this.getSegment(V.sel,V.type);if(U){let l=V.off;if(U.fExpDown){if(l>>>0<U.offMax)return!1}else if(l>>>0>=U.offMax)return!1;R&&(V.off=l&U.maskAddr,V.fData32=4==U.sizeData,V.fAddr32=4==U.sizeAddr)}}return!0}parseAddr(V,R,U,l){let e,t=R?this.dbgAddrNextCode:this.dbgAddrNextData,T=U?Debuggerx86.ADDRTYPE.NONE:t.type,k=t.off,F=t.sel,W=t.addr;if(void 0!==V){let R=(V=this.parseReference(V)).charAt(0),U=V.indexOf(":");switch(R){case"&":T=Debuggerx86.ADDRTYPE.REAL;break;case"#":T=Debuggerx86.ADDRTYPE.PROT;break;case"%":T=Debuggerx86.ADDRTYPE.LINEAR,R=V.charAt(1),"%"==R&&(T=Debuggerx86.ADDRTYPE.PHYSICAL,R+=R),k=W=0,F=void 0;break;default:U>=0&&(T=Debuggerx86.ADDRTYPE.NONE),R=""}if(R&&(V=V.substr(R.length),U-=R.length),e=this.findSymbolAddr(V),e)return e;U<0?null!=F?(k=this.parseExpression(V,l),W=void 0):(W=this.parseExpression(V,l),null==W&&(k=void 0)):(F=this.parseExpression(V.substring(0,U),l),k=this.parseExpression(V.substring(U+1),l),W=void 0)}return null!=k&&(e=this.newAddr(k,F,W,T),U||this.checkLimit(e,!0)||(this.printf("invalid offset: %s\n",this.toHexAddr(e)),e=void 0)),e}parseAddrOptions(V,R){if(R){let U=R.match(/(['"])(.*?)\1/);U&&(V.aCmds=this.parseCommand(V.sLine=U[2]))}}parseAddrReference(V,R){let U=this.parseAddr(R);return V.replace("["+R+"]",U?StrLib.toHex(this.getWord(U),U.fData32?8:4):"undefined")}incAddr(V,R){R=R||1,null!=V.addr&&(V.addr+=R),null!=V.sel&&(V.off+=R,this.checkLimit(V)||(V.off=0,V.addr=void 0))}toHexOffset(V,R,U){return null!=R?StrLib.toHex(R,4)+":"+StrLib.toHex(V,-65536&V||U?8:4):StrLib.toHex(V)}toHexAddr(V){let R=this.getAddrPrefix(V);return V.type>=Debuggerx86.ADDRTYPE.LINEAR||null==V.sel?R+StrLib.toHex(V.addr):R+this.toHexOffset(V.off,V.sel,V.fAddr32)}getSZ(V,R){let U="";for(R=R||256;U.length<R;){let R=this.getByte(V,1);if(!R||36==R||R>=127)break;U+=R>=32?String.fromCharCode(R):"."}return U}dumpBackTrack(V){let R="no information";if(BACKTRACK){let U=V[0],l=this.parseAddr(U,!0,!0,!0);if(l){let V=this.getAddr(l);if(l.type!=Debuggerx86.ADDRTYPE.PHYSICAL){let R=this.getPageInfo(V);R&&(l.addr=R.addrPhys,l.type=Debuggerx86.ADDRTYPE.PHYSICAL)}R=this.toHexAddr(l)+": "+(this.bus.getSymbol(V,!0)||R)}else{let V,l=null;for(;V=this.cmp.getMachineComponent("Disk",l);){let e=V.getSymbolInfo(U);if(e.length){R="";for(let V in e){let U=e[V];R&&(R+="\n"),R+=U[0]+": "+U[1]+" "+StrLib.toHex(U[2],4)+":"+StrLib.toHex(U[3],4)+" len "+StrLib.toHexWord(U[4])}}l=V}}}return R}dumpBlocks(V,R,U){let l=0,e=0,t=V.length;if(R){if(l=this.getAddr(this.parseAddr(R)),l===X86.ADDR_INVALID)return void this.printf("invalid address: %s\n\n");e=l>>>this.cpu.nBlockShift,t=1}this.printf("blockid   %s   blockaddr   used    size    type\n",U?"linear  ":"physical"),this.printf("--------  ---------  ----------  ------  ------  ----\n");let T=-1,k=0;for(;t--;){let R=V[e];if(R&&R.type==Memoryx86.TYPE.UNPAGED&&(R=this.cpu.mapPageBlock(l,!1,!0)),R.type==T)k++||this.printf("...\n");else{T=R.type;let V=Memoryx86.TYPE.NAMES[T];T==Memoryx86.TYPE.PAGED&&(R=R.blockPhys,V+=" -> "+Memoryx86.TYPE.NAMES[R.type]),R&&this.printf("%08x  %%%08x  %%%%%08x  %#06x  %#06x  %s\n",R.id,e<<this.cpu.nBlockShift,R.addr,R.used,R.size,V),T!=Memoryx86.TYPE.NONE&&T!=Memoryx86.TYPE.UNPAGED&&(T=-1),k=0}l+=this.cpu.nBlockSize,e++}}dumpBus(V){this.dumpBlocks(this.cpu.aBusBlocks,V[0])}dumpDOS(V){let R,U=V[0];if(U&&(R=this.parseValue(U)),void 0!==R)for(this.printf("dumpMCB(%#06x)\n",R);R;){let V=this.newAddr(0,R),U=this.getByte(V,1),l=this.getShort(V,2),e=this.getShort(V,5);if(77!=U&&90!=U)break;this.printf("%s: '%s' PID=%#06x LEN=%#06x \"%s\"\n",this.toHexOffset(0,R),String.fromCharCode(U),l,e,this.getSZ(V,8)),R+=1+e}else this.printf("invalid MCB\n")}dumpIDT(V){let R=V[0];if(!R)return void this.printf("no IDT vector\n");let U=this.parseValue(R);if(void 0===U||U<0||U>255)return void this.printf("invalid vector: %s\n",R);let l="&",e=this.cpu.isProtMode(),t=!1,T=this.cpu.addrIDT+(U<<(e?3:2)),k=this.cpu.getShort(T+X86.DESC.LIMIT.OFFSET),F=this.cpu.getShort(T+X86.DESC.BASE.OFFSET);if(e){l="#",this.cpu.getShort(T+X86.DESC.ACC.OFFSET)&X86.DESC.ACC.TYPE.NONSEG_386&&(t=!0,k|=this.cpu.getShort(T+X86.DESC.EXT.OFFSET)<<16)}this.printf("dumpIDT(%#06x): %s%04x:%0*x\n",U,l,F,t?8:4,k)}dumpMem(V){this.dumpBlocks(this.cpu.aMemBlocks,V[0],this.cpu.aMemBlocks!==this.cpu.aBusBlocks)}getPageEntry(V,R,U){let l=StrLib.toHex(V)+" "+StrLib.toHex(R)+" ";return l+=U&&R&X86.PTE.DIRTY?"D":"-",l+=R&X86.PTE.ACCESSED?"A":"-",l+=R&X86.PTE.USER?"U":"S",l+=R&X86.PTE.READWRITE?"W":"R",l+=R&X86.PTE.PRESENT?"P":"N",l}getPageInfo(V){let R=null;if(I386&&this.cpu.model>=X86.MODEL_80386){let U=this.bus;R={},R.offPDE=(V&X86.LADDR.PDE.MASK)>>>X86.LADDR.PDE.SHIFT,R.addrPDE=this.cpu.regCR3+R.offPDE,R.blockPDE=U.aMemBlocks[(R.addrPDE&U.nBusMask)>>>U.nBlockShift],R.lPDE=R.blockPDE.readLong(R.offPDE),R.offPTE=(V&X86.LADDR.PTE.MASK)>>>X86.LADDR.PTE.SHIFT,R.addrPTE=(R.lPDE&X86.PTE.FRAME)+R.offPTE,R.blockPTE=U.aMemBlocks[(R.addrPTE&U.nBusMask)>>>U.nBlockShift],R.lPTE=R.blockPTE.readLong(R.offPTE),R.addrPhys=(R.lPTE&X86.PTE.FRAME)+(V&X86.LADDR.OFFSET)}return R}dumpPage(V){let R=V[0];if(!R)return void this.printf("missing address\n");let U=this.getAddr(this.parseAddr(R));if(U===X86.ADDR_INVALID)return void this.printf("invalid address: %s\n",R);let l=this.getPageInfo(U);if(!l)return void this.printf("unsupported operation\n");this.printf("linear     PDE addr   PDE             PTE addr   PTE             physical\n"),this.printf("---------  ---------- --------        ---------- --------        ----------\n");let e="%"+StrLib.toHex(U);e+="  %%"+this.getPageEntry(l.addrPDE,l.lPDE),e+="  %%"+this.getPageEntry(l.addrPTE,l.lPTE,!0),e+="  %%"+StrLib.toHex(l.addrPhys),this.printf("%s\n",e)}dumpSel(V){let R=V[0];if(!R)return void this.printf("no selector\n");let U=this.parseValue(R);if(void 0===U)return void this.printf("invalid selector: %s\n",R);let l,e=this.getSegment(U,Debuggerx86.ADDRTYPE.PROT);if(this.printf("dumpSel(%#06x): %%%0*x\n",e?e.sel:U,this.cchAddr,e?e.addrDesc:null),!e)return;let t,T=!1;if(e.type&X86.DESC.ACC.TYPE.SEG)e.type&X86.DESC.ACC.TYPE.CODE?(l="code",l+=e.type&X86.DESC.ACC.TYPE.READABLE?",readable":",execonly",e.type&X86.DESC.ACC.TYPE.CONFORMING&&(l+=",conforming")):(l="data",l+=e.type&X86.DESC.ACC.TYPE.WRITABLE?",writable":",readonly",e.type&X86.DESC.ACC.TYPE.EXPDOWN&&(l+=",expdown")),e.type&X86.DESC.ACC.TYPE.ACCESSED&&(l+=",accessed");else{let V=Debuggerx86.SYSDESCS[e.type];V&&(l=V[0],T=V[1])}!l||e.acc&X86.DESC.ACC.PRESENT||(l+=",not present"),t=T?"seg="+StrLib.toHexWord(65535&e.base)+" off="+StrLib.toHexWord(e.limit):"base="+StrLib.toHex(e.base,this.cchAddr)+" limit="+this.getLimitString(e.limit),this.printf("%s type=%#04x (%s) ext=%#06x dpl=%#04x\n",t,e.type>>8,l,e.ext&~(X86.DESC.EXT.LIMIT1619|X86.DESC.EXT.BASE2431),e.dpl)}dumpHistory(V,R,U="history"){let l="",e=0,t=this.iOpcodeHistory,T=this.aOpcodeHistory;if(T.length){let k=+V||this.nextHistory,F=+R||10;isNaN(k)?k=F:l="more ",k>T.length&&(this.printf("note: only %d available\n",T.length),k=T.length),t-=k,t<0&&(null==T[T.length-1].sel?(k=t+k,t=0):t+=T.length);let W=[];"call"==R&&(F=1e5,W=["CALL"]),void 0!==V&&this.printf("%d instructions earlier:\n",k);let a="",s=0,Z="cycles"==U;for(;F>0&&t!=this.iOpcodeHistory;){let V=T[t++];if(null==V.sel)break;let R=this.newAddr(V.off,V.sel,V.addr,V.type,V.fData32,V.fAddr32),l=k--;Z&&(l=s,null!=V.nCPUCycles&&(l=V.nCPUCycles-s,s=V.nCPUCycles));let S=this.getInstruction(R,U,l);null!=V.nDebugState&&(null!=V.nDebugCycles?S+=" ("+V.nDebugCycles+","+StrLib.toHexByte(V.nDebugState)+")":S+=" ("+StrLib.toHexByte(V.nDebugState>>16)+",AX="+StrLib.toHexWord(65535&V.nDebugState)+")"),(!W.length||S.indexOf(W[0])>=0)&&(a+=(a?"\n":"")+S),t>=T.length&&(t=0),this.nextHistory=k,e++,F--}a&&this.printf("%s\n",a)}e||(this.printf("no %shistory available\n",l),this.nextHistory=void 0)}dumpTSS(V){let R,U,l=V[0];if(l){if(U=this.parseValue(l),void 0===U)return void this.printf("invalid task selector: %s\n",l);R=this.getSegment(U,Debuggerx86.ADDRTYPE.PROT)}else R=this.cpu.segTSS;if(this.printf("dumpTSS(%#06x): %%0*x\n",R?R.sel:U,this.cchAddr,R?R.base:null),!R)return;let e,t,T,k="",F=R.type&~X86.DESC.ACC.TYPE.TSS_BUSY,W=F==X86.DESC.ACC.TYPE.TSS286?4:8,a=F==X86.DESC.ACC.TYPE.TSS286?Debuggerx86.TSS286:Debuggerx86.TSS386;for(let V in a)e=a[V],t=R.base+e,T=this.cpu.probeAddr(t,2),F==X86.DESC.ACC.TYPE.TSS386&&(T|=this.cpu.probeAddr(t+2,2)<<16),k&&(k+="\n"),k+=StrLib.toHexWord(e)+" "+StrLib.pad(V+":",-11)+StrLib.toHex(T,W);if(F==X86.DESC.ACC.TYPE.TSS386){let V=0;for(e=T>>>16;e<R.offMax&&V<1023;)t=R.base+e,T=this.cpu.probeAddr(t,2),k+="\n"+StrLib.toHexWord(e)+" ports "+StrLib.toHexWord(V)+"-"+StrLib.toHexWord(V+15)+": "+StrLib.toBinBytes(T,2),V+=16,e+=2}this.print(k+"\n")}findModuleInfo(V,R){let U={};if(SYMBOLS){let l,e=null;for(;l=this.cmp.getMachineComponent("Disk",e);){let t=l.getModuleInfo(V,R);if(t){U=t;break}e=l}}return U}messageInit(V){this.dbg=this,this.bitsMessage=MESSAGE.WARNING+(DEBUG?MESSAGE.DEBUG:0),this.sMessagePrev=null,this.aMessageBuffer=[];let R=this.parseCommand(V,!1,",");if(R.length){this.bitsMessage-=MESSAGE.WARNING;for(let V in MESSAGE.NAMES)UsrLib.indexOf(R,V)>=0&&(this.bitsMessage+=MESSAGE.NAMES[V],this.printf("%s messages enabled\n",V))}this.historyInit()}messageDump(V,R){for(let U in MESSAGE.NAMES)if(V==MESSAGE.NAMES[U])return this.afnDumpers[U]=R,!0;return!1}getRegIndex(V,R){let U;return V=V.toUpperCase(),null==R?U=UsrLib.indexOf(Debuggerx86.REGS,V):(U=UsrLib.indexOf(Debuggerx86.REGS,V.substr(R,3)),U<0&&(U=UsrLib.indexOf(Debuggerx86.REGS,V.substr(R,2)))),U}getRegString(V){let R=0,U=this.getRegValue(V);if(null!=U)switch(V){case Debuggerx86.REG_AL:case Debuggerx86.REG_CL:case Debuggerx86.REG_DL:case Debuggerx86.REG_BL:case Debuggerx86.REG_AH:case Debuggerx86.REG_CH:case Debuggerx86.REG_DH:case Debuggerx86.REG_BH:R=2;break;case Debuggerx86.REG_AX:case Debuggerx86.REG_CX:case Debuggerx86.REG_DX:case Debuggerx86.REG_BX:case Debuggerx86.REG_SP:case Debuggerx86.REG_BP:case Debuggerx86.REG_SI:case Debuggerx86.REG_DI:case Debuggerx86.REG_IP:case Debuggerx86.REG_SEG+Debuggerx86.REG_ES:case Debuggerx86.REG_SEG+Debuggerx86.REG_CS:case Debuggerx86.REG_SEG+Debuggerx86.REG_SS:case Debuggerx86.REG_SEG+Debuggerx86.REG_DS:case Debuggerx86.REG_SEG+Debuggerx86.REG_FS:case Debuggerx86.REG_SEG+Debuggerx86.REG_GS:R=4;break;case Debuggerx86.REG_EAX:case Debuggerx86.REG_ECX:case Debuggerx86.REG_EDX:case Debuggerx86.REG_EBX:case Debuggerx86.REG_ESP:case Debuggerx86.REG_EBP:case Debuggerx86.REG_ESI:case Debuggerx86.REG_EDI:case Debuggerx86.REG_CR0:case Debuggerx86.REG_CR1:case Debuggerx86.REG_CR2:case Debuggerx86.REG_CR3:case Debuggerx86.REG_EIP:R=8;break;case Debuggerx86.REG_PS:R=this.cchReg}return R?StrLib.toHex(U,R):"??"}getRegValue(V){let R;if(V>=0){let U=this.cpu;switch(V){case Debuggerx86.REG_AL:R=255&U.regEAX;break;case Debuggerx86.REG_CL:R=255&U.regECX;break;case Debuggerx86.REG_DL:R=255&U.regEDX;break;case Debuggerx86.REG_BL:R=255&U.regEBX;break;case Debuggerx86.REG_AH:R=U.regEAX>>8&255;break;case Debuggerx86.REG_CH:R=U.regECX>>8&255;break;case Debuggerx86.REG_DH:R=U.regEDX>>8&255;break;case Debuggerx86.REG_BH:R=U.regEBX>>8&255;break;case Debuggerx86.REG_AX:R=65535&U.regEAX;break;case Debuggerx86.REG_CX:R=65535&U.regECX;break;case Debuggerx86.REG_DX:R=65535&U.regEDX;break;case Debuggerx86.REG_BX:R=65535&U.regEBX;break;case Debuggerx86.REG_SP:R=65535&U.getSP();break;case Debuggerx86.REG_BP:R=65535&U.regEBP;break;case Debuggerx86.REG_SI:R=65535&U.regESI;break;case Debuggerx86.REG_DI:R=65535&U.regEDI;break;case Debuggerx86.REG_IP:R=65535&U.getIP();break;case Debuggerx86.REG_PS:R=U.getPS();break;case Debuggerx86.REG_SEG+Debuggerx86.REG_ES:R=U.getES();break;case Debuggerx86.REG_SEG+Debuggerx86.REG_CS:R=U.getCS();break;case Debuggerx86.REG_SEG+Debuggerx86.REG_SS:R=U.getSS();break;case Debuggerx86.REG_SEG+Debuggerx86.REG_DS:R=U.getDS();break;default:if(this.cpu.model==X86.MODEL_80286)V==Debuggerx86.REG_CR0&&(R=U.regCR0);else if(I386&&this.cpu.model>=X86.MODEL_80386)switch(V){case Debuggerx86.REG_EAX:R=U.regEAX;break;case Debuggerx86.REG_ECX:R=U.regECX;break;case Debuggerx86.REG_EDX:R=U.regEDX;break;case Debuggerx86.REG_EBX:R=U.regEBX;break;case Debuggerx86.REG_ESP:R=U.getSP();break;case Debuggerx86.REG_EBP:R=U.regEBP;break;case Debuggerx86.REG_ESI:R=U.regESI;break;case Debuggerx86.REG_EDI:R=U.regEDI;break;case Debuggerx86.REG_CR0:R=U.regCR0;break;case Debuggerx86.REG_CR1:R=U.regCR1;break;case Debuggerx86.REG_CR2:R=U.regCR2;break;case Debuggerx86.REG_CR3:R=U.regCR3;break;case Debuggerx86.REG_SEG+Debuggerx86.REG_FS:R=U.getFS();break;case Debuggerx86.REG_SEG+Debuggerx86.REG_GS:R=U.getGS();break;case Debuggerx86.REG_EIP:R=U.getIP()}}}return R}replaceRegs(V){V=this.parseReference(V)||V;let R,U,l,e,t,T=0;for(;(T=V.indexOf("@",T))>=0;){let R=this.getRegIndex(V,T+1);R>=0&&(V=V.substr(0,T)+this.getRegString(R)+V.substr(T+1+Debuggerx86.REGS[R].length)),T++}for(T=0;(T=V.indexOf("#",T))>=0;)U=V.substr(T+1,2),R=StrLib.parseInt(U,16),null!=R&&R>=32&&R<127?(t=U+" '"+String.fromCharCode(R)+"'",V=V.replace("#"+U,t),T+=t.length):T++;for(T=0;(T=V.indexOf("$",T))>=0;)l=V.substr(T+1,9),e=this.parseAddr(l),e?(t=l+' "'+this.getSZ(e)+'"',V=V.replace("$"+l,t),T+=t.length):T++;for(T=0;(T=V.indexOf("^",T))>=0;)l=V.substr(T+1,9),e=this.parseAddr(l),e?(this.incAddr(e),t=l+' "'+this.getSZ(e,11)+'"',V=V.replace("^"+l,t),T+=t.length):T++;return V}message(V,R=0){if(R&MESSAGE.ADDR&&this.cpu){let R=StrLib.sprintf(" at %s (%%%X)$1",this.toHexAddr(this.newAddr(this.cpu.getIP(),this.cpu.getCS())),this.cpu.regLIP);V=V.replace(/(\n?)$/,R)}Component.testBits(this.bitsMessage,MESSAGE.BUFFER)?this.aMessageBuffer.push(V):this.sMessagePrev&&V==this.sMessagePrev||(this.sMessagePrev=V,R&&Component.testBits(this.bitsMessage,MESSAGE.HALT)&&(V=V.replace(/(\n?)$/," (cpu halted)$1"),this.stopCPU()),this.print(V,R),this.cpu&&this.cpu.yieldCPU())}messageInt(V,R,U){let l,e,t,T=U;if(T||(T=this.messageEnabled(MESSAGE.CPU)&&Debuggerx86.INT_ANNOYING.indexOf(V)<0,T||(t=Debuggerx86.INT_MESSAGES[V],t&&(T=!!this.messageEnabled(t)||t==MESSAGE.FDC&&this.messageEnabled(t=MESSAGE.HDC)))),T&&(l=this.cpu.regEAX>>8&255,e=255&this.cpu.regEDX,(V==Interrupts.DOS&&11==l||t==MESSAGE.FDC&&e>=128||t==MESSAGE.HDC&&e<128)&&(T=!1)),T){let U=Interrupts.FUNCS[V],e=U&&U[l]||"";e&&(e=this.replaceRegs(e)),R-=2,this.printf("INT %#04X: AH=%#04X at %s %s\n",V,l,this.toHexOffset(R-this.cpu.segCS.base,this.cpu.getCS()),e)}return T}messageIntReturn(V,R,U,l){this.printf("INT %#04X: C=%d%s (cycles=%d%s)\n",V,this.cpu.getCF()?1:0,l||"",U,R?",level="+(R+1):"")}messageIO(V,R,U,l,e,t,T){if(T=Component.setBits(T||0,MESSAGE.PORT),e||(T=Component.setBits(T,MESSAGE.WARNING)),null==l||Component.testBits(this.bitsMessage,T)){let T="";if(null!=l){let V=this.cpu.getCS();l-=this.cpu.segCS.base,T="at "+this.toHexOffset(l,V)}null==U?this.printf("%s.inPort(%#06X,%s): %#04X %s\n",V.idComponent,R,e||"unknown",t,T):this.printf("%s.outPort(%#06X,%s,%#04X) %s\n",V.idComponent,R,e||"unknown",U,T)}}init(){if(this.printf("Type ? for help with PCx86 Debugger commands\n"),this.updateStatus(),this.sCommandsInit){let V=this.sCommandsInit;this.sCommandsInit=null,this.doCommands(V)}}historyInit(V){let R;if(!this.checksEnabled())return this.aOpcodeHistory&&this.aOpcodeHistory.length&&!V&&this.printf("history buffer freed\n"),this.iOpcodeHistory=0,this.aOpcodeHistory=[],void(this.aaOpcodeCounts=[]);if(!this.aOpcodeHistory||!this.aOpcodeHistory.length){for(this.aOpcodeHistory=new Array(Debuggerx86.HISTORY_LIMIT),R=0;R<this.aOpcodeHistory.length;R++)this.aOpcodeHistory[R]=this.newAddr();this.iOpcodeHistory=0,V||this.printf("history buffer allocated\n")}if(!this.aaOpcodeCounts||!this.aaOpcodeCounts.length)for(this.aaOpcodeCounts=new Array(256),R=0;R<this.aaOpcodeCounts.length;R++)this.aaOpcodeCounts[R]=[R,0]}startCPU(V,R){return!!this.checkCPU(R)&&this.cpu.startCPU(V,R)}stepCPU(V,R,U){if(!this.checkCPU())return!1;this.nCycles=0;let l=!V;do{l&&(this.checksEnabled()&&this.checkInstruction(this.cpu.regLIP,0),l=!1);try{let R=this.cpu.stepCPU(V);R>0&&(this.nCycles+=R,this.cpu.addCycles(R,!0),this.cpu.updateTimers(R),this.cpu.updateChecksum(R),this.cOpcodes++)}catch(V){if("number"!=typeof V){let R=V;this.nCycles=0,this.cpu.setError(R.stack||R.message)}}}while(this.cpu.opFlags&X86.OPFLAG_PREFIXES);return!1!==U&&this.cpu.updateCPU(!0),this.updateStatus(R||!1),this.nCycles>0}stopCPU(V){return this.cpu&&this.cpu.stopCPU(V)||!1}updateStatus(V){void 0===V&&(V=!0),this.dbgAddrNextCode=this.newAddr(this.cpu.getIP(),this.cpu.getCS()),V&&1!=this.nStep?this.doRegisters():this.doUnassemble()}checkCPU(V){return this.cpu&&this.cpu.isReady()&&this.cpu.isPowered()&&!this.cpu.isRunning()?!this.cpu.isError():(V||this.printf("cpu busy or unavailable, command ignored\n"),!1)}powerUp(V,R){if(!R){if(this.reset(!0),V&&this.restore&&!this.restore(V))return!1;this.fpuActive=this.cpu.fpuActive}return!0}powerDown(V,R){return R&&this.printf("%s\n",V?"suspending":"shutting down"),!V||this.save()}reset(V){this.historyInit(),this.cOpcodes=this.cOpcodesStart=0,this.sMessagePrev=null,this.nCycles=0,this.dbgAddrNextCode=this.newAddr(this.cpu.getIP(),this.cpu.getCS()),this.clearTempBreakpoint(),V||this.flags.running||this.updateStatus()}save(){let V=new State(this);return V.set(0,this.packAddr(this.dbgAddrNextCode)),V.set(1,this.packAddr(this.dbgAddrNextData)),V.set(2,this.packAddr(this.dbgAddrAssemble)),V.set(3,[this.aPrevCmds,this.fAssemble,Component.setBits(this.bitsMessage,MESSAGE.BUFFER)]),V.set(4,this.aSymbolTable),V.set(5,[this.aBreakExec,this.aBreakRead,this.aBreakWrite]),V.data()}restore(V){let R=0;if(V[R]&&(this.dbgAddrNextCode=this.unpackAddr(V[R++])),V[5]&&(this.dbgAddrNextData=this.unpackAddr(V[R++])),V[R]&&(this.dbgAddrAssemble=this.unpackAddr(V[R++])),V[R]){this.aPrevCmds=V[R][0],"string"==typeof this.aPrevCmds&&(this.aPrevCmds=[this.aPrevCmds]),this.fAssemble=V[R][1];let U=V[R][2];Component.testBits(U,MESSAGE.BUFFER)&&(U=Component.clearBits(U,MESSAGE.BUFFER),this.bitsMessage=Component.setBits(this.bitsMessage,U)),R++}return V[R]&&(this.aSymbolTable=V[R++]),V[R]&&(this.restoreBreakpoints(this.aBreakExec,V[R][0]),this.restoreBreakpoints(this.aBreakRead,V[R][1]),this.restoreBreakpoints(this.aBreakWrite,V[R][2])),!0}start(V,R){this.flags.running=!0,this.msStart=V,this.nCyclesStart=R,this.nStep||this.printf("running\n"),this.notifyEvent(DbgLib.EVENTS.EXIT,this.nStep)}stop(V,R){if(this.flags.running){let U=this.nStep;if(this.flags.running=!1,this.nCycles=R-this.nCyclesStart,this.notifyEvent(DbgLib.EVENTS.ENTER,U),!U){let R="stopped";if(this.nCycles){let U=V-this.msStart,l=U>0?Math.round(1e3*this.nCycles/U):0;if(R+=" (",this.checksEnabled()&&(R+=this.cOpcodes+" opcodes, ",this.cOpcodesStart-=this.cOpcodes,this.cOpcodes=0),R+=this.nCycles+" cycles, "+U+" ms, "+l+" hz)",MAXDEBUG&&this.chipset){let V,R,l;for(V=0;V<this.chipset.acInterrupts.length;V++)R=this.chipset.acInterrupts[V],R&&(l=R/Math.round(U/1e3),this.printf("IRQ%d: %d interrupts (%d per sec)\n",V,R,l),this.chipset.acInterrupts[V]=0);for(V=0;V<this.chipset.acTimersFired.length;V++)R=this.chipset.acTimersFired[V],R&&(l=R/Math.round(U/1e3),this.printf("TIMER%d: %d fires (%d per sec)\n",V,R,l),this.chipset.acTimersFired[V]=0);for(l=0,V=0;V<this.chipset.acTimer0Counts.length;V++){let R=this.chipset.acTimer0Counts[V];l+=R[0],this.printf("TIMER0 update #%d: [%d,%d,%d]\n",V,R[0],R[1],R[2])}this.chipset.acTimer0Counts=[]}}else this.messageEnabled(MESSAGE.HALT)&&(R+=" (use the 't' command to execute blocked faults)");this.printf("%s\n",R)}this.updateStatus(!0),this.updateFocus(),this.clearTempBreakpoint(this.cpu.regLIP),this.notifyEvent(DbgLib.EVENTS.READY,U)}}checksEnabled(V){return!(!MAXDEBUG||V)||(this.aBreakExec.length>1||this.aVectorBP.length>0||!!this.nBreakIns||this.messageEnabled(MESSAGE.INT))}checkInstruction(V,R){let U=this.cpu;if(R>0){if(this.nBreakIns&&! --this.nBreakIns)return!0;if(this.checkBreakpoint(V,1,this.aBreakExec))return!0;if(MAXDEBUG&&!(U.regPS&X86.PS.IF)&&U.nIOPL<U.nCPL)return this.printf("interrupts disabled at IOPL %d and CPL %d\n",U.nIOPL,U.nCPL),!0}if(R>=0){if(this.cOpcodes++,this.aaOpcodeCounts.length){let R=U.probeAddr(V);if(null!=R){if(this.aaOpcodeCounts[R][1]++,!this.aVectorBP.length||this.vectorHalt||this.vectorTrace>=0){let V=this.aOpcodeHistory[this.iOpcodeHistory];this.setAddr(V,U.getIP(),U.getCS());let R=this.iOpcodeHistory?this.iOpcodeHistory-1:this.aOpcodeHistory.length-1,l=this.aOpcodeHistory[R];if(l.off==V.off&&l.sel==V.sel&&(this.iOpcodeHistory=R,V=l),V.nCPUCycles=U.getCycles(),this.aVectorBP.length&&!this.vectorHalt&&this.vectorTrace>=0)V.nDebugState=65535&U.regEAX|this.vectorTrace<<16;else if(this.chipset){let R=this.chipset.aTimers[0];V.nDebugCycles=U.nStepCycles,V.nDebugState=R.countCurrent[0]|R.countCurrent[1]<<8}else this.video?(void 0===this.timerVideo&&(this.timerVideo=U.findTimer(this.video.id)),this.timerVideo&&(V.nDebugCycles=this.timerVideo[1],V.nDebugState=this.video.getRetraceBits(this.video.cardActive))):(delete V.nDebugCycles,delete V.nDebugState);++this.iOpcodeHistory==this.aOpcodeHistory.length&&(this.iOpcodeHistory=0)}}}this.vectorSkip=this.vectorTrace,this.vectorTrace=-1}return!1}checkMemoryRead(V,R){return!!this.checkBreakpoint(V,R||1,this.aBreakRead)&&(this.stopCPU(!0),!0)}checkMemoryWrite(V,R){return!!this.checkBreakpoint(V,R||1,this.aBreakWrite)&&(this.stopCPU(!0),!0)}checkPortInput(V,R,U){return this.printf("break on input from port %#06x: %x\n",V,U),this.stopCPU(!0),!0}checkPortOutput(V,R,U){return this.printf("break on output to port %#06x: %x\n",V,U),this.stopCPU(!0),!0}clearBreakpoints(){let V,R;if(this.aBreakExec=["bp"],void 0!==this.aBreakRead)for(V=1;V<this.aBreakRead.length;V++)R=this.aBreakRead[V],this.cpu.removeMemBreak(this.getAddr(R),!1,R.type==Debuggerx86.ADDRTYPE.PHYSICAL);if(this.aBreakRead=["br"],void 0!==this.aBreakWrite)for(V=1;V<this.aBreakWrite.length;V++)R=this.aBreakWrite[V],this.cpu.removeMemBreak(this.getAddr(R),!0,R.type==Debuggerx86.ADDRTYPE.PHYSICAL);this.aBreakWrite=["bw"],this.nSuppressBreaks=0}addBreakpoint(V,R,U,l){let e=!0;if(U||this.findBreakpoint(V,R,!0,!1,!0),V!=this.aBreakExec){let U=this.getAddr(R);U!==X86.ADDR_INVALID&&this.cpu.addMemBreak(U,V==this.aBreakWrite,R.type==Debuggerx86.ADDRTYPE.PHYSICAL)||(this.printf("invalid address: %s\n",this.toHexAddr(R)),e=!1)}return e&&(V.push(R),U?(null!=R.addr&&(R.sel=void 0),R.fTempBreak=!0):(l||this.printBreakpoint(V,V.length-1,"set"),this.historyInit())),e}findBreakpoint(V,R,U,l,e){let t=!1,T=this.mapBreakpoint(this.getAddr(R));for(let k=1;k<V.length;k++){let F=V[k];if((T!==X86.ADDR_INVALID&&T==this.mapBreakpoint(this.getAddr(F))||T===X86.ADDR_INVALID&&R.sel==F.sel&&R.off==F.off)&&(!l||F.fTempBreak)){if(t=!0,U){F.fTempBreak||e||this.printBreakpoint(V,k,"cleared"),V.splice(k,1),V!=this.aBreakExec&&this.cpu.removeMemBreak(T,V==this.aBreakWrite,F.type==Debuggerx86.ADDRTYPE.PHYSICAL),F.fTempBreak||this.historyInit();break}e||this.printBreakpoint(V,k,"exists");break}}return t}listBreakpoints(V){for(let R=1;R<V.length;R++)this.printBreakpoint(V,R);return V.length-1}printBreakpoint(V,R,U){let l=V[R];this.printf("%s %s%s\n",V[0],this.toHexAddr(l),U?" "+U:l.sCmd?' "'+l.sCmd+'"':"")}restoreBreakpoints(V,R){if(R[0]==V[0])for(let U=1;U<R.length;U++){let l=R[U];this.addBreakpoint(V,l,l.fTempBreak,!0)}}setTempBreakpoint(V){this.addBreakpoint(this.aBreakExec,V,!0)}clearTempBreakpoint(V){if(void 0!==V)this.checkBreakpoint(V,1,this.aBreakExec,!0),this.nStep=0;else for(let V=1;V<this.aBreakExec.length;V++){let R=this.aBreakExec[V];if(R.fTempBreak){if(!this.findBreakpoint(this.aBreakExec,R,!0,!0))break;V=0}}}mapBreakpoint(V){if(V!==X86.ADDR_INVALID){let R=-65536&this.maskAddr;(V&R)==R&&(V&=1048575)}return V}checkBreakpoint(V,R,U,l){let e=!1;if(!this.nSuppressBreaks++){V=this.mapBreakpoint(V),this.messageEnabled(MESSAGE.INT+MESSAGE.HALT)&&this.cpu.probeAddr(V)==X86.OPCODE.INT3&&(e=!0),!e&&this.checkVectorAddr(V)&&(e=!0);for(let t=1;!e&&t<U.length;t++){let T=U[t];if(l&&!T.fTempBreak)continue;null!=T.sel&&(T.addr=void 0);let k=this.mapBreakpoint(this.getAddr(T));for(let F=0;F<R;F++)if(V+F==k){let V;if(e=!0,T.fTempBreak&&(this.findBreakpoint(U,T,!0,!0),T.nDebugState&&(this.incAddr(T,2),this.addVxDSymbol(T.nDebugState,T,this.fWinDbg),e=!1),l=!0),V=T.aCmds){e=!1;for(let R=0;R<V.length;R++)if(!this.doCommand(V[R],!0)){if(V[R].indexOf("if")){e=!0;break}let U=R+1;for(;U<V.length&&V[U].indexOf("else");U++)R++;if(U==V.length){e=!0;break}}this.cpu.isRunning()||(e=!0)}if(e){l||this.printBreakpoint(U,t,"hit");break}}}}return this.nSuppressBreaks--,e}addVectorBP(V,R){if(this.findVectorBP(V)<0){let U,l="#"==R||!R&&this.getCPUMode()?Debuggerx86.ADDRTYPE.PROT:Debuggerx86.ADDRTYPE.REAL;if(l!=Debuggerx86.ADDRTYPE.PROT){let R=this.cpu.getLong(V<<2),e=65535&R,t=R>>16&65535;R=(t<<4)+e,U=this.newAddr(e,t,R,l)}return this.aVectorBP.push({vector:V,type:l,dbgAddr:U}),this.listVectorBP(V,!0),this.historyInit(),!0}return!1}checkVectorBP(V,R,U){if(this.vectorSkip<0){if(this.vectorTrace=V,V==Interrupts.VxD.VECTOR&&U&&void 0!==this.fWinDbg){let V=this.newAddr(this.cpu.getIP(),this.cpu.getCS());V.nDebugState=this.getLong(V),this.incAddr(V,-2),this.setTempBreakpoint(V),this.cpu.setDebugCheck(!0)}if(this.vectorHalt){let l=this.findVectorBP(V);if(l>=0){if(U==(this.aVectorBP[l].type==Debuggerx86.ADDRTYPE.PROT)&&(this.printf("break on vector %02X\n",V),this.stopCPU(),R))return this.cpu.setIP(this.cpu.getIP()-R),!0}}}return!1}checkVectorAddr(V){if(this.vectorSkip<0)for(let R=0;R<this.aVectorBP.length;R++){let U=this.aVectorBP[R].dbgAddr;if(U&&U.addr==V&&(this.vectorTrace=this.aVectorBP[R].vector,this.vectorHalt))return this.printf("break on vector %02X\n",this.vectorTrace),!0}return!1}findVectorBP(V){for(let R=0;R<this.aVectorBP.length;R++)if(this.aVectorBP[R].vector==V)return R;return-1}listVectorBP(V,R=!0){let U;for(U=0;U<this.aVectorBP.length;U++){let l=this.aVectorBP[U];if(null==V||l.vector==V){let V=R?"enabled":"disabled";l.type==Debuggerx86.ADDRTYPE.PROT?this.printf("vector #%02X %s\n",l.vector,V):this.printf("vector &%02X %s (%04X:%04X)\n",l.vector,V,l.dbgAddr.sel,l.dbgAddr.off)}}U||this.printf("no vector breakpoints\n")}removeVectorBP(V){let R=this.findVectorBP(V);return R>=0&&(this.listVectorBP(V,!1),this.aVectorBP.splice(R,1),this.historyInit(),!0)}getInstruction(V,R,U){let l,e,t,T=-1,k=Debuggerx86.INS_NAMES,F=this.newAddr(V.off,V.sel,V.addr,V.type),W=8,a=!1,s=!1,Z="",S="";do{l=this.getByte(V,1),e=this.aaOpDescs[l],t=e[0];let R=e[1];if(R==Debuggerx86.TYPE_PREFIX)l>=X86.OPCODE.LOCK?Z=k[t]:S=k[t];else{if(R!=(Debuggerx86.TYPE_PREFIX|Debuggerx86.TYPE_80386))break;if(this.cpu.model<X86.MODEL_80386)break;l==X86.OPCODE.OS?a||(V.fData32=!V.fData32,a=!0):l==X86.OPCODE.AS?s||(V.fAddr32=!V.fAddr32,s=!0):S=k[t]}}while(W--);if(t==Debuggerx86.INS.OP0F){let R=this.getByte(V,1);e=Debuggerx86.aaOp0FDescs[R]||Debuggerx86.aOpDescUndefined,l|=R<<8,t=e[0]}if(t==Debuggerx86.INS.ESC){T=this.getByte(V,1);let R=this.getFPUInstruction(l,T);R&&(k=Debuggerx86.FINS_NAMES,e=R,t=e[0])}t>=k.length&&(T=this.getByte(V,1),e=Debuggerx86.aaGrpDescs[t-k.length][T>>3&7],t=e[0]);let h=k[t],E=e.length-1,i="";V.fData32&&(t==Debuggerx86.INS.CBW?h="CWDE":t==Debuggerx86.INS.CWD?h="CDQ":t>=Debuggerx86.INS.POPA&&t<=Debuggerx86.INS.PUSHA&&(h+="D")),this.isStringIns(l)&&(E=0,V.fData32&&"W"==h.slice(-1)&&(h=h.slice(0,-1)+"D"));let N=-1;for(let R=1;R<=E;R++){let U,l,k,F="",W=e[R];if(void 0===W)continue;N<0&&(N=W>>Debuggerx86.TYPE_CPU_SHIFT),t==Debuggerx86.INS.LOADALL&&(N==Debuggerx86.CPU_80286?i="[%800]":N==Debuggerx86.CPU_80386&&(i=(S||"ES:")+"["+(V.fAddr32?"E":"")+"DI]"));let a=W&Debuggerx86.TYPE_SIZE;if(a==Debuggerx86.TYPE_NONE)continue;let s=W&Debuggerx86.TYPE_MODE;if(s>=Debuggerx86.TYPE_MODRM)T<0&&(T=this.getByte(V,1)),F=s<Debuggerx86.TYPE_MODREG?this.getModRMOperand(h,S,T,W,E,V):s==Debuggerx86.TYPE_MODREG?this.getRegOperand(7&T,W,V):this.getRegOperand(T>>3&7,W,V);else if(s==Debuggerx86.TYPE_ONE)F="1";else if(s==Debuggerx86.TYPE_IMM)F=this.getImmOperand(W,V);else if(s==Debuggerx86.TYPE_IMMOFF)V.fAddr32?(k=8,l=this.getLong(V,4)):(k=4,l=this.getShort(V,2)),F=S+"["+StrLib.toHex(l,k)+"]";else if(s==Debuggerx86.TYPE_IMMREL){U=a==Debuggerx86.TYPE_BYTE?this.getByte(V,1)<<24>>24:this.getWord(V,!0),l=V.off+U&(V.fData32?-1:65535),F=StrLib.toHex(l,V.fData32?8:4);let R=this.findSymbol(this.newAddr(l,V.sel));R[0]&&(F+=" ("+R[0]+")")}else s==Debuggerx86.TYPE_IMPREG?F=a==Debuggerx86.TYPE_ST?"ST":a==Debuggerx86.TYPE_STREG?"ST("+(7&T)+")":this.getRegOperand((W&Debuggerx86.TYPE_IREG)>>8,W,V):s==Debuggerx86.TYPE_IMPSEG?F=this.getRegOperand((W&Debuggerx86.TYPE_IREG)>>8,Debuggerx86.TYPE_SEGREG,V):s==Debuggerx86.TYPE_DSSI?F=(S||"DS:")+"[SI]":s==Debuggerx86.TYPE_ESDI&&(F=(S||"ES:")+"[DI]");if(!F||!F.length){i="INVALID";break}i.length>0&&(i+=","),i+=F||"???"}let r="",M=this.toHexAddr(F)+" ";if(F.addr!==X86.ADDR_INVALID&&V.addr!==X86.ADDR_INVALID)do{if(r+=StrLib.toHex(this.getByte(F,1),2),F.addr===X86.ADDR_INVALID||null==F.addr)break}while(F.addr!=V.addr);if(M+=StrLib.pad(r,F.fAddr32?-20:-16)+" ",0==Z.indexOf("REP")&&l!=X86.OPCODE.CMPSB&&l!=X86.OPCODE.CMPSW&&l!=X86.OPCODE.SCASB&&l!=X86.OPCODE.SCASW&&(Z="REP"),Z&&(i=h+" "+i,h=Z),M+=StrLib.pad(h,-8),i&&(M+=" "+i),this.cpu.model<Debuggerx86.CPUS[N]&&(R=Debuggerx86.CPUS[N]+" CPU only"),R)if(M=StrLib.pad(M,F.fAddr32?-74:-62)+";"+R,this.cpu.flags.checksum){M+="cycles="+this.cpu.getCycles().toString()+" cs="+StrLib.toHex(this.cpu.nChecksum)}else M+=U>=0?"="+U.toString():"";return this.initAddrSize(V),M}getFPUInstruction(V,R){let U=null,l=R>>3&7,e=7&R,t=((R>>6&3)<3?0:48)+l;(V==X86.OPCODE.ESC1||V==X86.OPCODE.ESC3)&&t>=52&&(t=l<<4|e);let T=Debuggerx86.aaaOpFPUDescs[V];return T&&(U=T[t]),U}getImmOperand(V,R){let U,l=" ";switch(V&Debuggerx86.TYPE_SIZE){case Debuggerx86.TYPE_BYTE:V&Debuggerx86.TYPE_BOTH&&(l=StrLib.toHex(this.getByte(R,1),2));break;case Debuggerx86.TYPE_SBYTE:l=StrLib.toHex(this.getByte(R,1)<<24>>24);break;case Debuggerx86.TYPE_WORD:if(R.fData32){l=StrLib.toHex(this.getLong(R,4),8);break}case Debuggerx86.TYPE_SHORT:l=StrLib.toHex(this.getShort(R,2),4);break;case Debuggerx86.TYPE_FARP:R=this.newAddr(this.getWord(R,!0),this.getShort(R,2),void 0,R.type,R.fData32,R.fAddr32),l=this.toHexAddr(R),U=this.findSymbol(R),U[0]&&(l+=" ("+U[0]+")");break;default:l="imm("+StrLib.toHexWord(V)+")"}return l}getRegOperand(V,R,U){let l=R&Debuggerx86.TYPE_MODE;if(l==Debuggerx86.TYPE_SEGREG){if(V>Debuggerx86.REG_GS||V>=Debuggerx86.REG_FS&&this.cpu.model<X86.MODEL_80386)return"??";V+=Debuggerx86.REG_SEG}else if(l==Debuggerx86.TYPE_CTLREG)V+=Debuggerx86.REG_CR0;else if(l==Debuggerx86.TYPE_DBGREG)V+=Debuggerx86.REG_DR0;else if(l==Debuggerx86.TYPE_TSTREG)V+=Debuggerx86.REG_TR0;else{let l=R&Debuggerx86.TYPE_SIZE;l>=Debuggerx86.TYPE_SHORT&&(V<Debuggerx86.REG_AX&&(V+=Debuggerx86.REG_AX-Debuggerx86.REG_AL),(l==Debuggerx86.TYPE_LONG||l==Debuggerx86.TYPE_WORD&&U.fData32)&&(V+=Debuggerx86.REG_EAX-Debuggerx86.REG_AX))}return Debuggerx86.REGS[V]}getSIBOperand(V,R){let U=this.getByte(R,1),l=U>>6,e=U>>3&7,t=7&U,T="";return(V||5!=t)&&(T=Debuggerx86.RMS[t+8]),4!=e&&(T&&(T+="+"),T+=Debuggerx86.RMS[e+8],l&&(T+="*"+(1<<l))),V||5!=t||(T&&(T+="+"),T+=StrLib.toHex(this.getLong(R,4))),T}getModRMOperand(V,R,U,l,e,t){let T="",k=U>>6,F=7&U;if(k<3){let U,W=0==V.indexOf("FI");if(!k&&(!t.fAddr32&&6==F||t.fAddr32&&5==F)?k=2:(t.fAddr32&&(4!=F?F+=8:T=this.getSIBOperand(k,t)),T||(T=Debuggerx86.RMS[F])),1==k?(U=this.getByte(t,1),128&U?(U=U<<24>>24,T+="-"+StrLib.toHex(-U,2)):T+="+"+StrLib.toHex(U,2)):2==k&&(T&&(T+="+"),t.fAddr32?(U=this.getLong(t,4),T+=StrLib.toHex(U)):(U=this.getShort(t,2),T+=StrLib.toHex(U,4))),T=R+"["+T+"]",1==e){let V="";switch((l&=Debuggerx86.TYPE_SIZE)==Debuggerx86.TYPE_WORD&&(l=t.fData32?Debuggerx86.TYPE_LONG:Debuggerx86.TYPE_SHORT),l){case Debuggerx86.TYPE_FARP:V="FAR";break;case Debuggerx86.TYPE_BYTE:V="BYTE";break;case Debuggerx86.TYPE_SHORT:if(W){V="INT16";break}V="WORD";break;case Debuggerx86.TYPE_LONG:V="DWORD";break;case Debuggerx86.TYPE_SINT:if(W){V="INT32";break}case Debuggerx86.TYPE_SREAL:V="REAL32";break;case Debuggerx86.TYPE_LINT:if(W){V="INT64";break}case Debuggerx86.TYPE_LREAL:V="REAL64";break;case Debuggerx86.TYPE_TREAL:V="REAL80";break;case Debuggerx86.TYPE_BCD80:V="BCD80"}V&&(T=V+" "+T)}}else T=this.getRegOperand(F,l,t);return T}parseInstruction(V,R,U){return this.printf("not supported yet\n"),[]}getFlagOutput(V){let R;switch(V){case"V":R=this.cpu.getOF();break;case"D":R=this.cpu.getDF();break;case"I":R=this.cpu.getIF();break;case"T":R=this.cpu.getTF();break;case"S":R=this.cpu.getSF();break;case"Z":R=this.cpu.getZF();break;case"A":R=this.cpu.getAF();break;case"P":R=this.cpu.getPF();break;case"C":R=this.cpu.getCF();break;default:R=0}return V+(R?"1":"0")+" "}getLimitString(V){return StrLib.toHex(V,-65536&V?8:4)}getRegOutput(V){V>=Debuggerx86.REG_AX&&V<=Debuggerx86.REG_DI&&this.cchReg>4&&(V+=Debuggerx86.REG_EAX-Debuggerx86.REG_AX);let R=Debuggerx86.REGS[V];return V==Debuggerx86.REG_CR0&&this.cpu.model==X86.MODEL_80286&&(R="MS"),R+"="+this.getRegString(V)+" "}getSegOutput(V,R){return V.sName+"="+StrLib.toHex(V.sel,4)+(R?"["+StrLib.toHex(V.base,this.cchAddr)+","+this.getLimitString(V.limit)+"]":"")}getDTROutput(V,R,U,l){return V+"="+(null!=R?StrLib.toHex(R,4):"")+"["+StrLib.toHex(U,this.cchAddr)+","+StrLib.toHex(l-U,4)+"]"}getRegDump(V){let R;if(void 0===V&&(V=this.getCPUMode()),R=this.getRegOutput(Debuggerx86.REG_AX)+this.getRegOutput(Debuggerx86.REG_BX)+this.getRegOutput(Debuggerx86.REG_CX)+this.getRegOutput(Debuggerx86.REG_DX)+(this.cchReg>4?"\n":"")+this.getRegOutput(Debuggerx86.REG_SP)+this.getRegOutput(Debuggerx86.REG_BP)+this.getRegOutput(Debuggerx86.REG_SI)+this.getRegOutput(Debuggerx86.REG_DI)+"\n"+this.getSegOutput(this.cpu.segSS,V)+" "+this.getSegOutput(this.cpu.segDS,V)+" "+this.getSegOutput(this.cpu.segES,V)+" ",V){let U="TR="+StrLib.toHex(this.cpu.segTSS.sel,4),l="A20="+(this.bus.getA20()?"ON ":"OFF ");this.cpu.model<X86.MODEL_80386&&(U="\n"+U,R+=l,l=""),R+="\n"+this.getSegOutput(this.cpu.segCS,V)+" ",I386&&this.cpu.model>=X86.MODEL_80386&&(l+="\n",R+=this.getSegOutput(this.cpu.segFS,V)+" "+this.getSegOutput(this.cpu.segGS,V)+"\n"),R+=this.getDTROutput("LD",this.cpu.segLDT.sel,this.cpu.segLDT.base,this.cpu.segLDT.base+this.cpu.segLDT.limit)+" "+this.getDTROutput("GD",null,this.cpu.addrGDT,this.cpu.addrGDTLimit)+" "+this.getDTROutput("ID",null,this.cpu.addrIDT,this.cpu.addrIDTLimit)+" ",R+=U+" "+l,R+=this.getRegOutput(Debuggerx86.REG_CR0),I386&&this.cpu.model>=X86.MODEL_80386&&(R+=this.getRegOutput(Debuggerx86.REG_CR2)+this.getRegOutput(Debuggerx86.REG_CR3))}else I386&&this.cpu.model>=X86.MODEL_80386&&(R+=this.getSegOutput(this.cpu.segFS,V)+" "+this.getSegOutput(this.cpu.segGS,V)+" ");return R+=this.getRegOutput(Debuggerx86.REG_PS)+this.getFlagOutput("V")+this.getFlagOutput("D")+this.getFlagOutput("I")+this.getFlagOutput("T")+this.getFlagOutput("S")+this.getFlagOutput("Z")+this.getFlagOutput("A")+this.getFlagOutput("P")+this.getFlagOutput("C"),R}comparePairs(V,R){return V[0]>R[0]?1:V[0]<R[0]?-1:0}addSymbols(V,R,U,l,e,t,T){let k={},F=[];for(let V in T){let R=T[V];"number"==typeof R&&(T[V]=R={o:R});let U=R.o,l=R.s,e=R.a;void 0!==U&&(void 0!==l&&(k.off=U,k.sel=l,k.addr=void 0,this.getAddr(k),(-65536&k.addr)==(-65536&this.bus.nBusLimit)&&(k.addr&=1048575),R.p=k.addr),UsrLib.binaryInsert(F,[U>>>0,V],this.comparePairs)),e&&(R.a=e.replace(/''/g,'"'))}let W={sModule:V,nSegment:R,sel:U,off:l,addr:e,len:t,aSymbols:T,aOffsets:F},a=this.aSymbolTable.findIndex((function(U){return U.sModule==V&&U.nSegment==R}));a<0&&(a=this.aSymbolTable.length),this.aSymbolTable[a]=W}addVxDSymbol(V,R,U){let l=65535&V,e=V>>16&65535,t=Object.keys(Interrupts.VxD);for(let V of t)if(e==Interrupts.VxD[V].id){if(Interrupts.VxD[V].fn){let e=Interrupts.VxD[V].fn[l];if(e){let l=this,t=function(e,t){let T=t>>>0,k=l.aSymbolTable.findIndex((function(V){return 40==V.sel&&T>=V.off>>>0&&T<V.off+V.len>>>0}));if(k>=0){let R=e.toUpperCase(),t=l.aSymbolTable[k],F=t.aSymbols[R];if(F)return F.o==T&&F.s==t.sel||(l.printf(MESSAGE.DEBUG+MESSAGE.ERROR,"%s.%s (%%%X) does not match previous value (%%%X)\n",V,e,T,F.o),!1);let W=[T,R],a=UsrLib.binarySearch(t.aOffsets,W,l.comparePairs);return a<0?(t.aOffsets.splice(-(a+1),0,W),t.aSymbols[R]={o:T,s:t.sel},U&&"$"!=e[0]&&l.printf(MESSAGE.DEBUG+MESSAGE.LOG,"%s.%s: %%%X\n",V,e,T)):(t.aOffsets[a]=W,t.aSymbols[R]={o:T,s:t.sel}),!0}return l.printf(MESSAGE.DEBUG+MESSAGE.ERROR,"%s.%s (%%%X) out of range (check %%%X)\n",V,e,T,R.addr-2),!1},T=l.getLong(R);return!!t("$"+e,T)&&(R.addr=T,t(e,l.getLong(R)))}return l<32768&&this.printf(MESSAGE.DEBUG+MESSAGE.WARNING,"%s service %d: unrecognized (check %%%X)\n",V,l,R.addr-2),!1}return!1}return this.printf(MESSAGE.DEBUG+MESSAGE.WARNING,"VxD %d: unrecognized (check %%%X)\n",e,R.addr-2),!1}removeSymbols(V,R){let U=null;for(let l=0;l<this.aSymbolTable.length;l++){let e=this.aSymbolTable[l];if((!V||e.sModule==V)&&(V&&R==e.nSegment||!V&&R==e.sel)){U=e.sModule,this.aSymbolTable.splice(l,1);break}}return U}dumpSymbols(){let V=0;for(let R=0;R<this.aSymbolTable.length;R++){let U=this.aSymbolTable[R];for(let R in U.aSymbols){if("."==R.charAt(0))continue;let l=U.aSymbols[R],e=l.o;if(void 0===e)continue;let t=l.s;void 0===t&&(t=U.sel);let T=U.aSymbols[R].l;T&&(R=T),this.printf("%s %s\n",this.toHexOffset(e,t),R),V++}}V||this.printf("no symbols\n")}findSymbol(V,R){let U=[],l=V.off>>>0,e=this.getAddr(V)>>>0;for(let t=0;t<this.aSymbolTable.length;t++){let T=this.aSymbolTable[t],k=T.sel,F=T.off>>>0,W=T.addr;null!=W&&(W>>>=0);let a=T.len;if(48==k&&(k=40),k==V.sel&&l>=F&&l<F+a||null!=W&&e>=W&&e<W+a){let V=UsrLib.binarySearch(T.aOffsets,[l],this.comparePairs);V>=0?this.returnSymbol(t,V,U):R&&(V=~V,this.returnSymbol(t,V-1,U),this.returnSymbol(t,V,U));break}}if(!U.length){let V=this.bus.getSymbol(e,!0);V&&(U.push(V),U.push(e))}return U}findSymbolAddr(V){let R;if(V.match(/^[a-z_][a-z0-9_]*$/i)){let U=V.toUpperCase();for(let V=0;V<this.aSymbolTable.length;V++){let l=this.aSymbolTable[V],e=l.aSymbols[U];if(void 0!==e){let V=e.o;if(void 0!==V){let U=e.s;void 0===U&&(U=l.sel),R=this.newAddr(V,U,e.p)}break}}}return R}returnSymbol(V,R,U){let l={},e=this.aSymbolTable[V].aOffsets,t=0,T=null;R>=0&&R<e.length&&(t=e[R][0],T=e[R][1]),T&&(l=this.aSymbolTable[V].aSymbols[T],T="."==T.charAt(0)?null:l.l||T),U.push(T),U.push(t),U.push(l.a),U.push(l.c)}doHelp(){let V="debugger commands:";for(let R in Debuggerx86.COMMANDS)V+="\n  "+StrLib.pad(R,-7)+Debuggerx86.COMMANDS[R];this.checksEnabled()||(V+="\nnote: frequency/history disabled if no exec breakpoints"),this.printf("%s\n",V)}doAssemble(V){let R=this.parseAddr(V[1],!0);if(!R)return;if(this.dbgAddrAssemble=R,void 0===V[2])return this.printf("begin assemble at %s\n",this.toHexAddr(R)),this.fAssemble=!0,void this.cpu.updateCPU();let U=this.parseInstruction(V[2],V[3],R);if(U.length){for(let V=0;V<U.length;V++)this.setByte(R,U[V],1);this.printf("%s\n",this.getInstruction(this.dbgAddrAssemble))}}doBreak(V,R){let U=V.shift(),l=V.shift();if("?"==l)return this.printf("breakpoint commands:\n"),this.printf("\tbi [p]\ttoggle break on input port [p]\n"),this.printf("\tbo [p]\ttoggle break on output port [p]\n"),this.printf("\tbp [a]\tset exec breakpoint at addr [a]\n"),this.printf("\tbr [a]\tset read breakpoint at addr [a]\n"),this.printf("\tbw [a]\tset write breakpoint at addr [a]\n"),this.printf("\tbc [a]\tclear breakpoint at addr [a]\n"),this.printf("\tbl\tlist all breakpoints\n"),this.printf("\tbn [n]\tbreak after [n] instruction(s)\n"),void this.printf("\tbv [n]\ttoggle break on interrupt vector [n]\n");let e=U.charAt(1);if("l"==e){let V=0;return V+=this.listBreakpoints(this.aBreakExec),V+=this.listBreakpoints(this.aBreakRead),V+=this.listBreakpoints(this.aBreakWrite),void(V||this.printf("no breakpoints\n"))}if("n"==e)return this.nBreakIns=this.parseValue(l),void this.printf("break after %d instruction(s)\n",this.nBreakIns);if("v"==e){if(!l)return void this.listVectorBP();do{let V=l[0];"&"==V||"#"==V?l=l.slice(1):V="";let R=this.parseValue(l);if(null!=R){if(this.removeVectorBP(R))continue;if(this.addVectorBP(R,V))continue}this.printf("vector %s invalid\n",l);break}while(l=V.shift());return}if(void 0===l)return void this.printf("missing breakpoint address\n");let t={};if("*"==l||(t=this.parseAddr(l,!0,!0),t))if(l=null==t.off?l:StrLib.toHexWord(t.off),"c"!=e)"i"!=e?"o"!=e?null!=t.off&&(this.parseAddrOptions(t,R),"p"!=e?"r"!=e?"w"!=e?this.printf("unknown breakpoint command: %s\n",e):this.addBreakpoint(this.aBreakWrite,t):this.addBreakpoint(this.aBreakRead,t):this.addBreakpoint(this.aBreakExec,t)):this.printf("breakpoint %s: port %s (output)\n",this.bus.addPortOutputBreak(t.off)?"enabled":"cleared",l):this.printf("breakpoint %s: port %s (input)\n",this.bus.addPortInputBreak(t.off)?"enabled":"cleared",l);else{if(null==t.off)return this.clearBreakpoints(),void this.printf("all breakpoints cleared\n");if(this.findBreakpoint(this.aBreakExec,t,!0))return;if(this.findBreakpoint(this.aBreakRead,t,!0))return;if(this.findBreakpoint(this.aBreakWrite,t,!0))return;this.printf("breakpoint missing: %s\n",this.toHexAddr(t))}}doClear(V){this.cmp.clearPanel()}doDump(V){let R,U=V[0],l=V[1],e=V[2],t=V[3];if("?"==l){let V="";for(R in MESSAGE.NAMES)this.afnDumpers[R]&&(V&&(V+=","),V+=R);return V+=",state,symbols",this.printf("dump memory commands:\n"),this.printf("\tda [a] [#]    dump # ASCII chars at address a\n"),this.printf("\tdb [a] [#]    dump # bytes at address a\n"),this.printf("\tdw [a] [#]    dump # words at address a\n"),this.printf("\tdd [a] [#]    dump # dwords at address a\n"),this.printf("\tdh [n] [#]    dump # instructions from history n\n"),this.printf("\tdi [#]        dump descriptor info for IDT #\n"),this.printf("\tds [#]        dump descriptor info for selector #\n"),BACKTRACK&&this.printf("\tdt [a]        dump backtrack info for address a\n"),this.printf("\tdby,dwy,ddy   dump data in binary\n"),void(V.length&&this.printf("dump extension commands:\n\t%s\n",V))}if("state"==l){let V=this.cmp.powerOff(!0);return void(V?"console"==e?console.log(V):(this.doClear(),this.printf("%s\n",V)):this.printf("powerOff() error\n"))}if("symbols"==l)return void this.dumpSymbols();if("ds"!=U&&"dg"!=U&&"dl"!=U||(U="d",V=[U,"desc",l]),"d"==U&&"page"==l&&(U="dp",V.shift()),"dp"==U)return V.shift(),void this.dumpPage(V);if("d"==U){if("disk"==l)return V[0]="l",V[1]="json",void this.doLoad(V);for(R in MESSAGE.NAMES)if(V[1]==R){let U=this.afnDumpers[R];return void(U?(V.shift(),V.shift(),U(V)):this.printf("no dump registered for %s\n",l))}l||(U=this.sCmdDumpPrev||"db")}if("dh"==U)return void this.dumpHistory(l,e,t);if("di"==U)return V.shift(),void this.dumpIDT(V);if("dt"==U){V.shift();let R=this.dumpBackTrack(V);return void this.printf("%s\n",R)}if(U[1]&&"abwd".indexOf(U[1])<0)return void this.printf("unrecognized dump command\n");this.sCmdDumpPrev=U;let T=this.parseAddr(l);if(!T||null==T.sel&&null==T.addr)return;let k=0;if(e){if("l"==e.charAt(0))e=e.substr(1)||t,k=this.parseValue(e);else{let V=this.parseAddr(e);if(!V)return;k=T.type!=Debuggerx86.ADDRTYPE.LINEAR?V.off-T.off+1:V.addr-T.addr+1}(k<0||k>65536)&&(k=0)}let F="",W=!1,a=0,s="d"==U[1]?4:"w"==U[1]?2:1,Z=s*k||128,S=Z+15>>4||1,h=4==s?16:this.nBase;for("a"==U[1]?(W=!0,h=160,S=k<=1?25:Math.ceil(k/h),Z=S*h):"y"==U[2]&&(h=s,k||(Z=8),S=Z,a=8*s);S--&&Z>0;){let V,R=0,U=0,e="",t="";for(l=this.toHexAddr(T),V=h;V>0&&Z>0;V--){let l=this.getByte(T,1);R|=l<<(U++<<3),U==s&&(e+=8==this.nBase?StrLib.toOct(R,3*s):StrLib.toHex(R,2*s),e+=1==s?9==V?"-":" ":"  ",a&&(t+=StrLib.toBin(R,a)),R=U=0),a||(t+=l>=32&&l<127?String.fromCharCode(l):W?"":"."),Z--}F&&(F+="\n"),F+=W?t:l+"  "+e+StrLib.pad(t,t.length+3*V+1)}F&&this.print(F.replace(/\s*$/,"")+"\n"),this.dbgAddrNextData=T}doEdit(V){let R=V[1];if(null==R)return this.printf("edit memory commands:\n"),this.printf("\teb [a] [...]  edit bytes at address a\n"),void this.printf("\tew [a] [...]  edit words at address a\n");let U=this.parseAddr(R);if(!U)return;if("ev"==V[0]){for(let V=0;V<256;V++){let R=StrLib.toHex(V,2);!V||15&V||this.incAddr(U,64),this.setShort(U,V<<8|R.charCodeAt(0),2,!0),this.setShort(U,V<<8|R.charCodeAt(1),2,!0),this.setShort(U,V<<8|32,2,V<255)}return}let l=1,e=255,t=this.getByte,T=this.setByte;"ew"==V[0]&&(l=2,e=65535,t=this.getShort,T=this.setShort);let k=l<<1,F=!1;for(let R=2;R<V.length;R++){let W=V[R];if('"'==W[0]||"'"==W[0]){let U=[];for(let V=1;V<W.length;V++){let R=W[V];if(R==W[0])break;U.push(StrLib.toHexByte(R.charCodeAt(0)))}U.push(""),V.splice(R,1,...U),W=V[R],F=!0}if(!W){F=!1;continue}let a=this.parseExpression(W);if(void 0===a){this.printf("unrecognized value: %s\n",W);break}a&~e&&this.printf("warning: %x exceeds %s-byte value\n",a,l);let s=t.call(this,U);F&&(a=-256&s|127&a),this.printf("changing %s from %#0*x to %#0*x\n",this.toHexAddr(U),k,s,k,a),T.call(this,U,a,l)}}doFreqs(V){if("?"==V)return this.printf("frequency commands:\n"),void this.printf("\tclear\tclear all frequency counts\n");let R,U=0;if(this.aaOpcodeCounts)if("clear"==V){for(R=0;R<this.aaOpcodeCounts.length;R++)this.aaOpcodeCounts[R]=[R,0];this.printf("frequency data cleared\n"),U++}else if(void 0!==V)this.printf("unknown frequency command: %s\n",V),U++;else{let V=this.aaOpcodeCounts.slice();for(V.sort((function(V,R){return R[1]-V[1]})),R=0;R<V.length;R++){let l=V[R][0],e=V[R][1];e&&(this.printf("%s (%#04x): %d times\n",(Debuggerx86.INS_NAMES[this.aaOpDescs[l][0]]+"  ").substr(0,5),l,e),U++)}}U||this.printf("no frequency data available\n")}doHalt(V){if(!this.stopCPU()){if(this.isBusy(!0))return;V||this.printf("already halted\n")}}doIf(V,R){return V=StrLib.trim(V),this.parseExpression(V)?(R||this.printf("true: %s\n",V),!0):(R||this.printf("false: %s\n",V),!1)}doInfo(V){return!!DEBUG&&(this.printf("msPerYield: %d\n",this.cpu.msPerYield),this.printf("nCyclesPerYield: %d\n",this.cpu.nCyclesPerYield),!0)}doInput(V){if(!V||"?"==V)return this.printf("input commands:\n"),this.printf("\ti [p]\tread port [p]\n"),void this.printf("warning: port accesses can affect hardware state\n");let R=this.parseValue(V);if(void 0!==R){let V=this.bus.checkPortInputNotify(R,1);this.printf("%#06x: %#04x\n",R,V)}}doInt(V){switch(this.parseValue(V)){case 19:return this.messageInt(Interrupts.DISK,this.cpu.regLIP,!0),this.cOpcodesStart=this.cOpcodes,!0;case 33:return this.messageInt(Interrupts.DOS,this.cpu.regLIP,!0),this.cOpcodesStart=this.cOpcodes,!0;default:return!1}}doVar(V){let R=V.match(/^\s*([A-Z_]?[A-Z0-9_]*)\s*(=?)\s*(.*)$/i);if(R){if(!R[1])return this.printVariable()||this.printf("no variables\n"),!0;if(!R[2])return this.printVariable(R[1]);if(!R[3])return this.delVariable(R[1]),!0;let V=this.parseExpression(R[3]);return void 0!==V&&(this.setVariable(R[1],V),!0)}return this.printf("invalid assignment:%s\n",V),!1}doList(V,R){let U=null,l=this.parseAddr(V,!0);if(l){let V=this.getAddr(l);MAXDEBUG&&R&&this.printf("%s (%%0*x)\n",this.toHexAddr(l),this.cchAddr,V);let e=this.findSymbol(l,!0);if(e.length){let V,t,T;e[0]&&(t="",V=(l.off>>>0)-e[1],V&&(t=" + "+StrLib.toHex(V,0,!0)),T=e[0]+" ("+this.toHexOffset(e[1],l.sel)+")"+t,R&&this.printf("%s\n",T),U=T),e.length>4&&e[4]&&(t="",V=e[5]-(l.off>>>0),V&&(t=" - "+StrLib.toHex(V,0,!0)),T=e[4]+" ("+this.toHexOffset(e[5],l.sel)+")"+t,R&&this.printf("%s\n",T),U||(U=T))}else R&&this.printf("no symbols\n")}return U}doLoad(V){if(!V[1]||"?"==V[1])return this.printf("load commands:\n"),void this.printf("\tl [address] [drive #] [sector #] [# sectors]\n");let R,U="json"==V[1],l=0,e=0,t=U?{}:this.parseAddr(V[1]);if(!t)return;if(R=this.parseValue(V[2],"drive #"),void 0===R)return;if(!U){if(l=this.parseValue(V[3],"sector #"),void 0===l)return;e=this.parseValue(V[4],"# of sectors"),void 0===e&&(e=1)}let T=this.fdc;if(R>=2&&this.hdc&&(R-=2,T=this.hdc),T){let V=T.copyDrive(R);if(V)if(V.disk){if(U)return this.doClear(),void this.printf("%s\n",V.disk.convertToJSON());if(T.seekDrive(V,l,e)){let R=0,U=!1,l=this.toHexAddr(t);for(;!U&&V.nBytes-- >0;)!function(l,e){T.readData(V,(function(V,t){if(V<0)return l.printf("out of data at address %s\n",l.toHexAddr(e)),void(U=!0);l.setByte(e,V,1,!0),R++}))}(this,t);this.cpu.updateCPU(!0),this.printf("%d bytes read at %s\n",R,l)}else this.printf("sector %d request out of range\n",l)}else this.printf("drive %d not loaded\n",R);else this.printf("invalid drive: %d\n",R)}else this.printf("disk controller not present\n")}doMessages(V){let R,U=null,l=V[1],e=this.bitsMessage;if("?"==l&&(l=void 0),void 0!==l){let t=0;if("all"==l)t=MESSAGE.ALL-MESSAGE.HALT-MESSAGE.BUFFER,l=null;else if("on"==l)U=!0,l=null;else if("off"==l)U=!1,l=null;else{for(R in MESSAGE.NAMES)if(l==R){t=MESSAGE.NAMES[R],U=Component.testBits(e,t);break}if(!t)return void this.printf("unknown message category: %s\n",l)}t&&("on"==V[2]?(e=Component.setBits(e,t),U=!0):"off"==V[2]&&(e=Component.clearBits(e,t),U=!1,t==MESSAGE.BUFFER&&(this.printf("%s\n",this.aMessageBuffer.join("")),this.aMessageBuffer=[])))}let t=0,T="";for(R in MESSAGE.NAMES)if(!l||l==R){let V=MESSAGE.NAMES[R],l=Component.testBits(e,V);if(null!==U&&U!=l)continue;T&&(T+=","),++t%10||(T+="\n\t"),T+=R}void 0===l&&this.printf("message commands:\n\tm [category] [on|off]\tturn categories on/off\n"),this.printf("%s%s\n",null!==U?U?"messages on:  ":"messages off: ":"message categories:\n\t",T||"none"),this.bitsMessage=e,this.historyInit()}doMouse(V,R){if(this.mouse){let U=0,l=1;if(R){if("-"==R.charAt(0)&&(l=-1,R=R.substr(1)),U=this.parseValue(R,V),void 0===U)return;U=U*l|0}switch(V){case"x":this.mouse.moveMouse(U,0);break;case"y":this.mouse.moveMouse(0,U);break;case"click":this.mouse.clickMouse(U,!0),this.mouse.clickMouse(U,!1);break;default:this.printf("unknown action: %s\n",V)}}else this.printf("no mouse\n")}doExecOptions(V){if(V[0].length>1&&(V.splice(1,0,V[0].slice(1)),V[0]=V[0].charAt(0)),!V[1]||"?"==V[1])return this.printf("execution options:\n"),this.printf("\tbv [halt|trace]\n"),this.printf("\tcs int #\tset checksum cycle interval to #\n"),this.printf("\tcs start #\tset checksum cycle start count to #\n"),this.printf("\tcs stop #\tset checksum cycle stop count to #\n"),void this.printf("\tsp #\t\tset speed multiplier to #\n");let R;switch(V[1]){case"bv":switch(V[2]){case"halt":this.vectorHalt=!0;break;case"trace":this.vectorHalt=!1;break;default:if(V[2])return void this.printf("unknown vector option: %s\n",V[2])}this.printf("vector breakpoints: %s\n",this.vectorHalt?"halt":"trace");break;case"cs":switch(void 0!==V[3]&&(R=+V[3]),V[2]){case"int":this.cpu.nCyclesChecksumInterval=R;break;case"start":this.cpu.nCyclesChecksumStart=R;break;case"stop":this.cpu.nCyclesChecksumStop=R;break;default:return void this.printf("unknown cs option\n")}void 0!==R&&this.cpu.resetChecksum(),this.printf("checksums %s\n",this.cpu.flags.checksum?"enabled":"disabled");break;case"sp":void 0!==V[2]&&(this.cpu.setSpeed(+V[2])||this.printf("warning: using 1x multiplier, previous target not reached\n")),this.printf("target speed: %s (%dx)\n",this.cpu.getSpeedTarget(),this.cpu.getSpeed());break;default:this.printf("unknown option: %s\n",V[1])}}doOutput(V,R){if(!V||"?"==V)return this.printf("output commands:\n"),this.printf("\to [p] [b]\twrite byte [b] to port [p]\n"),void this.printf("warning: port accesses can affect hardware state\n");let U=this.parseValue(V,"port #"),l=this.parseValue(R);void 0!==U&&void 0!==l&&(this.bus.checkPortOutputNotify(U,1,l),this.printf("%#06x: %#04x\n",U,l))}doRegisters(V,R){if(V&&"?"==V[1])return this.printf("register commands:\n"),this.printf("\tr\tdump registers\n"),this.fpuActive&&this.printf("\trfp\tdump floating-point registers\n"),this.printf("\trp\tdump all registers\n"),void this.printf("\trx [#]\tset flag or register x to [#]\n");let U;if(null==R&&(R=!0),null!=V&&V.length>1){let R=V[1];if(this.fpuActive&&"fp"==R)return void this.doFPURegisters(V);if("p"==R)U=this.cpu.model>=X86.MODEL_80286;else{let U=null,l=R.indexOf("=");if(l>0)U=R.substr(l+1),R=R.substr(0,l);else{if(!(V.length>2))return void this.printf("missing value for %s\n",V[1]);U=V[2]}let e=this.parseExpression(U);if(void 0===e)return;let t,T=!0,k=R.toUpperCase();switch("E"==k[0]&&"S"!=k[1]&&this.cchReg<=4&&(k=null),k){case"AL":this.cpu.regEAX=-256&this.cpu.regEAX|255&e;break;case"AH":this.cpu.regEAX=-65281&this.cpu.regEAX|e<<8&255;break;case"AX":this.cpu.regEAX=-65536&this.cpu.regEAX|65535&e;break;case"BL":this.cpu.regEBX=-256&this.cpu.regEBX|255&e;break;case"BH":this.cpu.regEBX=-65281&this.cpu.regEBX|e<<8&255;break;case"BX":this.cpu.regEBX=-65536&this.cpu.regEBX|65535&e;break;case"CL":this.cpu.regECX=-256&this.cpu.regECX|255&e;break;case"CH":this.cpu.regECX=-65281&this.cpu.regECX|e<<8&255;break;case"CX":this.cpu.regECX=-65536&this.cpu.regECX|65535&e;break;case"DL":this.cpu.regEDX=-256&this.cpu.regEDX|255&e;break;case"DH":this.cpu.regEDX=-65281&this.cpu.regEDX|e<<8&255;break;case"DX":this.cpu.regEDX=-65536&this.cpu.regEDX|65535&e;break;case"SP":this.cpu.setSP(-65536&this.cpu.getSP()|65535&e);break;case"BP":this.cpu.regEBP=-65536&this.cpu.regEBP|65535&e;break;case"SI":this.cpu.regESI=-65536&this.cpu.regESI|65535&e;break;case"DI":this.cpu.regEDI=-65536&this.cpu.regEDI|65535&e;break;case"DS":this.cpu.setDS(e);break;case"ES":this.cpu.setES(e);break;case"SS":this.cpu.setSS(e);break;case"CS":this.cpu.setCS(e),this.dbgAddrNextCode=this.newAddr(this.cpu.getIP(),this.cpu.getCS());break;case"IP":case"EIP":this.cpu.setIP(e),this.dbgAddrNextCode=this.newAddr(this.cpu.getIP(),this.cpu.getCS());break;case"PC":case"PS":this.cpu.setPS(e);break;case"C":e?this.cpu.setCF():this.cpu.clearCF();break;case"P":e?this.cpu.setPF():this.cpu.clearPF();break;case"A":e?this.cpu.setAF():this.cpu.clearAF();break;case"Z":e?this.cpu.setZF():this.cpu.clearZF();break;case"S":e?this.cpu.setSF():this.cpu.clearSF();break;case"I":e?this.cpu.setIF():this.cpu.clearIF();break;case"D":e?this.cpu.setDF():this.cpu.clearDF();break;case"V":e?this.cpu.setOF():this.cpu.clearOF();break;default:if(t=!0,this.cpu.model>=X86.MODEL_80286)switch(t=!1,k){case"MS":this.cpu.setMSW(e);break;case"TR":this.cpu.segTSS.load(e)===X86.ADDR_INVALID&&(T=!1);break;default:if(t=!0,I386&&this.cpu.model>=X86.MODEL_80386)switch(t=!1,k){case"EAX":this.cpu.regEAX=e;break;case"EBX":this.cpu.regEBX=e;break;case"ECX":this.cpu.regECX=e;break;case"EDX":this.cpu.regEDX=e;break;case"ESP":this.cpu.setSP(e);break;case"EBP":this.cpu.regEBP=e;break;case"ESI":this.cpu.regESI=e;break;case"EDI":this.cpu.regEDI=e;break;case"FS":this.cpu.setFS(e);break;case"GS":this.cpu.setGS(e);break;case"CR0":this.cpu.regCR0=e,X86.helpLoadCR0.call(this.cpu,e);break;case"CR2":this.cpu.regCR2=e;break;case"CR3":this.cpu.regCR3=e,X86.helpLoadCR3.call(this.cpu,e);break;default:t=!0}}if(t)return void this.printf("unknown register: %s\n",R)}if(!T)return void this.printf("invalid value: %s\n",U);this.cpu.updateCPU(),this.printf("updated registers:\n")}}this.printf("%s\n",this.getRegDump(U)),R&&(this.dbgAddrNextCode=this.newAddr(this.cpu.getIP(),this.cpu.getCS()),this.doUnassemble(this.toHexAddr(this.dbgAddrNextCode)))}doFPURegisters(V){let R=this.fpuActive,U=R.getStatus(),l=R.getControl();for(let V=0;V<8;V++){let U=R.readFPUStack(V);if(!U)break;let l=StrLib.pad(U[2].toFixed(15),24);this.printf("ST%d: %s  %x,%x  [%d:%s]\n",V,l,U[4],U[3],U[0],Debuggerx86.FPU_TAGS[U[1]])}this.printf("    B3SSS210ESPUOZDI               xxxIRRPPIxPUOZDI\n"),this.printf("SW: %s (%#06x)  CW: %s (%#06x)\n",StrLib.toBin(U,16),U,StrLib.toBin(l,16),l)}doRun(V,R,U,l){if("gt"==V&&(this.fIgnoreNextCheckFault=!0),void 0!==R){let V=this.parseAddr(R,!0);if(!V)return;this.parseAddrOptions(V,U),this.setTempBreakpoint(V)}this.startCPU(!0,l)}doPrint(V){let R=(V=StrLib.trim(V)).match(/^(['"])(.*?)\1$/);R?this.printf("%s\n",this.replaceRegs(R[2])):this.parseExpression(V,!1)}doStep(V){let R="pr"==V?1:0,U=1+R;if(this.nStep)this.printf("step in progress\n");else{let V,l=!1,e=this.newAddr(this.cpu.getIP(),this.cpu.getCS());do{let R;switch(V=!1,this.getByte(e)){case X86.OPCODE.ES:case X86.OPCODE.CS:case X86.OPCODE.SS:case X86.OPCODE.DS:case X86.OPCODE.FS:case X86.OPCODE.GS:case X86.OPCODE.OS:case X86.OPCODE.AS:case X86.OPCODE.LOCK:this.incAddr(e,1),V=!0;break;case X86.OPCODE.INT3:case X86.OPCODE.INTO:this.nStep=U,this.incAddr(e,1);break;case X86.OPCODE.INTN:if(this.nStep=U,this.incAddr(e,1),R=this.getByte(e),this.incAddr(e,1),50==R){let V=this.cpu.regEAX>>8&255;if(V>=4&&V<=6){let V=128;for(;(R=this.getByte(e))&&V--;)this.incAddr(e,1);this.incAddr(e,1)}}break;case X86.OPCODE.LOOPNZ:case X86.OPCODE.LOOPZ:case X86.OPCODE.LOOP:this.nStep=U,this.incAddr(e,e.fData32?4:2);break;case X86.OPCODE.CALL:this.nStep=U,this.incAddr(e,e.fData32?5:3);break;case X86.OPCODE.CALLF:this.nStep=U,this.incAddr(e,e.fData32?7:5);break;case X86.OPCODE.GRP4W:{let V=this.getWord(e)&X86.OPCODE.CALLMASK;V!=X86.OPCODE.CALLW&&V!=X86.OPCODE.CALLFDW||(this.nStep=U,this.getInstruction(e))}break;case X86.OPCODE.REPZ:case X86.OPCODE.REPNZ:this.incAddr(e,1),l=V=!0;break;case X86.OPCODE.INSB:case X86.OPCODE.INSW:case X86.OPCODE.OUTSB:case X86.OPCODE.OUTSW:case X86.OPCODE.MOVSB:case X86.OPCODE.MOVSW:case X86.OPCODE.CMPSB:case X86.OPCODE.CMPSW:case X86.OPCODE.STOSB:case X86.OPCODE.STOSW:case X86.OPCODE.LODSB:case X86.OPCODE.LODSW:case X86.OPCODE.SCASB:case X86.OPCODE.SCASW:l&&(this.nStep=U,this.incAddr(e,1))}}while(V);this.nStep?(this.setTempBreakpoint(e),this.startCPU()||(this.cmp&&this.cmp.updateFocus(),this.nStep=0)):this.doTrace(R?"tr":"t")}}getCall(V,R){let U=null,l=V.off,e=l;for(let t=1;t<=6&&l;t++){if(t>2){V.off=l,V.addr=void 0;let t=this.getInstruction(V);if(t.indexOf("CALL")>=0||R&&t.indexOf("INT")>=0){let V=t.indexOf(" ");if(l+(t.indexOf(" ",V+1)-V-1)/2==e){U=t;break}}}l--}return V.off=e,U}doStackTrace(V,R){if("?"==R)return this.printf("stack trace commands:\n"),this.printf("\tk\tshow frame addresses\n"),void this.printf("\tks\tshow symbol information\n");let U=0,l=this.cpu.segCS.sel,e=this.newAddr(),t=this.newAddr(this.cpu.getSP(),this.cpu.getSS());for(this.printf("stack trace for %s\n",this.toHexAddr(t));U<10;){let R=null,T=null,k=256;for(;t.off>>>0<this.cpu.regLSPLimit&&(e.off=this.getWord(t,!0),null!=t.addr&&k--)&&(e.sel=l,R=this.getCall(e),!R);)if(e.sel=this.getWord(t),R=this.getCall(e,!0),R){l=this.getWord(t,!0),R.indexOf("INT")>0&&this.getWord(t,!0);break}if(!R||R==T)break;let F=null;if("ks"==V){let V=R.match(/[0-9A-F]+$/);V&&(F=this.doList(V[0]))}R=StrLib.pad(R,e.fAddr32?-74:-62)+";"+(F||"stack="+this.toHexAddr(t)),this.printf("%s\n",R),T=R,U++}U||this.printf("no return addresses found\n")}doTrace(V,R){let U=this,l="t"!=V,e=this.parseValue(R,void 0,!0)||1,t=1==e?0:1;"tc"==V&&(t=e,e=1),WebLib.onCountRepeat(e,(function(){return U.setBusy(!0)&&U.stepCPU(t,l,!1)}),(function(){U.cpu.updateCPU(!0),U.setBusy(!1)}))}initAddrSize(V){null!=V.fData32Orig&&(V.fData32=V.fData32Orig),null!=V.fAddr32Orig&&(V.fAddr32=V.fAddr32Orig),V.fData32Orig=V.fData32,V.fAddr32Orig=V.fAddr32}isStringIns(V){return V>=X86.OPCODE.MOVSB&&V<=X86.OPCODE.CMPSW||V>=X86.OPCODE.STOSB&&V<=X86.OPCODE.SCASW}doUnassemble(V,R,U){let l=this.parseAddr(V,!0);if(!l)return;void 0===U&&(U=1);let e=256;if(void 0!==R){let V=this.parseAddr(R,!0);if(!V||V.off<l.off)return;e=V.off-l.off+1,e<0&&(e=1),e>4096&&(e=4096),U=-1}let t,T=0;for(this.initAddrSize(l);e>0&&U--;){let V=this.isBusy(!1)||this.nStep?this.nCycles:-1,R=V>=0?"cycles":"",k=this.findSymbol(l),F=l.addr;if(k[0]&&U&&(!T&&U||k[0].indexOf("+")<0)){let V=k[0]+":";k[2]&&(V+=" "+k[2]),this.printf("%s\n",V)}k[3]&&(R=k[3],V=-1),t=this.getInstruction(l,R,V),this.printf("%s\n",t),this.dbgAddrNextCode=l,e-=l.addr-F,T++}}parseCommand(V,R,U=";"){R&&(V?(this.iPrevCmd<0&&this.aPrevCmds.length&&(this.iPrevCmd=0),(this.iPrevCmd<0||V!=this.aPrevCmds[this.iPrevCmd])&&(this.aPrevCmds.splice(0,0,V),this.iPrevCmd=0),this.iPrevCmd--):V=this.aPrevCmds[this.iPrevCmd+1]);let l=[];if(V){V=V.replace(/""/g,"'");let R=0,e=null,t=!1;for(let T=0,k=null;T<=V.length;T++){let F=V.charAt(T);if('"'==F||"'"==F)e?F==e&&(e=null):(e=F,t=!0);else if(F==U&&!e&&F!=k||!F){let U=StrLib.trim(V.substring(R,T));t||(U=U.toLowerCase()),l.push(U),R=T+1,t=!1}k=F}if(" "==U&&l.length){let V=l[0],R=V.charAt(0);for(let U=1;U<V.length;U++){let e=V.charAt(U);if("?"==R||"r"==R||e<"a"||e>"z"){l[0]=V.substr(U),l.unshift(V.substr(0,U));break}}}}return l}doCommand(V,R){let U=!0;if(!this.cpu)return this.printf("no CPU attached\n"),!1;try{if(V.length&&"end"!=V){if(!R){let R=">> ";this.cpu.regCR0&X86.CR0.MSW.PE&&(R=this.cpu.regPS&X86.PS.VM?"-- ":"## "),this.printf("%s%s\n",R,V)}}else this.fAssemble&&(this.printf("ended assemble at %s\n",this.toHexAddr(this.dbgAddrAssemble)),this.dbgAddrNextCode=this.dbgAddrAssemble,this.fAssemble=!1),V="";let l=V.charAt(0);if('"'==l||"'"==l)return!0;if(this.sMessagePrev=null,this.isReady()&&V.length>0){this.fAssemble&&(V="a "+this.toHexAddr(this.dbgAddrAssemble)+" "+V);let l=this.parseCommand(V,!1," ");switch(l[0].charAt(0)){case"a":this.doAssemble(l);break;case"b":this.doBreak(l,V);break;case"c":this.doClear(l[0]);break;case"d":if(!COMPILED&&"debug"==V){window.DEBUG=!0,this.printf("DEBUG checks on\n");break}this.doDump(l);break;case"e":if("else"==l[0])break;this.doEdit(l);break;case"f":this.doFreqs(l[1]);break;case"g":this.doRun(l[0],l[1],V,R);break;case"h":this.doHalt(R);break;case"i":if("if"==l[0]){this.doIf(V.substr(2),R)||(U=!1);break}if("int"==l[0]){this.doInt(l[1])||(U=!1);break}this.doInput(l[1]);break;case"k":this.doStackTrace(l[0],l[1]);break;case"l":if("ln"==l[0]){this.doList(l[1],!0);break}this.doLoad(l);break;case"m":if("mouse"==l[0]){this.doMouse(l[1],l[2]);break}this.doMessages(l);break;case"o":this.doOutput(l[1],l[2]);break;case"p":if("print"==l[0]){this.doPrint(V.substr(5));break}this.doStep(l[0]);break;case"r":if("reset"==V){this.cmp&&this.cmp.reset();break}this.doRegisters(l);break;case"t":this.doTrace(l[0],l[1]);break;case"u":this.doUnassemble(l[1],l[2],8);break;case"v":if("var"==l[0]){this.doVar(V.substr(3))||(U=!1);break}this.printf("%s version %s (%s%s%s%s%s)\n",APPNAME||"PCx86",APPVERSION,this.cpu.model,COMPILED?",RELEASE":DEBUG?",DEBUG":",NODEBUG",PREFETCH?",PREFETCH":",NOPREFETCH",TYPEDARRAYS?",TYPEDARRAYS":BYTEARRAYS?",BYTEARRAYS":",LONGARRAYS",BACKTRACK?",BACKTRACK":",NOBACKTRACK"),this.printf("%s\n",WebLib.getUserAgent());break;case"x":this.doExecOptions(l);break;case"?":if(l[1]){this.doPrint(V.substr(1));break}this.doHelp();break;case"n":if(!COMPILED&&"nodebug"==V){window.DEBUG=!1,this.printf("DEBUG checks off\n");break}if(this.doInfo(l))break;default:R||this.printf("unknown command: %s\n",V),U=!1}}}catch(V){this.printf("debugger error: %s\n",V.stack||V.message),U=!1}return U}doCommands(V,R=!1,U=!1){let l=this.parseCommand(V,R);for(let V in l)if(!this.doCommand(l[+V],U))return!1;return!0}static init(){let V=Component.getElementsByClass(APPCLASS,"debugger");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=new Debuggerx86(l);Component.bindComponentControls(e,U,APPCLASS)}}}DEBUGGER&&(Debuggerx86.INT_MESSAGES={16:MESSAGE.VIDEO,19:MESSAGE.FDC,21:MESSAGE.CHIPSET,22:MESSAGE.KBD,28:MESSAGE.TIMER,33:MESSAGE.DOS,51:MESSAGE.MOUSE},Debuggerx86.INT_ANNOYING=[Interrupts.TIMER,Interrupts.TMR_BREAK,Interrupts.DOS_IDLE,Interrupts.DOS_NETBIOS,Interrupts.VIDEO_VGA],Debuggerx86.COMMANDS={"?":"help/print","a [#]":"assemble","b [#]":"breakpoint",c:"clear output","d [#]":"dump memory","e [#]":"edit memory",f:"frequencies","g [#]":"go [to #]",h:"halt","i [#]":"input port #",if:"eval expression",k:"stack trace",l:"load sector(s)",ln:"list nearest symbol(s)",m:"messages",mouse:"mouse action","o [#]":"output port #",p:"step over",print:"print expression",r:"dump/set registers",reset:"reset machine","t [#]":"trace","u [#]":"unassemble",x:"execution options",v:"print version",var:"assign variable"},Debuggerx86.ADDRTYPE={NONE:0,REAL:1,PROT:2,V86:3,LINEAR:4,PHYSICAL:5},Debuggerx86.INS={NONE:0,AAA:1,AAD:2,AAM:3,AAS:4,ADC:5,ADD:6,AND:7,ARPL:8,AS:9,BOUND:10,BSF:11,BSR:12,BT:13,BTC:14,BTR:15,BTS:16,CALL:17,CBW:18,CLC:19,CLD:20,CLI:21,CLTS:22,CMC:23,CMP:24,CMPSB:25,CMPSW:26,CS:27,CWD:28,DAA:29,DAS:30,DEC:31,DIV:32,DS:33,ENTER:34,ES:35,ESC:36,FS:37,GS:38,HLT:39,IBTS:40,IDIV:41,IMUL:42,IN:43,INC:44,INS:45,INT:46,INT1:47,INT3:48,INTO:49,IRET:50,JBE:51,JC:52,JCXZ:53,JG:54,JGE:55,JL:56,JLE:57,JMP:58,JA:59,JNC:60,JNO:61,JNP:62,JNS:63,JNZ:64,JO:65,JP:66,JS:67,JZ:68,LAHF:69,LAR:70,LDS:71,LEA:72,LEAVE:73,LES:74,LFS:75,LGDT:76,LGS:77,LIDT:78,LLDT:79,LMSW:80,LOADALL:81,LOCK:82,LODSB:83,LODSW:84,LOOP:85,LOOPNZ:86,LOOPZ:87,LSL:88,LSS:89,LTR:90,MOV:91,MOVSB:92,MOVSW:93,MOVSX:94,MOVZX:95,MUL:96,NEG:97,NOP:98,NOT:99,OR:100,OS:101,OUT:102,OUTS:103,POP:104,POPA:105,POPF:106,PUSHF:107,PUSHA:108,PUSH:109,RCL:110,RCR:111,REPNZ:112,REPZ:113,RET:114,RETF:115,ROL:116,ROR:117,SAHF:118,SALC:119,SAR:120,SBB:121,SCASB:122,SCASW:123,SETBE:124,SETC:125,SETG:126,SETGE:127,SETL:128,SETLE:129,SETNBE:130,SETNC:131,SETNO:132,SETNP:133,SETNS:134,SETNZ:135,SETO:136,SETP:137,SETS:138,SETZ:139,SGDT:140,SHL:141,SHLD:142,SHR:143,SHRD:144,SIDT:145,SLDT:146,SMSW:147,SS:148,STC:149,STD:150,STI:151,STOSB:152,STOSW:153,STR:154,SUB:155,TEST:156,VERR:157,VERW:158,WAIT:159,XBTS:160,XCHG:161,XLAT:162,XOR:163,GRP1B:164,GRP1W:165,GRP1SW:166,GRP2B:167,GRP2W:168,GRP2B1:169,GRP2W1:170,GRP2BC:171,GRP2WC:172,GRP3B:173,GRP3W:174,GRP4B:175,GRP4W:176,OP0F:177,GRP6:178,GRP7:179,GRP8:180},Debuggerx86.INS_NAMES=["INVALID","AAA","AAD","AAM","AAS","ADC","ADD","AND","ARPL","AS:","BOUND","BSF","BSR","BT","BTC","BTR","BTS","CALL","CBW","CLC","CLD","CLI","CLTS","CMC","CMP","CMPSB","CMPSW","CS:","CWD","DAA","DAS","DEC","DIV","DS:","ENTER","ES:","ESC","FS:","GS:","HLT","IBTS","IDIV","IMUL","IN","INC","INS","INT","INT1","INT3","INTO","IRET","JBE","JC","JCXZ","JG","JGE","JL","JLE","JMP","JA","JNC","JNO","JNP","JNS","JNZ","JO","JP","JS","JZ","LAHF","LAR","LDS","LEA","LEAVE","LES","LFS","LGDT","LGS","LIDT","LLDT","LMSW","LOADALL","LOCK","LODSB","LODSW","LOOP","LOOPNZ","LOOPZ","LSL","LSS","LTR","MOV","MOVSB","MOVSW","MOVSX","MOVZX","MUL","NEG","NOP","NOT","OR","OS:","OUT","OUTS","POP","POPA","POPF","PUSHF","PUSHA","PUSH","RCL","RCR","REPNZ","REPZ","RET","RETF","ROL","ROR","SAHF","SALC","SAR","SBB","SCASB","SCASW","SETBE","SETC","SETG","SETGE","SETL","SETLE","SETNBE","SETNC","SETNO","SETNP","SETNS","SETNZ","SETO","SETP","SETS","SETZ","SGDT","SHL","SHLD","SHR","SHRD","SIDT","SLDT","SMSW","SS:","STC","STD","STI","STOSB","STOSW","STR","SUB","TEST","VERR","VERW","WAIT","XBTS","XCHG","XLAT","XOR"],Debuggerx86.FINS={FLD:0,FST:1,FSTP:2,FXCH:3,FILD:4,FIST:5,FISTP:6,FBLD:7,FBSTP:8,FADD:9,FADDP:10,FIADD:11,FSUB:12,FSUBP:13,FISUB:14,FSUBR:15,FSUBRP:16,FISUBR:17,FMUL:18,FMULP:19,FIMUL:20,FDIV:21,FDIVP:22,FIDIV:23,FDIVR:24,FDIVRP:25,FIDIVR:26,FSQRT:27,FSCALE:28,FPREM:29,FRNDINT:30,FXTRACT:31,FABS:32,FCHS:33,FCOM:34,FCOMP:35,FCOMPP:36,FICOM:37,FICOMP:38,FTST:39,FXAM:40,FPTAN:41,FPATAN:42,F2XM1:43,FYL2X:44,FYL2XP1:45,FLDZ:46,FLD1:47,FLDPI:48,FLDL2T:49,FLDL2E:50,FLDLG2:51,FLDLN2:52,FINIT:53,FNINIT:54,FDISI:55,FNDISI:56,FENI:57,FNENI:58,FLDCW:59,FSTCW:60,FNSTCW:61,FSTSW:62,FNSTSW:63,FCLEX:64,FNCLEX:65,FSTENV:66,FNSTENV:67,FLDENV:68,FSAVE:69,FNSAVE:70,FRSTOR:71,FINCSTP:72,FDECSTP:73,FFREE:74,FFREEP:75,FNOP:76,FWAIT:77,FSETPM:78,FSINCOS:79,FSTSWAX:80},Debuggerx86.FINS_NAMES=["FLD","FST","FSTP","FXCH","FILD","FIST","FISTP","FBLD","FBSTP","FADD","FADDP","FIADD","FSUB","FSUBP","FISUB","FSUBR","FSUBRP","FISUBR","FMUL","FMULP","FIMUL","FDIV","FDIVP","FIDIV","FDIVR","FDIVRP","FIDIVR","FSQRT","FSCALE","FPREM","FRNDINT","FXTRACT","FABS","FCHS","FCOM","FCOMP","FCOMPP","FICOM","FICOMP","FTST","FXAM","FPTAN","FPATAN","F2XM1","FYL2X","FYL2XP1","FLDZ","FLD1","FLDPI","FLDL2T","FLDL2E","FLDLG2","FLDLN2","FINIT","FNINIT","FDISI","FNDISI","FENI","FNENI","FLDCW","FSTCW","FNSTCW","FSTSW","FNSTSW","FCLEX","FNCLEX","FSTENV","FNSTENV","FLDENV","FSAVE","FNSAVE","FRSTOR","FINCSTP","FDECSTP","FFREE","FFREEP","FNOP","FWAIT","FSETPM","FSINCOS","FSTSWAX"],Debuggerx86.FPU_TAGS=["VALID","ZERO ","SPEC ","EMPTY"],Debuggerx86.CPU_8086=0,Debuggerx86.CPU_80186=1,Debuggerx86.CPU_80286=2,Debuggerx86.CPU_80386=3,Debuggerx86.CPUS=[8086,80186,80286,80386],Debuggerx86.REG_AL=0,Debuggerx86.REG_CL=1,Debuggerx86.REG_DL=2,Debuggerx86.REG_BL=3,Debuggerx86.REG_AH=4,Debuggerx86.REG_CH=5,Debuggerx86.REG_DH=6,Debuggerx86.REG_BH=7,Debuggerx86.REG_AX=8,Debuggerx86.REG_CX=9,Debuggerx86.REG_DX=10,Debuggerx86.REG_BX=11,Debuggerx86.REG_SP=12,Debuggerx86.REG_BP=13,Debuggerx86.REG_SI=14,Debuggerx86.REG_DI=15,Debuggerx86.REG_SEG=16,Debuggerx86.REG_IP=22,Debuggerx86.REG_PS=23,Debuggerx86.REG_EAX=24,Debuggerx86.REG_ECX=25,Debuggerx86.REG_EDX=26,Debuggerx86.REG_EBX=27,Debuggerx86.REG_ESP=28,Debuggerx86.REG_EBP=29,Debuggerx86.REG_ESI=30,Debuggerx86.REG_EDI=31,Debuggerx86.REG_CR0=32,Debuggerx86.REG_CR1=33,Debuggerx86.REG_CR2=34,Debuggerx86.REG_CR3=35,Debuggerx86.REG_DR0=40,Debuggerx86.REG_DR1=41,Debuggerx86.REG_DR2=42,Debuggerx86.REG_DR3=43,Debuggerx86.REG_DR6=46,Debuggerx86.REG_DR7=47,Debuggerx86.REG_TR0=48,Debuggerx86.REG_TR6=54,Debuggerx86.REG_TR7=55,Debuggerx86.REG_EIP=56,Debuggerx86.REGS=["AL","CL","DL","BL","AH","CH","DH","BH","AX","CX","DX","BX","SP","BP","SI","DI","ES","CS","SS","DS","FS","GS","IP","PS","EAX","ECX","EDX","EBX","ESP","EBP","ESI","EDI","CR0","CR1","CR2","CR3",null,null,null,null,"DR0","DR1","DR2","DR3",null,null,"DR6","DR7",null,null,null,null,null,null,"TR6","TR7","EIP"],Debuggerx86.REG_ES=0,Debuggerx86.REG_CS=1,Debuggerx86.REG_SS=2,Debuggerx86.REG_DS=3,Debuggerx86.REG_FS=4,Debuggerx86.REG_GS=5,Debuggerx86.REG_UNKNOWN=0,Debuggerx86.MOD_NODISP=0,Debuggerx86.MOD_DISP8=1,Debuggerx86.MOD_DISP16=2,Debuggerx86.MOD_REGISTER=3,Debuggerx86.RM_BXSI=0,Debuggerx86.RM_BXDI=1,Debuggerx86.RM_BPSI=2,Debuggerx86.RM_BPDI=3,Debuggerx86.RM_SI=4,Debuggerx86.RM_DI=5,Debuggerx86.RM_BP=6,Debuggerx86.RM_IMMOFF=Debuggerx86.RM_BP,Debuggerx86.RM_BX=7,Debuggerx86.RMS=["BX+SI","BX+DI","BP+SI","BP+DI","SI","DI","BP","BX","EAX","ECX","EDX","EBX","ESP","EBP","ESI","EDI"],Debuggerx86.TYPE_SIZE=15,Debuggerx86.TYPE_MODE=240,Debuggerx86.TYPE_IREG=3840,Debuggerx86.TYPE_OTHER=61440,Debuggerx86.TYPE_NONE=0,Debuggerx86.TYPE_BYTE=1,Debuggerx86.TYPE_SBYTE=2,Debuggerx86.TYPE_SHORT=3,Debuggerx86.TYPE_WORD=4,Debuggerx86.TYPE_LONG=5,Debuggerx86.TYPE_SEGP=6,Debuggerx86.TYPE_FARP=7,Debuggerx86.TYPE_PREFIX=8,Debuggerx86.TYPE_ST=9,Debuggerx86.TYPE_STREG=10,Debuggerx86.TYPE_SINT=11,Debuggerx86.TYPE_SREAL=11,Debuggerx86.TYPE_LINT=12,Debuggerx86.TYPE_LREAL=12,Debuggerx86.TYPE_TREAL=13,Debuggerx86.TYPE_BCD80=14,Debuggerx86.TYPE_ENV=15,Debuggerx86.TYPE_FPU=15,Debuggerx86.TYPE_IMM=0,Debuggerx86.TYPE_ONE=16,Debuggerx86.TYPE_IMMOFF=32,Debuggerx86.TYPE_IMMREL=48,Debuggerx86.TYPE_DSSI=64,Debuggerx86.TYPE_ESDI=80,Debuggerx86.TYPE_IMPREG=96,Debuggerx86.TYPE_IMPSEG=112,Debuggerx86.TYPE_MODRM=128,Debuggerx86.TYPE_MODMEM=144,Debuggerx86.TYPE_MODREG=160,Debuggerx86.TYPE_REG=176,Debuggerx86.TYPE_SEGREG=192,Debuggerx86.TYPE_CTLREG=208,Debuggerx86.TYPE_DBGREG=224,Debuggerx86.TYPE_TSTREG=240,Debuggerx86.TYPE_AL=Debuggerx86.REG_AL<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_BYTE,Debuggerx86.TYPE_CL=Debuggerx86.REG_CL<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_BYTE,Debuggerx86.TYPE_DL=Debuggerx86.REG_DL<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_BYTE,Debuggerx86.TYPE_BL=Debuggerx86.REG_BL<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_BYTE,Debuggerx86.TYPE_AH=Debuggerx86.REG_AH<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_BYTE,Debuggerx86.TYPE_CH=Debuggerx86.REG_CH<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_BYTE,Debuggerx86.TYPE_DH=Debuggerx86.REG_DH<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_BYTE,Debuggerx86.TYPE_BH=Debuggerx86.REG_BH<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_BYTE,Debuggerx86.TYPE_AX=Debuggerx86.REG_AX<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_WORD,Debuggerx86.TYPE_CX=Debuggerx86.REG_CX<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_WORD,Debuggerx86.TYPE_DX=Debuggerx86.REG_DX<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_WORD,Debuggerx86.TYPE_BX=Debuggerx86.REG_BX<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_WORD,Debuggerx86.TYPE_SP=Debuggerx86.REG_SP<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_WORD,Debuggerx86.TYPE_BP=Debuggerx86.REG_BP<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_WORD,Debuggerx86.TYPE_SI=Debuggerx86.REG_SI<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_WORD,Debuggerx86.TYPE_DI=Debuggerx86.REG_DI<<8|Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_WORD,Debuggerx86.TYPE_ES=Debuggerx86.REG_ES<<8|Debuggerx86.TYPE_IMPSEG|Debuggerx86.TYPE_SHORT,Debuggerx86.TYPE_CS=Debuggerx86.REG_CS<<8|Debuggerx86.TYPE_IMPSEG|Debuggerx86.TYPE_SHORT,Debuggerx86.TYPE_SS=Debuggerx86.REG_SS<<8|Debuggerx86.TYPE_IMPSEG|Debuggerx86.TYPE_SHORT,Debuggerx86.TYPE_DS=Debuggerx86.REG_DS<<8|Debuggerx86.TYPE_IMPSEG|Debuggerx86.TYPE_SHORT,Debuggerx86.TYPE_FS=Debuggerx86.REG_FS<<8|Debuggerx86.TYPE_IMPSEG|Debuggerx86.TYPE_SHORT,Debuggerx86.TYPE_GS=Debuggerx86.REG_GS<<8|Debuggerx86.TYPE_IMPSEG|Debuggerx86.TYPE_SHORT,Debuggerx86.TYPE_IN=4096,Debuggerx86.TYPE_OUT=8192,Debuggerx86.TYPE_BOTH=Debuggerx86.TYPE_IN|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_8086=Debuggerx86.CPU_8086<<14,Debuggerx86.TYPE_8087=Debuggerx86.TYPE_8086,Debuggerx86.TYPE_80186=Debuggerx86.CPU_80186<<14,Debuggerx86.TYPE_80286=Debuggerx86.CPU_80286<<14,Debuggerx86.TYPE_80287=Debuggerx86.TYPE_80286,Debuggerx86.TYPE_80386=Debuggerx86.CPU_80386<<14,Debuggerx86.TYPE_80387=Debuggerx86.TYPE_80386,Debuggerx86.TYPE_CPU_SHIFT=14,Debuggerx86.HISTORY_LIMIT=DEBUG?1e5:1e3,Debuggerx86.aOpDescPopCS=[Debuggerx86.INS.POP,Debuggerx86.TYPE_CS|Debuggerx86.TYPE_OUT],Debuggerx86.aOpDescUndefined=[Debuggerx86.INS.NONE,Debuggerx86.TYPE_NONE],Debuggerx86.aOpDesc0F=[Debuggerx86.INS.OP0F,Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_BOTH],Debuggerx86.aaOpDescs=[[Debuggerx86.INS.ADD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADD,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADD,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADD,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADD,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_ES|Debuggerx86.TYPE_IN],[Debuggerx86.INS.POP,Debuggerx86.TYPE_ES|Debuggerx86.TYPE_OUT],[Debuggerx86.INS.OR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OR,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OR,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OR,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OR,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_CS|Debuggerx86.TYPE_IN],Debuggerx86.aOpDescPopCS,[Debuggerx86.INS.ADC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADC,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADC,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADC,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADC,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_SS|Debuggerx86.TYPE_IN],[Debuggerx86.INS.POP,Debuggerx86.TYPE_SS|Debuggerx86.TYPE_OUT],[Debuggerx86.INS.SBB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SBB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SBB,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SBB,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SBB,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SBB,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_DS|Debuggerx86.TYPE_IN],[Debuggerx86.INS.POP,Debuggerx86.TYPE_DS|Debuggerx86.TYPE_OUT],[Debuggerx86.INS.AND,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.AND,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.AND,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.AND,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.AND,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.AND,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ES,Debuggerx86.TYPE_PREFIX],[Debuggerx86.INS.DAA],[Debuggerx86.INS.SUB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SUB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SUB,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SUB,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SUB,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SUB,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CS,Debuggerx86.TYPE_PREFIX],[Debuggerx86.INS.DAS],[Debuggerx86.INS.XOR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.XOR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.XOR,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.XOR,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.XOR,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.XOR,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SS,Debuggerx86.TYPE_PREFIX],[Debuggerx86.INS.AAA],[Debuggerx86.INS.CMP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CMP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CMP,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CMP,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CMP,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CMP,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.DS,Debuggerx86.TYPE_PREFIX],[Debuggerx86.INS.AAS],[Debuggerx86.INS.INC,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.INC,Debuggerx86.TYPE_CX|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.INC,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.INC,Debuggerx86.TYPE_BX|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.INC,Debuggerx86.TYPE_SP|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.INC,Debuggerx86.TYPE_BP|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.INC,Debuggerx86.TYPE_SI|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.INC,Debuggerx86.TYPE_DI|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.DEC,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.DEC,Debuggerx86.TYPE_CX|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.DEC,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.DEC,Debuggerx86.TYPE_BX|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.DEC,Debuggerx86.TYPE_SP|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.DEC,Debuggerx86.TYPE_BP|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.DEC,Debuggerx86.TYPE_SI|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.DEC,Debuggerx86.TYPE_DI|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_CX|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_BX|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_SP|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_BP|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_SI|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_DI|Debuggerx86.TYPE_IN],[Debuggerx86.INS.POP,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_OUT],[Debuggerx86.INS.POP,Debuggerx86.TYPE_CX|Debuggerx86.TYPE_OUT],[Debuggerx86.INS.POP,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_OUT],[Debuggerx86.INS.POP,Debuggerx86.TYPE_BX|Debuggerx86.TYPE_OUT],[Debuggerx86.INS.POP,Debuggerx86.TYPE_SP|Debuggerx86.TYPE_OUT],[Debuggerx86.INS.POP,Debuggerx86.TYPE_BP|Debuggerx86.TYPE_OUT],[Debuggerx86.INS.POP,Debuggerx86.TYPE_SI|Debuggerx86.TYPE_OUT],[Debuggerx86.INS.POP,Debuggerx86.TYPE_DI|Debuggerx86.TYPE_OUT],[Debuggerx86.INS.PUSHA,Debuggerx86.TYPE_NONE|Debuggerx86.TYPE_80186],[Debuggerx86.INS.POPA,Debuggerx86.TYPE_NONE|Debuggerx86.TYPE_80186],[Debuggerx86.INS.BOUND,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80186,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ARPL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],[Debuggerx86.INS.FS,Debuggerx86.TYPE_PREFIX|Debuggerx86.TYPE_80386],[Debuggerx86.INS.GS,Debuggerx86.TYPE_PREFIX|Debuggerx86.TYPE_80386],[Debuggerx86.INS.OS,Debuggerx86.TYPE_PREFIX|Debuggerx86.TYPE_80386],[Debuggerx86.INS.AS,Debuggerx86.TYPE_PREFIX|Debuggerx86.TYPE_80386],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80186],[Debuggerx86.INS.IMUL,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80186,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_SBYTE|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80186],[Debuggerx86.INS.IMUL,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80186,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.INS,Debuggerx86.TYPE_ESDI|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80186,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_IN],[Debuggerx86.INS.INS,Debuggerx86.TYPE_ESDI|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80186,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OUTS,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80186,Debuggerx86.TYPE_DSSI|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OUTS,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80186,Debuggerx86.TYPE_DSSI|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JO,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JNO,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JC,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JNC,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JZ,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JNZ,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JBE,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JA,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JS,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JNS,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JP,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JNP,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JL,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JGE,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JLE,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JG,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.GRP1B,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.GRP1W,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.GRP1B,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.GRP1SW,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.TEST,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.TEST,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.XCHG,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.XCHG,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_SEGREG|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],[Debuggerx86.INS.LEA,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_MODMEM|Debuggerx86.TYPE_WORD],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_SEGREG|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.POP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT],[Debuggerx86.INS.NOP],[Debuggerx86.INS.XCHG,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CX|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.XCHG,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.XCHG,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_BX|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.XCHG,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_SP|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.XCHG,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_BP|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.XCHG,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_SI|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.XCHG,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_DI|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.CBW],[Debuggerx86.INS.CWD],[Debuggerx86.INS.CALL,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_FARP|Debuggerx86.TYPE_IN],[Debuggerx86.INS.WAIT],[Debuggerx86.INS.PUSHF],[Debuggerx86.INS.POPF],[Debuggerx86.INS.SAHF],[Debuggerx86.INS.LAHF],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMMOFF|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMMOFF|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_IMMOFF|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_IMMOFF|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOVSB,Debuggerx86.TYPE_ESDI|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_DSSI|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOVSW,Debuggerx86.TYPE_ESDI|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_DSSI|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CMPSB,Debuggerx86.TYPE_ESDI|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_DSSI|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CMPSW,Debuggerx86.TYPE_ESDI|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_DSSI|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.TEST,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.TEST,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.STOSB,Debuggerx86.TYPE_ESDI|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.STOSW,Debuggerx86.TYPE_ESDI|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_IN],[Debuggerx86.INS.LODSB,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_DSSI|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.LODSW,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_DSSI|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SCASB,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_ESDI|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SCASW,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_ESDI|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_DL|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_BL|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_AH|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_CH|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_DH|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_BH|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_CX|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_BX|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_SP|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_BP|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_SI|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_DI|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.GRP2B,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80186,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.GRP2W,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80186,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RET,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RET],[Debuggerx86.INS.LES,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_MODMEM|Debuggerx86.TYPE_SEGP|Debuggerx86.TYPE_IN],[Debuggerx86.INS.LDS,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_MODMEM|Debuggerx86.TYPE_SEGP|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.MOV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ENTER,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80186,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.LEAVE,Debuggerx86.TYPE_NONE|Debuggerx86.TYPE_80186],[Debuggerx86.INS.RETF,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RETF],[Debuggerx86.INS.INT3],[Debuggerx86.INS.INT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.INTO],[Debuggerx86.INS.IRET],[Debuggerx86.INS.GRP2B1,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.GRP2W1,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.GRP2BC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.GRP2WC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.AAM,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE],[Debuggerx86.INS.AAD,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE],[Debuggerx86.INS.SALC],[Debuggerx86.INS.XLAT],[Debuggerx86.INS.ESC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ESC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ESC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ESC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ESC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ESC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ESC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ESC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.LOOPNZ,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.LOOPZ,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.LOOP,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JCXZ,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.IN,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.IN,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OUT,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CALL,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JMP,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JMP,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_FARP|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JMP,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.IN,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],[Debuggerx86.INS.IN,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OUT,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_AL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OUT,Debuggerx86.TYPE_DX|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_IN],[Debuggerx86.INS.LOCK,Debuggerx86.TYPE_PREFIX],[Debuggerx86.INS.INT1,Debuggerx86.TYPE_NONE|Debuggerx86.TYPE_80386],[Debuggerx86.INS.REPNZ,Debuggerx86.TYPE_PREFIX],[Debuggerx86.INS.REPZ,Debuggerx86.TYPE_PREFIX],[Debuggerx86.INS.HLT],[Debuggerx86.INS.CMC],[Debuggerx86.INS.GRP3B,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.GRP3W,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.CLC],[Debuggerx86.INS.STC],[Debuggerx86.INS.CLI],[Debuggerx86.INS.STI],[Debuggerx86.INS.CLD],[Debuggerx86.INS.STD],[Debuggerx86.INS.GRP4B,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.GRP4W,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH]],Debuggerx86.aaOp0FDescs={0:[Debuggerx86.INS.GRP6,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_BOTH],1:[Debuggerx86.INS.GRP7,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_BOTH],2:[Debuggerx86.INS.LAR,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_MODMEM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],3:[Debuggerx86.INS.LSL,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_MODMEM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],5:[Debuggerx86.INS.LOADALL,Debuggerx86.TYPE_80286],6:[Debuggerx86.INS.CLTS,Debuggerx86.TYPE_80286],7:[Debuggerx86.INS.LOADALL,Debuggerx86.TYPE_80386],32:[Debuggerx86.INS.MOV,Debuggerx86.TYPE_MODREG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_CTLREG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_IN],33:[Debuggerx86.INS.MOV,Debuggerx86.TYPE_MODREG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_DBGREG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_IN],34:[Debuggerx86.INS.MOV,Debuggerx86.TYPE_CTLREG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_MODREG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_IN],35:[Debuggerx86.INS.MOV,Debuggerx86.TYPE_DBGREG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_MODREG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_IN],36:[Debuggerx86.INS.MOV,Debuggerx86.TYPE_MODREG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_TSTREG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_IN],38:[Debuggerx86.INS.MOV,Debuggerx86.TYPE_TSTREG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_MODREG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_IN],128:[Debuggerx86.INS.JO,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],129:[Debuggerx86.INS.JNO,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],130:[Debuggerx86.INS.JC,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],131:[Debuggerx86.INS.JNC,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],132:[Debuggerx86.INS.JZ,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],133:[Debuggerx86.INS.JNZ,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],134:[Debuggerx86.INS.JBE,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],135:[Debuggerx86.INS.JA,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],136:[Debuggerx86.INS.JS,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],137:[Debuggerx86.INS.JNS,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],138:[Debuggerx86.INS.JP,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],139:[Debuggerx86.INS.JNP,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],140:[Debuggerx86.INS.JL,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],141:[Debuggerx86.INS.JGE,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],142:[Debuggerx86.INS.JLE,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],143:[Debuggerx86.INS.JG,Debuggerx86.TYPE_IMMREL|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],144:[Debuggerx86.INS.SETO,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],145:[Debuggerx86.INS.SETNO,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],146:[Debuggerx86.INS.SETC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],147:[Debuggerx86.INS.SETNC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],148:[Debuggerx86.INS.SETZ,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],149:[Debuggerx86.INS.SETNZ,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],150:[Debuggerx86.INS.SETBE,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],151:[Debuggerx86.INS.SETNBE,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],152:[Debuggerx86.INS.SETS,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],153:[Debuggerx86.INS.SETNS,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],154:[Debuggerx86.INS.SETP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],155:[Debuggerx86.INS.SETNP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],156:[Debuggerx86.INS.SETL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],157:[Debuggerx86.INS.SETGE,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],158:[Debuggerx86.INS.SETLE,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],159:[Debuggerx86.INS.SETG,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],160:[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_FS|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],161:[Debuggerx86.INS.POP,Debuggerx86.TYPE_FS|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],163:[Debuggerx86.INS.BT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],164:[Debuggerx86.INS.SHLD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],165:[Debuggerx86.INS.SHLD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],166:[Debuggerx86.INS.XBTS,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],167:[Debuggerx86.INS.IBTS,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_AX|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],168:[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_GS|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386],169:[Debuggerx86.INS.POP,Debuggerx86.TYPE_GS|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386],171:[Debuggerx86.INS.BTS,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],172:[Debuggerx86.INS.SHRD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],173:[Debuggerx86.INS.SHRD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],175:[Debuggerx86.INS.IMUL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],178:[Debuggerx86.INS.LSS,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_MODMEM|Debuggerx86.TYPE_SEGP|Debuggerx86.TYPE_IN],179:[Debuggerx86.INS.BTR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],180:[Debuggerx86.INS.LFS,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_MODMEM|Debuggerx86.TYPE_SEGP|Debuggerx86.TYPE_IN],181:[Debuggerx86.INS.LGS,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_MODMEM|Debuggerx86.TYPE_SEGP|Debuggerx86.TYPE_IN],182:[Debuggerx86.INS.MOVZX,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],183:[Debuggerx86.INS.MOVZX,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],186:[Debuggerx86.INS.GRP8,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],187:[Debuggerx86.INS.BTC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],188:[Debuggerx86.INS.BSF,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],189:[Debuggerx86.INS.BSR,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],190:[Debuggerx86.INS.MOVSX,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],191:[Debuggerx86.INS.MOVSX,Debuggerx86.TYPE_REG|Debuggerx86.TYPE_LONG|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN]},Debuggerx86.aaaOpFPUDescs={216:{0:[Debuggerx86.FINS.FADD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SREAL|Debuggerx86.TYPE_IN],1:[Debuggerx86.FINS.FMUL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SREAL|Debuggerx86.TYPE_IN],2:[Debuggerx86.FINS.FCOM,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SREAL|Debuggerx86.TYPE_IN],3:[Debuggerx86.FINS.FCOMP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SREAL|Debuggerx86.TYPE_IN],4:[Debuggerx86.FINS.FSUB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SREAL|Debuggerx86.TYPE_IN],5:[Debuggerx86.FINS.FSUBR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SREAL|Debuggerx86.TYPE_IN],6:[Debuggerx86.FINS.FDIV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SREAL|Debuggerx86.TYPE_IN],7:[Debuggerx86.FINS.FDIVR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SREAL|Debuggerx86.TYPE_IN],48:[Debuggerx86.FINS.FADD,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],49:[Debuggerx86.FINS.FMUL,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],50:[Debuggerx86.FINS.FCOM,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],51:[Debuggerx86.FINS.FCOMP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],52:[Debuggerx86.FINS.FSUB,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],53:[Debuggerx86.FINS.FSUBR,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],54:[Debuggerx86.FINS.FDIV,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],55:[Debuggerx86.FINS.FDIVR,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN]},217:{0:[Debuggerx86.FINS.FLD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SREAL|Debuggerx86.TYPE_IN],2:[Debuggerx86.FINS.FST,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SREAL|Debuggerx86.TYPE_OUT],3:[Debuggerx86.FINS.FSTP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SREAL|Debuggerx86.TYPE_OUT],4:[Debuggerx86.FINS.FLDENV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_ENV|Debuggerx86.TYPE_IN],5:[Debuggerx86.FINS.FLDCW,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],6:[Debuggerx86.FINS.FSTENV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_ENV|Debuggerx86.TYPE_OUT],7:[Debuggerx86.FINS.FSTCW,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT],48:[Debuggerx86.FINS.FLD,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT],49:[Debuggerx86.FINS.FXCH,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT],50:[Debuggerx86.FINS.FNOP],51:[Debuggerx86.FINS.FSTP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT],64:[Debuggerx86.FINS.FCHS],65:[Debuggerx86.FINS.FABS],68:[Debuggerx86.FINS.FTST],69:[Debuggerx86.FINS.FXAM],80:[Debuggerx86.FINS.FLD1],81:[Debuggerx86.FINS.FLDL2T],82:[Debuggerx86.FINS.FLDL2E],83:[Debuggerx86.FINS.FLDPI],84:[Debuggerx86.FINS.FLDLG2],85:[Debuggerx86.FINS.FLDLN2],86:[Debuggerx86.FINS.FLDZ],96:[Debuggerx86.FINS.F2XM1],97:[Debuggerx86.FINS.FYL2X],98:[Debuggerx86.FINS.FPTAN],99:[Debuggerx86.FINS.FPATAN],100:[Debuggerx86.FINS.FXTRACT],102:[Debuggerx86.FINS.FDECSTP],103:[Debuggerx86.FINS.FINCSTP],112:[Debuggerx86.FINS.FPREM],113:[Debuggerx86.FINS.FYL2XP1],114:[Debuggerx86.FINS.FSQRT],116:[Debuggerx86.FINS.FRNDINT],117:[Debuggerx86.FINS.FSCALE]},218:{0:[Debuggerx86.FINS.FIADD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SINT|Debuggerx86.TYPE_IN],1:[Debuggerx86.FINS.FIMUL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SINT|Debuggerx86.TYPE_IN],2:[Debuggerx86.FINS.FICOM,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SINT|Debuggerx86.TYPE_IN],3:[Debuggerx86.FINS.FICOMP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SINT|Debuggerx86.TYPE_IN],4:[Debuggerx86.FINS.FISUB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SINT|Debuggerx86.TYPE_IN],5:[Debuggerx86.FINS.FISUBR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SINT|Debuggerx86.TYPE_IN],6:[Debuggerx86.FINS.FIDIV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SINT|Debuggerx86.TYPE_IN],7:[Debuggerx86.FINS.FIDIVR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SINT|Debuggerx86.TYPE_IN]},219:{0:[Debuggerx86.FINS.FILD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SINT|Debuggerx86.TYPE_IN],2:[Debuggerx86.FINS.FIST,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SINT|Debuggerx86.TYPE_OUT],3:[Debuggerx86.FINS.FISTP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SINT|Debuggerx86.TYPE_OUT],5:[Debuggerx86.FINS.FLD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_TREAL|Debuggerx86.TYPE_IN],7:[Debuggerx86.FINS.FSTP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_TREAL|Debuggerx86.TYPE_OUT],64:[Debuggerx86.FINS.FENI],65:[Debuggerx86.FINS.FDISI],66:[Debuggerx86.FINS.FCLEX],67:[Debuggerx86.FINS.FINIT],68:[Debuggerx86.FINS.FSETPM,Debuggerx86.TYPE_80287],115:[Debuggerx86.FINS.FSINCOS,Debuggerx86.TYPE_80387]},220:{0:[Debuggerx86.FINS.FADD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LREAL|Debuggerx86.TYPE_IN],1:[Debuggerx86.FINS.FMUL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LREAL|Debuggerx86.TYPE_IN],2:[Debuggerx86.FINS.FCOM,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LREAL|Debuggerx86.TYPE_IN],3:[Debuggerx86.FINS.FCOMP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LREAL|Debuggerx86.TYPE_IN],4:[Debuggerx86.FINS.FSUB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LREAL|Debuggerx86.TYPE_IN],5:[Debuggerx86.FINS.FSUBR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LREAL|Debuggerx86.TYPE_IN],6:[Debuggerx86.FINS.FDIV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LREAL|Debuggerx86.TYPE_IN],7:[Debuggerx86.FINS.FDIVR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LREAL|Debuggerx86.TYPE_IN],48:[Debuggerx86.FINS.FADD,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_IN],49:[Debuggerx86.FINS.FMUL,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_IN],50:[Debuggerx86.FINS.FCOM,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],51:[Debuggerx86.FINS.FCOMP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],52:[Debuggerx86.FINS.FSUBR,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_IN],53:[Debuggerx86.FINS.FSUB,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_IN],54:[Debuggerx86.FINS.FDIVR,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_IN],55:[Debuggerx86.FINS.FDIV,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_IN]},221:{0:[Debuggerx86.FINS.FLD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LREAL|Debuggerx86.TYPE_IN],2:[Debuggerx86.FINS.FST,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LREAL|Debuggerx86.TYPE_OUT],3:[Debuggerx86.FINS.FSTP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LREAL|Debuggerx86.TYPE_OUT],4:[Debuggerx86.FINS.FRSTOR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_FPU|Debuggerx86.TYPE_IN],6:[Debuggerx86.FINS.FSAVE,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_FPU|Debuggerx86.TYPE_OUT],7:[Debuggerx86.FINS.FSTSW,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT],48:[Debuggerx86.FINS.FFREE,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],49:[Debuggerx86.FINS.FXCH,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT],50:[Debuggerx86.FINS.FST,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],51:[Debuggerx86.FINS.FSTP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN]},222:{0:[Debuggerx86.FINS.FIADD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],1:[Debuggerx86.FINS.FIMUL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],2:[Debuggerx86.FINS.FICOM,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],3:[Debuggerx86.FINS.FICOMP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],4:[Debuggerx86.FINS.FISUB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],5:[Debuggerx86.FINS.FISUBR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],6:[Debuggerx86.FINS.FIDIV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],7:[Debuggerx86.FINS.FIDIVR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],48:[Debuggerx86.FINS.FADDP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_IN],49:[Debuggerx86.FINS.FMULP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_IN],50:[Debuggerx86.FINS.FCOMP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],51:[Debuggerx86.FINS.FCOMPP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],52:[Debuggerx86.FINS.FSUBRP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_IN],53:[Debuggerx86.FINS.FSUBP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_IN],54:[Debuggerx86.FINS.FDIVRP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_IN],55:[Debuggerx86.FINS.FDIVP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_ST|Debuggerx86.TYPE_IN]},223:{0:[Debuggerx86.FINS.FILD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN],2:[Debuggerx86.FINS.FIST,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT],3:[Debuggerx86.FINS.FISTP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT],4:[Debuggerx86.FINS.FBLD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BCD80|Debuggerx86.TYPE_IN],5:[Debuggerx86.FINS.FILD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LINT|Debuggerx86.TYPE_IN],6:[Debuggerx86.FINS.FBSTP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BCD80|Debuggerx86.TYPE_OUT],7:[Debuggerx86.FINS.FISTP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_LINT|Debuggerx86.TYPE_OUT],48:[Debuggerx86.FINS.FFREEP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],49:[Debuggerx86.FINS.FXCH,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_OUT],50:[Debuggerx86.FINS.FSTP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],51:[Debuggerx86.FINS.FSTP,Debuggerx86.TYPE_IMPREG|Debuggerx86.TYPE_STREG|Debuggerx86.TYPE_IN],52:[Debuggerx86.FINS.FSTSWAX,Debuggerx86.TYPE_80287]}},Debuggerx86.aaGrpDescs=[[[Debuggerx86.INS.ADD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SBB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.AND,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SUB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.XOR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CMP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN]],[[Debuggerx86.INS.ADD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SBB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.AND,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SUB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.XOR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CMP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN]],[[Debuggerx86.INS.ADD,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_SBYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.OR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_SBYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ADC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_SBYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SBB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_SBYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.AND,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_SBYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SUB,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_SBYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.XOR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_SBYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CMP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_SBYTE|Debuggerx86.TYPE_IN]],[[Debuggerx86.INS.ROL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ROR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RCL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RCR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SHL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SHR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],Debuggerx86.aOpDescUndefined,[Debuggerx86.INS.SAR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN]],[[Debuggerx86.INS.ROL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ROR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RCL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RCR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SHL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SHR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],Debuggerx86.aOpDescUndefined,[Debuggerx86.INS.SAR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH|Debuggerx86.TYPE_80286,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN]],[[Debuggerx86.INS.ROL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ROR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RCL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RCR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SHL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SHR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],Debuggerx86.aOpDescUndefined,[Debuggerx86.INS.SAR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN]],[[Debuggerx86.INS.ROL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ROR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RCL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RCR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SHL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SHR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],Debuggerx86.aOpDescUndefined,[Debuggerx86.INS.SAR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_ONE|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN]],[[Debuggerx86.INS.ROL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ROR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RCL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RCR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SHL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SHR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],Debuggerx86.aOpDescUndefined,[Debuggerx86.INS.SAR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN]],[[Debuggerx86.INS.ROL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.ROR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RCL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.RCR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SHL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],[Debuggerx86.INS.SHR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN],Debuggerx86.aOpDescUndefined,[Debuggerx86.INS.SAR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH,Debuggerx86.TYPE_CL|Debuggerx86.TYPE_IN]],[[Debuggerx86.INS.TEST,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],Debuggerx86.aOpDescUndefined,[Debuggerx86.INS.NOT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.NEG,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.MUL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.IMUL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.DIV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.IDIV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH]],[[Debuggerx86.INS.TEST,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],Debuggerx86.aOpDescUndefined,[Debuggerx86.INS.NOT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.NEG,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.MUL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.IMUL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.DIV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.IDIV,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH]],[[Debuggerx86.INS.INC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.DEC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_BOTH],Debuggerx86.aOpDescUndefined,Debuggerx86.aOpDescUndefined,Debuggerx86.aOpDescUndefined,Debuggerx86.aOpDescUndefined,Debuggerx86.aOpDescUndefined,Debuggerx86.aOpDescUndefined],[[Debuggerx86.INS.INC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.DEC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_BOTH],[Debuggerx86.INS.CALL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.CALL,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_FARP|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JMP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],[Debuggerx86.INS.JMP,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_FARP|Debuggerx86.TYPE_IN],[Debuggerx86.INS.PUSH,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN],Debuggerx86.aOpDescUndefined],[],[[Debuggerx86.INS.SLDT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80286],[Debuggerx86.INS.STR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80286],[Debuggerx86.INS.LLDT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80286],[Debuggerx86.INS.LTR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80286],[Debuggerx86.INS.VERR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80286],[Debuggerx86.INS.VERW,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80286],Debuggerx86.aOpDescUndefined,Debuggerx86.aOpDescUndefined],[[Debuggerx86.INS.SGDT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80286],[Debuggerx86.INS.SIDT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80286],[Debuggerx86.INS.LGDT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80286],[Debuggerx86.INS.LIDT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80286],[Debuggerx86.INS.SMSW,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80286],Debuggerx86.aOpDescUndefined,[Debuggerx86.INS.LMSW,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_SHORT|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80286],Debuggerx86.aOpDescUndefined],[Debuggerx86.aOpDescUndefined,Debuggerx86.aOpDescUndefined,Debuggerx86.aOpDescUndefined,Debuggerx86.aOpDescUndefined,[Debuggerx86.INS.BT,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_IN|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.BTS,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.BTR,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN],[Debuggerx86.INS.BTC,Debuggerx86.TYPE_MODRM|Debuggerx86.TYPE_WORD|Debuggerx86.TYPE_OUT|Debuggerx86.TYPE_80386,Debuggerx86.TYPE_IMM|Debuggerx86.TYPE_BYTE|Debuggerx86.TYPE_IN]]],Debuggerx86.SYSDESCS={256:["tss286",!1],512:["ldt",!1],768:["busy tss286",!1],1024:["call gate",!0],1280:["task gate",!0],1536:["int gate286",!0],1792:["trap gate286",!0],2304:["tss386",!1],2816:["busy tss386",!1],3072:["call gate386",!0],3584:["int gate386",!0],3840:["trap gate386",!0]},Debuggerx86.TSS286={PREV_TSS:0,CPL0_SP:2,CPL0_SS:4,CPL1_SP:6,CPL1_SS:8,CPL2_SP:10,CPL2_SS:12,TASK_IP:14,TASK_PS:16,TASK_AX:18,TASK_CX:20,TASK_DX:22,TASK_BX:24,TASK_SP:26,TASK_BP:28,TASK_SI:30,TASK_DI:32,TASK_ES:34,TASK_CS:36,TASK_SS:38,TASK_DS:40,TASK_LDT:42},Debuggerx86.TSS386={PREV_TSS:0,CPL0_ESP:4,CPL0_SS:8,CPL1_ESP:12,CPL1_SS:16,CPL2_ESP:20,CPL2_SS:24,TASK_CR3:28,TASK_EIP:32,TASK_PS:36,TASK_EAX:40,TASK_ECX:44,TASK_EDX:48,TASK_EBX:52,TASK_ESP:56,TASK_EBP:60,TASK_ESI:64,TASK_EDI:68,TASK_ES:72,TASK_CS:76,TASK_SS:80,TASK_DS:84,TASK_FS:88,TASK_GS:92,TASK_LDT:96,TASK_IOPM:100},WebLib.onInit(Debuggerx86.init));
class Computer extends Component{static STATE_FAILSAFE="failsafe";static STATE_VALIDATE="validate";static STATE_TIMESTAMP="timestamp";static STATE_VERSION="version";static STATE_HOSTURL="url";static STATE_BROWSER="browser";static STATE_USERID="user";static RESUME_REPOWER=-1;static RESUME_NONE=0;static RESUME_AUTO=1;static RESUME_PROMPT=2;static RESUME_DELETE=3;static UPDATES_PER_SECOND=2;constructor(V,R,U){super("Computer",V,MESSAGE.COMPUTER);let l,e,t=this;if(this.setMachineParms(R),this.fAutoPower=this.getMachineParm("autoPower",V),this.nDiagnostics=+this.getMachineParm("diagnostics",V),this.nDiagnostics>=0&&this.nDiagnostics<=2||(this.nDiagnostics=1),this.nPowerChange=0,this.nBusWidth=V.busWidth||V.buswidth,this.resume=Computer.RESUME_NONE,this.sStateData=null,this.fStateData=!1,this.fServerState=!1,this.url=this.getMachineParm("url")||"",this.sMachineID=(Math.random()+.1).toString(36).substr(2,12),this.sUserID=this.queryUserID(),this.cpu=Component.getComponentByType("CPU",this.id),!this.cpu)return void Component.error("Unable to find CPU component");this.fpu=Component.getComponentByType("FPU",this.id),this.fpu||new FPUx86({id:this.idMachine+".fpu"}),this.dbg=Component.getComponentByType("Debugger",this.id),this.aVideo=[];for(let V=null;V=this.getMachineComponent("Video",V);)this.aVideo.push(V);this.bus=new Busx86({id:this.idMachine+".bus",busWidth:this.nBusWidth},this.cpu,this.dbg);let T=Component.getComponents(this.id);for(this.panel=Component.getComponentByType("Panel",this.id),this.controlPanel=this.panel&&this.panel.bindings.print,this.printComputer=this.print,this.controlPanel&&(this.printComputer=this.panel.print),l=0;l<T.length;l++)e=T[l],e.print=function(V,R){return t.outputDiagnostics(V,R),t.printComputer.call(this,V,R)}.bind(e);for(this.cDiagnosticScreens=0,!this.controlPanel&&this.nDiagnostics&&this.enableDiagnostics(),this.printf(MESSAGE.NONE,"%s v%s\n%s\n%s\n",APPNAME,APPVERSION,COPYRIGHT,LICENSE),MAXDEBUG&&this.printf(MESSAGE.DEBUG,"PREFETCH: %b, TYPEDARRAYS: %b\n",PREFETCH,TYPEDARRAYS),l=0;l<T.length;l++)e=T[l],e.initBus&&e.initBus(this,this.bus,this.cpu,this.dbg);this.cpu.addTimer(this.id,(function(){t.updateStatus()}),1e3/Computer.UPDATES_PER_SECOND);let k=null,F=this.getMachineParm("resume");void 0!==F&&(F.length>1?k=this.sResumePath=F:this.resume=parseInt(F,10));let W=!1,a=WebLib.getURLParm("state");if(a||(W=!0,a=this.getMachineParm("state",V)),a&&(k=this.sStatePath=a,W||(this.fServerState=!0,this.resume=Computer.RESUME_NONE),this.resume&&(this.stateComputer=new State(this,APPVERSION),this.stateComputer.load()?k=null:delete this.stateComputer)),!k&&this.resume&&(k=this.getServerStatePath(),k&&(this.fServerState=!0)),this.sStateURL=k,this.sStateURL){let V="Loading "+this.sStateURL+"...";WebLib.getResource(this.sStateURL,null,!0,(function(V,R,U){t.doneLoad(V,R,U)}),(function(R){t.printf(MESSAGE.PROGRESS,"%s\n",V)}))}else this.setReady();this.bindings.power||(this.fAutoPower=!0),!U&&this.fAutoPower&&this.wait(this.powerOn)}clearPanel(){this.controlPanel&&(this.controlPanel.value="")}enableDiagnostics(){if(!this.cDiagnosticScreens)for(let V=0;V<this.aVideo.length;V++){let R=this.aVideo[V];if(R){let V=R.getTextArea();V&&(V.style.opacity="1",V.style.lineHeight="1",this.cDiagnosticScreens++)}}}disableDiagnostics(){if(this.cDiagnosticScreens){for(let V=0;V<this.aVideo.length;V++){let R=this.aVideo[V];if(R){let V=R.getTextArea();V&&(V.style.opacity="0",V.style.lineHeight="0",WebLib.isUserAgent("MSIE")&&(V.style.fontSize="0"))}}this.cDiagnosticScreens=0}this.nDiagnostics=0}doneDiagnostics(V){return this.cDiagnosticScreens&&(1==this.nDiagnostics&&(this.nDiagnostics+=2,setTimeout((R=this,function(){R.notifyKbdEvent()}),2e3),this.printf(MESSAGE.NONE,"Initialization complete\n")),2==this.nDiagnostics&&(this.nDiagnostics+=2,this.printf(MESSAGE.NONE,"Initialization complete, press a key to continue...\n")),3==this.nDiagnostics||4==this.nDiagnostics)?(this.setReady(!1),this.wait(this.donePowerOn,V),!1):(this.disableDiagnostics(),!0);var R}outputDiagnostics(V,R=0){if(this.cDiagnosticScreens)for(let U=0;U<this.aVideo.length;U++){let l=this.aVideo[U];if(l){let U=l.getTextArea();U&&(R==MESSAGE.PROGRESS&&"...\n"==V.slice(-4)?Component.replaceControl(U,V.slice(0,-1),V.slice(0,-1)+"."):Component.appendControl(U,V))}}}notifyKbdEvent(V,R){let U=this.nDiagnostics;return V&&16==V.keyCode&&3==this.nDiagnostics&&(this.nDiagnostics++,this.printf(MESSAGE.NONE,"Machine paused, press another key to continue...\n"),V=null),(!V&&3==this.nDiagnostics||V&&R&&4==this.nDiagnostics)&&(this.nDiagnostics=5,this.setReady()),!U}getMachineID(){return this.sMachineID}setMachineParms(parmsMachine){if(!parmsMachine){let sParms,resMachine,resources=globals.window.resources;if("object"==typeof resources&&(sParms=resources.parms)||(resMachine=Component.getMachineResources(this.idMachine))&&(sParms=resMachine.parms))try{parmsMachine=eval("("+sParms+")")}catch(V){Component.error(V.message+" ("+sParms+")")}}this.parmsMachine=parmsMachine}getMachineBoolean(V,R){let U=R,l=this.getMachineParm(V);return null!=l&&(U="true"==l||"false"!=l&&!!l),U}getMachineParm(sParm,parmsComponent){let value=WebLib.getURLParm(sParm);if(value)try{value=value.replace(/([^\\])"/g,'$1\\"'),value=eval('"'+value+'"')}catch(V){Component.error(V.message+" ("+value+")"),value=void 0}void 0===value&&this.parmsMachine&&(value=this.parmsMachine[sParm]),void 0===value&&parmsComponent&&(value=parmsComponent[sParm]);let resources=globals.window.resources;if(!value&&"object"==typeof resources)if(resources[sParm])value=sParm;else try{let V=JSON.parse(resources.parms);value=V[sParm]}catch(V){Component.error(V.message+" ("+resources.parms+")")}return value}saveMachineParms(){return this.parmsMachine?JSON.stringify(this.parmsMachine):null}getUserID(){return this.sUserID||""}doneLoad(V,R,U){U?(this.sResumePath=null,this.fServerState=!1,this.printf(MESSAGE.NOTICE,"Unable to load machine state (%s) from server (error %d%s)\n",V,U,R?": "+StrLib.trim(R):"")):(Component.addMachineResource(this.idMachine,V,R),this.sStateData=R,this.fStateData=!0,DEBUG&&this.printf("loaded state file %s\n",V.replace(this.sUserID||"xxx","xxx"))),this.setReady()}wait(V,R){let U=this,l=Component.getComponents(this.id);for(let e=0;e<=l.length;e++){let t=e<l.length?l[e]:this;if(!t.isReady())return void t.isReady((function(){U.wait(V,R)}))}DEBUG&&this.printf("Computer.wait(ready)\n"),V.call(this,R)}validateState(V){let R=!0,U=new State(this,APPVERSION,Computer.STATE_VALIDATE);if(U.load()&&U.parse()){let l=U.get(Computer.STATE_TIMESTAMP),e=V?V.get(Computer.STATE_TIMESTAMP):"unknown";l!=e?(this.printf(MESSAGE.NOTICE,"Machine state may be out-of-date\n(%s vs. %s)\nCheck your browser's local storage limits\n",l,e),R=!1,V||U.clear()):DEBUG&&this.printf("Last state: %s (validate: %s)\n",e,l)}return R}powerOn(V){if(void 0===V&&(V=this.resume||(this.sStateData?Computer.RESUME_AUTO:Computer.RESUME_NONE)),DEBUG&&this.printf("Computer.powerOn(%s)\n",V==Computer.RESUME_REPOWER?"repower":V?"resume":""),this.nPowerChange)return;this.nPowerChange++;let R=!1,U=!1;this.fRestoreError=!1;let l=this.stateComputer||new State(this,APPVERSION);if(V==Computer.RESUME_REPOWER)R=!0;else if(V>Computer.RESUME_NONE){if(l.load(this.sStateData)){this.stateFailSafe=new State(this,APPVERSION,Computer.STATE_FAILSAFE),this.stateFailSafe.load()&&(V!=Computer.RESUME_AUTO&&this.powerReport(l)&&(V=Computer.RESUME_PROMPT),this.stateFailSafe.unload()),this.stateFailSafe.set(Computer.STATE_TIMESTAMP,UsrLib.getTimestamp()),this.stateFailSafe.store();let R=this.resume&&!this.fServerState;if(V==Computer.RESUME_AUTO||Component.confirmUser("Click OK to restore the previous "+APPNAME+" machine state.")){if(U=l.parse(),U){let V=l.get(UserAPI.RES.CODE),e=l.get(UserAPI.RES.DATA);V&&(V==UserAPI.CODE.OK?l.load(e):(V==UserAPI.CODE.FAIL&&e!=UserAPI.FAIL.NOSTATE?(this.printf(MESSAGE.NOTICE,"Error: %s\n",e),e==UserAPI.FAIL.VERIFY&&this.resetUserID()):this.printf(MESSAGE.DEBUG,"%s: %s\n",V,e),l.unload(),l.load()?(U=l.parse(),R=!0):U=!1))}R&&this.validateState(U?l:null)}else V==Computer.RESUME_PROMPT&&l.clear()}else this.validateState();delete this.sStateData,delete this.stateComputer}let e=Component.getComponents(this.id);for(let V=0;V<e.length;V++){let t=e[V];if(t!==this&&t!=this.cpu)try{U=this.powerRestore(t,l,R,U)}catch(V){Component.error(t.type+" restore failure: "+V.message)}}let t=[l,V,U];V==Computer.RESUME_REPOWER?this.donePowerOn(t):this.wait(this.donePowerOn,t)}powerRestore(V,R,U,l){if(!V.flags.powered){if(V.flags.powered=!0,V.powerUp){let e=null;l&&(e=R.get(V.id),e||(e=R.get(V.id.replace(/-[0-9]+\./i,".")))),"string"==typeof e&&(e=null),!V.powerUp(e,U)&&e&&(this.flags.unloading||(this.printf(MESSAGE.NOTICE,"Unable to restore hardware state\n"),this.sStatePath&&!this.fStateData?(R.clear(),this.resume=Computer.RESUME_NONE,WebLib.reloadPage()):this.fRestoreError=!0),V.powerUp(null),l=!1)}if(V.flags.initDone=!0,!U&&V.comment){let R=V.comment.split("|");for(let U=0;U<R.length;U++)V.printf(MESSAGE.STATUS,"%s\n",R[U])}}return l}donePowerOn(V){if(!this.flags.initDone){if(!this.doneDiagnostics(V))return;this.flags.initDone=!0}DEBUG&&this.flags.powered&&this.printf("Computer.donePowerOn(): redundant\n");let R=V[0],U=V[1]<0,l=V[2],e=this.bindings.power;e&&(e.textContent="Shutdown"),this.flags.powered=!0,this.cpu&&(this.powerRestore(this.cpu,R,U,l),this.cpu.autoStart()),this.fRestoreError&&(this.powerReport(R),R.clear()),!U&&this.stateFailSafe&&(this.stateFailSafe.clear(),delete this.stateFailSafe),this.nPowerChange=0,Component.processScript(this.idMachine,this.getMachineParm("autoScript"))}checkPower(){if(this.flags.unloading&&(this.flags.unloading=!1,this.flags.initDone&&!this.flags.powered&&this.powerOn(Computer.RESUME_REPOWER)),this.flags.powered)return!0;let V,R=null,U=Component.getComponents(this.id);for(V=0;V<U.length&&(R=U[V],R===this||R.flags.ready);V++);if(V==U.length)for(V=0;V<U.length&&(R=U[V],R===this||R.flags.powered);V++);V==U.length&&(R=this);let l=R.flags.ready?"powered yet":"ready yet"+(R.fnReady?" (waiting for notification)":"");return Component.printf(MESSAGE.NOTICE,"The %s component (%s) is not %s\n",R.type,R.id,l),!1}powerReport(V){return!this.flags.unloading&&(WebLib.onError("There may be a problem with your "+APPNAME+" machine."),!0)}powerOff(V,R){let U,l="none";if(DEBUG&&this.printf("Computer.powerOff(%s%s)\n",V?"save":"nosave",R?",shutdown":""),this.nPowerChange)return null;this.nPowerChange--;let e=new State(this,APPVERSION),t=new State(this,APPVERSION,Computer.STATE_VALIDATE),T=UsrLib.getTimestamp();t.set(Computer.STATE_TIMESTAMP,T),e.set(Computer.STATE_TIMESTAMP,T),e.set(Computer.STATE_VERSION,APPVERSION),e.set(Computer.STATE_HOSTURL,WebLib.getHostURL()),e.set(Computer.STATE_BROWSER,WebLib.getUserAgent()),this.cpu&&this.cpu.powerDown&&(U=this.cpu.powerDown(V,R),"object"==typeof U&&e.set(this.cpu.id,U),R&&(this.cpu.flags.powered=!1,!1===U&&(l=null)));let k=Component.getComponents(this.id);for(let t=0;t<k.length;t++){let T=k[t];T.flags.powered&&(T.powerDown&&(U=T.powerDown(V,R),"object"==typeof U&&e.set(T.id,U)),R&&(T.flags.powered=!1,!1===U&&(l=null)))}if(l)if(R){let R=!1,U=!1;V?(this.sUserID&&this.saveServerState(this.sUserID,e.toString()),t.store()&&e.store()||(l=null,R=U=!0)):this.resume&&(R=!0,U=this.resume==Computer.RESUME_DELETE),R&&e.clear(U)}else l=e.toString();if(R){this.flags.powered=!1;let V=this.bindings.power;V&&(V.textContent="Power")}return this.nPowerChange=0,l}reset(){this.bus&&this.bus.reset&&(this.printf("Resetting %s\n",this.bus.type),this.bus.reset());let V=Component.getComponents(this.id);for(let R=0;R<V.length;R++){let U=V[R];U!==this&&U!==this.bus&&U.reset&&(this.printf("Resetting %s\n",U.type),U.reset())}}start(V,R){let U=Component.getComponents(this.id);for(let l=0;l<U.length;l++){let e=U[l];"CPU"!=e.type&&e!==this&&(e.start&&e.start(V,R))}}stop(V,R){let U=Component.getComponents(this.id);for(let l=0;l<U.length;l++){let e=U[l];"CPU"!=e.type&&e!==this&&(e.stop&&e.stop(V,R))}}setBinding(V,R,U,l){let e=this;switch(R){case"power":return this.bindings[R]=U,U.onclick=function(){e.onPower()},!0;case"reset":return this.bindings[R]=U,U.onclick=function(){e.onReset()},!0;case"save":return StrLib.endsWith(WebLib.getHostName(),"pcjs.org")?(DEBUG&&this.printf(MESSAGE.LOG,"Remote user API not available\n"),U.parentNode.removeChild(U),!1):(this.bindings[R]=U,U.onclick=function(){let V=e.queryUserID(!0);if(V){let R=!!(e.resume&&!e.sResumePath||e.sStatePath),U=e.powerOff(R);R?e.saveServerState(V,U):e.printf(MESSAGE.NOTICE,"Resume disabled, machine state not saved\n")}},!0)}return!1}resetUserID(){WebLib.setLocalStorageItem(Computer.STATE_USERID,""),this.sUserID=null}queryUserID(V){let R=this.sUserID;return R||(R=WebLib.getLocalStorageItem(Computer.STATE_USERID),void 0!==R?!R&&V&&(R=Component.promptUser("Saving machine states on the pcjs.org server is currently unsupported.\n\nIf you're running your own server, enter your user ID below."),R&&(R=this.verifyUserID(R),R||this.printf(MESSAGE.NOTICE,"The user ID is invalid.\n"))):V&&this.printf(MESSAGE.NOTICE,"Browser local storage is not available\n")),R}verifyUserID(sUserID){this.sUserID=null,DEBUG&&this.printf("verifyUserID(%s)\n",sUserID);let sRequest=WebLib.getHostOrigin()+UserAPI.ENDPOINT+"?"+UserAPI.QUERY.REQ+"="+UserAPI.REQ.VERIFY+"&"+UserAPI.QUERY.USER+"="+sUserID,response=WebLib.getResource(sRequest),nErrorCode=response[0],sResponse=response[1];if(!nErrorCode&&sResponse)try{response=eval("("+sResponse+")"),response.code&&response.code==UserAPI.CODE.OK?(WebLib.setLocalStorageItem(Computer.STATE_USERID,response.data),DEBUG&&this.printf("%s updated: %s\n"+Computer.STATE_USERID,response.data),this.sUserID=response.data):DEBUG&&this.printf("%s: %s\n",response.code,response.data)}catch(V){Component.error(V.message+" ("+sResponse+")")}else DEBUG&&this.printf("invalid response (error %d)\n",nErrorCode);return this.sUserID}getServerStatePath(){let V=null;return this.sUserID?(DEBUG&&this.printf("%s for load: %s\n",Computer.STATE_USERID,this.sUserID),V=WebLib.getHostOrigin()+UserAPI.ENDPOINT+"?"+UserAPI.QUERY.REQ+"="+UserAPI.REQ.LOAD+"&"+UserAPI.QUERY.USER+"="+this.sUserID+"&"+UserAPI.QUERY.STATE+"="+State.getKey(this,APPVERSION)):DEBUG&&this.printf("%s unavailable\n",Computer.STATE_USERID),V}saveServerState(V,R){if(R){DEBUG&&this.printf("size of server state: %d bytes\n",R.length);let U=this.storeServerState(V,R,!0);if(U&&U[UserAPI.RES.CODE]==UserAPI.CODE.OK)this.printf(MESSAGE.NOTICE,"Machine state saved to server\n");else if(R){let V=U&&U[UserAPI.RES.DATA]||UserAPI.FAIL.BADSTORE;V=U[UserAPI.RES.CODE]==UserAPI.CODE.FAIL?"Error: "+V:"Error "+U[UserAPI.RES.CODE]+": "+V,this.printf(MESSAGE.NOTICE,"%s\n",V),this.resetUserID()}}else DEBUG&&this.printf("no state to store\n")}storeServerState(V,R,U){DEBUG&&this.printf("%s for store: %s\n",Computer.STATE_USERID,V);let l={};l[UserAPI.QUERY.REQ]=UserAPI.REQ.STORE,l[UserAPI.QUERY.USER]=V,l[UserAPI.QUERY.STATE]=State.getKey(this,APPVERSION),l[UserAPI.QUERY.DATA]=R;let e=WebLib.getHostOrigin()+UserAPI.ENDPOINT;if(U){let V=WebLib.getResource(e,l),R=V[0];if(V[1]){if(R){let V=R.indexOf("\n");V>0&&(R=R.substr(0,V)),R.indexOf("Error: ")||(R=R.substr(7))}R='{"'+UserAPI.RES.CODE+'":'+V[1]+',"'+UserAPI.RES.DATA+'":"'+R+'"}'}return DEBUG&&this.printf("%s\n",R),JSON.parse(R)}return WebLib.getResource(e,l,!0),null}onPower(){this.nPowerChange||(this.flags.powered?this.powerOff(!1,!0):this.wait(this.powerOn))}onReset(){if(this.flags.powered&&!this.nPowerChange){if(this.cpu&&(this.cpu.flags.autoStart=this.cpu.flags.running),this.resume&&!this.sResumePath){let V=this.flags.unloading||!Component.confirmUser("Click OK to reset this machine and discard all disk modifications.");if(this.powerOff(V,!0),!V&&this.sStatePath)return void WebLib.reloadPage();V||(this.fReload=!0),this.powerOn(Computer.RESUME_NONE),this.fReload=!1}else this.reset(),this.cpu&&this.cpu.autoStart();this.updateFocus(!0)}}getMachineComponent(V,R=null){let U=R,l=Component.getComponents(this.id);for(let U=0;U<l.length;U++){let e=l[U];if(R)R==e&&(R=null);else if(e.type==V)return e}return!U&&DEBUG&&!1!==R&&this.printf(MESSAGE.WARNING,'Machine component type "%s" not found\n',V),null}updateFocus(V){if(globals.browser&&this.aVideo.length){let R=0,U=0;V||(R=globals.window.scrollX,U=globals.window.scrollY),this.aVideo[0].setFocus(V),!V&&globals.window.scrollTo&&globals.window.scrollTo(R,U)}}updateStatus(V){if(this.cpu&&this.cpu.updateStatus(V),this.panel&&this.panel.updateStatus(V),void 0!==V)for(let R=0;R<this.aVideo.length;R++)this.aVideo[R].updateScreen(V)}static init(){let V=Component.getElementsByClass(APPCLASS,"machine");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=Component.getElementsByClass(APPCLASS,"computer",U);for(let V=0;V<e.length;V++){let R=e[V],U=Component.getComponentParms(R),t=new Computer(U,l,!0);DEBUG&&t.printf("onInit(%b)\n",t.flags.powered),Component.bindComponentControls(t,R,APPCLASS),t.fAutoPower&&t.wait(t.powerOn)}}}static show(){let V=Component.getElementsByClass(APPCLASS,"computer");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=Component.getComponentByType("Computer",l.id);e&&(e.flags.unloading=!1,DEBUG&&e.printf("onShow(%b,%b)\n",e.flags.initDone,e.flags.powered),e.flags.initDone&&!e.flags.powered&&e.powerOn(Computer.RESUME_REPOWER))}}static exit(){let V=Component.getElementsByClass(APPCLASS,"computer");for(let R=0;R<V.length;R++){let U=V[R],l=Component.getComponentParms(U),e=Component.getComponentByType("Computer",l.id);e&&(e.flags.unloading=!0,DEBUG&&e.printf("onExit(%b)\n",e.flags.powered),e.flags.powered&&e.powerOff(!(!e.resume||e.sResumePath),!0))}}}WebLib.onInit(Computer.init),WebLib.onShow(Computer.show),WebLib.onExit(Computer.exit);
class State{constructor(V,R,U){this.id=V.id,this.dbg=V.dbg,this.json="",this.state={},this.fLoaded=this.fParsed=!1,this.key=State.getKey(V,R,U),this.unload(V.parms)}set(V,R){try{this.state[V]=R}catch(V){Component.printf(MESSAGE.ERROR,V.message)}}get(V){return this.state[V]||null}data(){return this.state}load(V){if(V)return this.json=V,this.fLoaded=!0,this.fParsed=!1,!0;if(this.fLoaded)return!0;if(WebLib.hasLocalStorage()){let V=WebLib.getLocalStorageItem(this.key);if(V)return this.json=V,this.fLoaded=!0,Component.printf(MESSAGE.DEBUG,"localStorage(%s): %d bytes loaded\n",this.key,V.length),!0}return!1}parse(){let V=!0;if(!this.fParsed)try{this.state=JSON.parse(this.json),this.fParsed=!0}catch(R){Component.error(R.message||R),V=!1}return V}store(){let V=!0;if(WebLib.hasLocalStorage()){let R=JSON.stringify(this.state);WebLib.setLocalStorageItem(this.key,R)?Component.printf(MESSAGE.DEBUG,"localStorage(%s): %d bytes stored\n",this.key,R.length):(Component.printf(MESSAGE.ERROR,"Unable to store %d bytes in browser local storage\n",R.length),V=!1)}return V}toString(){return this.state?JSON.stringify(this.state):this.json}unload(V){this.json="",this.state={},this.fLoaded=this.fParsed=!1,V&&this.set("parms",V)}clear(V){this.unload();let R=WebLib.getLocalStorageKeys();for(let U=0;U<R.length;U++){let l=R[U];l&&(V||l.substr(0,this.key.length)==this.key)&&(WebLib.removeLocalStorageItem(l),Component.printf(MESSAGE.DEBUG,"localStorage(%s) removed\n",l),R.splice(U,1),U=0)}}static getKey(V,R,U){let l=V.id;if(R){let V=R.indexOf(".");V>0&&(l+=".v"+R.substr(0,V))}return U&&(l+="."+U),l}static compress(V){if(V){let R=0,U=0,l=[];for(;R<V.length;){let e=V[R],t=R+1;for(;t<V.length&&V[t]===e;)t++;l[U++]=t-R,l[U++]=e,R=t}if(l.length<V.length)return l}return V}static decompress(V,R){let U=0,l=R?new Array(R):[],e=0;for(;e<V.length-1;){let R=V[e++],t=V[e++];for(;R--;)l[U++]=t}return l}static compressEvenOdd(V){if(V){let R=0,U=[];if(void 0!==V[0])for(let l=0;l<2;l++){let e=l;for(;e<V.length;){let l=V[e],t=e+2;for(;t<V.length&&V[t]===l;)t+=2;U[R++]=t-e>>1,U[R++]=l,e=t}}if(U.length<V.length)return U}return V}static decompressEvenOdd(V,R){let U=0,l=new Array(R),e=0;for(;e<V.length-1;){let t=V[e++],T=V[e++];for(;t--;)l[U]=T,U+=2;U==R&&(U=1)}return l}}
var fAsync=!0,cAsyncMachines=0;function loadXML(V,R,U,l,e,t,T,k,F){k("Loading "+V+"..."),WebLib.getResource(V,null,fAsync,(function(W,a,s){if(s)return a||(a="unable to load "+V+" ("+s+")"),void F(W,a,null);parseXML(a,V,R,U,l,e,t,T,k,F)}))}function parseXML(V,R,U,l,e,t,T,k,F,W){let a=function(V,F,a){if(a)return void W(V,a,null);if(U){let V;Component.addMachineResource(U,R,F);let l=R;l&&l.indexOf("/")<0&&"/"==window.location.pathname.slice(-1)&&(l=window.location.pathname+l),t?"}"==t.slice(-1)?(t=t.slice(0,-1)).length>1&&(t+=","):t='{state:"'+t+'",':t="{",t+='url:"'+l+'"}',"object"==typeof resources&&(l=null),t=t.replace(/\$/g,"$$$$").replace(/'/g,"&apos;"),T&&(V=F.match(/(<machine[^>]*\sclass=)(['"])(.*?)(\2[^>]*>)/),V&&(F=F.replace(V[0],V[1]+V[2]+T+V[4]),T="")),V=F.match(/(<machine[^>]*\sdebugger=)(['"])(available)(\2[^>]*>)/),V&&(F=F.replace(V[0],V[1]+V[2]+"optional"+V[4])),F=F.replace(/(<machine[^>]*\sid=)(['"]).*?\2/,"$1$2"+U+"$2"+(T?' class="'+T+'"':"")+(t?" parms='"+t+"'":"")+(l?' url="'+l+'"':""))}k||(F=(F=(F=F.replace(/(<xsl:variable name="APPNAME">).*?(<\/xsl:variable>)/,"$1"+l+"$2")).replace(/(<xsl:variable name="APPCLASS">).*?(<\/xsl:variable>)/,"$1"+e+"$2")).replace(/<xsl:variable name="APPVERSION"(\/>|>[^<]*<\/xsl:variable>)/,`<xsl:variable name="APPVERSION">${APPVERSION}</xsl:variable>`));let s=null;if("<"==F.charAt(0))try{k||(F=F.replace(/<!DOCTYPE(.|[\r\n])*]>\s*/g,"")),window.ActiveXObject||"ActiveXObject"in window?(s=new window.ActiveXObject("Microsoft.XMLDOM"),s.async=!1,s.loadXML(F)):s=(new window.DOMParser).parseFromString(F,"text/xml")}catch(V){s=null,F=V.message}else F="unrecognized XML: "+(F.length>255?F.substr(0,255)+"...":F);W(R,F,s)};if(V)return PRIVATE&&(V=V.replace(/\/library.xml/,"/disks/private/library.xml")),k?void resolveXML(R,V,F,a):void a(R,V,"");W(R,"no data",null)}function resolveXML(V,R,U,l){let e;if(e=/<([a-z]+)\s+ref="(.*?)"(.*?)\/>/g.exec(R)){let V=e[2],t=function(t,T,k){if(k||!T)return void l(t,R,"unable to resolve XML reference: "+e[0]+" ("+k+")");let F=e[3];if(F){let U=T.match(new RegExp("<"+e[1]+"[^>]*>"));if(!U)return void l(t,R,"missing <"+e[1]+"> in "+V);{let V,R=U[0],l=/( [a-z]+=)(['"])(.*?)\2/gi;for(;V=l.exec(F);)R=R.toLowerCase().indexOf(V[1].toLowerCase())<0?R.replace(">",V[0]+">"):R.replace(new RegExp(V[1]+"(['\"])(.*?)\\1"),V[0]);U[0]!=R&&(T=T.replace(U[0],R))}}T=T.replace(/<\?xml[^>]*>[\r\n]*/,""),resolveXML(t,R=R.replace(e[0],T),U,l)};return U("Loading "+V+"..."),void WebLib.getResource(V,null,fAsync,t)}l(V,R,"")}function embedMachine(V,R,U,l,e,t,T){let k,F,W=!0;cAsyncMachines++,Component.addMachine(U);let a=function(){--cAsyncMachines||fAsync&&WebLib.enablePageEvents(!0)};if(!l)return t&&Component.addMachineResource(U,"parms",t),a(),W;"true"==WebLib.getURLParm("debugger")&&l.indexOf("/debugger")<0&&(l=l.replace("/machine.xml","/debugger/machine.xml"));let s=function(V,R){if("string"==typeof R&&R.indexOf("<!DOCTYPE html>")>=0){let V=R.match(/<title>(?:PCjs: |)(.*?)<\/title>/);V&&(R=V[1])}Component.printf(MESSAGE.ERROR,"%s\n",R),Z("Error: "+R+(V?" ("+V+")":"")),W&&a(),W=!1},Z=function(V){if(void 0===F){let V=k&&Component.getElementsByClass("machine-warning","",k);F=V&&V[0]||k}F&&(F.innerHTML=StrLib.escapeHTML(V))};try{if(k=document.getElementById(U),k){let F,W=globals.window.resources;if("object"==typeof W&&(F=W.css)){let V=document.head||document.getElementsByTagName("head")[0],R=document.createElement("style");R.type="text/css",R.styleSheet?R.styleSheet.cssText=F:R.appendChild(document.createTextNode(F)),V.appendChild(R)}e||(e="/machines/"+R+"/xsl/components.xsl"),R=R.split("/").pop();let S=function(t,T,F){if(!F)return void s(t,T);loadXML(e||"","",V,R,"","",!1,Z,(function(V,R,t){if(t)if(Component.addMachineResource(U,e||"",R),Z("Processing "+l+"..."),window.ActiveXObject||"ActiveXObject"in window){let R=F.transformNode(t);R?(k.outerHTML=R,a()):s(V,"transformNodeToObject failed")}else if(document.implementation&&document.implementation.createDocument){let R=new XSLTProcessor;R.importStylesheet(t);let l=R.transformToFragment(F,document);if(l){let R=k.parentNode;if(R){let V=0,e=0,t=k.getBoundingClientRect();if(t.bottom<0&&(V=window.scrollX,e=window.scrollY),R.replaceChild(l,k),k=document.getElementById(U),k&&t.bottom<0){let R=k.getBoundingClientRect();window.performance&&window.performance.navigation.type==window.performance.navigation.TYPE_RELOAD?e=0:e+=Math.ceil(R.height-t.height),window.scrollTo(V,e)}a()}else s(V,"invalid machine element: "+U)}else s(V,"transformToFragment failed")}else s(V,"unable to transform XML: unsupported browser");else s(V,R)}))};"<"!=l.charAt(0)?loadXML(l,U,V,R,t||"",T||"",!0,Z,S):parseXML(l,"",U,V,R,t||"",T||"",!1,Z,S)}else s(l,"missing machine element: "+U)}catch(V){s(l,V.message)}return W}function embedC1P(V,R,U,l,e){return fAsync&&WebLib.enablePageEvents(!1),embedMachine("C1Pjs","osi/c1p",V,R,U,void 0,e)}function embedPCx86(V){return fAsync&&WebLib.enablePageEvents(!1),embedMachine("PCx86","pcx86",V,"data:text/xml;base64,","data:text/xml;base64,",'{autoMount:{"A":{"name":"None"},"B":{"name":"None"}},autoType:"",floppyDrives:[{boot:false},{boot:false}],drives:[{name:"10Mb Hard Disk",type:1,path:"DISK.json"}]}')}function embedPCx80(V,R,U,l,e){return fAsync&&WebLib.enablePageEvents(!1),embedMachine("PCx80","pcx80",V,R,U,l,e)}function embedPDP10(V,R,U,l,e){return fAsync&&WebLib.enablePageEvents(!1),embedMachine("PDPjs","dec/pdp10",V,R,U,l,e)}function embedPDP11(V,R,U,l,e){return fAsync&&WebLib.enablePageEvents(!1),embedMachine("PDPjs","dec/pdp11",V,R,U,l,e)}function findMachineComponent(V,R){return Component.getComponentByType(R,V+".machine")}function commandMachine(V,R,U,l,e,t){if("script"==e)return!!Component.processScript(U,t)&&(R&&(V.disabled=!0),!0);if(l){let T=Component.getComponentByType(l,U+".machine");if(T){let U=T.exports;if(U){let l=U[e];if(l)return!!l.call(T,t)&&(R&&(V.disabled=!0),!0)}}}return console.log("unimplemented: commandMachine('"+U+"','"+l+"','"+e+"','"+t+"')"),!1}
function savePC(V,R,U){let l=Component.getComponentByType("Computer",V);if(l){let e=l.powerOff(!0),t=l.saveMachineParms();return R||(R=DEBUG?"/machines/pcx86/releases/"+APPVERSION+"/pcx86-uncompiled.js":"/machines/pcx86/releases/"+APPVERSION+"/pcx86.js"),U&&U({state:e,parms:t})?!0:(WebLib.getResource(R,null,!0,(function(U,l,T){downloadCSS(U,l,T,[V,StrLib.getBaseName(R,!0),t,e])})),!0)}return Component.alertUser("Unable to identify machine '"+V+"'"),!1}function downloadCSS(V,R,U,l){if(U||!R)Component.alertUser("Error ("+U+") requesting "+V);else{l.push(R);let U=Component.getMachineResources(l[0]),e=null;for(let V in U)if(StrLib.endsWith(V,"components.xsl")){e=V.replace(".xsl",".css");break}e?WebLib.getResource(e,null,!0,(function(V,R,U){downloadPC(V,R,U,l)})):downloadPC(V,"",0,l)}}function downloadPC(V,R,U,l){let e,t,T,k=l[0],F=l[1],W=l[4];if(e=W.match(/^(\s*\(function\(\){)([\s\S]*)(}\)\(\);?)/),!e){if(!DEBUG)return void Component.alertUser("Unsupported script");e=[W,"",W,""]}let a,s=Component.getMachineResources(k),Z={};for(a in s){let V=s[a],R=StrLib.getExtension(a);if("xml"==R){let R,U=/[ \t]*<disk [^>]*path=(['"])(.*?)\1.*?<\/disk>\n?/g;for(;R=U.exec(s[a]);){let U=R[2];U&&(s[U]?Component.printf('recording disk: "%s"\n',U):V=V.replace(R[0],""))}t=a=StrLib.getBaseName(a)}else"xsl"==R&&(T=a=StrLib.getBaseName(a));Component.printf('saving resource: "%s" (%d bytes)\n',a,V.length),Z[a]=V}if(R&&(Z[a="css"]=R,Component.printf('saving resource: "%s" (%d bytes)\n',a,R.length)),l[2]){let V=Z[a="parms"]=l[2];Component.printf('saving resource: "%s" (%d bytes)\n',a,V.length)}if(l[3]){let V=Z[a="state"]=l[3];Component.printf('saving resource: "%s" (%d bytes)\n',a,V.length)}if(t&&T){let V=JSON.stringify(Z);F+=".js",W=e[1]+"var resources="+V+";"+e[2]+e[3],Component.printf('saving machine: "%s" (%d bytes)\n',k,W.length);let R=WebLib.downloadFile(W,"javascript",!1,F);return R+=', copy it to your web server as "'+F+'", and then add the following to your web page:\n\n',R+='<div id="'+k+'"></div>\n',R+='<script src="'+F+'"><\/script>\n',t=',"'+t+'"',T=',"'+T+'"',R+='<script>embedPCx86("'+k+'"'+t+T+");<\/script>\n\n",R+="The machine should appear where the <div> is located.",void Component.alertUser(R)}Component.alertUser("This feature is not currently available for machines created directly from XML files.")}globals.window.embedC1P=embedC1P,globals.window.embedPC=embedPCx86,globals.window.embedPCx86=embedPCx86,globals.window.embedPCx80=embedPCx80,globals.window.embedPDP10=embedPDP10,globals.window.embedPDP11=embedPDP11,globals.window.commandMachine=commandMachine,globals.window.enableEvents=WebLib.enablePageEvents,globals.window.sendEvent=WebLib.doPageEvent,globals.window.savePC=savePC;